{"version":3,"sources":["public/js/library/three.js"],"names":["global","factory","exports","module","define","amd","globalThis","self","THREE","REVISION","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","SRGB8_ALPHA8_ASTC_4x4_Format","SRGB8_ALPHA8_ASTC_5x4_Format","SRGB8_ALPHA8_ASTC_5x5_Format","SRGB8_ALPHA8_ASTC_6x5_Format","SRGB8_ALPHA8_ASTC_6x6_Format","SRGB8_ALPHA8_ASTC_8x5_Format","SRGB8_ALPHA8_ASTC_8x6_Format","SRGB8_ALPHA8_ASTC_8x8_Format","SRGB8_ALPHA8_ASTC_10x5_Format","SRGB8_ALPHA8_ASTC_10x6_Format","SRGB8_ALPHA8_ASTC_10x8_Format","SRGB8_ALPHA8_ASTC_10x10_Format","SRGB8_ALPHA8_ASTC_12x10_Format","SRGB8_ALPHA8_ASTC_12x12_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","LogLuvEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","EventDispatcher","type","listener","_listeners","undefined","listeners","indexOf","push","listenerArray","index","splice","event","target","array","slice","i","l","length","call","_lut","toString","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toUpperCase","clamp","value","min","max","euclideanModulo","n","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","y","lerp","t","damp","lambda","dt","exp","pingpong","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","s","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","a","b","c","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","MathUtils","Object","freeze","__proto__","Vector2","scalar","Error","constructor","v","w","addVectors","subVectors","multiplyScalar","e","elements","minVal","maxVal","divideScalar","round","sqrt","angle","atan2","distanceToSquared","dx","dy","normalize","alpha","v1","v2","offset","attribute","getX","getY","center","prototype","isVector2","Matrix3","arguments","error","n11","n12","n13","n21","n22","n23","n31","n32","n33","te","me","xAxis","yAxis","zAxis","setFromMatrix3Column","multiplyMatrices","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","d","f","g","h","t11","t12","t13","det","detInv","tmp","matrix4","setFromMatrix4","invert","transpose","r","tx","ty","sx","sy","rotation","cx","cy","theta","matrix","fromArray","isMatrix3","_canvas","ImageUtils","image","test","src","HTMLCanvasElement","canvas","document","createElementNS","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","textureId","Texture","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","defineProperty","name","mipmaps","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","version","onUpdate","isRenderTargetTexture","setUvTransform","copy","source","meta","isRootObject","textures","output","metadata","generator","wrap","images","url","Array","isArray","isDataTexture","serializeImage","dispatchEvent","uv","applyMatrix3","isTexture","HTMLImageElement","ImageBitmap","getDataURL","data","Vector4","z","acos","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getZ","getW","isVector4","WebGLRenderTarget","options","depth","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","dispose","clone","isWebGLRenderTarget","WebGLMultipleRenderTargets","count","il","isWebGLMultipleRenderTargets","WebGLMultisampleRenderTarget","samples","isWebGLMultisampleRenderTarget","Quaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","euler","update","isEuler","_order","c1","c3","s1","s3","axis","halfAngle","trace","vFrom","vTo","dot","Number","EPSILON","step","angleTo","slerp","conjugate","p","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","qa","callback","qm","slerpQuaternions","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","isQuaternion","Vector3","multiplyVectors","applyQuaternion","_quaternion$4","setFromEuler","setFromAxisAngle","qx","qy","qz","qw","ix","iy","iz","iw","camera","applyMatrix4","matrixWorldInverse","projectionMatrix","projectionMatrixInverse","matrixWorld","crossVectors","ax","ay","az","bx","by","bz","denominator","lengthSq","planeNormal","_vector$c","projectOnVector","sub","normal","dz","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindricalCoords","setFromMatrixColumn","sz","isVector3","Box3","Infinity","minX","minY","minZ","maxX","maxY","maxZ","points","makeEmpty","expandByPoint","size","halfSize","_vector$b","add","object","expandByObject","box","isEmpty","point","vector","addScalar","updateWorldMatrix","geometry","boundingBox","computeBoundingBox","_box$3","union","children","sphere","clampPoint","plane","constant","triangle","getCenter","_center","_extents","_v0$2","_v1$7","_v2$3","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","clampedPoint","getSize","_points","setFromPoints","equals","isBox3","_testAxis","v0","extents","j","p0","p1","p2","_box$2","_v1$6","_toFarthestPoint","_toPoint","Sphere","optionalCenter","maxRadiusSq","distanceTo","radiusSum","intersectsSphere","distanceToPoint","deltaLengthSq","expandByScalar","getMaxScaleOnAxis","missingRadiusHalf","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","directionDistance","distanceSqToPoint","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","tca","radius2","thc","t0","t1","distanceToPlane","distToPoint","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectBox","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","cross","QdN","transformDirection","Matrix4","n14","n24","n34","n41","n42","n43","n44","scaleX","_v1$5","scaleY","scaleZ","af","bf","ce","cf","de","df","ac","ad","bc","bd","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","t14","scaleXSq","scaleYSq","scaleZSq","yx","zx","zy","position","scale","x2","y2","z2","wx","wy","wz","determinant","_m1$2","invSX","invSY","invSZ","setFromRotationMatrix","left","right","top","bottom","near","far","isMatrix4","_matrix$1","_quaternion$3","Euler","DefaultOrder","asin","makeRotationFromQuaternion","newOrder","setFromQuaternion","optionalResult","RotationOrders","Layers","mask","channel","layers","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","parent","DefaultUp","onRotationChange","onQuaternionChange","_onChange","defineProperties","configurable","enumerable","modelViewMatrix","normalMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","userData","updateMatrix","premultiply","decompose","multiply","rotateOnAxis","distance","translateOnAxis","setFromMatrixPosition","isCamera","isLight","lookAt","extractRotation","isObject3D","remove","id","getObjectByProperty","child","traverse","traverseVisible","traverseAncestors","force","updateMatrixWorld","updateParents","updateChildren","geometries","materials","shapes","skeletons","JSON","stringify","toArray","isInstancedMesh","instanceMatrix","toJSON","instanceColor","serialize","library","element","isScene","background","isColor","environment","isMesh","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","values","key","recursive","parse","_v0$1","_v1$3","_v2$2","_v3$1","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","i0","i1","i2","getNormal","setFromCoplanarPoints","getBarycoord","uv1","uv2","uv3","getUV","containsPoint","isFrontFacing","intersectsTriangle","d4","vc","addScaledVector","d5","d6","vb","va","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","u","p3","materialId","Material","fog","blending","side","vertexColors","opacity","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaTest","alphaToCoverage","premultipliedAlpha","toneMapped","onBeforeCompile","newValue","flatShading","currentValue","isRoot","color","getHex","roughness","metalness","sheen","emissive","emissiveIntensity","specular","specularIntensity","specularTint","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","map","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularTintMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationTint","sizeAttenuation","linewidth","dashSize","gapSize","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","srcPlanes","dstPlanes","isMaterial","_colorKeywords","_hslA","_hslB","hue2rgb","SRGBToLinear","LinearToSRGB","Color","setRGB","setHex","setStyle","hex","style","handleAlpha","string","parseFloat","exec","components","parseInt","setHSL","charAt","setColorName","toLowerCase","gammaFactor","safeInverse","copyGammaToLinear","copyLinearToGamma","copySRGBToLinear","copyLinearToSRGB","hue","saturation","lightness","delta","getHSL","color1","color2","normalized","NAMES","MeshBasicMaterial","setValues","isMeshBasicMaterial","_vector$9","_vector2$1","BufferAttribute","itemSize","TypeError","usage","updateRange","index1","index2","colors","vectors","fromBufferAttribute","setXY","setXYZ","applyNormalMatrix","onUploadCallback","isBufferAttribute","Int8BufferAttribute","Int8Array","Uint8BufferAttribute","Uint8Array","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Int16Array","Uint16BufferAttribute","Uint16Array","Int32BufferAttribute","Int32Array","Uint32BufferAttribute","Uint32Array","Float16BufferAttribute","isFloat16BufferAttribute","Float32BufferAttribute","Float32Array","Float64BufferAttribute","Float64Array","arrayMax","TYPED_ARRAYS","getTypedArray","buffer","_id","_m1","_obj","_offset","_box$1","_boxMorphTargets","_vector$8","BufferGeometry","attributes","morphAttributes","morphTargetsRelative","groups","boundingSphere","drawRange","start","materialIndex","needsUpdate","getNormalMatrix","tangent","computeBoundingSphere","makeRotationX","makeRotationY","makeRotationZ","makeTranslation","makeScale","negate","translate","setAttribute","morphAttributesPosition","isGLBufferAttribute","setFromBufferAttribute","morphAttribute","isNaN","jl","indices","positions","normals","uvs","nVertices","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","positionAttribute","getAttribute","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","isBufferGeometry","attribute1","attributeArray1","attribute2","attributeArray2","attributeOffset","convertBufferAttribute","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","addGroup","keys","hasMorphAttributes","attributeArray","setIndex","_inverseMatrix$2","_ray$2","_sphere$3","_vA$1","_vB$1","_vC$1","_tempA","_tempB","_tempC","_morphA","_morphB","_morphC","_uvA$1","_uvB$1","_uvC$1","_intersectionPoint","_intersectionPointWorld","Mesh","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","assign","ml","String","morphTargets","raycaster","intersects","intersectsBox","intersection","morphPosition","groupMaterial","end","checkBufferGeometryIntersection","faceIndex","face","isGeometry","checkIntersection","intersect","intersectTriangle","morphInfluences","influence","boneTransform","BoxGeometry","widthSegments","heightSegments","depthSegments","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","cloneUniforms","property","mergeUniforms","uniforms","merged","UniformsUtils","merge","default_vertex","default_fragment","ShaderMaterial","defines","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","isShaderMaterial","Camera","PerspectiveCamera","fov","aspect","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","focalLength","vExtentSlope","getFilmHeight","atan","tan","fullWidth","fullHeight","enabled","offsetX","offsetY","skew","getFilmWidth","makePerspective","isPerspectiveCamera","CubeCamera","renderTarget","isWebGLCubeRenderTarget","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","renderer","scene","currentXrEnabled","xr","currentRenderTarget","getRenderTarget","setRenderTarget","render","CubeTexture","isCubeTexture","WebGLCubeRenderTarget","dummy","isInteger","_needsFlipEnvMap","shader","tEquirect","mesh","currentMinFilter","stencil","clear","_vector1","_vector2","_normalMatrix","Plane","setFromNormalAndCoplanarPoint","inverseNormalLength","line","startSign","endSign","intersectsPlane","optionalNormalMatrix","referencePoint","coplanarPoint","isPlane","_sphere$2","_vector$7","Frustum","p4","p5","planes","frustum","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","setComponents","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","stop","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","createBuffer","bufferType","bindBuffer","bufferData","FLOAT","HALF_FLOAT","UNSIGNED_SHORT","SHORT","UNSIGNED_INT","INT","BYTE","UNSIGNED_BYTE","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","bufferSubData","subarray","get","deleteBuffer","delete","cached","elementSize","PlaneGeometry","width_half","height_half","segment_width","segment_height","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","background_frag","background_vert","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshmatcap_frag","meshmatcap_vert","meshtoon_frag","meshtoon_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","sprite_frag","sprite_vert","ShaderChunk","UniformsLib","diffuse","uvTransform","uv2Transform","specularmap","envmap","flipEnvMap","maxMipLevel","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotShadowMap","spotShadowMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","cube","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","transmissionSamplerSize","transmissionSamplerMap","WebGLBackground","cubemaps","state","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","renderList","forceClear","session","getSession","environmentBlendMode","setClear","autoClear","autoClearColor","autoClearDepth","autoClearStencil","deleteAttribute","onBeforeRender","copyPosition","toneMapping","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","getParameter","MAX_VERTEX_ATTRIBS","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","ELEMENT_ARRAY_BUFFER","setupVertexAttributes","createVertexArrayObject","createVertexArray","createVertexArrayOES","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","vertexAttribIPointer","isInstancedBufferGeometry","programAttributes","getAttributes","materialDefaultAttributeValues","programAttribute","isInstancedInterleavedBuffer","_maxInstanceCount","ARRAY_BUFFER","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","reset","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","primcount","methodName","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","has","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","WebGL2RenderingContext","WebGL2ComputeRenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","MAX_SAMPLES","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","projectPlanes","beginShadows","endShadows","resetGlobalState","setState","useCache","materialProperties","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","fromEquirectangularTexture","addEventListener","onTextureDispose","removeEventListener","OrthographicCamera","scaleW","scaleH","makeOrthographic","isOrthographicCamera","RawShaderMaterial","isRawShaderMaterial","LOD_MIN","LOD_MAX","SIZE_MAX","EXTRA_LOD_SIGMA","TOTAL_LODS","ENCODINGS","backgroundMaterial","backgroundBox","_flatCamera","_createPlanes","_lodPlanes","_sizeLods","_sigmas","_clearColor","_oldTarget","PHI","INV_PHI","_axisDirections","convertLinearToRGBE","maxComponent","fExp","log2","PMREMGenerator","_renderer","_pingPongRenderTarget","_blurMaterial","_getBlurShader","_equirectShader","_cubemapShader","_compileMaterial","sigma","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","equirectangular","_fromTexture","_getCubemapShader","_getEquirectShader","outputTarget","_setViewport","_textureToCubeUV","params","_isLDR","_createRenderTarget","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","outputEncoding","useSolidColor","convertSRGBToLinear","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","sum","weight","outputSize","lod","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","_getEncodings","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","isCubeTextureComplete","fromEquirectangular","fromCubemap","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","instanceCount","TRIANGLES","LINES","LINE_STRIP","LINE_LOOP","POINTS","programs","autoReset","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","workInfluences","objectInfluences","influences","sort","MAX_SAFE_INTEGER","morphNormals","morphInfluencesSum","hasAttribute","morphBaseInfluence","getUniforms","setValue","WebGLObjects","updateMap","buffergeometry","hasEventListener","onInstancedMeshDispose","instancedMesh","DataTexture2DArray","wrapR","isDataTexture2DArray","DataTexture3D","isDataTexture3D","emptyTexture","emptyTexture2dArray","emptyTexture3d","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","copyArray","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2iv","setValueV3i","uniform3iv","setValueV4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2uiv","setValueV3ui","uniform3uiv","setValueV4ui","uniform4uiv","setValueT1","unit","safeSetTexture2D","setValueT3D1","setTexture3D","setValueT6","safeSetTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT6Array","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","updateCache","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","next","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","programIdCount","addLineNumbers","split","join","getEncodingComponents","getShaderErrors","status","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","trim","getShaderSource","getTexelDecodingFunction","functionName","getTexelEncodingFunction","getToneMappingFunction","toneMappingName","generateExtensions","chunks","extensionDerivatives","envMapCubeUV","tangentSpaceNormalMap","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","replaceLightNums","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numSpotLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","include","deprecatedUnrollLoopPattern","unrollLoopPattern","unrollLoops","loopReplacer","deprecatedLoopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","WebGLProgram","cacheKey","gammaFactorDefine","customExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","shaderName","instancing","instancingColor","supportsVertexTextures","maxBones","useFog","fogExp2","objectSpaceNormalMap","vertexTangents","vertexAlphas","vertexUvs","uvsVertexOnly","skinning","useVertexTexture","doubleSided","flipSided","shadowMapEnabled","physicallyCorrectLights","mapEncoding","matcapEncoding","envMapEncoding","emissiveMapEncoding","specularTintMapEncoding","lightMapEncoding","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","vertexErrors","fragmentErrors","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","destroy","deleteProgram","usedTimes","WebGLPrograms","cubeuvmaps","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","parameterNames","getMaxBones","bones","nVertexUniforms","nVertexMatrices","getTextureEncodingFromMap","getParameters","shadows","isMeshStandardMaterial","isFogExp2","directional","spot","rectArea","hemi","shadowMap","customProgramCacheKey","getProgramCacheKey","acquireProgram","pl","preexistingProgram","releaseProgram","pop","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","opaque","transmissive","defaultProgram","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","finish","WebGLRenderLists","lists","renderCallDepth","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","identity","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","WebGLRenderStates","renderStates","renderState","isMeshDepthMaterial","isMeshDistanceMaterial","vsm_frag","vsm_vert","WebGLShadowMap","_objects","_capabilities","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","SAMPLE_RATE","HALF_SAMPLE_RATE","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","shadowFrameExtents","getFrameExtents","isPointLightShadow","pars","mapPass","viewportCount","getViewportCount","vp","getViewport","updateMatrices","getFrustum","renderObject","VSMPass","renderBufferDirect","getDepthMaterial","result","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","shadowCamera","intersectsObject","k","kl","depthMaterial","WebGLState","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","enable","DEPTH_TEST","disable","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","enabledCapabilities","xrFramebuffer","currentBoundFramebuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","bindXRFramebuffer","framebuffer","bindFramebuffer","FRAMEBUFFER","DRAW_FRAMEBUFFER","useProgram","equationToGL","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","MIN_EXT","MAX_EXT","factorToGL","ZERO","ONE","SRC_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","DST_COLOR","DST_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","BLEND","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","SAMPLE_ALPHA_TO_COVERAGE","frontFace","CW","CCW","cullFace","BACK","FRONT","FRONT_AND_BACK","setLineWidth","lineWidth","factor","POLYGON_OFFSET_FILL","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","texImage3D","KEEP","READ_FRAMEBUFFER","WebGLTextures","_gl","utils","_videoTextures","useOffscreenCanvas","OffscreenCanvas","err","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","isPowerOfTwo$1","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","textureProperties","__maxMipLevel","getInternalFormat","internalFormatName","glFormat","glType","RED","R32F","R16F","R8","RGB","RGB32F","RGB16F","RGB8","RGBA32F","RGBA16F","RGBA8","filterFallback","LINEAR","deallocateTexture","isVideoTexture","onRenderTargetDispose","deallocateRenderTarget","__webglInit","deleteTexture","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","setTexture2D","slot","updateVideoTexture","__version","complete","uploadTexture","TEXTURE_2D_ARRAY","TEXTURE_3D","setTextureCube","uploadCubeTexture","wrappingToGL","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","filterToGL","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","setTextureParameters","textureType","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","UNPACK_COLORSPACE_CONVERSION_WEBGL","NONE","convert","glInternalFormat","mipmap","isDepthTexture","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT24","DEPTH24_STENCIL8","DEPTH_COMPONENT16","DEPTH_STENCIL","isCompressedTexture","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","RENDERBUFFER","getRenderTargetSamples","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","createRenderbuffer","setupRenderTarget","isMultipleRenderTargets","isRenderTarget3D","createFramebuffer","COLOR_ATTACHMENT0","glTextureType","isTexture3D","updateRenderTargetMipmap","updateMultisampleRenderTarget","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","blitFramebuffer","warnedTexture2D","warnedTextureCube","WebGLUtils","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","HALF_FLOAT_OES","ALPHA","LUMINANCE","LUMINANCE_ALPHA","RED_INTEGER","RG","RG_INTEGER","RGB_INTEGER","RGBA_INTEGER","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_RGB8_ETC2","COMPRESSED_RGBA8_ETC2_EAC","UNSIGNED_INT_24_8","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","cameras","isArrayCamera","Group","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","joints","inputState","pinching","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","inputSource","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","hand","visibilityState","getPose","targetRaySpace","transform","inputjoint","jointPose","getJointPose","jointName","joint","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","WebXRManager","framebufferScaleFactor","referenceSpaceType","pose","glBinding","glFramebuffer","glProjLayer","glBaseLayer","controllers","inputSourcesMap","Map","cameraL","cameraR","cameraVR","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","controller","getTargetRaySpace","getControllerGrip","getGripSpace","getHand","getHandSpace","onSessionEvent","onSessionEnd","forEach","disconnect","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setSession","onInputSourcesChange","getContextAttributes","xrCompatible","makeXRCompatible","layerInit","antialias","XRWebGLLayer","updateRenderState","baseLayer","depthFormat","projectionlayerInit","colorFormat","scaleFactor","XRWebGLBinding","createProjectionLayer","requestReferenceSpace","inputSources","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","translateX","translateZ","near2","far2","left2","right2","top2","bottom2","updateCamera","depthNear","depthFar","getCamera","getFoveation","fixedFoveation","setFoveation","foveation","onAnimationFrameCallback","getViewerPose","views","cameraVRNeedsUpdate","glSubImage","getViewSubImage","depthStencilTexture","colorTexture","WebGLMaterials","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","transmissionRenderTarget","refreshUniformsCommon","isMeshLambertMaterial","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsPhysical","refreshUniformsStandard","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","uvScaleMap","uv2ScaleMap","createCanvasElement","display","WebGLRenderer","_context","_alpha","_depth","_stencil","_antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","sortObjects","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_currentDrawBuffers","_clippingEnabled","_localClippingEnabled","_transmissionRenderTarget","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","isWebGL1Renderer","shift","message","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","setSize","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","method","setTransparentSort","bits","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReferences","renderObjectImmediate","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","positionArray","DYNAMIC_DRAW","normalArray","uvArray","colorArray","setProgram","rangeFactor","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","material2","getProgram","window","setFromProjectionMatrix","projectObject","opaqueObjects","transmissiveObjects","transparentObjects","renderObjects","renderTransmissiveObjects","onAfterRender","isLOD","intersectsSprite","isImmediateRenderObject","needsAntialias","renderTargetType","currentToneMapping","camera2","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","onBuild","needsLights","materialNeedsLights","progUniforms","uniformsList","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","boneTexture","computeBoneTexture","boneTextureSize","markUniformsLightsNeedsUpdate","framebufferBound","drawBuffersWEBGL","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","halfFloatSupportedByExt","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","copyFramebufferToTexture","level","levelScale","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","compressedTexSubImage2D","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","UNPACK_ROW_LENGTH","unpackImageHeight","UNPACK_IMAGE_HEIGHT","unpackSkipPixels","UNPACK_SKIP_PIXELS","unpackSkipRows","UNPACK_SKIP_ROWS","unpackSkipImages","UNPACK_SKIP_IMAGES","texSubImage3D","compressedTexSubImage3D","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","WebGL1Renderer","FogExp2","Fog","Scene","InterleavedBuffer","arrayBuffers","_uuid","ib","setUsage","isInterleavedBuffer","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","float32Array","setFromMatrixScale","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_currentLevel","levels","addLevel","getObjectForDistance","raycast","_basePosition","_skinIndex","_skinWeight","_vector$5","_matrix","SkinnedMesh","bindMatrixInverse","calculateInverses","skinWeight","manhattanLength","setXYZW","skinIndex","getComponent","boneIndex","boneInverses","Bone","isBone","DataTexture","_offsetMatrix","_identityMatrix","Skeleton","boneMatrices","inverse","bone","json","boneInverse","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_mesh","InstancedMesh","raycastTimes","instanceId","getMatrixAt","linecap","linejoin","_start$1","_end$1","_inverseMatrix$1","_ray$1","_sphere$1","Line","lineDistances","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distSq","distanceSqToSegment","_start","_end","LineSegments","LineLoop","_inverseMatrix","_ray","_sphere","_position$2","Points","testPoint","rayPointDistanceSq","intersectPoint","closestPointToPoint","distanceToRay","VideoTexture","video","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","CompressedTexture","CanvasTexture","isCanvasTexture","DepthTexture","CircleGeometry","segments","thetaStart","thetaLength","vertex","segment","CylinderGeometry","radiusTop","radiusBottom","radialSegments","openEnded","indexArray","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","PolyhedronGeometry","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","computeVertexNormals","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_v0","_v1$1","_normal","_triangle","EdgesGeometry","thresholdAngle","thresholdDot","indexAttr","getIndex","positionAttr","indexCount","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","Curve","arcLengthDivisions","optionalTarget","getUtoTmapping","getPoint","divisions","getPointAt","lengths","getLengths","cacheArcLengths","current","last","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","t2","pt1","pt2","getTangent","closed","binormals","vec","mat","getTangentAt","MAX_VALUE","tz","makeRotationAxis","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","twoPi","deltaAngle","samePoints","isEllipseCurve","ArcCurve","aRadius","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","curveType","intPoint","isCatmullRomCurve3","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","v3","isCubicBezierCurve","CubicBezierCurve3","isCubicBezierCurve3","LineCurve","isLineCurve","LineCurve3","isLineCurve3","QuadraticBezierCurve","isQuadraticBezierCurve","QuadraticBezierCurve3","isQuadraticBezierCurve3","SplineCurve","isSplineCurve","Curves","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","prev","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","zOrder","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","hole","findHoleBridge","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","pts","holes","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","verticesArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","amount","extrudePts","extrudeByPath","splineTube","binormal","position2","getSpacedPoints","computeFrenetFrames","shapePoints","extractPoints","reverse","isClockWise","hl","ahole","triangulateShape","concat","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","fromJSON","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","LatheGeometry","phiStart","phiLength","inverseSegments","base","n1","OctahedronGeometry","ParametricGeometry","func","slices","stacks","EPS","pu","pv","sliceCount","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","ShapeGeometry","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","TextGeometry","text","font","isFont","generateShapes","TorusGeometry","tube","tubularSegments","arc","TorusKnotGeometry","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","edges","Set","o","ol","isUniqueEdge","hash1","hash2","Geometries","BoxBufferGeometry","CircleBufferGeometry","ConeBufferGeometry","CylinderBufferGeometry","DodecahedronBufferGeometry","ExtrudeBufferGeometry","IcosahedronBufferGeometry","LatheBufferGeometry","OctahedronBufferGeometry","ParametricBufferGeometry","PlaneBufferGeometry","PolyhedronBufferGeometry","RingBufferGeometry","ShapeBufferGeometry","SphereBufferGeometry","TetrahedronBufferGeometry","TextBufferGeometry","TorusBufferGeometry","TorusKnotBufferGeometry","TubeBufferGeometry","ior","Materials","AnimationUtils","arraySlice","from","to","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetOffset","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","multiplyQuaternionsFlat","valueEnd","blendMode","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","copySampleValue_","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","getSettings_","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","offset1","offset0","weight1","weight0","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","factoryMethod","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","timeOffset","timeScale","startTime","endTime","nKeys","valid","prevTime","currTime","smoothInterpolation","getInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","slerpFlat","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","duration","validate","optimize","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","morphTargetSequence","noLoop","numMorphTargets","objectOrClipArray","clipArray","animationToMorphTargets","pattern","morphTarget","parts","animationMorphTargets","clips","CreateFromMorphTargetSequence","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","Promise","resolve","reject","load","loading","FileLoader","setTimeout","dataUriRegex","dataUriRegexResult","request","mimeType","isBase64","decodeURIComponent","atob","response","responseType","charCodeAt","Blob","parser","DOMParser","parseFromString","XMLHttpRequest","open","callbacks","overrideMimeType","header","setRequestHeader","send","AnimationLoader","setPath","setWithCredentials","CompressedTextureLoader","setResponseType","loaded","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","onImageLoad","onImageError","substr","CubeTextureLoader","urls","setCrossOrigin","DataTextureLoader","texData","TextureLoader","isJPEG","search","CurvePath","curves","autoClose","curve","startPoint","endPoint","getLength","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","getPoints","Path","currentPoint","moveTo","lineTo","aCPx","aCPy","aCP1x","aCP1y","aCP2x","aCP2y","npts","absarc","absellipse","firstPoint","lastPoint","Shape","holesPts","getPointsHoles","Light","HemisphereLight","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","isSpotLightShadow","SpotLight","power","_lightPositionWorld","_lookTarget","PointLightShadow","_cubeDirections","_cubeUps","PointLight","DirectionalLightShadow","isDirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","SphericalHarmonics3","coeff","shBasis","isSphericalHarmonics3","LightProbe","MaterialLoader","getTexture","shading","LoaderUtils","TextDecoder","decode","fromCharCode","escape","lastIndexOf","InstancedBufferGeometry","InstancedBufferAttribute","BufferGeometryLoader","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","arrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","extractUrlBase","loadAsync","parseAsync","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","parseImagesAsync","bufferGeometryLoader","setTextures","loadImage","deserializeImage","currentUrl","deserializedImage","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","objectAnimations","bind","setResourcePath","ImageBitmapLoader","createImageBitmap","fetch","fetchOptions","credentials","headers","then","res","blob","colorSpaceConversion","imageBitmap","catch","isImageBitmapLoader","ShapePath","subPaths","currentPath","quadraticCurveTo","bezierCurveTo","splineThru","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","tmpHoles","Font","paths","createPaths","toShapes","chars","line_height","yMax","yMin","underlineThickness","char","ret","createPath","glyph","glyphs","familyName","cpx","cpy","cpx1","cpy1","cpx2","cpy2","outline","_cachedOutline","action","ha","FontLoader","substring","AudioContext","webkitAudioContext","AudioLoader","bufferCopy","decodeAudioData","audioBuffer","HemisphereLightProbe","sky","ground","isHemisphereLightProbe","AmbientLightProbe","isAmbientLightProbe","_eyeRight","_eyeLeft","StereoCamera","eyeSep","_cache","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","gain","createGain","connect","destination","timeDelta","_clock","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setPosition","setOrientation","Audio","getInput","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","audioNode","mediaElement","createMediaElementSource","mediaStream","createMediaStreamSource","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","getOutput","getFilters","setFilters","_position","_quaternion","_scale","_orientation","PositionalAudio","panner","createPanner","panningModel","refDistance","rolloffFactor","distanceModel","maxDistance","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getByteFrequencyData","getFrequencyData","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accuIndex","currentWeight","mix","weightAdditive","originalValueOffset","getValue","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","resolvedProperty","propertyIndex","targetObject","dest","targetArray","sourceArray","objectName","_getValue_unavailable","_setValue_unavailable","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","matches","results","lastDot","getBoneByName","searchNodeSubtree","childNode","subTreeNode","_getValue_direct","_getValue_array","_getValue_arrayElement","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","total","inUse","bindingsPerObject","indicesByUUID","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","lastObject","indicesByPath","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","_isActiveAction","_scheduleFading","fadeOutAction","warp","fadeOut","fadeIn","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","fadeInAction","crossFadeFrom","weightInterpolant","_takeBackControlInterpolant","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","_root","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","accumulateAdditive","accumulate","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","AnimationMixer","_initMemoryManager","_accuIndex","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","create","clipUuid","actionsForClip","_actionsByClip","_bindAction","knownActions","_addInactiveAction","_lendBinding","saveOriginalState","_lendAction","restoreOriginalState","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","optionalRoot","clipObject","findByName","existingAction","newAction","nActions","_update","timeInSeconds","actionsToRemove","_removeInactiveAction","Uniform","InstancedInterleavedBuffer","GLBufferAttribute","Raycaster","coords","unproject","intersectObject","ascSort","Spherical","other","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","clampToLine","startEnd2","startEnd_startP","closestPointToPointParameter","ImmediateRenderObject","_vector$3","SpotLightHelper","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","getBoneList","isSkeletonHelper","boneList","PointLightHelper","sphereSize","_vector$1","_color1","_color2","HemisphereLightHelper","rotateY","GridHelper","PolarGridHelper","radials","circles","_v1","_v2","_v3","DirectionalLightHelper","lightPlane","targetLine","_vector","_camera","CameraHelper","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","addPoint","setPoint","_box","BoxHelper","setFromObject","Box3Helper","PlaneHelper","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","headLength","headWidth","setDirection","setLength","AxesHelper","xAxisColor","yAxisColor","zAxisColor","_floatView","_int32View","DataUtils","val","LineStrip","LinePieces","NoColors","FaceColors","VertexColors","MeshFaceMaterial","MultiMaterial","isMultiMaterial","PointCloud","Particle","ParticleSystem","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","Vertex","DynamicBufferAttribute","Int8Attribute","Uint8Attribute","Uint8ClampedAttribute","Int16Attribute","Uint16Attribute","Int32Attribute","Uint32Attribute","Float32Attribute","Float64Attribute","construct","fromPoints","AxisHelper","BoundingBoxHelper","EdgesHelper","setColors","WireframeHelper","Handlers","XHRLoader","BinaryTextureLoader","empty","isIntersectionBox","isIntersectionSphere","setFromMatrix","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBufferAttribute","applyToVector3Array","getInverse","extractPosition","getPosition","setRotationFromQuaternion","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateX","rotateZ","rotateByAxis","makeFrustum","isIntersectionLine","intersectsLine","isIntersectionPlane","getArea","barycoordFromPoint","midpoint","getMidpoint","prototypenormal","getPlane","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","manhattanDistanceTo","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","getChildByName","getObjectByName","renderDepth","getWorldRotation","applyMatrix","eulerOrder","useQuaternion","setDrawMode","drawMode","initBones","setLens","setFocalLength","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","dynamic","setDynamic","copyIndicesArray","setArray","addIndex","addAttribute","addDrawCall","clearDrawCalls","clearGroups","computeOffsets","removeAttribute","getArrays","addShapeList","wrapAround","overdraw","wrapRGB","clearTarget","animate","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","initMaterial","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","allocTextureUnit","setTexture","getActiveMipMapLevel","shadowMapCullFace","vr","gammaInput","gammaOutput","toneMappingWhitePoint","renderReverseSided","renderSingleSided","WebGLRenderTargetCube","audioLoader","setBuffer","getData","updateCubeMap","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","CanvasRenderer","JSONLoader","SceneUtils","createMultiMaterialObject","detach","attach","LensFlare","revision","__THREE__"],"mappings":"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","file":"three.7bf6ce5d.js","sourceRoot":"..","sourcesContent":["/**\r\n * @license\r\n * Copyright 2010-2021 Three.js Authors\r\n * SPDX-License-Identifier: MIT\r\n */\r\n (function (global, factory) {\r\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\r\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\r\n\t(global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.THREE = {}));\r\n}(this, (function (exports) { 'use strict';\r\n\r\n\tconst REVISION = '131';\r\n\tconst MOUSE = {\r\n\t\tLEFT: 0,\r\n\t\tMIDDLE: 1,\r\n\t\tRIGHT: 2,\r\n\t\tROTATE: 0,\r\n\t\tDOLLY: 1,\r\n\t\tPAN: 2\r\n\t};\r\n\tconst TOUCH = {\r\n\t\tROTATE: 0,\r\n\t\tPAN: 1,\r\n\t\tDOLLY_PAN: 2,\r\n\t\tDOLLY_ROTATE: 3\r\n\t};\r\n\tconst CullFaceNone = 0;\r\n\tconst CullFaceBack = 1;\r\n\tconst CullFaceFront = 2;\r\n\tconst CullFaceFrontBack = 3;\r\n\tconst BasicShadowMap = 0;\r\n\tconst PCFShadowMap = 1;\r\n\tconst PCFSoftShadowMap = 2;\r\n\tconst VSMShadowMap = 3;\r\n\tconst FrontSide = 0;\r\n\tconst BackSide = 1;\r\n\tconst DoubleSide = 2;\r\n\tconst FlatShading = 1;\r\n\tconst SmoothShading = 2;\r\n\tconst NoBlending = 0;\r\n\tconst NormalBlending = 1;\r\n\tconst AdditiveBlending = 2;\r\n\tconst SubtractiveBlending = 3;\r\n\tconst MultiplyBlending = 4;\r\n\tconst CustomBlending = 5;\r\n\tconst AddEquation = 100;\r\n\tconst SubtractEquation = 101;\r\n\tconst ReverseSubtractEquation = 102;\r\n\tconst MinEquation = 103;\r\n\tconst MaxEquation = 104;\r\n\tconst ZeroFactor = 200;\r\n\tconst OneFactor = 201;\r\n\tconst SrcColorFactor = 202;\r\n\tconst OneMinusSrcColorFactor = 203;\r\n\tconst SrcAlphaFactor = 204;\r\n\tconst OneMinusSrcAlphaFactor = 205;\r\n\tconst DstAlphaFactor = 206;\r\n\tconst OneMinusDstAlphaFactor = 207;\r\n\tconst DstColorFactor = 208;\r\n\tconst OneMinusDstColorFactor = 209;\r\n\tconst SrcAlphaSaturateFactor = 210;\r\n\tconst NeverDepth = 0;\r\n\tconst AlwaysDepth = 1;\r\n\tconst LessDepth = 2;\r\n\tconst LessEqualDepth = 3;\r\n\tconst EqualDepth = 4;\r\n\tconst GreaterEqualDepth = 5;\r\n\tconst GreaterDepth = 6;\r\n\tconst NotEqualDepth = 7;\r\n\tconst MultiplyOperation = 0;\r\n\tconst MixOperation = 1;\r\n\tconst AddOperation = 2;\r\n\tconst NoToneMapping = 0;\r\n\tconst LinearToneMapping = 1;\r\n\tconst ReinhardToneMapping = 2;\r\n\tconst CineonToneMapping = 3;\r\n\tconst ACESFilmicToneMapping = 4;\r\n\tconst CustomToneMapping = 5;\r\n\tconst UVMapping = 300;\r\n\tconst CubeReflectionMapping = 301;\r\n\tconst CubeRefractionMapping = 302;\r\n\tconst EquirectangularReflectionMapping = 303;\r\n\tconst EquirectangularRefractionMapping = 304;\r\n\tconst CubeUVReflectionMapping = 306;\r\n\tconst CubeUVRefractionMapping = 307;\r\n\tconst RepeatWrapping = 1000;\r\n\tconst ClampToEdgeWrapping = 1001;\r\n\tconst MirroredRepeatWrapping = 1002;\r\n\tconst NearestFilter = 1003;\r\n\tconst NearestMipmapNearestFilter = 1004;\r\n\tconst NearestMipMapNearestFilter = 1004;\r\n\tconst NearestMipmapLinearFilter = 1005;\r\n\tconst NearestMipMapLinearFilter = 1005;\r\n\tconst LinearFilter = 1006;\r\n\tconst LinearMipmapNearestFilter = 1007;\r\n\tconst LinearMipMapNearestFilter = 1007;\r\n\tconst LinearMipmapLinearFilter = 1008;\r\n\tconst LinearMipMapLinearFilter = 1008;\r\n\tconst UnsignedByteType = 1009;\r\n\tconst ByteType = 1010;\r\n\tconst ShortType = 1011;\r\n\tconst UnsignedShortType = 1012;\r\n\tconst IntType = 1013;\r\n\tconst UnsignedIntType = 1014;\r\n\tconst FloatType = 1015;\r\n\tconst HalfFloatType = 1016;\r\n\tconst UnsignedShort4444Type = 1017;\r\n\tconst UnsignedShort5551Type = 1018;\r\n\tconst UnsignedShort565Type = 1019;\r\n\tconst UnsignedInt248Type = 1020;\r\n\tconst AlphaFormat = 1021;\r\n\tconst RGBFormat = 1022;\r\n\tconst RGBAFormat = 1023;\r\n\tconst LuminanceFormat = 1024;\r\n\tconst LuminanceAlphaFormat = 1025;\r\n\tconst RGBEFormat = RGBAFormat;\r\n\tconst DepthFormat = 1026;\r\n\tconst DepthStencilFormat = 1027;\r\n\tconst RedFormat = 1028;\r\n\tconst RedIntegerFormat = 1029;\r\n\tconst RGFormat = 1030;\r\n\tconst RGIntegerFormat = 1031;\r\n\tconst RGBIntegerFormat = 1032;\r\n\tconst RGBAIntegerFormat = 1033;\r\n\tconst RGB_S3TC_DXT1_Format = 33776;\r\n\tconst RGBA_S3TC_DXT1_Format = 33777;\r\n\tconst RGBA_S3TC_DXT3_Format = 33778;\r\n\tconst RGBA_S3TC_DXT5_Format = 33779;\r\n\tconst RGB_PVRTC_4BPPV1_Format = 35840;\r\n\tconst RGB_PVRTC_2BPPV1_Format = 35841;\r\n\tconst RGBA_PVRTC_4BPPV1_Format = 35842;\r\n\tconst RGBA_PVRTC_2BPPV1_Format = 35843;\r\n\tconst RGB_ETC1_Format = 36196;\r\n\tconst RGB_ETC2_Format = 37492;\r\n\tconst RGBA_ETC2_EAC_Format = 37496;\r\n\tconst RGBA_ASTC_4x4_Format = 37808;\r\n\tconst RGBA_ASTC_5x4_Format = 37809;\r\n\tconst RGBA_ASTC_5x5_Format = 37810;\r\n\tconst RGBA_ASTC_6x5_Format = 37811;\r\n\tconst RGBA_ASTC_6x6_Format = 37812;\r\n\tconst RGBA_ASTC_8x5_Format = 37813;\r\n\tconst RGBA_ASTC_8x6_Format = 37814;\r\n\tconst RGBA_ASTC_8x8_Format = 37815;\r\n\tconst RGBA_ASTC_10x5_Format = 37816;\r\n\tconst RGBA_ASTC_10x6_Format = 37817;\r\n\tconst RGBA_ASTC_10x8_Format = 37818;\r\n\tconst RGBA_ASTC_10x10_Format = 37819;\r\n\tconst RGBA_ASTC_12x10_Format = 37820;\r\n\tconst RGBA_ASTC_12x12_Format = 37821;\r\n\tconst RGBA_BPTC_Format = 36492;\r\n\tconst SRGB8_ALPHA8_ASTC_4x4_Format = 37840;\r\n\tconst SRGB8_ALPHA8_ASTC_5x4_Format = 37841;\r\n\tconst SRGB8_ALPHA8_ASTC_5x5_Format = 37842;\r\n\tconst SRGB8_ALPHA8_ASTC_6x5_Format = 37843;\r\n\tconst SRGB8_ALPHA8_ASTC_6x6_Format = 37844;\r\n\tconst SRGB8_ALPHA8_ASTC_8x5_Format = 37845;\r\n\tconst SRGB8_ALPHA8_ASTC_8x6_Format = 37846;\r\n\tconst SRGB8_ALPHA8_ASTC_8x8_Format = 37847;\r\n\tconst SRGB8_ALPHA8_ASTC_10x5_Format = 37848;\r\n\tconst SRGB8_ALPHA8_ASTC_10x6_Format = 37849;\r\n\tconst SRGB8_ALPHA8_ASTC_10x8_Format = 37850;\r\n\tconst SRGB8_ALPHA8_ASTC_10x10_Format = 37851;\r\n\tconst SRGB8_ALPHA8_ASTC_12x10_Format = 37852;\r\n\tconst SRGB8_ALPHA8_ASTC_12x12_Format = 37853;\r\n\tconst LoopOnce = 2200;\r\n\tconst LoopRepeat = 2201;\r\n\tconst LoopPingPong = 2202;\r\n\tconst InterpolateDiscrete = 2300;\r\n\tconst InterpolateLinear = 2301;\r\n\tconst InterpolateSmooth = 2302;\r\n\tconst ZeroCurvatureEnding = 2400;\r\n\tconst ZeroSlopeEnding = 2401;\r\n\tconst WrapAroundEnding = 2402;\r\n\tconst NormalAnimationBlendMode = 2500;\r\n\tconst AdditiveAnimationBlendMode = 2501;\r\n\tconst TrianglesDrawMode = 0;\r\n\tconst TriangleStripDrawMode = 1;\r\n\tconst TriangleFanDrawMode = 2;\r\n\tconst LinearEncoding = 3000;\r\n\tconst sRGBEncoding = 3001;\r\n\tconst GammaEncoding = 3007;\r\n\tconst RGBEEncoding = 3002;\r\n\tconst LogLuvEncoding = 3003;\r\n\tconst RGBM7Encoding = 3004;\r\n\tconst RGBM16Encoding = 3005;\r\n\tconst RGBDEncoding = 3006;\r\n\tconst BasicDepthPacking = 3200;\r\n\tconst RGBADepthPacking = 3201;\r\n\tconst TangentSpaceNormalMap = 0;\r\n\tconst ObjectSpaceNormalMap = 1;\r\n\tconst ZeroStencilOp = 0;\r\n\tconst KeepStencilOp = 7680;\r\n\tconst ReplaceStencilOp = 7681;\r\n\tconst IncrementStencilOp = 7682;\r\n\tconst DecrementStencilOp = 7683;\r\n\tconst IncrementWrapStencilOp = 34055;\r\n\tconst DecrementWrapStencilOp = 34056;\r\n\tconst InvertStencilOp = 5386;\r\n\tconst NeverStencilFunc = 512;\r\n\tconst LessStencilFunc = 513;\r\n\tconst EqualStencilFunc = 514;\r\n\tconst LessEqualStencilFunc = 515;\r\n\tconst GreaterStencilFunc = 516;\r\n\tconst NotEqualStencilFunc = 517;\r\n\tconst GreaterEqualStencilFunc = 518;\r\n\tconst AlwaysStencilFunc = 519;\r\n\tconst StaticDrawUsage = 35044;\r\n\tconst DynamicDrawUsage = 35048;\r\n\tconst StreamDrawUsage = 35040;\r\n\tconst StaticReadUsage = 35045;\r\n\tconst DynamicReadUsage = 35049;\r\n\tconst StreamReadUsage = 35041;\r\n\tconst StaticCopyUsage = 35046;\r\n\tconst DynamicCopyUsage = 35050;\r\n\tconst StreamCopyUsage = 35042;\r\n\tconst GLSL1 = '100';\r\n\tconst GLSL3 = '300 es';\r\n\r\n\t/**\r\n\t * https://github.com/mrdoob/eventdispatcher.js/\r\n\t */\r\n\tclass EventDispatcher {\r\n\t\taddEventListener(type, listener) {\r\n\t\t\tif (this._listeners === undefined) this._listeners = {};\r\n\t\t\tconst listeners = this._listeners;\r\n\r\n\t\t\tif (listeners[type] === undefined) {\r\n\t\t\t\tlisteners[type] = [];\r\n\t\t\t}\r\n\r\n\t\t\tif (listeners[type].indexOf(listener) === -1) {\r\n\t\t\t\tlisteners[type].push(listener);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\thasEventListener(type, listener) {\r\n\t\t\tif (this._listeners === undefined) return false;\r\n\t\t\tconst listeners = this._listeners;\r\n\t\t\treturn listeners[type] !== undefined && listeners[type].indexOf(listener) !== -1;\r\n\t\t}\r\n\r\n\t\tremoveEventListener(type, listener) {\r\n\t\t\tif (this._listeners === undefined) return;\r\n\t\t\tconst listeners = this._listeners;\r\n\t\t\tconst listenerArray = listeners[type];\r\n\r\n\t\t\tif (listenerArray !== undefined) {\r\n\t\t\t\tconst index = listenerArray.indexOf(listener);\r\n\r\n\t\t\t\tif (index !== -1) {\r\n\t\t\t\t\tlistenerArray.splice(index, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdispatchEvent(event) {\r\n\t\t\tif (this._listeners === undefined) return;\r\n\t\t\tconst listeners = this._listeners;\r\n\t\t\tconst listenerArray = listeners[event.type];\r\n\r\n\t\t\tif (listenerArray !== undefined) {\r\n\t\t\t\tevent.target = this; // Make a copy, in case listeners are removed while iterating.\r\n\r\n\t\t\t\tconst array = listenerArray.slice(0);\r\n\r\n\t\t\t\tfor (let i = 0, l = array.length; i < l; i++) {\r\n\t\t\t\t\tarray[i].call(this, event);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tevent.target = null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst _lut = [];\r\n\r\n\tfor (let i = 0; i < 256; i++) {\r\n\t\t_lut[i] = (i < 16 ? '0' : '') + i.toString(16);\r\n\t}\r\n\r\n\tlet _seed = 1234567;\r\n\tconst DEG2RAD = Math.PI / 180;\r\n\tconst RAD2DEG = 180 / Math.PI; // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\r\n\r\n\tfunction generateUUID() {\r\n\t\tconst d0 = Math.random() * 0xffffffff | 0;\r\n\t\tconst d1 = Math.random() * 0xffffffff | 0;\r\n\t\tconst d2 = Math.random() * 0xffffffff | 0;\r\n\t\tconst d3 = Math.random() * 0xffffffff | 0;\r\n\t\tconst uuid = _lut[d0 & 0xff] + _lut[d0 >> 8 & 0xff] + _lut[d0 >> 16 & 0xff] + _lut[d0 >> 24 & 0xff] + '-' + _lut[d1 & 0xff] + _lut[d1 >> 8 & 0xff] + '-' + _lut[d1 >> 16 & 0x0f | 0x40] + _lut[d1 >> 24 & 0xff] + '-' + _lut[d2 & 0x3f | 0x80] + _lut[d2 >> 8 & 0xff] + '-' + _lut[d2 >> 16 & 0xff] + _lut[d2 >> 24 & 0xff] + _lut[d3 & 0xff] + _lut[d3 >> 8 & 0xff] + _lut[d3 >> 16 & 0xff] + _lut[d3 >> 24 & 0xff]; // .toUpperCase() here flattens concatenated strings to save heap memory space.\r\n\r\n\t\treturn uuid.toUpperCase();\r\n\t}\r\n\r\n\tfunction clamp(value, min, max) {\r\n\t\treturn Math.max(min, Math.min(max, value));\r\n\t} // compute euclidian modulo of m % n\r\n\t// https://en.wikipedia.org/wiki/Modulo_operation\r\n\r\n\r\n\tfunction euclideanModulo(n, m) {\r\n\t\treturn (n % m + m) % m;\r\n\t} // Linear mapping from range <a1, a2> to range <b1, b2>\r\n\r\n\r\n\tfunction mapLinear(x, a1, a2, b1, b2) {\r\n\t\treturn b1 + (x - a1) * (b2 - b1) / (a2 - a1);\r\n\t} // https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\r\n\r\n\r\n\tfunction inverseLerp(x, y, value) {\r\n\t\tif (x !== y) {\r\n\t\t\treturn (value - x) / (y - x);\r\n\t\t} else {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t} // https://en.wikipedia.org/wiki/Linear_interpolation\r\n\r\n\r\n\tfunction lerp(x, y, t) {\r\n\t\treturn (1 - t) * x + t * y;\r\n\t} // http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\r\n\r\n\r\n\tfunction damp(x, y, lambda, dt) {\r\n\t\treturn lerp(x, y, 1 - Math.exp(-lambda * dt));\r\n\t} // https://www.desmos.com/calculator/vcsjnyz7x4\r\n\r\n\r\n\tfunction pingpong(x, length = 1) {\r\n\t\treturn length - Math.abs(euclideanModulo(x, length * 2) - length);\r\n\t} // http://en.wikipedia.org/wiki/Smoothstep\r\n\r\n\r\n\tfunction smoothstep(x, min, max) {\r\n\t\tif (x <= min) return 0;\r\n\t\tif (x >= max) return 1;\r\n\t\tx = (x - min) / (max - min);\r\n\t\treturn x * x * (3 - 2 * x);\r\n\t}\r\n\r\n\tfunction smootherstep(x, min, max) {\r\n\t\tif (x <= min) return 0;\r\n\t\tif (x >= max) return 1;\r\n\t\tx = (x - min) / (max - min);\r\n\t\treturn x * x * x * (x * (x * 6 - 15) + 10);\r\n\t} // Random integer from <low, high> interval\r\n\r\n\r\n\tfunction randInt(low, high) {\r\n\t\treturn low + Math.floor(Math.random() * (high - low + 1));\r\n\t} // Random float from <low, high> interval\r\n\r\n\r\n\tfunction randFloat(low, high) {\r\n\t\treturn low + Math.random() * (high - low);\r\n\t} // Random float from <-range/2, range/2> interval\r\n\r\n\r\n\tfunction randFloatSpread(range) {\r\n\t\treturn range * (0.5 - Math.random());\r\n\t} // Deterministic pseudo-random float in the interval [ 0, 1 ]\r\n\r\n\r\n\tfunction seededRandom(s) {\r\n\t\tif (s !== undefined) _seed = s % 2147483647; // Park-Miller algorithm\r\n\r\n\t\t_seed = _seed * 16807 % 2147483647;\r\n\t\treturn (_seed - 1) / 2147483646;\r\n\t}\r\n\r\n\tfunction degToRad(degrees) {\r\n\t\treturn degrees * DEG2RAD;\r\n\t}\r\n\r\n\tfunction radToDeg(radians) {\r\n\t\treturn radians * RAD2DEG;\r\n\t}\r\n\r\n\tfunction isPowerOfTwo(value) {\r\n\t\treturn (value & value - 1) === 0 && value !== 0;\r\n\t}\r\n\r\n\tfunction ceilPowerOfTwo(value) {\r\n\t\treturn Math.pow(2, Math.ceil(Math.log(value) / Math.LN2));\r\n\t}\r\n\r\n\tfunction floorPowerOfTwo(value) {\r\n\t\treturn Math.pow(2, Math.floor(Math.log(value) / Math.LN2));\r\n\t}\r\n\r\n\tfunction setQuaternionFromProperEuler(q, a, b, c, order) {\r\n\t\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\r\n\t\t// rotations are applied to the axes in the order specified by 'order'\r\n\t\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\r\n\t\t// angles are in radians\r\n\t\tconst cos = Math.cos;\r\n\t\tconst sin = Math.sin;\r\n\t\tconst c2 = cos(b / 2);\r\n\t\tconst s2 = sin(b / 2);\r\n\t\tconst c13 = cos((a + c) / 2);\r\n\t\tconst s13 = sin((a + c) / 2);\r\n\t\tconst c1_3 = cos((a - c) / 2);\r\n\t\tconst s1_3 = sin((a - c) / 2);\r\n\t\tconst c3_1 = cos((c - a) / 2);\r\n\t\tconst s3_1 = sin((c - a) / 2);\r\n\r\n\t\tswitch (order) {\r\n\t\t\tcase 'XYX':\r\n\t\t\t\tq.set(c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'YZY':\r\n\t\t\t\tq.set(s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ZXZ':\r\n\t\t\t\tq.set(s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'XZX':\r\n\t\t\t\tq.set(c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'YXY':\r\n\t\t\t\tq.set(s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ZYZ':\r\n\t\t\t\tq.set(s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.warn('THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order);\r\n\t\t}\r\n\t}\r\n\r\n\tvar MathUtils = /*#__PURE__*/Object.freeze({\r\n\t\t__proto__: null,\r\n\t\tDEG2RAD: DEG2RAD,\r\n\t\tRAD2DEG: RAD2DEG,\r\n\t\tgenerateUUID: generateUUID,\r\n\t\tclamp: clamp,\r\n\t\teuclideanModulo: euclideanModulo,\r\n\t\tmapLinear: mapLinear,\r\n\t\tinverseLerp: inverseLerp,\r\n\t\tlerp: lerp,\r\n\t\tdamp: damp,\r\n\t\tpingpong: pingpong,\r\n\t\tsmoothstep: smoothstep,\r\n\t\tsmootherstep: smootherstep,\r\n\t\trandInt: randInt,\r\n\t\trandFloat: randFloat,\r\n\t\trandFloatSpread: randFloatSpread,\r\n\t\tseededRandom: seededRandom,\r\n\t\tdegToRad: degToRad,\r\n\t\tradToDeg: radToDeg,\r\n\t\tisPowerOfTwo: isPowerOfTwo,\r\n\t\tceilPowerOfTwo: ceilPowerOfTwo,\r\n\t\tfloorPowerOfTwo: floorPowerOfTwo,\r\n\t\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler\r\n\t});\r\n\r\n\tclass Vector2 {\r\n\t\tconstructor(x = 0, y = 0) {\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t}\r\n\r\n\t\tget width() {\r\n\t\t\treturn this.x;\r\n\t\t}\r\n\r\n\t\tset width(value) {\r\n\t\t\tthis.x = value;\r\n\t\t}\r\n\r\n\t\tget height() {\r\n\t\t\treturn this.y;\r\n\t\t}\r\n\r\n\t\tset height(value) {\r\n\t\t\tthis.y = value;\r\n\t\t}\r\n\r\n\t\tset(x, y) {\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetScalar(scalar) {\r\n\t\t\tthis.x = scalar;\r\n\t\t\tthis.y = scalar;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetX(x) {\r\n\t\t\tthis.x = x;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetY(y) {\r\n\t\t\tthis.y = y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetComponent(index, value) {\r\n\t\t\tswitch (index) {\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\tthis.x = value;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tthis.y = value;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetComponent(index) {\r\n\t\t\tswitch (index) {\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\treturn this.x;\r\n\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\treturn this.y;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor(this.x, this.y);\r\n\t\t}\r\n\r\n\t\tcopy(v) {\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tadd(v, w) {\r\n\t\t\tif (w !== undefined) {\r\n\t\t\t\tconsole.warn('THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\r\n\t\t\t\treturn this.addVectors(v, w);\r\n\t\t\t}\r\n\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\taddScalar(s) {\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\taddVectors(a, b) {\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\taddScaledVector(v, s) {\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsub(v, w) {\r\n\t\t\tif (w !== undefined) {\r\n\t\t\t\tconsole.warn('THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\r\n\t\t\t\treturn this.subVectors(v, w);\r\n\t\t\t}\r\n\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsubScalar(s) {\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsubVectors(a, b) {\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmultiply(v) {\r\n\t\t\tthis.x *= v.x;\r\n\t\t\tthis.y *= v.y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmultiplyScalar(scalar) {\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tdivide(v) {\r\n\t\t\tthis.x /= v.x;\r\n\t\t\tthis.y /= v.y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tdivideScalar(scalar) {\r\n\t\t\treturn this.multiplyScalar(1 / scalar);\r\n\t\t}\r\n\r\n\t\tapplyMatrix3(m) {\r\n\t\t\tconst x = this.x,\r\n\t\t\t\t\t\ty = this.y;\r\n\t\t\tconst e = m.elements;\r\n\t\t\tthis.x = e[0] * x + e[3] * y + e[6];\r\n\t\t\tthis.y = e[1] * x + e[4] * y + e[7];\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmin(v) {\r\n\t\t\tthis.x = Math.min(this.x, v.x);\r\n\t\t\tthis.y = Math.min(this.y, v.y);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmax(v) {\r\n\t\t\tthis.x = Math.max(this.x, v.x);\r\n\t\t\tthis.y = Math.max(this.y, v.y);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclamp(min, max) {\r\n\t\t\t// assumes min < max, componentwise\r\n\t\t\tthis.x = Math.max(min.x, Math.min(max.x, this.x));\r\n\t\t\tthis.y = Math.max(min.y, Math.min(max.y, this.y));\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclampScalar(minVal, maxVal) {\r\n\t\t\tthis.x = Math.max(minVal, Math.min(maxVal, this.x));\r\n\t\t\tthis.y = Math.max(minVal, Math.min(maxVal, this.y));\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclampLength(min, max) {\r\n\t\t\tconst length = this.length();\r\n\t\t\treturn this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\r\n\t\t}\r\n\r\n\t\tfloor() {\r\n\t\t\tthis.x = Math.floor(this.x);\r\n\t\t\tthis.y = Math.floor(this.y);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tceil() {\r\n\t\t\tthis.x = Math.ceil(this.x);\r\n\t\t\tthis.y = Math.ceil(this.y);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tround() {\r\n\t\t\tthis.x = Math.round(this.x);\r\n\t\t\tthis.y = Math.round(this.y);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\troundToZero() {\r\n\t\t\tthis.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\r\n\t\t\tthis.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tnegate() {\r\n\t\t\tthis.x = -this.x;\r\n\t\t\tthis.y = -this.y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tdot(v) {\r\n\t\t\treturn this.x * v.x + this.y * v.y;\r\n\t\t}\r\n\r\n\t\tcross(v) {\r\n\t\t\treturn this.x * v.y - this.y * v.x;\r\n\t\t}\r\n\r\n\t\tlengthSq() {\r\n\t\t\treturn this.x * this.x + this.y * this.y;\r\n\t\t}\r\n\r\n\t\tlength() {\r\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\r\n\t\t}\r\n\r\n\t\tmanhattanLength() {\r\n\t\t\treturn Math.abs(this.x) + Math.abs(this.y);\r\n\t\t}\r\n\r\n\t\tnormalize() {\r\n\t\t\treturn this.divideScalar(this.length() || 1);\r\n\t\t}\r\n\r\n\t\tangle() {\r\n\t\t\t// computes the angle in radians with respect to the positive x-axis\r\n\t\t\tconst angle = Math.atan2(-this.y, -this.x) + Math.PI;\r\n\t\t\treturn angle;\r\n\t\t}\r\n\r\n\t\tdistanceTo(v) {\r\n\t\t\treturn Math.sqrt(this.distanceToSquared(v));\r\n\t\t}\r\n\r\n\t\tdistanceToSquared(v) {\r\n\t\t\tconst dx = this.x - v.x,\r\n\t\t\t\t\t\tdy = this.y - v.y;\r\n\t\t\treturn dx * dx + dy * dy;\r\n\t\t}\r\n\r\n\t\tmanhattanDistanceTo(v) {\r\n\t\t\treturn Math.abs(this.x - v.x) + Math.abs(this.y - v.y);\r\n\t\t}\r\n\r\n\t\tsetLength(length) {\r\n\t\t\treturn this.normalize().multiplyScalar(length);\r\n\t\t}\r\n\r\n\t\tlerp(v, alpha) {\r\n\t\t\tthis.x += (v.x - this.x) * alpha;\r\n\t\t\tthis.y += (v.y - this.y) * alpha;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tlerpVectors(v1, v2, alpha) {\r\n\t\t\tthis.x = v1.x + (v2.x - v1.x) * alpha;\r\n\t\t\tthis.y = v1.y + (v2.y - v1.y) * alpha;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tequals(v) {\r\n\t\t\treturn v.x === this.x && v.y === this.y;\r\n\t\t}\r\n\r\n\t\tfromArray(array, offset = 0) {\r\n\t\t\tthis.x = array[offset];\r\n\t\t\tthis.y = array[offset + 1];\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoArray(array = [], offset = 0) {\r\n\t\t\tarray[offset] = this.x;\r\n\t\t\tarray[offset + 1] = this.y;\r\n\t\t\treturn array;\r\n\t\t}\r\n\r\n\t\tfromBufferAttribute(attribute, index, offset) {\r\n\t\t\tif (offset !== undefined) {\r\n\t\t\t\tconsole.warn('THREE.Vector2: offset has been removed from .fromBufferAttribute().');\r\n\t\t\t}\r\n\r\n\t\t\tthis.x = attribute.getX(index);\r\n\t\t\tthis.y = attribute.getY(index);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\trotateAround(center, angle) {\r\n\t\t\tconst c = Math.cos(angle),\r\n\t\t\t\t\t\ts = Math.sin(angle);\r\n\t\t\tconst x = this.x - center.x;\r\n\t\t\tconst y = this.y - center.y;\r\n\t\t\tthis.x = x * c - y * s + center.x;\r\n\t\t\tthis.y = x * s + y * c + center.y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\trandom() {\r\n\t\t\tthis.x = Math.random();\r\n\t\t\tthis.y = Math.random();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tVector2.prototype.isVector2 = true;\r\n\r\n\tclass Matrix3 {\r\n\t\tconstructor() {\r\n\t\t\tthis.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1];\r\n\r\n\t\t\tif (arguments.length > 0) {\r\n\t\t\t\tconsole.error('THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tset(n11, n12, n13, n21, n22, n23, n31, n32, n33) {\r\n\t\t\tconst te = this.elements;\r\n\t\t\tte[0] = n11;\r\n\t\t\tte[1] = n21;\r\n\t\t\tte[2] = n31;\r\n\t\t\tte[3] = n12;\r\n\t\t\tte[4] = n22;\r\n\t\t\tte[5] = n32;\r\n\t\t\tte[6] = n13;\r\n\t\t\tte[7] = n23;\r\n\t\t\tte[8] = n33;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tidentity() {\r\n\t\t\tthis.set(1, 0, 0, 0, 1, 0, 0, 0, 1);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopy(m) {\r\n\t\t\tconst te = this.elements;\r\n\t\t\tconst me = m.elements;\r\n\t\t\tte[0] = me[0];\r\n\t\t\tte[1] = me[1];\r\n\t\t\tte[2] = me[2];\r\n\t\t\tte[3] = me[3];\r\n\t\t\tte[4] = me[4];\r\n\t\t\tte[5] = me[5];\r\n\t\t\tte[6] = me[6];\r\n\t\t\tte[7] = me[7];\r\n\t\t\tte[8] = me[8];\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\textractBasis(xAxis, yAxis, zAxis) {\r\n\t\t\txAxis.setFromMatrix3Column(this, 0);\r\n\t\t\tyAxis.setFromMatrix3Column(this, 1);\r\n\t\t\tzAxis.setFromMatrix3Column(this, 2);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromMatrix4(m) {\r\n\t\t\tconst me = m.elements;\r\n\t\t\tthis.set(me[0], me[4], me[8], me[1], me[5], me[9], me[2], me[6], me[10]);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmultiply(m) {\r\n\t\t\treturn this.multiplyMatrices(this, m);\r\n\t\t}\r\n\r\n\t\tpremultiply(m) {\r\n\t\t\treturn this.multiplyMatrices(m, this);\r\n\t\t}\r\n\r\n\t\tmultiplyMatrices(a, b) {\r\n\t\t\tconst ae = a.elements;\r\n\t\t\tconst be = b.elements;\r\n\t\t\tconst te = this.elements;\r\n\t\t\tconst a11 = ae[0],\r\n\t\t\t\t\t\ta12 = ae[3],\r\n\t\t\t\t\t\ta13 = ae[6];\r\n\t\t\tconst a21 = ae[1],\r\n\t\t\t\t\t\ta22 = ae[4],\r\n\t\t\t\t\t\ta23 = ae[7];\r\n\t\t\tconst a31 = ae[2],\r\n\t\t\t\t\t\ta32 = ae[5],\r\n\t\t\t\t\t\ta33 = ae[8];\r\n\t\t\tconst b11 = be[0],\r\n\t\t\t\t\t\tb12 = be[3],\r\n\t\t\t\t\t\tb13 = be[6];\r\n\t\t\tconst b21 = be[1],\r\n\t\t\t\t\t\tb22 = be[4],\r\n\t\t\t\t\t\tb23 = be[7];\r\n\t\t\tconst b31 = be[2],\r\n\t\t\t\t\t\tb32 = be[5],\r\n\t\t\t\t\t\tb33 = be[8];\r\n\t\t\tte[0] = a11 * b11 + a12 * b21 + a13 * b31;\r\n\t\t\tte[3] = a11 * b12 + a12 * b22 + a13 * b32;\r\n\t\t\tte[6] = a11 * b13 + a12 * b23 + a13 * b33;\r\n\t\t\tte[1] = a21 * b11 + a22 * b21 + a23 * b31;\r\n\t\t\tte[4] = a21 * b12 + a22 * b22 + a23 * b32;\r\n\t\t\tte[7] = a21 * b13 + a22 * b23 + a23 * b33;\r\n\t\t\tte[2] = a31 * b11 + a32 * b21 + a33 * b31;\r\n\t\t\tte[5] = a31 * b12 + a32 * b22 + a33 * b32;\r\n\t\t\tte[8] = a31 * b13 + a32 * b23 + a33 * b33;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmultiplyScalar(s) {\r\n\t\t\tconst te = this.elements;\r\n\t\t\tte[0] *= s;\r\n\t\t\tte[3] *= s;\r\n\t\t\tte[6] *= s;\r\n\t\t\tte[1] *= s;\r\n\t\t\tte[4] *= s;\r\n\t\t\tte[7] *= s;\r\n\t\t\tte[2] *= s;\r\n\t\t\tte[5] *= s;\r\n\t\t\tte[8] *= s;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tdeterminant() {\r\n\t\t\tconst te = this.elements;\r\n\t\t\tconst a = te[0],\r\n\t\t\t\t\t\tb = te[1],\r\n\t\t\t\t\t\tc = te[2],\r\n\t\t\t\t\t\td = te[3],\r\n\t\t\t\t\t\te = te[4],\r\n\t\t\t\t\t\tf = te[5],\r\n\t\t\t\t\t\tg = te[6],\r\n\t\t\t\t\t\th = te[7],\r\n\t\t\t\t\t\ti = te[8];\r\n\t\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\r\n\t\t}\r\n\r\n\t\tinvert() {\r\n\t\t\tconst te = this.elements,\r\n\t\t\t\t\t\tn11 = te[0],\r\n\t\t\t\t\t\tn21 = te[1],\r\n\t\t\t\t\t\tn31 = te[2],\r\n\t\t\t\t\t\tn12 = te[3],\r\n\t\t\t\t\t\tn22 = te[4],\r\n\t\t\t\t\t\tn32 = te[5],\r\n\t\t\t\t\t\tn13 = te[6],\r\n\t\t\t\t\t\tn23 = te[7],\r\n\t\t\t\t\t\tn33 = te[8],\r\n\t\t\t\t\t\tt11 = n33 * n22 - n32 * n23,\r\n\t\t\t\t\t\tt12 = n32 * n13 - n33 * n12,\r\n\t\t\t\t\t\tt13 = n23 * n12 - n22 * n13,\r\n\t\t\t\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\r\n\t\t\tif (det === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);\r\n\t\t\tconst detInv = 1 / det;\r\n\t\t\tte[0] = t11 * detInv;\r\n\t\t\tte[1] = (n31 * n23 - n33 * n21) * detInv;\r\n\t\t\tte[2] = (n32 * n21 - n31 * n22) * detInv;\r\n\t\t\tte[3] = t12 * detInv;\r\n\t\t\tte[4] = (n33 * n11 - n31 * n13) * detInv;\r\n\t\t\tte[5] = (n31 * n12 - n32 * n11) * detInv;\r\n\t\t\tte[6] = t13 * detInv;\r\n\t\t\tte[7] = (n21 * n13 - n23 * n11) * detInv;\r\n\t\t\tte[8] = (n22 * n11 - n21 * n12) * detInv;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttranspose() {\r\n\t\t\tlet tmp;\r\n\t\t\tconst m = this.elements;\r\n\t\t\ttmp = m[1];\r\n\t\t\tm[1] = m[3];\r\n\t\t\tm[3] = tmp;\r\n\t\t\ttmp = m[2];\r\n\t\t\tm[2] = m[6];\r\n\t\t\tm[6] = tmp;\r\n\t\t\ttmp = m[5];\r\n\t\t\tm[5] = m[7];\r\n\t\t\tm[7] = tmp;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetNormalMatrix(matrix4) {\r\n\t\t\treturn this.setFromMatrix4(matrix4).invert().transpose();\r\n\t\t}\r\n\r\n\t\ttransposeIntoArray(r) {\r\n\t\t\tconst m = this.elements;\r\n\t\t\tr[0] = m[0];\r\n\t\t\tr[1] = m[3];\r\n\t\t\tr[2] = m[6];\r\n\t\t\tr[3] = m[1];\r\n\t\t\tr[4] = m[4];\r\n\t\t\tr[5] = m[7];\r\n\t\t\tr[6] = m[2];\r\n\t\t\tr[7] = m[5];\r\n\t\t\tr[8] = m[8];\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetUvTransform(tx, ty, sx, sy, rotation, cx, cy) {\r\n\t\t\tconst c = Math.cos(rotation);\r\n\t\t\tconst s = Math.sin(rotation);\r\n\t\t\tthis.set(sx * c, sx * s, -sx * (c * cx + s * cy) + cx + tx, -sy * s, sy * c, -sy * (-s * cx + c * cy) + cy + ty, 0, 0, 1);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tscale(sx, sy) {\r\n\t\t\tconst te = this.elements;\r\n\t\t\tte[0] *= sx;\r\n\t\t\tte[3] *= sx;\r\n\t\t\tte[6] *= sx;\r\n\t\t\tte[1] *= sy;\r\n\t\t\tte[4] *= sy;\r\n\t\t\tte[7] *= sy;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\trotate(theta) {\r\n\t\t\tconst c = Math.cos(theta);\r\n\t\t\tconst s = Math.sin(theta);\r\n\t\t\tconst te = this.elements;\r\n\t\t\tconst a11 = te[0],\r\n\t\t\t\t\t\ta12 = te[3],\r\n\t\t\t\t\t\ta13 = te[6];\r\n\t\t\tconst a21 = te[1],\r\n\t\t\t\t\t\ta22 = te[4],\r\n\t\t\t\t\t\ta23 = te[7];\r\n\t\t\tte[0] = c * a11 + s * a21;\r\n\t\t\tte[3] = c * a12 + s * a22;\r\n\t\t\tte[6] = c * a13 + s * a23;\r\n\t\t\tte[1] = -s * a11 + c * a21;\r\n\t\t\tte[4] = -s * a12 + c * a22;\r\n\t\t\tte[7] = -s * a13 + c * a23;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttranslate(tx, ty) {\r\n\t\t\tconst te = this.elements;\r\n\t\t\tte[0] += tx * te[2];\r\n\t\t\tte[3] += tx * te[5];\r\n\t\t\tte[6] += tx * te[8];\r\n\t\t\tte[1] += ty * te[2];\r\n\t\t\tte[4] += ty * te[5];\r\n\t\t\tte[7] += ty * te[8];\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tequals(matrix) {\r\n\t\t\tconst te = this.elements;\r\n\t\t\tconst me = matrix.elements;\r\n\r\n\t\t\tfor (let i = 0; i < 9; i++) {\r\n\t\t\t\tif (te[i] !== me[i]) return false;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tfromArray(array, offset = 0) {\r\n\t\t\tfor (let i = 0; i < 9; i++) {\r\n\t\t\t\tthis.elements[i] = array[i + offset];\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoArray(array = [], offset = 0) {\r\n\t\t\tconst te = this.elements;\r\n\t\t\tarray[offset] = te[0];\r\n\t\t\tarray[offset + 1] = te[1];\r\n\t\t\tarray[offset + 2] = te[2];\r\n\t\t\tarray[offset + 3] = te[3];\r\n\t\t\tarray[offset + 4] = te[4];\r\n\t\t\tarray[offset + 5] = te[5];\r\n\t\t\tarray[offset + 6] = te[6];\r\n\t\t\tarray[offset + 7] = te[7];\r\n\t\t\tarray[offset + 8] = te[8];\r\n\t\t\treturn array;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor().fromArray(this.elements);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tMatrix3.prototype.isMatrix3 = true;\r\n\r\n\tlet _canvas;\r\n\r\n\tclass ImageUtils {\r\n\t\tstatic getDataURL(image) {\r\n\t\t\tif (/^data:/i.test(image.src)) {\r\n\t\t\t\treturn image.src;\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof HTMLCanvasElement == 'undefined') {\r\n\t\t\t\treturn image.src;\r\n\t\t\t}\r\n\r\n\t\t\tlet canvas;\r\n\r\n\t\t\tif (image instanceof HTMLCanvasElement) {\r\n\t\t\t\tcanvas = image;\r\n\t\t\t} else {\r\n\t\t\t\tif (_canvas === undefined) _canvas = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\r\n\t\t\t\t_canvas.width = image.width;\r\n\t\t\t\t_canvas.height = image.height;\r\n\r\n\t\t\t\tconst context = _canvas.getContext('2d');\r\n\r\n\t\t\t\tif (image instanceof ImageData) {\r\n\t\t\t\t\tcontext.putImageData(image, 0, 0);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcontext.drawImage(image, 0, 0, image.width, image.height);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcanvas = _canvas;\r\n\t\t\t}\r\n\r\n\t\t\tif (canvas.width > 2048 || canvas.height > 2048) {\r\n\t\t\t\tconsole.warn('THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image);\r\n\t\t\t\treturn canvas.toDataURL('image/jpeg', 0.6);\r\n\t\t\t} else {\r\n\t\t\t\treturn canvas.toDataURL('image/png');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tlet textureId = 0;\r\n\r\n\tclass Texture extends EventDispatcher {\r\n\t\tconstructor(image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = 1, encoding = LinearEncoding) {\r\n\t\t\tsuper();\r\n\t\t\tObject.defineProperty(this, 'id', {\r\n\t\t\t\tvalue: textureId++\r\n\t\t\t});\r\n\t\t\tthis.uuid = generateUUID();\r\n\t\t\tthis.name = '';\r\n\t\t\tthis.image = image;\r\n\t\t\tthis.mipmaps = [];\r\n\t\t\tthis.mapping = mapping;\r\n\t\t\tthis.wrapS = wrapS;\r\n\t\t\tthis.wrapT = wrapT;\r\n\t\t\tthis.magFilter = magFilter;\r\n\t\t\tthis.minFilter = minFilter;\r\n\t\t\tthis.anisotropy = anisotropy;\r\n\t\t\tthis.format = format;\r\n\t\t\tthis.internalFormat = null;\r\n\t\t\tthis.type = type;\r\n\t\t\tthis.offset = new Vector2(0, 0);\r\n\t\t\tthis.repeat = new Vector2(1, 1);\r\n\t\t\tthis.center = new Vector2(0, 0);\r\n\t\t\tthis.rotation = 0;\r\n\t\t\tthis.matrixAutoUpdate = true;\r\n\t\t\tthis.matrix = new Matrix3();\r\n\t\t\tthis.generateMipmaps = true;\r\n\t\t\tthis.premultiplyAlpha = false;\r\n\t\t\tthis.flipY = true;\r\n\t\t\tthis.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\r\n\t\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\r\n\t\t\t//\r\n\t\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\r\n\t\t\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\r\n\r\n\t\t\tthis.encoding = encoding;\r\n\t\t\tthis.version = 0;\r\n\t\t\tthis.onUpdate = null;\r\n\t\t\tthis.isRenderTargetTexture = false;\r\n\t\t}\r\n\r\n\t\tupdateMatrix() {\r\n\t\t\tthis.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y);\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor().copy(this);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tthis.name = source.name;\r\n\t\t\tthis.image = source.image;\r\n\t\t\tthis.mipmaps = source.mipmaps.slice(0);\r\n\t\t\tthis.mapping = source.mapping;\r\n\t\t\tthis.wrapS = source.wrapS;\r\n\t\t\tthis.wrapT = source.wrapT;\r\n\t\t\tthis.magFilter = source.magFilter;\r\n\t\t\tthis.minFilter = source.minFilter;\r\n\t\t\tthis.anisotropy = source.anisotropy;\r\n\t\t\tthis.format = source.format;\r\n\t\t\tthis.internalFormat = source.internalFormat;\r\n\t\t\tthis.type = source.type;\r\n\t\t\tthis.offset.copy(source.offset);\r\n\t\t\tthis.repeat.copy(source.repeat);\r\n\t\t\tthis.center.copy(source.center);\r\n\t\t\tthis.rotation = source.rotation;\r\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\t\tthis.matrix.copy(source.matrix);\r\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\t\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\r\n\t\t\tthis.flipY = source.flipY;\r\n\t\t\tthis.unpackAlignment = source.unpackAlignment;\r\n\t\t\tthis.encoding = source.encoding;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON(meta) {\r\n\t\t\tconst isRootObject = meta === undefined || typeof meta === 'string';\r\n\r\n\t\t\tif (!isRootObject && meta.textures[this.uuid] !== undefined) {\r\n\t\t\t\treturn meta.textures[this.uuid];\r\n\t\t\t}\r\n\r\n\t\t\tconst output = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.5,\r\n\t\t\t\t\ttype: 'Texture',\r\n\t\t\t\t\tgenerator: 'Texture.toJSON'\r\n\t\t\t\t},\r\n\t\t\t\tuuid: this.uuid,\r\n\t\t\t\tname: this.name,\r\n\t\t\t\tmapping: this.mapping,\r\n\t\t\t\trepeat: [this.repeat.x, this.repeat.y],\r\n\t\t\t\toffset: [this.offset.x, this.offset.y],\r\n\t\t\t\tcenter: [this.center.x, this.center.y],\r\n\t\t\t\trotation: this.rotation,\r\n\t\t\t\twrap: [this.wrapS, this.wrapT],\r\n\t\t\t\tformat: this.format,\r\n\t\t\t\ttype: this.type,\r\n\t\t\t\tencoding: this.encoding,\r\n\t\t\t\tminFilter: this.minFilter,\r\n\t\t\t\tmagFilter: this.magFilter,\r\n\t\t\t\tanisotropy: this.anisotropy,\r\n\t\t\t\tflipY: this.flipY,\r\n\t\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\r\n\t\t\t\tunpackAlignment: this.unpackAlignment\r\n\t\t\t};\r\n\r\n\t\t\tif (this.image !== undefined) {\r\n\t\t\t\t// TODO: Move to THREE.Image\r\n\t\t\t\tconst image = this.image;\r\n\r\n\t\t\t\tif (image.uuid === undefined) {\r\n\t\t\t\t\timage.uuid = generateUUID(); // UGH\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!isRootObject && meta.images[image.uuid] === undefined) {\r\n\t\t\t\t\tlet url;\r\n\r\n\t\t\t\t\tif (Array.isArray(image)) {\r\n\t\t\t\t\t\t// process array of images e.g. CubeTexture\r\n\t\t\t\t\t\turl = [];\r\n\r\n\t\t\t\t\t\tfor (let i = 0, l = image.length; i < l; i++) {\r\n\t\t\t\t\t\t\t// check cube texture with data textures\r\n\t\t\t\t\t\t\tif (image[i].isDataTexture) {\r\n\t\t\t\t\t\t\t\turl.push(serializeImage(image[i].image));\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\turl.push(serializeImage(image[i]));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// process single image\r\n\t\t\t\t\t\turl = serializeImage(image);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tmeta.images[image.uuid] = {\r\n\t\t\t\t\t\tuuid: image.uuid,\r\n\t\t\t\t\t\turl: url\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\r\n\t\t\t\toutput.image = image.uuid;\r\n\t\t\t}\r\n\r\n\t\t\tif (!isRootObject) {\r\n\t\t\t\tmeta.textures[this.uuid] = output;\r\n\t\t\t}\r\n\r\n\t\t\treturn output;\r\n\t\t}\r\n\r\n\t\tdispose() {\r\n\t\t\tthis.dispatchEvent({\r\n\t\t\t\ttype: 'dispose'\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\ttransformUv(uv) {\r\n\t\t\tif (this.mapping !== UVMapping) return uv;\r\n\t\t\tuv.applyMatrix3(this.matrix);\r\n\r\n\t\t\tif (uv.x < 0 || uv.x > 1) {\r\n\t\t\t\tswitch (this.wrapS) {\r\n\t\t\t\t\tcase RepeatWrapping:\r\n\t\t\t\t\t\tuv.x = uv.x - Math.floor(uv.x);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase ClampToEdgeWrapping:\r\n\t\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase MirroredRepeatWrapping:\r\n\t\t\t\t\t\tif (Math.abs(Math.floor(uv.x) % 2) === 1) {\r\n\t\t\t\t\t\t\tuv.x = Math.ceil(uv.x) - uv.x;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tuv.x = uv.x - Math.floor(uv.x);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (uv.y < 0 || uv.y > 1) {\r\n\t\t\t\tswitch (this.wrapT) {\r\n\t\t\t\t\tcase RepeatWrapping:\r\n\t\t\t\t\t\tuv.y = uv.y - Math.floor(uv.y);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase ClampToEdgeWrapping:\r\n\t\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase MirroredRepeatWrapping:\r\n\t\t\t\t\t\tif (Math.abs(Math.floor(uv.y) % 2) === 1) {\r\n\t\t\t\t\t\t\tuv.y = Math.ceil(uv.y) - uv.y;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tuv.y = uv.y - Math.floor(uv.y);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.flipY) {\r\n\t\t\t\tuv.y = 1 - uv.y;\r\n\t\t\t}\r\n\r\n\t\t\treturn uv;\r\n\t\t}\r\n\r\n\t\tset needsUpdate(value) {\r\n\t\t\tif (value === true) this.version++;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tTexture.DEFAULT_IMAGE = undefined;\r\n\tTexture.DEFAULT_MAPPING = UVMapping;\r\n\tTexture.prototype.isTexture = true;\r\n\r\n\tfunction serializeImage(image) {\r\n\t\tif (typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement || typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement || typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\r\n\t\t\t// default images\r\n\t\t\treturn ImageUtils.getDataURL(image);\r\n\t\t} else {\r\n\t\t\tif (image.data) {\r\n\t\t\t\t// images of DataTexture\r\n\t\t\t\treturn {\r\n\t\t\t\t\tdata: Array.prototype.slice.call(image.data),\r\n\t\t\t\t\twidth: image.width,\r\n\t\t\t\t\theight: image.height,\r\n\t\t\t\t\ttype: image.data.constructor.name\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tconsole.warn('THREE.Texture: Unable to serialize Texture.');\r\n\t\t\t\treturn {};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tclass Vector4 {\r\n\t\tconstructor(x = 0, y = 0, z = 0, w = 1) {\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.z = z;\r\n\t\t\tthis.w = w;\r\n\t\t}\r\n\r\n\t\tget width() {\r\n\t\t\treturn this.z;\r\n\t\t}\r\n\r\n\t\tset width(value) {\r\n\t\t\tthis.z = value;\r\n\t\t}\r\n\r\n\t\tget height() {\r\n\t\t\treturn this.w;\r\n\t\t}\r\n\r\n\t\tset height(value) {\r\n\t\t\tthis.w = value;\r\n\t\t}\r\n\r\n\t\tset(x, y, z, w) {\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.z = z;\r\n\t\t\tthis.w = w;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetScalar(scalar) {\r\n\t\t\tthis.x = scalar;\r\n\t\t\tthis.y = scalar;\r\n\t\t\tthis.z = scalar;\r\n\t\t\tthis.w = scalar;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetX(x) {\r\n\t\t\tthis.x = x;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetY(y) {\r\n\t\t\tthis.y = y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetZ(z) {\r\n\t\t\tthis.z = z;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetW(w) {\r\n\t\t\tthis.w = w;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetComponent(index, value) {\r\n\t\t\tswitch (index) {\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\tthis.x = value;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tthis.y = value;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tthis.z = value;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tthis.w = value;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetComponent(index) {\r\n\t\t\tswitch (index) {\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\treturn this.x;\r\n\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\treturn this.y;\r\n\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\treturn this.z;\r\n\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\treturn this.w;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor(this.x, this.y, this.z, this.w);\r\n\t\t}\r\n\r\n\t\tcopy(v) {\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\t\t\tthis.z = v.z;\r\n\t\t\tthis.w = v.w !== undefined ? v.w : 1;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tadd(v, w) {\r\n\t\t\tif (w !== undefined) {\r\n\t\t\t\tconsole.warn('THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\r\n\t\t\t\treturn this.addVectors(v, w);\r\n\t\t\t}\r\n\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\t\t\tthis.z += v.z;\r\n\t\t\tthis.w += v.w;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\taddScalar(s) {\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\t\t\tthis.z += s;\r\n\t\t\tthis.w += s;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\taddVectors(a, b) {\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\t\t\tthis.z = a.z + b.z;\r\n\t\t\tthis.w = a.w + b.w;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\taddScaledVector(v, s) {\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\t\t\tthis.z += v.z * s;\r\n\t\t\tthis.w += v.w * s;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsub(v, w) {\r\n\t\t\tif (w !== undefined) {\r\n\t\t\t\tconsole.warn('THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\r\n\t\t\t\treturn this.subVectors(v, w);\r\n\t\t\t}\r\n\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\t\t\tthis.z -= v.z;\r\n\t\t\tthis.w -= v.w;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsubScalar(s) {\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\t\t\tthis.z -= s;\r\n\t\t\tthis.w -= s;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsubVectors(a, b) {\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\t\t\tthis.z = a.z - b.z;\r\n\t\t\tthis.w = a.w - b.w;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmultiply(v) {\r\n\t\t\tthis.x *= v.x;\r\n\t\t\tthis.y *= v.y;\r\n\t\t\tthis.z *= v.z;\r\n\t\t\tthis.w *= v.w;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmultiplyScalar(scalar) {\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\t\t\tthis.z *= scalar;\r\n\t\t\tthis.w *= scalar;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tapplyMatrix4(m) {\r\n\t\t\tconst x = this.x,\r\n\t\t\t\t\t\ty = this.y,\r\n\t\t\t\t\t\tz = this.z,\r\n\t\t\t\t\t\tw = this.w;\r\n\t\t\tconst e = m.elements;\r\n\t\t\tthis.x = e[0] * x + e[4] * y + e[8] * z + e[12] * w;\r\n\t\t\tthis.y = e[1] * x + e[5] * y + e[9] * z + e[13] * w;\r\n\t\t\tthis.z = e[2] * x + e[6] * y + e[10] * z + e[14] * w;\r\n\t\t\tthis.w = e[3] * x + e[7] * y + e[11] * z + e[15] * w;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tdivideScalar(scalar) {\r\n\t\t\treturn this.multiplyScalar(1 / scalar);\r\n\t\t}\r\n\r\n\t\tsetAxisAngleFromQuaternion(q) {\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n\t\t\t// q is assumed to be normalized\r\n\t\t\tthis.w = 2 * Math.acos(q.w);\r\n\t\t\tconst s = Math.sqrt(1 - q.w * q.w);\r\n\r\n\t\t\tif (s < 0.0001) {\r\n\t\t\t\tthis.x = 1;\r\n\t\t\t\tthis.y = 0;\r\n\t\t\t\tthis.z = 0;\r\n\t\t\t} else {\r\n\t\t\t\tthis.x = q.x / s;\r\n\t\t\t\tthis.y = q.y / s;\r\n\t\t\t\tthis.z = q.z / s;\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetAxisAngleFromRotationMatrix(m) {\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\t\tlet angle, x, y, z; // variables for result\r\n\r\n\t\t\tconst epsilon = 0.01,\r\n\t\t\t\t\t\t// margin to allow for rounding errors\r\n\t\t\tepsilon2 = 0.1,\r\n\t\t\t\t\t\t// margin to distinguish between 0 and 180 degrees\r\n\t\t\tte = m.elements,\r\n\t\t\t\t\t\tm11 = te[0],\r\n\t\t\t\t\t\tm12 = te[4],\r\n\t\t\t\t\t\tm13 = te[8],\r\n\t\t\t\t\t\tm21 = te[1],\r\n\t\t\t\t\t\tm22 = te[5],\r\n\t\t\t\t\t\tm23 = te[9],\r\n\t\t\t\t\t\tm31 = te[2],\r\n\t\t\t\t\t\tm32 = te[6],\r\n\t\t\t\t\t\tm33 = te[10];\r\n\r\n\t\t\tif (Math.abs(m12 - m21) < epsilon && Math.abs(m13 - m31) < epsilon && Math.abs(m23 - m32) < epsilon) {\r\n\t\t\t\t// singularity found\r\n\t\t\t\t// first check for identity matrix which must have +1 for all terms\r\n\t\t\t\t// in leading diagonal and zero in other terms\r\n\t\t\t\tif (Math.abs(m12 + m21) < epsilon2 && Math.abs(m13 + m31) < epsilon2 && Math.abs(m23 + m32) < epsilon2 && Math.abs(m11 + m22 + m33 - 3) < epsilon2) {\r\n\t\t\t\t\t// this singularity is identity matrix so angle = 0\r\n\t\t\t\t\tthis.set(1, 0, 0, 0);\r\n\t\t\t\t\treturn this; // zero angle, arbitrary axis\r\n\t\t\t\t} // otherwise this singularity is angle = 180\r\n\r\n\r\n\t\t\t\tangle = Math.PI;\r\n\t\t\t\tconst xx = (m11 + 1) / 2;\r\n\t\t\t\tconst yy = (m22 + 1) / 2;\r\n\t\t\t\tconst zz = (m33 + 1) / 2;\r\n\t\t\t\tconst xy = (m12 + m21) / 4;\r\n\t\t\t\tconst xz = (m13 + m31) / 4;\r\n\t\t\t\tconst yz = (m23 + m32) / 4;\r\n\r\n\t\t\t\tif (xx > yy && xx > zz) {\r\n\t\t\t\t\t// m11 is the largest diagonal term\r\n\t\t\t\t\tif (xx < epsilon) {\r\n\t\t\t\t\t\tx = 0;\r\n\t\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\t\tz = 0.707106781;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tx = Math.sqrt(xx);\r\n\t\t\t\t\t\ty = xy / x;\r\n\t\t\t\t\t\tz = xz / x;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (yy > zz) {\r\n\t\t\t\t\t// m22 is the largest diagonal term\r\n\t\t\t\t\tif (yy < epsilon) {\r\n\t\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\t\ty = 0;\r\n\t\t\t\t\t\tz = 0.707106781;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ty = Math.sqrt(yy);\r\n\t\t\t\t\t\tx = xy / y;\r\n\t\t\t\t\t\tz = yz / y;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// m33 is the largest diagonal term so base result on this\r\n\t\t\t\t\tif (zz < epsilon) {\r\n\t\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\t\tz = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tz = Math.sqrt(zz);\r\n\t\t\t\t\t\tx = xz / z;\r\n\t\t\t\t\t\ty = yz / z;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.set(x, y, z, angle);\r\n\t\t\t\treturn this; // return 180 deg rotation\r\n\t\t\t} // as we have reached here there are no singularities so we can handle normally\r\n\r\n\r\n\t\t\tlet s = Math.sqrt((m32 - m23) * (m32 - m23) + (m13 - m31) * (m13 - m31) + (m21 - m12) * (m21 - m12)); // used to normalize\r\n\r\n\t\t\tif (Math.abs(s) < 0.001) s = 1; // prevent divide by zero, should not happen if matrix is orthogonal and should be\r\n\t\t\t// caught by singularity test above, but I've left it in just in case\r\n\r\n\t\t\tthis.x = (m32 - m23) / s;\r\n\t\t\tthis.y = (m13 - m31) / s;\r\n\t\t\tthis.z = (m21 - m12) / s;\r\n\t\t\tthis.w = Math.acos((m11 + m22 + m33 - 1) / 2);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmin(v) {\r\n\t\t\tthis.x = Math.min(this.x, v.x);\r\n\t\t\tthis.y = Math.min(this.y, v.y);\r\n\t\t\tthis.z = Math.min(this.z, v.z);\r\n\t\t\tthis.w = Math.min(this.w, v.w);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmax(v) {\r\n\t\t\tthis.x = Math.max(this.x, v.x);\r\n\t\t\tthis.y = Math.max(this.y, v.y);\r\n\t\t\tthis.z = Math.max(this.z, v.z);\r\n\t\t\tthis.w = Math.max(this.w, v.w);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclamp(min, max) {\r\n\t\t\t// assumes min < max, componentwise\r\n\t\t\tthis.x = Math.max(min.x, Math.min(max.x, this.x));\r\n\t\t\tthis.y = Math.max(min.y, Math.min(max.y, this.y));\r\n\t\t\tthis.z = Math.max(min.z, Math.min(max.z, this.z));\r\n\t\t\tthis.w = Math.max(min.w, Math.min(max.w, this.w));\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclampScalar(minVal, maxVal) {\r\n\t\t\tthis.x = Math.max(minVal, Math.min(maxVal, this.x));\r\n\t\t\tthis.y = Math.max(minVal, Math.min(maxVal, this.y));\r\n\t\t\tthis.z = Math.max(minVal, Math.min(maxVal, this.z));\r\n\t\t\tthis.w = Math.max(minVal, Math.min(maxVal, this.w));\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclampLength(min, max) {\r\n\t\t\tconst length = this.length();\r\n\t\t\treturn this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\r\n\t\t}\r\n\r\n\t\tfloor() {\r\n\t\t\tthis.x = Math.floor(this.x);\r\n\t\t\tthis.y = Math.floor(this.y);\r\n\t\t\tthis.z = Math.floor(this.z);\r\n\t\t\tthis.w = Math.floor(this.w);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tceil() {\r\n\t\t\tthis.x = Math.ceil(this.x);\r\n\t\t\tthis.y = Math.ceil(this.y);\r\n\t\t\tthis.z = Math.ceil(this.z);\r\n\t\t\tthis.w = Math.ceil(this.w);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tround() {\r\n\t\t\tthis.x = Math.round(this.x);\r\n\t\t\tthis.y = Math.round(this.y);\r\n\t\t\tthis.z = Math.round(this.z);\r\n\t\t\tthis.w = Math.round(this.w);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\troundToZero() {\r\n\t\t\tthis.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\r\n\t\t\tthis.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\r\n\t\t\tthis.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\r\n\t\t\tthis.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tnegate() {\r\n\t\t\tthis.x = -this.x;\r\n\t\t\tthis.y = -this.y;\r\n\t\t\tthis.z = -this.z;\r\n\t\t\tthis.w = -this.w;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tdot(v) {\r\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\r\n\t\t}\r\n\r\n\t\tlengthSq() {\r\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n\t\t}\r\n\r\n\t\tlength() {\r\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\r\n\t\t}\r\n\r\n\t\tmanhattanLength() {\r\n\t\t\treturn Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);\r\n\t\t}\r\n\r\n\t\tnormalize() {\r\n\t\t\treturn this.divideScalar(this.length() || 1);\r\n\t\t}\r\n\r\n\t\tsetLength(length) {\r\n\t\t\treturn this.normalize().multiplyScalar(length);\r\n\t\t}\r\n\r\n\t\tlerp(v, alpha) {\r\n\t\t\tthis.x += (v.x - this.x) * alpha;\r\n\t\t\tthis.y += (v.y - this.y) * alpha;\r\n\t\t\tthis.z += (v.z - this.z) * alpha;\r\n\t\t\tthis.w += (v.w - this.w) * alpha;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tlerpVectors(v1, v2, alpha) {\r\n\t\t\tthis.x = v1.x + (v2.x - v1.x) * alpha;\r\n\t\t\tthis.y = v1.y + (v2.y - v1.y) * alpha;\r\n\t\t\tthis.z = v1.z + (v2.z - v1.z) * alpha;\r\n\t\t\tthis.w = v1.w + (v2.w - v1.w) * alpha;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tequals(v) {\r\n\t\t\treturn v.x === this.x && v.y === this.y && v.z === this.z && v.w === this.w;\r\n\t\t}\r\n\r\n\t\tfromArray(array, offset = 0) {\r\n\t\t\tthis.x = array[offset];\r\n\t\t\tthis.y = array[offset + 1];\r\n\t\t\tthis.z = array[offset + 2];\r\n\t\t\tthis.w = array[offset + 3];\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoArray(array = [], offset = 0) {\r\n\t\t\tarray[offset] = this.x;\r\n\t\t\tarray[offset + 1] = this.y;\r\n\t\t\tarray[offset + 2] = this.z;\r\n\t\t\tarray[offset + 3] = this.w;\r\n\t\t\treturn array;\r\n\t\t}\r\n\r\n\t\tfromBufferAttribute(attribute, index, offset) {\r\n\t\t\tif (offset !== undefined) {\r\n\t\t\t\tconsole.warn('THREE.Vector4: offset has been removed from .fromBufferAttribute().');\r\n\t\t\t}\r\n\r\n\t\t\tthis.x = attribute.getX(index);\r\n\t\t\tthis.y = attribute.getY(index);\r\n\t\t\tthis.z = attribute.getZ(index);\r\n\t\t\tthis.w = attribute.getW(index);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\trandom() {\r\n\t\t\tthis.x = Math.random();\r\n\t\t\tthis.y = Math.random();\r\n\t\t\tthis.z = Math.random();\r\n\t\t\tthis.w = Math.random();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tVector4.prototype.isVector4 = true;\r\n\r\n\t/*\r\n\t In options, we can specify:\r\n\t * Texture parameters for an auto-generated target texture\r\n\t * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\r\n\t*/\r\n\r\n\tclass WebGLRenderTarget extends EventDispatcher {\r\n\t\tconstructor(width, height, options = {}) {\r\n\t\t\tsuper();\r\n\t\t\tthis.width = width;\r\n\t\t\tthis.height = height;\r\n\t\t\tthis.depth = 1;\r\n\t\t\tthis.scissor = new Vector4(0, 0, width, height);\r\n\t\t\tthis.scissorTest = false;\r\n\t\t\tthis.viewport = new Vector4(0, 0, width, height);\r\n\t\t\tthis.texture = new Texture(undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding);\r\n\t\t\tthis.texture.isRenderTargetTexture = true;\r\n\t\t\tthis.texture.image = {\r\n\t\t\t\twidth: width,\r\n\t\t\t\theight: height,\r\n\t\t\t\tdepth: 1\r\n\t\t\t};\r\n\t\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\r\n\t\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\r\n\t\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\r\n\t\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\r\n\t\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\r\n\t\t}\r\n\r\n\t\tsetTexture(texture) {\r\n\t\t\ttexture.image = {\r\n\t\t\t\twidth: this.width,\r\n\t\t\t\theight: this.height,\r\n\t\t\t\tdepth: this.depth\r\n\t\t\t};\r\n\t\t\tthis.texture = texture;\r\n\t\t}\r\n\r\n\t\tsetSize(width, height, depth = 1) {\r\n\t\t\tif (this.width !== width || this.height !== height || this.depth !== depth) {\r\n\t\t\t\tthis.width = width;\r\n\t\t\t\tthis.height = height;\r\n\t\t\t\tthis.depth = depth;\r\n\t\t\t\tthis.texture.image.width = width;\r\n\t\t\t\tthis.texture.image.height = height;\r\n\t\t\t\tthis.texture.image.depth = depth;\r\n\t\t\t\tthis.dispose();\r\n\t\t\t}\r\n\r\n\t\t\tthis.viewport.set(0, 0, width, height);\r\n\t\t\tthis.scissor.set(0, 0, width, height);\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor().copy(this);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tthis.width = source.width;\r\n\t\t\tthis.height = source.height;\r\n\t\t\tthis.depth = source.depth;\r\n\t\t\tthis.viewport.copy(source.viewport);\r\n\t\t\tthis.texture = source.texture.clone();\r\n\t\t\tthis.texture.image = { ...this.texture.image\r\n\t\t\t}; // See #20328.\r\n\r\n\t\t\tthis.depthBuffer = source.depthBuffer;\r\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\r\n\t\t\tthis.depthTexture = source.depthTexture;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tdispose() {\r\n\t\t\tthis.dispatchEvent({\r\n\t\t\t\ttype: 'dispose'\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tWebGLRenderTarget.prototype.isWebGLRenderTarget = true;\r\n\r\n\tclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\r\n\t\tconstructor(width, height, count) {\r\n\t\t\tsuper(width, height);\r\n\t\t\tconst texture = this.texture;\r\n\t\t\tthis.texture = [];\r\n\r\n\t\t\tfor (let i = 0; i < count; i++) {\r\n\t\t\t\tthis.texture[i] = texture.clone();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsetSize(width, height, depth = 1) {\r\n\t\t\tif (this.width !== width || this.height !== height || this.depth !== depth) {\r\n\t\t\t\tthis.width = width;\r\n\t\t\t\tthis.height = height;\r\n\t\t\t\tthis.depth = depth;\r\n\r\n\t\t\t\tfor (let i = 0, il = this.texture.length; i < il; i++) {\r\n\t\t\t\t\tthis.texture[i].image.width = width;\r\n\t\t\t\t\tthis.texture[i].image.height = height;\r\n\t\t\t\t\tthis.texture[i].image.depth = depth;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.dispose();\r\n\t\t\t}\r\n\r\n\t\t\tthis.viewport.set(0, 0, width, height);\r\n\t\t\tthis.scissor.set(0, 0, width, height);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tthis.dispose();\r\n\t\t\tthis.width = source.width;\r\n\t\t\tthis.height = source.height;\r\n\t\t\tthis.depth = source.depth;\r\n\t\t\tthis.viewport.set(0, 0, this.width, this.height);\r\n\t\t\tthis.scissor.set(0, 0, this.width, this.height);\r\n\t\t\tthis.depthBuffer = source.depthBuffer;\r\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\r\n\t\t\tthis.depthTexture = source.depthTexture;\r\n\t\t\tthis.texture.length = 0;\r\n\r\n\t\t\tfor (let i = 0, il = source.texture.length; i < il; i++) {\r\n\t\t\t\tthis.texture[i] = source.texture[i].clone();\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tWebGLMultipleRenderTargets.prototype.isWebGLMultipleRenderTargets = true;\r\n\r\n\tclass WebGLMultisampleRenderTarget extends WebGLRenderTarget {\r\n\t\tconstructor(width, height, options) {\r\n\t\t\tsuper(width, height, options);\r\n\t\t\tthis.samples = 4;\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy.call(this, source);\r\n\t\t\tthis.samples = source.samples;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tWebGLMultisampleRenderTarget.prototype.isWebGLMultisampleRenderTarget = true;\r\n\r\n\tclass Quaternion {\r\n\t\tconstructor(x = 0, y = 0, z = 0, w = 1) {\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\t\t\tthis._w = w;\r\n\t\t}\r\n\r\n\t\tstatic slerp(qa, qb, qm, t) {\r\n\t\t\tconsole.warn('THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead.');\r\n\t\t\treturn qm.slerpQuaternions(qa, qb, t);\r\n\t\t}\r\n\r\n\t\tstatic slerpFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t) {\r\n\t\t\t// fuzz-free, array-based Quaternion SLERP operation\r\n\t\t\tlet x0 = src0[srcOffset0 + 0],\r\n\t\t\t\t\ty0 = src0[srcOffset0 + 1],\r\n\t\t\t\t\tz0 = src0[srcOffset0 + 2],\r\n\t\t\t\t\tw0 = src0[srcOffset0 + 3];\r\n\t\t\tconst x1 = src1[srcOffset1 + 0],\r\n\t\t\t\t\t\ty1 = src1[srcOffset1 + 1],\r\n\t\t\t\t\t\tz1 = src1[srcOffset1 + 2],\r\n\t\t\t\t\t\tw1 = src1[srcOffset1 + 3];\r\n\r\n\t\t\tif (t === 0) {\r\n\t\t\t\tdst[dstOffset + 0] = x0;\r\n\t\t\t\tdst[dstOffset + 1] = y0;\r\n\t\t\t\tdst[dstOffset + 2] = z0;\r\n\t\t\t\tdst[dstOffset + 3] = w0;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (t === 1) {\r\n\t\t\t\tdst[dstOffset + 0] = x1;\r\n\t\t\t\tdst[dstOffset + 1] = y1;\r\n\t\t\t\tdst[dstOffset + 2] = z1;\r\n\t\t\t\tdst[dstOffset + 3] = w1;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1) {\r\n\t\t\t\tlet s = 1 - t;\r\n\t\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\r\n\t\t\t\t\t\t\tdir = cos >= 0 ? 1 : -1,\r\n\t\t\t\t\t\t\tsqrSin = 1 - cos * cos; // Skip the Slerp for tiny steps to avoid numeric problems:\r\n\r\n\t\t\t\tif (sqrSin > Number.EPSILON) {\r\n\t\t\t\t\tconst sin = Math.sqrt(sqrSin),\r\n\t\t\t\t\t\t\t\tlen = Math.atan2(sin, cos * dir);\r\n\t\t\t\t\ts = Math.sin(s * len) / sin;\r\n\t\t\t\t\tt = Math.sin(t * len) / sin;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst tDir = t * dir;\r\n\t\t\t\tx0 = x0 * s + x1 * tDir;\r\n\t\t\t\ty0 = y0 * s + y1 * tDir;\r\n\t\t\t\tz0 = z0 * s + z1 * tDir;\r\n\t\t\t\tw0 = w0 * s + w1 * tDir; // Normalize in case we just did a lerp:\r\n\r\n\t\t\t\tif (s === 1 - t) {\r\n\t\t\t\t\tconst f = 1 / Math.sqrt(x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0);\r\n\t\t\t\t\tx0 *= f;\r\n\t\t\t\t\ty0 *= f;\r\n\t\t\t\t\tz0 *= f;\r\n\t\t\t\t\tw0 *= f;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdst[dstOffset] = x0;\r\n\t\t\tdst[dstOffset + 1] = y0;\r\n\t\t\tdst[dstOffset + 2] = z0;\r\n\t\t\tdst[dstOffset + 3] = w0;\r\n\t\t}\r\n\r\n\t\tstatic multiplyQuaternionsFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1) {\r\n\t\t\tconst x0 = src0[srcOffset0];\r\n\t\t\tconst y0 = src0[srcOffset0 + 1];\r\n\t\t\tconst z0 = src0[srcOffset0 + 2];\r\n\t\t\tconst w0 = src0[srcOffset0 + 3];\r\n\t\t\tconst x1 = src1[srcOffset1];\r\n\t\t\tconst y1 = src1[srcOffset1 + 1];\r\n\t\t\tconst z1 = src1[srcOffset1 + 2];\r\n\t\t\tconst w1 = src1[srcOffset1 + 3];\r\n\t\t\tdst[dstOffset] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\r\n\t\t\tdst[dstOffset + 1] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\r\n\t\t\tdst[dstOffset + 2] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\r\n\t\t\tdst[dstOffset + 3] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\r\n\t\t\treturn dst;\r\n\t\t}\r\n\r\n\t\tget x() {\r\n\t\t\treturn this._x;\r\n\t\t}\r\n\r\n\t\tset x(value) {\r\n\t\t\tthis._x = value;\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\t\t}\r\n\r\n\t\tget y() {\r\n\t\t\treturn this._y;\r\n\t\t}\r\n\r\n\t\tset y(value) {\r\n\t\t\tthis._y = value;\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\t\t}\r\n\r\n\t\tget z() {\r\n\t\t\treturn this._z;\r\n\t\t}\r\n\r\n\t\tset z(value) {\r\n\t\t\tthis._z = value;\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\t\t}\r\n\r\n\t\tget w() {\r\n\t\t\treturn this._w;\r\n\t\t}\r\n\r\n\t\tset w(value) {\r\n\t\t\tthis._w = value;\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\t\t}\r\n\r\n\t\tset(x, y, z, w) {\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\t\t\tthis._w = w;\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor(this._x, this._y, this._z, this._w);\r\n\t\t}\r\n\r\n\t\tcopy(quaternion) {\r\n\t\t\tthis._x = quaternion.x;\r\n\t\t\tthis._y = quaternion.y;\r\n\t\t\tthis._z = quaternion.z;\r\n\t\t\tthis._w = quaternion.w;\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromEuler(euler, update) {\r\n\t\t\tif (!(euler && euler.isEuler)) {\r\n\t\t\t\tthrow new Error('THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.');\r\n\t\t\t}\r\n\r\n\t\t\tconst x = euler._x,\r\n\t\t\t\t\t\ty = euler._y,\r\n\t\t\t\t\t\tz = euler._z,\r\n\t\t\t\t\t\torder = euler._order; // http://www.mathworks.com/matlabcentral/fileexchange/\r\n\t\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\r\n\t\t\t//\tcontent/SpinCalc.m\r\n\r\n\t\t\tconst cos = Math.cos;\r\n\t\t\tconst sin = Math.sin;\r\n\t\t\tconst c1 = cos(x / 2);\r\n\t\t\tconst c2 = cos(y / 2);\r\n\t\t\tconst c3 = cos(z / 2);\r\n\t\t\tconst s1 = sin(x / 2);\r\n\t\t\tconst s2 = sin(y / 2);\r\n\t\t\tconst s3 = sin(z / 2);\r\n\r\n\t\t\tswitch (order) {\r\n\t\t\t\tcase 'XYZ':\r\n\t\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'YXZ':\r\n\t\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'ZXY':\r\n\t\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'ZYX':\r\n\t\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'YZX':\r\n\t\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'XZY':\r\n\t\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.warn('THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order);\r\n\t\t\t}\r\n\r\n\t\t\tif (update !== false) this._onChangeCallback();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromAxisAngle(axis, angle) {\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\r\n\t\t\t// assumes axis is normalized\r\n\t\t\tconst halfAngle = angle / 2,\r\n\t\t\t\t\t\ts = Math.sin(halfAngle);\r\n\t\t\tthis._x = axis.x * s;\r\n\t\t\tthis._y = axis.y * s;\r\n\t\t\tthis._z = axis.z * s;\r\n\t\t\tthis._w = Math.cos(halfAngle);\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromRotationMatrix(m) {\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\t\tconst te = m.elements,\r\n\t\t\t\t\t\tm11 = te[0],\r\n\t\t\t\t\t\tm12 = te[4],\r\n\t\t\t\t\t\tm13 = te[8],\r\n\t\t\t\t\t\tm21 = te[1],\r\n\t\t\t\t\t\tm22 = te[5],\r\n\t\t\t\t\t\tm23 = te[9],\r\n\t\t\t\t\t\tm31 = te[2],\r\n\t\t\t\t\t\tm32 = te[6],\r\n\t\t\t\t\t\tm33 = te[10],\r\n\t\t\t\t\t\ttrace = m11 + m22 + m33;\r\n\r\n\t\t\tif (trace > 0) {\r\n\t\t\t\tconst s = 0.5 / Math.sqrt(trace + 1.0);\r\n\t\t\t\tthis._w = 0.25 / s;\r\n\t\t\t\tthis._x = (m32 - m23) * s;\r\n\t\t\t\tthis._y = (m13 - m31) * s;\r\n\t\t\t\tthis._z = (m21 - m12) * s;\r\n\t\t\t} else if (m11 > m22 && m11 > m33) {\r\n\t\t\t\tconst s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\r\n\t\t\t\tthis._w = (m32 - m23) / s;\r\n\t\t\t\tthis._x = 0.25 * s;\r\n\t\t\t\tthis._y = (m12 + m21) / s;\r\n\t\t\t\tthis._z = (m13 + m31) / s;\r\n\t\t\t} else if (m22 > m33) {\r\n\t\t\t\tconst s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\r\n\t\t\t\tthis._w = (m13 - m31) / s;\r\n\t\t\t\tthis._x = (m12 + m21) / s;\r\n\t\t\t\tthis._y = 0.25 * s;\r\n\t\t\t\tthis._z = (m23 + m32) / s;\r\n\t\t\t} else {\r\n\t\t\t\tconst s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\r\n\t\t\t\tthis._w = (m21 - m12) / s;\r\n\t\t\t\tthis._x = (m13 + m31) / s;\r\n\t\t\t\tthis._y = (m23 + m32) / s;\r\n\t\t\t\tthis._z = 0.25 * s;\r\n\t\t\t}\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromUnitVectors(vFrom, vTo) {\r\n\t\t\t// assumes direction vectors vFrom and vTo are normalized\r\n\t\t\tlet r = vFrom.dot(vTo) + 1;\r\n\r\n\t\t\tif (r < Number.EPSILON) {\r\n\t\t\t\t// vFrom and vTo point in opposite directions\r\n\t\t\t\tr = 0;\r\n\r\n\t\t\t\tif (Math.abs(vFrom.x) > Math.abs(vFrom.z)) {\r\n\t\t\t\t\tthis._x = -vFrom.y;\r\n\t\t\t\t\tthis._y = vFrom.x;\r\n\t\t\t\t\tthis._z = 0;\r\n\t\t\t\t\tthis._w = r;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._x = 0;\r\n\t\t\t\t\tthis._y = -vFrom.z;\r\n\t\t\t\t\tthis._z = vFrom.y;\r\n\t\t\t\t\tthis._w = r;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\r\n\t\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\r\n\t\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\r\n\t\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\r\n\t\t\t\tthis._w = r;\r\n\t\t\t}\r\n\r\n\t\t\treturn this.normalize();\r\n\t\t}\r\n\r\n\t\tangleTo(q) {\r\n\t\t\treturn 2 * Math.acos(Math.abs(clamp(this.dot(q), -1, 1)));\r\n\t\t}\r\n\r\n\t\trotateTowards(q, step) {\r\n\t\t\tconst angle = this.angleTo(q);\r\n\t\t\tif (angle === 0) return this;\r\n\t\t\tconst t = Math.min(1, step / angle);\r\n\t\t\tthis.slerp(q, t);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tidentity() {\r\n\t\t\treturn this.set(0, 0, 0, 1);\r\n\t\t}\r\n\r\n\t\tinvert() {\r\n\t\t\t// quaternion is assumed to have unit length\r\n\t\t\treturn this.conjugate();\r\n\t\t}\r\n\r\n\t\tconjugate() {\r\n\t\t\tthis._x *= -1;\r\n\t\t\tthis._y *= -1;\r\n\t\t\tthis._z *= -1;\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tdot(v) {\r\n\t\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\r\n\t\t}\r\n\r\n\t\tlengthSq() {\r\n\t\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\r\n\t\t}\r\n\r\n\t\tlength() {\r\n\t\t\treturn Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);\r\n\t\t}\r\n\r\n\t\tnormalize() {\r\n\t\t\tlet l = this.length();\r\n\r\n\t\t\tif (l === 0) {\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._y = 0;\r\n\t\t\t\tthis._z = 0;\r\n\t\t\t\tthis._w = 1;\r\n\t\t\t} else {\r\n\t\t\t\tl = 1 / l;\r\n\t\t\t\tthis._x = this._x * l;\r\n\t\t\t\tthis._y = this._y * l;\r\n\t\t\t\tthis._z = this._z * l;\r\n\t\t\t\tthis._w = this._w * l;\r\n\t\t\t}\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmultiply(q, p) {\r\n\t\t\tif (p !== undefined) {\r\n\t\t\t\tconsole.warn('THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.');\r\n\t\t\t\treturn this.multiplyQuaternions(q, p);\r\n\t\t\t}\r\n\r\n\t\t\treturn this.multiplyQuaternions(this, q);\r\n\t\t}\r\n\r\n\t\tpremultiply(q) {\r\n\t\t\treturn this.multiplyQuaternions(q, this);\r\n\t\t}\r\n\r\n\t\tmultiplyQuaternions(a, b) {\r\n\t\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\r\n\t\t\tconst qax = a._x,\r\n\t\t\t\t\t\tqay = a._y,\r\n\t\t\t\t\t\tqaz = a._z,\r\n\t\t\t\t\t\tqaw = a._w;\r\n\t\t\tconst qbx = b._x,\r\n\t\t\t\t\t\tqby = b._y,\r\n\t\t\t\t\t\tqbz = b._z,\r\n\t\t\t\t\t\tqbw = b._w;\r\n\t\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\r\n\t\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\r\n\t\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\r\n\t\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tslerp(qb, t) {\r\n\t\t\tif (t === 0) return this;\r\n\t\t\tif (t === 1) return this.copy(qb);\r\n\t\t\tconst x = this._x,\r\n\t\t\t\t\t\ty = this._y,\r\n\t\t\t\t\t\tz = this._z,\r\n\t\t\t\t\t\tw = this._w; // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\r\n\t\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\r\n\r\n\t\t\tif (cosHalfTheta < 0) {\r\n\t\t\t\tthis._w = -qb._w;\r\n\t\t\t\tthis._x = -qb._x;\r\n\t\t\t\tthis._y = -qb._y;\r\n\t\t\t\tthis._z = -qb._z;\r\n\t\t\t\tcosHalfTheta = -cosHalfTheta;\r\n\t\t\t} else {\r\n\t\t\t\tthis.copy(qb);\r\n\t\t\t}\r\n\r\n\t\t\tif (cosHalfTheta >= 1.0) {\r\n\t\t\t\tthis._w = w;\r\n\t\t\t\tthis._x = x;\r\n\t\t\t\tthis._y = y;\r\n\t\t\t\tthis._z = z;\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\r\n\t\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\r\n\r\n\t\t\tif (sqrSinHalfTheta <= Number.EPSILON) {\r\n\t\t\t\tconst s = 1 - t;\r\n\t\t\t\tthis._w = s * w + t * this._w;\r\n\t\t\t\tthis._x = s * x + t * this._x;\r\n\t\t\t\tthis._y = s * y + t * this._y;\r\n\t\t\t\tthis._z = s * z + t * this._z;\r\n\t\t\t\tthis.normalize();\r\n\r\n\t\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\r\n\t\t\tconst sinHalfTheta = Math.sqrt(sqrSinHalfTheta);\r\n\t\t\tconst halfTheta = Math.atan2(sinHalfTheta, cosHalfTheta);\r\n\t\t\tconst ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta,\r\n\t\t\t\t\t\tratioB = Math.sin(t * halfTheta) / sinHalfTheta;\r\n\t\t\tthis._w = w * ratioA + this._w * ratioB;\r\n\t\t\tthis._x = x * ratioA + this._x * ratioB;\r\n\t\t\tthis._y = y * ratioA + this._y * ratioB;\r\n\t\t\tthis._z = z * ratioA + this._z * ratioB;\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tslerpQuaternions(qa, qb, t) {\r\n\t\t\tthis.copy(qa).slerp(qb, t);\r\n\t\t}\r\n\r\n\t\tequals(quaternion) {\r\n\t\t\treturn quaternion._x === this._x && quaternion._y === this._y && quaternion._z === this._z && quaternion._w === this._w;\r\n\t\t}\r\n\r\n\t\tfromArray(array, offset = 0) {\r\n\t\t\tthis._x = array[offset];\r\n\t\t\tthis._y = array[offset + 1];\r\n\t\t\tthis._z = array[offset + 2];\r\n\t\t\tthis._w = array[offset + 3];\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoArray(array = [], offset = 0) {\r\n\t\t\tarray[offset] = this._x;\r\n\t\t\tarray[offset + 1] = this._y;\r\n\t\t\tarray[offset + 2] = this._z;\r\n\t\t\tarray[offset + 3] = this._w;\r\n\t\t\treturn array;\r\n\t\t}\r\n\r\n\t\tfromBufferAttribute(attribute, index) {\r\n\t\t\tthis._x = attribute.getX(index);\r\n\t\t\tthis._y = attribute.getY(index);\r\n\t\t\tthis._z = attribute.getZ(index);\r\n\t\t\tthis._w = attribute.getW(index);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t_onChange(callback) {\r\n\t\t\tthis._onChangeCallback = callback;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t_onChangeCallback() {}\r\n\r\n\t}\r\n\r\n\tQuaternion.prototype.isQuaternion = true;\r\n\r\n\tclass Vector3 {\r\n\t\tconstructor(x = 0, y = 0, z = 0) {\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.z = z;\r\n\t\t}\r\n\r\n\t\tset(x, y, z) {\r\n\t\t\tif (z === undefined) z = this.z; // sprite.scale.set(x,y)\r\n\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.z = z;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetScalar(scalar) {\r\n\t\t\tthis.x = scalar;\r\n\t\t\tthis.y = scalar;\r\n\t\t\tthis.z = scalar;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetX(x) {\r\n\t\t\tthis.x = x;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetY(y) {\r\n\t\t\tthis.y = y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetZ(z) {\r\n\t\t\tthis.z = z;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetComponent(index, value) {\r\n\t\t\tswitch (index) {\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\tthis.x = value;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tthis.y = value;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tthis.z = value;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetComponent(index) {\r\n\t\t\tswitch (index) {\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\treturn this.x;\r\n\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\treturn this.y;\r\n\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\treturn this.z;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor(this.x, this.y, this.z);\r\n\t\t}\r\n\r\n\t\tcopy(v) {\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\t\t\tthis.z = v.z;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tadd(v, w) {\r\n\t\t\tif (w !== undefined) {\r\n\t\t\t\tconsole.warn('THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\r\n\t\t\t\treturn this.addVectors(v, w);\r\n\t\t\t}\r\n\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\t\t\tthis.z += v.z;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\taddScalar(s) {\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\t\t\tthis.z += s;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\taddVectors(a, b) {\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\t\t\tthis.z = a.z + b.z;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\taddScaledVector(v, s) {\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\t\t\tthis.z += v.z * s;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsub(v, w) {\r\n\t\t\tif (w !== undefined) {\r\n\t\t\t\tconsole.warn('THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\r\n\t\t\t\treturn this.subVectors(v, w);\r\n\t\t\t}\r\n\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\t\t\tthis.z -= v.z;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsubScalar(s) {\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\t\t\tthis.z -= s;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsubVectors(a, b) {\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\t\t\tthis.z = a.z - b.z;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmultiply(v, w) {\r\n\t\t\tif (w !== undefined) {\r\n\t\t\t\tconsole.warn('THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.');\r\n\t\t\t\treturn this.multiplyVectors(v, w);\r\n\t\t\t}\r\n\r\n\t\t\tthis.x *= v.x;\r\n\t\t\tthis.y *= v.y;\r\n\t\t\tthis.z *= v.z;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmultiplyScalar(scalar) {\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\t\t\tthis.z *= scalar;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmultiplyVectors(a, b) {\r\n\t\t\tthis.x = a.x * b.x;\r\n\t\t\tthis.y = a.y * b.y;\r\n\t\t\tthis.z = a.z * b.z;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tapplyEuler(euler) {\r\n\t\t\tif (!(euler && euler.isEuler)) {\r\n\t\t\t\tconsole.error('THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.');\r\n\t\t\t}\r\n\r\n\t\t\treturn this.applyQuaternion(_quaternion$4.setFromEuler(euler));\r\n\t\t}\r\n\r\n\t\tapplyAxisAngle(axis, angle) {\r\n\t\t\treturn this.applyQuaternion(_quaternion$4.setFromAxisAngle(axis, angle));\r\n\t\t}\r\n\r\n\t\tapplyMatrix3(m) {\r\n\t\t\tconst x = this.x,\r\n\t\t\t\t\t\ty = this.y,\r\n\t\t\t\t\t\tz = this.z;\r\n\t\t\tconst e = m.elements;\r\n\t\t\tthis.x = e[0] * x + e[3] * y + e[6] * z;\r\n\t\t\tthis.y = e[1] * x + e[4] * y + e[7] * z;\r\n\t\t\tthis.z = e[2] * x + e[5] * y + e[8] * z;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tapplyNormalMatrix(m) {\r\n\t\t\treturn this.applyMatrix3(m).normalize();\r\n\t\t}\r\n\r\n\t\tapplyMatrix4(m) {\r\n\t\t\tconst x = this.x,\r\n\t\t\t\t\t\ty = this.y,\r\n\t\t\t\t\t\tz = this.z;\r\n\t\t\tconst e = m.elements;\r\n\t\t\tconst w = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]);\r\n\t\t\tthis.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * w;\r\n\t\t\tthis.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * w;\r\n\t\t\tthis.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * w;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tapplyQuaternion(q) {\r\n\t\t\tconst x = this.x,\r\n\t\t\t\t\t\ty = this.y,\r\n\t\t\t\t\t\tz = this.z;\r\n\t\t\tconst qx = q.x,\r\n\t\t\t\t\t\tqy = q.y,\r\n\t\t\t\t\t\tqz = q.z,\r\n\t\t\t\t\t\tqw = q.w; // calculate quat * vector\r\n\r\n\t\t\tconst ix = qw * x + qy * z - qz * y;\r\n\t\t\tconst iy = qw * y + qz * x - qx * z;\r\n\t\t\tconst iz = qw * z + qx * y - qy * x;\r\n\t\t\tconst iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\r\n\r\n\t\t\tthis.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n\t\t\tthis.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n\t\t\tthis.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tproject(camera) {\r\n\t\t\treturn this.applyMatrix4(camera.matrixWorldInverse).applyMatrix4(camera.projectionMatrix);\r\n\t\t}\r\n\r\n\t\tunproject(camera) {\r\n\t\t\treturn this.applyMatrix4(camera.projectionMatrixInverse).applyMatrix4(camera.matrixWorld);\r\n\t\t}\r\n\r\n\t\ttransformDirection(m) {\r\n\t\t\t// input: THREE.Matrix4 affine matrix\r\n\t\t\t// vector interpreted as a direction\r\n\t\t\tconst x = this.x,\r\n\t\t\t\t\t\ty = this.y,\r\n\t\t\t\t\t\tz = this.z;\r\n\t\t\tconst e = m.elements;\r\n\t\t\tthis.x = e[0] * x + e[4] * y + e[8] * z;\r\n\t\t\tthis.y = e[1] * x + e[5] * y + e[9] * z;\r\n\t\t\tthis.z = e[2] * x + e[6] * y + e[10] * z;\r\n\t\t\treturn this.normalize();\r\n\t\t}\r\n\r\n\t\tdivide(v) {\r\n\t\t\tthis.x /= v.x;\r\n\t\t\tthis.y /= v.y;\r\n\t\t\tthis.z /= v.z;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tdivideScalar(scalar) {\r\n\t\t\treturn this.multiplyScalar(1 / scalar);\r\n\t\t}\r\n\r\n\t\tmin(v) {\r\n\t\t\tthis.x = Math.min(this.x, v.x);\r\n\t\t\tthis.y = Math.min(this.y, v.y);\r\n\t\t\tthis.z = Math.min(this.z, v.z);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmax(v) {\r\n\t\t\tthis.x = Math.max(this.x, v.x);\r\n\t\t\tthis.y = Math.max(this.y, v.y);\r\n\t\t\tthis.z = Math.max(this.z, v.z);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclamp(min, max) {\r\n\t\t\t// assumes min < max, componentwise\r\n\t\t\tthis.x = Math.max(min.x, Math.min(max.x, this.x));\r\n\t\t\tthis.y = Math.max(min.y, Math.min(max.y, this.y));\r\n\t\t\tthis.z = Math.max(min.z, Math.min(max.z, this.z));\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclampScalar(minVal, maxVal) {\r\n\t\t\tthis.x = Math.max(minVal, Math.min(maxVal, this.x));\r\n\t\t\tthis.y = Math.max(minVal, Math.min(maxVal, this.y));\r\n\t\t\tthis.z = Math.max(minVal, Math.min(maxVal, this.z));\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclampLength(min, max) {\r\n\t\t\tconst length = this.length();\r\n\t\t\treturn this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\r\n\t\t}\r\n\r\n\t\tfloor() {\r\n\t\t\tthis.x = Math.floor(this.x);\r\n\t\t\tthis.y = Math.floor(this.y);\r\n\t\t\tthis.z = Math.floor(this.z);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tceil() {\r\n\t\t\tthis.x = Math.ceil(this.x);\r\n\t\t\tthis.y = Math.ceil(this.y);\r\n\t\t\tthis.z = Math.ceil(this.z);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tround() {\r\n\t\t\tthis.x = Math.round(this.x);\r\n\t\t\tthis.y = Math.round(this.y);\r\n\t\t\tthis.z = Math.round(this.z);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\troundToZero() {\r\n\t\t\tthis.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\r\n\t\t\tthis.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\r\n\t\t\tthis.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tnegate() {\r\n\t\t\tthis.x = -this.x;\r\n\t\t\tthis.y = -this.y;\r\n\t\t\tthis.z = -this.z;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tdot(v) {\r\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\r\n\t\t} // TODO lengthSquared?\r\n\r\n\r\n\t\tlengthSq() {\r\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\r\n\t\t}\r\n\r\n\t\tlength() {\r\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\r\n\t\t}\r\n\r\n\t\tmanhattanLength() {\r\n\t\t\treturn Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\r\n\t\t}\r\n\r\n\t\tnormalize() {\r\n\t\t\treturn this.divideScalar(this.length() || 1);\r\n\t\t}\r\n\r\n\t\tsetLength(length) {\r\n\t\t\treturn this.normalize().multiplyScalar(length);\r\n\t\t}\r\n\r\n\t\tlerp(v, alpha) {\r\n\t\t\tthis.x += (v.x - this.x) * alpha;\r\n\t\t\tthis.y += (v.y - this.y) * alpha;\r\n\t\t\tthis.z += (v.z - this.z) * alpha;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tlerpVectors(v1, v2, alpha) {\r\n\t\t\tthis.x = v1.x + (v2.x - v1.x) * alpha;\r\n\t\t\tthis.y = v1.y + (v2.y - v1.y) * alpha;\r\n\t\t\tthis.z = v1.z + (v2.z - v1.z) * alpha;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcross(v, w) {\r\n\t\t\tif (w !== undefined) {\r\n\t\t\t\tconsole.warn('THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.');\r\n\t\t\t\treturn this.crossVectors(v, w);\r\n\t\t\t}\r\n\r\n\t\t\treturn this.crossVectors(this, v);\r\n\t\t}\r\n\r\n\t\tcrossVectors(a, b) {\r\n\t\t\tconst ax = a.x,\r\n\t\t\t\t\t\tay = a.y,\r\n\t\t\t\t\t\taz = a.z;\r\n\t\t\tconst bx = b.x,\r\n\t\t\t\t\t\tby = b.y,\r\n\t\t\t\t\t\tbz = b.z;\r\n\t\t\tthis.x = ay * bz - az * by;\r\n\t\t\tthis.y = az * bx - ax * bz;\r\n\t\t\tthis.z = ax * by - ay * bx;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tprojectOnVector(v) {\r\n\t\t\tconst denominator = v.lengthSq();\r\n\t\t\tif (denominator === 0) return this.set(0, 0, 0);\r\n\t\t\tconst scalar = v.dot(this) / denominator;\r\n\t\t\treturn this.copy(v).multiplyScalar(scalar);\r\n\t\t}\r\n\r\n\t\tprojectOnPlane(planeNormal) {\r\n\t\t\t_vector$c.copy(this).projectOnVector(planeNormal);\r\n\r\n\t\t\treturn this.sub(_vector$c);\r\n\t\t}\r\n\r\n\t\treflect(normal) {\r\n\t\t\t// reflect incident vector off plane orthogonal to normal\r\n\t\t\t// normal is assumed to have unit length\r\n\t\t\treturn this.sub(_vector$c.copy(normal).multiplyScalar(2 * this.dot(normal)));\r\n\t\t}\r\n\r\n\t\tangleTo(v) {\r\n\t\t\tconst denominator = Math.sqrt(this.lengthSq() * v.lengthSq());\r\n\t\t\tif (denominator === 0) return Math.PI / 2;\r\n\t\t\tconst theta = this.dot(v) / denominator; // clamp, to handle numerical problems\r\n\r\n\t\t\treturn Math.acos(clamp(theta, -1, 1));\r\n\t\t}\r\n\r\n\t\tdistanceTo(v) {\r\n\t\t\treturn Math.sqrt(this.distanceToSquared(v));\r\n\t\t}\r\n\r\n\t\tdistanceToSquared(v) {\r\n\t\t\tconst dx = this.x - v.x,\r\n\t\t\t\t\t\tdy = this.y - v.y,\r\n\t\t\t\t\t\tdz = this.z - v.z;\r\n\t\t\treturn dx * dx + dy * dy + dz * dz;\r\n\t\t}\r\n\r\n\t\tmanhattanDistanceTo(v) {\r\n\t\t\treturn Math.abs(this.x - v.x) + Math.abs(this.y - v.y) + Math.abs(this.z - v.z);\r\n\t\t}\r\n\r\n\t\tsetFromSpherical(s) {\r\n\t\t\treturn this.setFromSphericalCoords(s.radius, s.phi, s.theta);\r\n\t\t}\r\n\r\n\t\tsetFromSphericalCoords(radius, phi, theta) {\r\n\t\t\tconst sinPhiRadius = Math.sin(phi) * radius;\r\n\t\t\tthis.x = sinPhiRadius * Math.sin(theta);\r\n\t\t\tthis.y = Math.cos(phi) * radius;\r\n\t\t\tthis.z = sinPhiRadius * Math.cos(theta);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromCylindrical(c) {\r\n\t\t\treturn this.setFromCylindricalCoords(c.radius, c.theta, c.y);\r\n\t\t}\r\n\r\n\t\tsetFromCylindricalCoords(radius, theta, y) {\r\n\t\t\tthis.x = radius * Math.sin(theta);\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.z = radius * Math.cos(theta);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromMatrixPosition(m) {\r\n\t\t\tconst e = m.elements;\r\n\t\t\tthis.x = e[12];\r\n\t\t\tthis.y = e[13];\r\n\t\t\tthis.z = e[14];\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromMatrixScale(m) {\r\n\t\t\tconst sx = this.setFromMatrixColumn(m, 0).length();\r\n\t\t\tconst sy = this.setFromMatrixColumn(m, 1).length();\r\n\t\t\tconst sz = this.setFromMatrixColumn(m, 2).length();\r\n\t\t\tthis.x = sx;\r\n\t\t\tthis.y = sy;\r\n\t\t\tthis.z = sz;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromMatrixColumn(m, index) {\r\n\t\t\treturn this.fromArray(m.elements, index * 4);\r\n\t\t}\r\n\r\n\t\tsetFromMatrix3Column(m, index) {\r\n\t\t\treturn this.fromArray(m.elements, index * 3);\r\n\t\t}\r\n\r\n\t\tequals(v) {\r\n\t\t\treturn v.x === this.x && v.y === this.y && v.z === this.z;\r\n\t\t}\r\n\r\n\t\tfromArray(array, offset = 0) {\r\n\t\t\tthis.x = array[offset];\r\n\t\t\tthis.y = array[offset + 1];\r\n\t\t\tthis.z = array[offset + 2];\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoArray(array = [], offset = 0) {\r\n\t\t\tarray[offset] = this.x;\r\n\t\t\tarray[offset + 1] = this.y;\r\n\t\t\tarray[offset + 2] = this.z;\r\n\t\t\treturn array;\r\n\t\t}\r\n\r\n\t\tfromBufferAttribute(attribute, index, offset) {\r\n\t\t\tif (offset !== undefined) {\r\n\t\t\t\tconsole.warn('THREE.Vector3: offset has been removed from .fromBufferAttribute().');\r\n\t\t\t}\r\n\r\n\t\t\tthis.x = attribute.getX(index);\r\n\t\t\tthis.y = attribute.getY(index);\r\n\t\t\tthis.z = attribute.getZ(index);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\trandom() {\r\n\t\t\tthis.x = Math.random();\r\n\t\t\tthis.y = Math.random();\r\n\t\t\tthis.z = Math.random();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tVector3.prototype.isVector3 = true;\r\n\r\n\tconst _vector$c = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _quaternion$4 = /*@__PURE__*/new Quaternion();\r\n\r\n\tclass Box3 {\r\n\t\tconstructor(min = new Vector3(+Infinity, +Infinity, +Infinity), max = new Vector3(-Infinity, -Infinity, -Infinity)) {\r\n\t\t\tthis.min = min;\r\n\t\t\tthis.max = max;\r\n\t\t}\r\n\r\n\t\tset(min, max) {\r\n\t\t\tthis.min.copy(min);\r\n\t\t\tthis.max.copy(max);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromArray(array) {\r\n\t\t\tlet minX = +Infinity;\r\n\t\t\tlet minY = +Infinity;\r\n\t\t\tlet minZ = +Infinity;\r\n\t\t\tlet maxX = -Infinity;\r\n\t\t\tlet maxY = -Infinity;\r\n\t\t\tlet maxZ = -Infinity;\r\n\r\n\t\t\tfor (let i = 0, l = array.length; i < l; i += 3) {\r\n\t\t\t\tconst x = array[i];\r\n\t\t\t\tconst y = array[i + 1];\r\n\t\t\t\tconst z = array[i + 2];\r\n\t\t\t\tif (x < minX) minX = x;\r\n\t\t\t\tif (y < minY) minY = y;\r\n\t\t\t\tif (z < minZ) minZ = z;\r\n\t\t\t\tif (x > maxX) maxX = x;\r\n\t\t\t\tif (y > maxY) maxY = y;\r\n\t\t\t\tif (z > maxZ) maxZ = z;\r\n\t\t\t}\r\n\r\n\t\t\tthis.min.set(minX, minY, minZ);\r\n\t\t\tthis.max.set(maxX, maxY, maxZ);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromBufferAttribute(attribute) {\r\n\t\t\tlet minX = +Infinity;\r\n\t\t\tlet minY = +Infinity;\r\n\t\t\tlet minZ = +Infinity;\r\n\t\t\tlet maxX = -Infinity;\r\n\t\t\tlet maxY = -Infinity;\r\n\t\t\tlet maxZ = -Infinity;\r\n\r\n\t\t\tfor (let i = 0, l = attribute.count; i < l; i++) {\r\n\t\t\t\tconst x = attribute.getX(i);\r\n\t\t\t\tconst y = attribute.getY(i);\r\n\t\t\t\tconst z = attribute.getZ(i);\r\n\t\t\t\tif (x < minX) minX = x;\r\n\t\t\t\tif (y < minY) minY = y;\r\n\t\t\t\tif (z < minZ) minZ = z;\r\n\t\t\t\tif (x > maxX) maxX = x;\r\n\t\t\t\tif (y > maxY) maxY = y;\r\n\t\t\t\tif (z > maxZ) maxZ = z;\r\n\t\t\t}\r\n\r\n\t\t\tthis.min.set(minX, minY, minZ);\r\n\t\t\tthis.max.set(maxX, maxY, maxZ);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromPoints(points) {\r\n\t\t\tthis.makeEmpty();\r\n\r\n\t\t\tfor (let i = 0, il = points.length; i < il; i++) {\r\n\t\t\t\tthis.expandByPoint(points[i]);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromCenterAndSize(center, size) {\r\n\t\t\tconst halfSize = _vector$b.copy(size).multiplyScalar(0.5);\r\n\r\n\t\t\tthis.min.copy(center).sub(halfSize);\r\n\t\t\tthis.max.copy(center).add(halfSize);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromObject(object) {\r\n\t\t\tthis.makeEmpty();\r\n\t\t\treturn this.expandByObject(object);\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor().copy(this);\r\n\t\t}\r\n\r\n\t\tcopy(box) {\r\n\t\t\tthis.min.copy(box.min);\r\n\t\t\tthis.max.copy(box.max);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmakeEmpty() {\r\n\t\t\tthis.min.x = this.min.y = this.min.z = +Infinity;\r\n\t\t\tthis.max.x = this.max.y = this.max.z = -Infinity;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tisEmpty() {\r\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\t\t\treturn this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;\r\n\t\t}\r\n\r\n\t\tgetCenter(target) {\r\n\t\t\treturn this.isEmpty() ? target.set(0, 0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);\r\n\t\t}\r\n\r\n\t\tgetSize(target) {\r\n\t\t\treturn this.isEmpty() ? target.set(0, 0, 0) : target.subVectors(this.max, this.min);\r\n\t\t}\r\n\r\n\t\texpandByPoint(point) {\r\n\t\t\tthis.min.min(point);\r\n\t\t\tthis.max.max(point);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\texpandByVector(vector) {\r\n\t\t\tthis.min.sub(vector);\r\n\t\t\tthis.max.add(vector);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\texpandByScalar(scalar) {\r\n\t\t\tthis.min.addScalar(-scalar);\r\n\t\t\tthis.max.addScalar(scalar);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\texpandByObject(object) {\r\n\t\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\r\n\t\t\t// accounting for both the object's, and children's, world transforms\r\n\t\t\tobject.updateWorldMatrix(false, false);\r\n\t\t\tconst geometry = object.geometry;\r\n\r\n\t\t\tif (geometry !== undefined) {\r\n\t\t\t\tif (geometry.boundingBox === null) {\r\n\t\t\t\t\tgeometry.computeBoundingBox();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_box$3.copy(geometry.boundingBox);\r\n\r\n\t\t\t\t_box$3.applyMatrix4(object.matrixWorld);\r\n\r\n\t\t\t\tthis.union(_box$3);\r\n\t\t\t}\r\n\r\n\t\t\tconst children = object.children;\r\n\r\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\r\n\t\t\t\tthis.expandByObject(children[i]);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcontainsPoint(point) {\r\n\t\t\treturn point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y || point.z < this.min.z || point.z > this.max.z ? false : true;\r\n\t\t}\r\n\r\n\t\tcontainsBox(box) {\r\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y && this.min.z <= box.min.z && box.max.z <= this.max.z;\r\n\t\t}\r\n\r\n\t\tgetParameter(point, target) {\r\n\t\t\t// This can potentially have a divide by zero if the box\r\n\t\t\t// has a size dimension of 0.\r\n\t\t\treturn target.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y), (point.z - this.min.z) / (this.max.z - this.min.z));\r\n\t\t}\r\n\r\n\t\tintersectsBox(box) {\r\n\t\t\t// using 6 splitting planes to rule out intersections.\r\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y || box.max.z < this.min.z || box.min.z > this.max.z ? false : true;\r\n\t\t}\r\n\r\n\t\tintersectsSphere(sphere) {\r\n\t\t\t// Find the point on the AABB closest to the sphere center.\r\n\t\t\tthis.clampPoint(sphere.center, _vector$b); // If that point is inside the sphere, the AABB and sphere intersect.\r\n\r\n\t\t\treturn _vector$b.distanceToSquared(sphere.center) <= sphere.radius * sphere.radius;\r\n\t\t}\r\n\r\n\t\tintersectsPlane(plane) {\r\n\t\t\t// We compute the minimum and maximum dot product values. If those values\r\n\t\t\t// are on the same side (back or front) of the plane, then there is no intersection.\r\n\t\t\tlet min, max;\r\n\r\n\t\t\tif (plane.normal.x > 0) {\r\n\t\t\t\tmin = plane.normal.x * this.min.x;\r\n\t\t\t\tmax = plane.normal.x * this.max.x;\r\n\t\t\t} else {\r\n\t\t\t\tmin = plane.normal.x * this.max.x;\r\n\t\t\t\tmax = plane.normal.x * this.min.x;\r\n\t\t\t}\r\n\r\n\t\t\tif (plane.normal.y > 0) {\r\n\t\t\t\tmin += plane.normal.y * this.min.y;\r\n\t\t\t\tmax += plane.normal.y * this.max.y;\r\n\t\t\t} else {\r\n\t\t\t\tmin += plane.normal.y * this.max.y;\r\n\t\t\t\tmax += plane.normal.y * this.min.y;\r\n\t\t\t}\r\n\r\n\t\t\tif (plane.normal.z > 0) {\r\n\t\t\t\tmin += plane.normal.z * this.min.z;\r\n\t\t\t\tmax += plane.normal.z * this.max.z;\r\n\t\t\t} else {\r\n\t\t\t\tmin += plane.normal.z * this.max.z;\r\n\t\t\t\tmax += plane.normal.z * this.min.z;\r\n\t\t\t}\r\n\r\n\t\t\treturn min <= -plane.constant && max >= -plane.constant;\r\n\t\t}\r\n\r\n\t\tintersectsTriangle(triangle) {\r\n\t\t\tif (this.isEmpty()) {\r\n\t\t\t\treturn false;\r\n\t\t\t} // compute box center and extents\r\n\r\n\r\n\t\t\tthis.getCenter(_center);\r\n\r\n\t\t\t_extents.subVectors(this.max, _center); // translate triangle to aabb origin\r\n\r\n\r\n\t\t\t_v0$2.subVectors(triangle.a, _center);\r\n\r\n\t\t\t_v1$7.subVectors(triangle.b, _center);\r\n\r\n\t\t\t_v2$3.subVectors(triangle.c, _center); // compute edge vectors for triangle\r\n\r\n\r\n\t\t\t_f0.subVectors(_v1$7, _v0$2);\r\n\r\n\t\t\t_f1.subVectors(_v2$3, _v1$7);\r\n\r\n\t\t\t_f2.subVectors(_v0$2, _v2$3); // test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\r\n\t\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\r\n\t\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\r\n\r\n\r\n\t\t\tlet axes = [0, -_f0.z, _f0.y, 0, -_f1.z, _f1.y, 0, -_f2.z, _f2.y, _f0.z, 0, -_f0.x, _f1.z, 0, -_f1.x, _f2.z, 0, -_f2.x, -_f0.y, _f0.x, 0, -_f1.y, _f1.x, 0, -_f2.y, _f2.x, 0];\r\n\r\n\t\t\tif (!satForAxes(axes, _v0$2, _v1$7, _v2$3, _extents)) {\r\n\t\t\t\treturn false;\r\n\t\t\t} // test 3 face normals from the aabb\r\n\r\n\r\n\t\t\taxes = [1, 0, 0, 0, 1, 0, 0, 0, 1];\r\n\r\n\t\t\tif (!satForAxes(axes, _v0$2, _v1$7, _v2$3, _extents)) {\r\n\t\t\t\treturn false;\r\n\t\t\t} // finally testing the face normal of the triangle\r\n\t\t\t// use already existing triangle edge vectors here\r\n\r\n\r\n\t\t\t_triangleNormal.crossVectors(_f0, _f1);\r\n\r\n\t\t\taxes = [_triangleNormal.x, _triangleNormal.y, _triangleNormal.z];\r\n\t\t\treturn satForAxes(axes, _v0$2, _v1$7, _v2$3, _extents);\r\n\t\t}\r\n\r\n\t\tclampPoint(point, target) {\r\n\t\t\treturn target.copy(point).clamp(this.min, this.max);\r\n\t\t}\r\n\r\n\t\tdistanceToPoint(point) {\r\n\t\t\tconst clampedPoint = _vector$b.copy(point).clamp(this.min, this.max);\r\n\r\n\t\t\treturn clampedPoint.sub(point).length();\r\n\t\t}\r\n\r\n\t\tgetBoundingSphere(target) {\r\n\t\t\tthis.getCenter(target.center);\r\n\t\t\ttarget.radius = this.getSize(_vector$b).length() * 0.5;\r\n\t\t\treturn target;\r\n\t\t}\r\n\r\n\t\tintersect(box) {\r\n\t\t\tthis.min.max(box.min);\r\n\t\t\tthis.max.min(box.max); // ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\r\n\r\n\t\t\tif (this.isEmpty()) this.makeEmpty();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tunion(box) {\r\n\t\t\tthis.min.min(box.min);\r\n\t\t\tthis.max.max(box.max);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tapplyMatrix4(matrix) {\r\n\t\t\t// transform of empty box is an empty box.\r\n\t\t\tif (this.isEmpty()) return this; // NOTE: I am using a binary pattern to specify all 2^3 combinations below\r\n\r\n\t\t\t_points[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(matrix); // 000\r\n\r\n\r\n\t\t\t_points[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(matrix); // 001\r\n\r\n\r\n\t\t\t_points[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(matrix); // 010\r\n\r\n\r\n\t\t\t_points[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(matrix); // 011\r\n\r\n\r\n\t\t\t_points[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(matrix); // 100\r\n\r\n\r\n\t\t\t_points[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(matrix); // 101\r\n\r\n\r\n\t\t\t_points[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(matrix); // 110\r\n\r\n\r\n\t\t\t_points[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(matrix); // 111\r\n\r\n\r\n\t\t\tthis.setFromPoints(_points);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttranslate(offset) {\r\n\t\t\tthis.min.add(offset);\r\n\t\t\tthis.max.add(offset);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tequals(box) {\r\n\t\t\treturn box.min.equals(this.min) && box.max.equals(this.max);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tBox3.prototype.isBox3 = true;\r\n\tconst _points = [/*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3()];\r\n\r\n\tconst _vector$b = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _box$3 = /*@__PURE__*/new Box3(); // triangle centered vertices\r\n\r\n\r\n\tconst _v0$2 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _v1$7 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _v2$3 = /*@__PURE__*/new Vector3(); // triangle edge vectors\r\n\r\n\r\n\tconst _f0 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _f1 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _f2 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _center = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _extents = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _triangleNormal = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _testAxis = /*@__PURE__*/new Vector3();\r\n\r\n\tfunction satForAxes(axes, v0, v1, v2, extents) {\r\n\t\tfor (let i = 0, j = axes.length - 3; i <= j; i += 3) {\r\n\t\t\t_testAxis.fromArray(axes, i); // project the aabb onto the seperating axis\r\n\r\n\r\n\t\t\tconst r = extents.x * Math.abs(_testAxis.x) + extents.y * Math.abs(_testAxis.y) + extents.z * Math.abs(_testAxis.z); // project all 3 vertices of the triangle onto the seperating axis\r\n\r\n\t\t\tconst p0 = v0.dot(_testAxis);\r\n\t\t\tconst p1 = v1.dot(_testAxis);\r\n\t\t\tconst p2 = v2.dot(_testAxis); // actual test, basically see if either of the most extreme of the triangle points intersects r\r\n\r\n\t\t\tif (Math.max(-Math.max(p0, p1, p2), Math.min(p0, p1, p2)) > r) {\r\n\t\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\r\n\t\t\t\t// the axis is seperating and we can exit\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tconst _box$2 = /*@__PURE__*/new Box3();\r\n\r\n\tconst _v1$6 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _toFarthestPoint = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _toPoint = /*@__PURE__*/new Vector3();\r\n\r\n\tclass Sphere {\r\n\t\tconstructor(center = new Vector3(), radius = -1) {\r\n\t\t\tthis.center = center;\r\n\t\t\tthis.radius = radius;\r\n\t\t}\r\n\r\n\t\tset(center, radius) {\r\n\t\t\tthis.center.copy(center);\r\n\t\t\tthis.radius = radius;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromPoints(points, optionalCenter) {\r\n\t\t\tconst center = this.center;\r\n\r\n\t\t\tif (optionalCenter !== undefined) {\r\n\t\t\t\tcenter.copy(optionalCenter);\r\n\t\t\t} else {\r\n\t\t\t\t_box$2.setFromPoints(points).getCenter(center);\r\n\t\t\t}\r\n\r\n\t\t\tlet maxRadiusSq = 0;\r\n\r\n\t\t\tfor (let i = 0, il = points.length; i < il; i++) {\r\n\t\t\t\tmaxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(points[i]));\r\n\t\t\t}\r\n\r\n\t\t\tthis.radius = Math.sqrt(maxRadiusSq);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopy(sphere) {\r\n\t\t\tthis.center.copy(sphere.center);\r\n\t\t\tthis.radius = sphere.radius;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tisEmpty() {\r\n\t\t\treturn this.radius < 0;\r\n\t\t}\r\n\r\n\t\tmakeEmpty() {\r\n\t\t\tthis.center.set(0, 0, 0);\r\n\t\t\tthis.radius = -1;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcontainsPoint(point) {\r\n\t\t\treturn point.distanceToSquared(this.center) <= this.radius * this.radius;\r\n\t\t}\r\n\r\n\t\tdistanceToPoint(point) {\r\n\t\t\treturn point.distanceTo(this.center) - this.radius;\r\n\t\t}\r\n\r\n\t\tintersectsSphere(sphere) {\r\n\t\t\tconst radiusSum = this.radius + sphere.radius;\r\n\t\t\treturn sphere.center.distanceToSquared(this.center) <= radiusSum * radiusSum;\r\n\t\t}\r\n\r\n\t\tintersectsBox(box) {\r\n\t\t\treturn box.intersectsSphere(this);\r\n\t\t}\r\n\r\n\t\tintersectsPlane(plane) {\r\n\t\t\treturn Math.abs(plane.distanceToPoint(this.center)) <= this.radius;\r\n\t\t}\r\n\r\n\t\tclampPoint(point, target) {\r\n\t\t\tconst deltaLengthSq = this.center.distanceToSquared(point);\r\n\t\t\ttarget.copy(point);\r\n\r\n\t\t\tif (deltaLengthSq > this.radius * this.radius) {\r\n\t\t\t\ttarget.sub(this.center).normalize();\r\n\t\t\t\ttarget.multiplyScalar(this.radius).add(this.center);\r\n\t\t\t}\r\n\r\n\t\t\treturn target;\r\n\t\t}\r\n\r\n\t\tgetBoundingBox(target) {\r\n\t\t\tif (this.isEmpty()) {\r\n\t\t\t\t// Empty sphere produces empty bounding box\r\n\t\t\t\ttarget.makeEmpty();\r\n\t\t\t\treturn target;\r\n\t\t\t}\r\n\r\n\t\t\ttarget.set(this.center, this.center);\r\n\t\t\ttarget.expandByScalar(this.radius);\r\n\t\t\treturn target;\r\n\t\t}\r\n\r\n\t\tapplyMatrix4(matrix) {\r\n\t\t\tthis.center.applyMatrix4(matrix);\r\n\t\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttranslate(offset) {\r\n\t\t\tthis.center.add(offset);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\texpandByPoint(point) {\r\n\t\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L649-L671\r\n\t\t\t_toPoint.subVectors(point, this.center);\r\n\r\n\t\t\tconst lengthSq = _toPoint.lengthSq();\r\n\r\n\t\t\tif (lengthSq > this.radius * this.radius) {\r\n\t\t\t\tconst length = Math.sqrt(lengthSq);\r\n\t\t\t\tconst missingRadiusHalf = (length - this.radius) * 0.5; // Nudge this sphere towards the target point. Add half the missing distance to radius,\r\n\t\t\t\t// and the other half to position. This gives a tighter enclosure, instead of if\r\n\t\t\t\t// the whole missing distance were just added to radius.\r\n\r\n\t\t\t\tthis.center.add(_toPoint.multiplyScalar(missingRadiusHalf / length));\r\n\t\t\t\tthis.radius += missingRadiusHalf;\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tunion(sphere) {\r\n\t\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L759-L769\r\n\t\t\t// To enclose another sphere into this sphere, we only need to enclose two points:\r\n\t\t\t// 1) Enclose the farthest point on the other sphere into this sphere.\r\n\t\t\t// 2) Enclose the opposite point of the farthest point into this sphere.\r\n\t\t\t_toFarthestPoint.subVectors(sphere.center, this.center).normalize().multiplyScalar(sphere.radius);\r\n\r\n\t\t\tthis.expandByPoint(_v1$6.copy(sphere.center).add(_toFarthestPoint));\r\n\t\t\tthis.expandByPoint(_v1$6.copy(sphere.center).sub(_toFarthestPoint));\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tequals(sphere) {\r\n\t\t\treturn sphere.center.equals(this.center) && sphere.radius === this.radius;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor().copy(this);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst _vector$a = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _segCenter = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _segDir = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _diff = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _edge1 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _edge2 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _normal$1 = /*@__PURE__*/new Vector3();\r\n\r\n\tclass Ray {\r\n\t\tconstructor(origin = new Vector3(), direction = new Vector3(0, 0, -1)) {\r\n\t\t\tthis.origin = origin;\r\n\t\t\tthis.direction = direction;\r\n\t\t}\r\n\r\n\t\tset(origin, direction) {\r\n\t\t\tthis.origin.copy(origin);\r\n\t\t\tthis.direction.copy(direction);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopy(ray) {\r\n\t\t\tthis.origin.copy(ray.origin);\r\n\t\t\tthis.direction.copy(ray.direction);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tat(t, target) {\r\n\t\t\treturn target.copy(this.direction).multiplyScalar(t).add(this.origin);\r\n\t\t}\r\n\r\n\t\tlookAt(v) {\r\n\t\t\tthis.direction.copy(v).sub(this.origin).normalize();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\trecast(t) {\r\n\t\t\tthis.origin.copy(this.at(t, _vector$a));\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclosestPointToPoint(point, target) {\r\n\t\t\ttarget.subVectors(point, this.origin);\r\n\t\t\tconst directionDistance = target.dot(this.direction);\r\n\r\n\t\t\tif (directionDistance < 0) {\r\n\t\t\t\treturn target.copy(this.origin);\r\n\t\t\t}\r\n\r\n\t\t\treturn target.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\r\n\t\t}\r\n\r\n\t\tdistanceToPoint(point) {\r\n\t\t\treturn Math.sqrt(this.distanceSqToPoint(point));\r\n\t\t}\r\n\r\n\t\tdistanceSqToPoint(point) {\r\n\t\t\tconst directionDistance = _vector$a.subVectors(point, this.origin).dot(this.direction); // point behind the ray\r\n\r\n\r\n\t\t\tif (directionDistance < 0) {\r\n\t\t\t\treturn this.origin.distanceToSquared(point);\r\n\t\t\t}\r\n\r\n\t\t\t_vector$a.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\r\n\r\n\t\t\treturn _vector$a.distanceToSquared(point);\r\n\t\t}\r\n\r\n\t\tdistanceSqToSegment(v0, v1, optionalPointOnRay, optionalPointOnSegment) {\r\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\r\n\t\t\t// It returns the min distance between the ray and the segment\r\n\t\t\t// defined by v0 and v1\r\n\t\t\t// It can also set two optional targets :\r\n\t\t\t// - The closest point on the ray\r\n\t\t\t// - The closest point on the segment\r\n\t\t\t_segCenter.copy(v0).add(v1).multiplyScalar(0.5);\r\n\r\n\t\t\t_segDir.copy(v1).sub(v0).normalize();\r\n\r\n\t\t\t_diff.copy(this.origin).sub(_segCenter);\r\n\r\n\t\t\tconst segExtent = v0.distanceTo(v1) * 0.5;\r\n\t\t\tconst a01 = -this.direction.dot(_segDir);\r\n\r\n\t\t\tconst b0 = _diff.dot(this.direction);\r\n\r\n\t\t\tconst b1 = -_diff.dot(_segDir);\r\n\r\n\t\t\tconst c = _diff.lengthSq();\r\n\r\n\t\t\tconst det = Math.abs(1 - a01 * a01);\r\n\t\t\tlet s0, s1, sqrDist, extDet;\r\n\r\n\t\t\tif (det > 0) {\r\n\t\t\t\t// The ray and segment are not parallel.\r\n\t\t\t\ts0 = a01 * b1 - b0;\r\n\t\t\t\ts1 = a01 * b0 - b1;\r\n\t\t\t\textDet = segExtent * det;\r\n\r\n\t\t\t\tif (s0 >= 0) {\r\n\t\t\t\t\tif (s1 >= -extDet) {\r\n\t\t\t\t\t\tif (s1 <= extDet) {\r\n\t\t\t\t\t\t\t// region 0\r\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\r\n\t\t\t\t\t\t\tconst invDet = 1 / det;\r\n\t\t\t\t\t\t\ts0 *= invDet;\r\n\t\t\t\t\t\t\ts1 *= invDet;\r\n\t\t\t\t\t\t\tsqrDist = s0 * (s0 + a01 * s1 + 2 * b0) + s1 * (a01 * s0 + s1 + 2 * b1) + c;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// region 1\r\n\t\t\t\t\t\t\ts1 = segExtent;\r\n\t\t\t\t\t\t\ts0 = Math.max(0, -(a01 * s1 + b0));\r\n\t\t\t\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// region 5\r\n\t\t\t\t\t\ts1 = -segExtent;\r\n\t\t\t\t\t\ts0 = Math.max(0, -(a01 * s1 + b0));\r\n\t\t\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (s1 <= -extDet) {\r\n\t\t\t\t\t\t// region 4\r\n\t\t\t\t\t\ts0 = Math.max(0, -(-a01 * segExtent + b0));\r\n\t\t\t\t\t\ts1 = s0 > 0 ? -segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\r\n\t\t\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\r\n\t\t\t\t\t} else if (s1 <= extDet) {\r\n\t\t\t\t\t\t// region 3\r\n\t\t\t\t\t\ts0 = 0;\r\n\t\t\t\t\t\ts1 = Math.min(Math.max(-segExtent, -b1), segExtent);\r\n\t\t\t\t\t\tsqrDist = s1 * (s1 + 2 * b1) + c;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// region 2\r\n\t\t\t\t\t\ts0 = Math.max(0, -(a01 * segExtent + b0));\r\n\t\t\t\t\t\ts1 = s0 > 0 ? segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\r\n\t\t\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Ray and segment are parallel.\r\n\t\t\t\ts1 = a01 > 0 ? -segExtent : segExtent;\r\n\t\t\t\ts0 = Math.max(0, -(a01 * s1 + b0));\r\n\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\r\n\t\t\t}\r\n\r\n\t\t\tif (optionalPointOnRay) {\r\n\t\t\t\toptionalPointOnRay.copy(this.direction).multiplyScalar(s0).add(this.origin);\r\n\t\t\t}\r\n\r\n\t\t\tif (optionalPointOnSegment) {\r\n\t\t\t\toptionalPointOnSegment.copy(_segDir).multiplyScalar(s1).add(_segCenter);\r\n\t\t\t}\r\n\r\n\t\t\treturn sqrDist;\r\n\t\t}\r\n\r\n\t\tintersectSphere(sphere, target) {\r\n\t\t\t_vector$a.subVectors(sphere.center, this.origin);\r\n\r\n\t\t\tconst tca = _vector$a.dot(this.direction);\r\n\r\n\t\t\tconst d2 = _vector$a.dot(_vector$a) - tca * tca;\r\n\t\t\tconst radius2 = sphere.radius * sphere.radius;\r\n\t\t\tif (d2 > radius2) return null;\r\n\t\t\tconst thc = Math.sqrt(radius2 - d2); // t0 = first intersect point - entrance on front of sphere\r\n\r\n\t\t\tconst t0 = tca - thc; // t1 = second intersect point - exit point on back of sphere\r\n\r\n\t\t\tconst t1 = tca + thc; // test to see if both t0 and t1 are behind the ray - if so, return null\r\n\r\n\t\t\tif (t0 < 0 && t1 < 0) return null; // test to see if t0 is behind the ray:\r\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\r\n\t\t\t// in order to always return an intersect point that is in front of the ray.\r\n\r\n\t\t\tif (t0 < 0) return this.at(t1, target); // else t0 is in front of the ray, so return the first collision point scaled by t0\r\n\r\n\t\t\treturn this.at(t0, target);\r\n\t\t}\r\n\r\n\t\tintersectsSphere(sphere) {\r\n\t\t\treturn this.distanceSqToPoint(sphere.center) <= sphere.radius * sphere.radius;\r\n\t\t}\r\n\r\n\t\tdistanceToPlane(plane) {\r\n\t\t\tconst denominator = plane.normal.dot(this.direction);\r\n\r\n\t\t\tif (denominator === 0) {\r\n\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\tif (plane.distanceToPoint(this.origin) === 0) {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t} // Null is preferable to undefined since undefined means.... it is undefined\r\n\r\n\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tconst t = -(this.origin.dot(plane.normal) + plane.constant) / denominator; // Return if the ray never intersects the plane\r\n\r\n\t\t\treturn t >= 0 ? t : null;\r\n\t\t}\r\n\r\n\t\tintersectPlane(plane, target) {\r\n\t\t\tconst t = this.distanceToPlane(plane);\r\n\r\n\t\t\tif (t === null) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\treturn this.at(t, target);\r\n\t\t}\r\n\r\n\t\tintersectsPlane(plane) {\r\n\t\t\t// check if the ray lies on the plane first\r\n\t\t\tconst distToPoint = plane.distanceToPoint(this.origin);\r\n\r\n\t\t\tif (distToPoint === 0) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tconst denominator = plane.normal.dot(this.direction);\r\n\r\n\t\t\tif (denominator * distToPoint < 0) {\r\n\t\t\t\treturn true;\r\n\t\t\t} // ray origin is behind the plane (and is pointing behind it)\r\n\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tintersectBox(box, target) {\r\n\t\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\r\n\t\t\tconst invdirx = 1 / this.direction.x,\r\n\t\t\t\t\t\tinvdiry = 1 / this.direction.y,\r\n\t\t\t\t\t\tinvdirz = 1 / this.direction.z;\r\n\t\t\tconst origin = this.origin;\r\n\r\n\t\t\tif (invdirx >= 0) {\r\n\t\t\t\ttmin = (box.min.x - origin.x) * invdirx;\r\n\t\t\t\ttmax = (box.max.x - origin.x) * invdirx;\r\n\t\t\t} else {\r\n\t\t\t\ttmin = (box.max.x - origin.x) * invdirx;\r\n\t\t\t\ttmax = (box.min.x - origin.x) * invdirx;\r\n\t\t\t}\r\n\r\n\t\t\tif (invdiry >= 0) {\r\n\t\t\t\ttymin = (box.min.y - origin.y) * invdiry;\r\n\t\t\t\ttymax = (box.max.y - origin.y) * invdiry;\r\n\t\t\t} else {\r\n\t\t\t\ttymin = (box.max.y - origin.y) * invdiry;\r\n\t\t\t\ttymax = (box.min.y - origin.y) * invdiry;\r\n\t\t\t}\r\n\r\n\t\t\tif (tmin > tymax || tymin > tmax) return null; // These lines also handle the case where tmin or tmax is NaN\r\n\t\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\r\n\r\n\t\t\tif (tymin > tmin || tmin !== tmin) tmin = tymin;\r\n\t\t\tif (tymax < tmax || tmax !== tmax) tmax = tymax;\r\n\r\n\t\t\tif (invdirz >= 0) {\r\n\t\t\t\ttzmin = (box.min.z - origin.z) * invdirz;\r\n\t\t\t\ttzmax = (box.max.z - origin.z) * invdirz;\r\n\t\t\t} else {\r\n\t\t\t\ttzmin = (box.max.z - origin.z) * invdirz;\r\n\t\t\t\ttzmax = (box.min.z - origin.z) * invdirz;\r\n\t\t\t}\r\n\r\n\t\t\tif (tmin > tzmax || tzmin > tmax) return null;\r\n\t\t\tif (tzmin > tmin || tmin !== tmin) tmin = tzmin;\r\n\t\t\tif (tzmax < tmax || tmax !== tmax) tmax = tzmax; //return point closest to the ray (positive side)\r\n\r\n\t\t\tif (tmax < 0) return null;\r\n\t\t\treturn this.at(tmin >= 0 ? tmin : tmax, target);\r\n\t\t}\r\n\r\n\t\tintersectsBox(box) {\r\n\t\t\treturn this.intersectBox(box, _vector$a) !== null;\r\n\t\t}\r\n\r\n\t\tintersectTriangle(a, b, c, backfaceCulling, target) {\r\n\t\t\t// Compute the offset origin, edges, and normal.\r\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\r\n\t\t\t_edge1.subVectors(b, a);\r\n\r\n\t\t\t_edge2.subVectors(c, a);\r\n\r\n\t\t\t_normal$1.crossVectors(_edge1, _edge2); // Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\r\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\r\n\t\t\t//\t |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\r\n\t\t\t//\t |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\r\n\t\t\t//\t |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\r\n\r\n\r\n\t\t\tlet DdN = this.direction.dot(_normal$1);\r\n\t\t\tlet sign;\r\n\r\n\t\t\tif (DdN > 0) {\r\n\t\t\t\tif (backfaceCulling) return null;\r\n\t\t\t\tsign = 1;\r\n\t\t\t} else if (DdN < 0) {\r\n\t\t\t\tsign = -1;\r\n\t\t\t\tDdN = -DdN;\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\t_diff.subVectors(this.origin, a);\r\n\r\n\t\t\tconst DdQxE2 = sign * this.direction.dot(_edge2.crossVectors(_diff, _edge2)); // b1 < 0, no intersection\r\n\r\n\t\t\tif (DdQxE2 < 0) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tconst DdE1xQ = sign * this.direction.dot(_edge1.cross(_diff)); // b2 < 0, no intersection\r\n\r\n\t\t\tif (DdE1xQ < 0) {\r\n\t\t\t\treturn null;\r\n\t\t\t} // b1+b2 > 1, no intersection\r\n\r\n\r\n\t\t\tif (DdQxE2 + DdE1xQ > DdN) {\r\n\t\t\t\treturn null;\r\n\t\t\t} // Line intersects triangle, check if ray does.\r\n\r\n\r\n\t\t\tconst QdN = -sign * _diff.dot(_normal$1); // t < 0, no intersection\r\n\r\n\r\n\t\t\tif (QdN < 0) {\r\n\t\t\t\treturn null;\r\n\t\t\t} // Ray intersects triangle.\r\n\r\n\r\n\t\t\treturn this.at(QdN / DdN, target);\r\n\t\t}\r\n\r\n\t\tapplyMatrix4(matrix4) {\r\n\t\t\tthis.origin.applyMatrix4(matrix4);\r\n\t\t\tthis.direction.transformDirection(matrix4);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tequals(ray) {\r\n\t\t\treturn ray.origin.equals(this.origin) && ray.direction.equals(this.direction);\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor().copy(this);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass Matrix4 {\r\n\t\tconstructor() {\r\n\t\t\tthis.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n\r\n\t\t\tif (arguments.length > 0) {\r\n\t\t\t\tconsole.error('THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tset(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\r\n\t\t\tconst te = this.elements;\r\n\t\t\tte[0] = n11;\r\n\t\t\tte[4] = n12;\r\n\t\t\tte[8] = n13;\r\n\t\t\tte[12] = n14;\r\n\t\t\tte[1] = n21;\r\n\t\t\tte[5] = n22;\r\n\t\t\tte[9] = n23;\r\n\t\t\tte[13] = n24;\r\n\t\t\tte[2] = n31;\r\n\t\t\tte[6] = n32;\r\n\t\t\tte[10] = n33;\r\n\t\t\tte[14] = n34;\r\n\t\t\tte[3] = n41;\r\n\t\t\tte[7] = n42;\r\n\t\t\tte[11] = n43;\r\n\t\t\tte[15] = n44;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tidentity() {\r\n\t\t\tthis.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new Matrix4().fromArray(this.elements);\r\n\t\t}\r\n\r\n\t\tcopy(m) {\r\n\t\t\tconst te = this.elements;\r\n\t\t\tconst me = m.elements;\r\n\t\t\tte[0] = me[0];\r\n\t\t\tte[1] = me[1];\r\n\t\t\tte[2] = me[2];\r\n\t\t\tte[3] = me[3];\r\n\t\t\tte[4] = me[4];\r\n\t\t\tte[5] = me[5];\r\n\t\t\tte[6] = me[6];\r\n\t\t\tte[7] = me[7];\r\n\t\t\tte[8] = me[8];\r\n\t\t\tte[9] = me[9];\r\n\t\t\tte[10] = me[10];\r\n\t\t\tte[11] = me[11];\r\n\t\t\tte[12] = me[12];\r\n\t\t\tte[13] = me[13];\r\n\t\t\tte[14] = me[14];\r\n\t\t\tte[15] = me[15];\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopyPosition(m) {\r\n\t\t\tconst te = this.elements,\r\n\t\t\t\t\t\tme = m.elements;\r\n\t\t\tte[12] = me[12];\r\n\t\t\tte[13] = me[13];\r\n\t\t\tte[14] = me[14];\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromMatrix3(m) {\r\n\t\t\tconst me = m.elements;\r\n\t\t\tthis.set(me[0], me[3], me[6], 0, me[1], me[4], me[7], 0, me[2], me[5], me[8], 0, 0, 0, 0, 1);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\textractBasis(xAxis, yAxis, zAxis) {\r\n\t\t\txAxis.setFromMatrixColumn(this, 0);\r\n\t\t\tyAxis.setFromMatrixColumn(this, 1);\r\n\t\t\tzAxis.setFromMatrixColumn(this, 2);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmakeBasis(xAxis, yAxis, zAxis) {\r\n\t\t\tthis.set(xAxis.x, yAxis.x, zAxis.x, 0, xAxis.y, yAxis.y, zAxis.y, 0, xAxis.z, yAxis.z, zAxis.z, 0, 0, 0, 0, 1);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\textractRotation(m) {\r\n\t\t\t// this method does not support reflection matrices\r\n\t\t\tconst te = this.elements;\r\n\t\t\tconst me = m.elements;\r\n\r\n\t\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn(m, 0).length();\r\n\r\n\t\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn(m, 1).length();\r\n\r\n\t\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn(m, 2).length();\r\n\r\n\t\t\tte[0] = me[0] * scaleX;\r\n\t\t\tte[1] = me[1] * scaleX;\r\n\t\t\tte[2] = me[2] * scaleX;\r\n\t\t\tte[3] = 0;\r\n\t\t\tte[4] = me[4] * scaleY;\r\n\t\t\tte[5] = me[5] * scaleY;\r\n\t\t\tte[6] = me[6] * scaleY;\r\n\t\t\tte[7] = 0;\r\n\t\t\tte[8] = me[8] * scaleZ;\r\n\t\t\tte[9] = me[9] * scaleZ;\r\n\t\t\tte[10] = me[10] * scaleZ;\r\n\t\t\tte[11] = 0;\r\n\t\t\tte[12] = 0;\r\n\t\t\tte[13] = 0;\r\n\t\t\tte[14] = 0;\r\n\t\t\tte[15] = 1;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmakeRotationFromEuler(euler) {\r\n\t\t\tif (!(euler && euler.isEuler)) {\r\n\t\t\t\tconsole.error('THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.');\r\n\t\t\t}\r\n\r\n\t\t\tconst te = this.elements;\r\n\t\t\tconst x = euler.x,\r\n\t\t\t\t\t\ty = euler.y,\r\n\t\t\t\t\t\tz = euler.z;\r\n\t\t\tconst a = Math.cos(x),\r\n\t\t\t\t\t\tb = Math.sin(x);\r\n\t\t\tconst c = Math.cos(y),\r\n\t\t\t\t\t\td = Math.sin(y);\r\n\t\t\tconst e = Math.cos(z),\r\n\t\t\t\t\t\tf = Math.sin(z);\r\n\r\n\t\t\tif (euler.order === 'XYZ') {\r\n\t\t\t\tconst ae = a * e,\r\n\t\t\t\t\t\t\taf = a * f,\r\n\t\t\t\t\t\t\tbe = b * e,\r\n\t\t\t\t\t\t\tbf = b * f;\r\n\t\t\t\tte[0] = c * e;\r\n\t\t\t\tte[4] = -c * f;\r\n\t\t\t\tte[8] = d;\r\n\t\t\t\tte[1] = af + be * d;\r\n\t\t\t\tte[5] = ae - bf * d;\r\n\t\t\t\tte[9] = -b * c;\r\n\t\t\t\tte[2] = bf - ae * d;\r\n\t\t\t\tte[6] = be + af * d;\r\n\t\t\t\tte[10] = a * c;\r\n\t\t\t} else if (euler.order === 'YXZ') {\r\n\t\t\t\tconst ce = c * e,\r\n\t\t\t\t\t\t\tcf = c * f,\r\n\t\t\t\t\t\t\tde = d * e,\r\n\t\t\t\t\t\t\tdf = d * f;\r\n\t\t\t\tte[0] = ce + df * b;\r\n\t\t\t\tte[4] = de * b - cf;\r\n\t\t\t\tte[8] = a * d;\r\n\t\t\t\tte[1] = a * f;\r\n\t\t\t\tte[5] = a * e;\r\n\t\t\t\tte[9] = -b;\r\n\t\t\t\tte[2] = cf * b - de;\r\n\t\t\t\tte[6] = df + ce * b;\r\n\t\t\t\tte[10] = a * c;\r\n\t\t\t} else if (euler.order === 'ZXY') {\r\n\t\t\t\tconst ce = c * e,\r\n\t\t\t\t\t\t\tcf = c * f,\r\n\t\t\t\t\t\t\tde = d * e,\r\n\t\t\t\t\t\t\tdf = d * f;\r\n\t\t\t\tte[0] = ce - df * b;\r\n\t\t\t\tte[4] = -a * f;\r\n\t\t\t\tte[8] = de + cf * b;\r\n\t\t\t\tte[1] = cf + de * b;\r\n\t\t\t\tte[5] = a * e;\r\n\t\t\t\tte[9] = df - ce * b;\r\n\t\t\t\tte[2] = -a * d;\r\n\t\t\t\tte[6] = b;\r\n\t\t\t\tte[10] = a * c;\r\n\t\t\t} else if (euler.order === 'ZYX') {\r\n\t\t\t\tconst ae = a * e,\r\n\t\t\t\t\t\t\taf = a * f,\r\n\t\t\t\t\t\t\tbe = b * e,\r\n\t\t\t\t\t\t\tbf = b * f;\r\n\t\t\t\tte[0] = c * e;\r\n\t\t\t\tte[4] = be * d - af;\r\n\t\t\t\tte[8] = ae * d + bf;\r\n\t\t\t\tte[1] = c * f;\r\n\t\t\t\tte[5] = bf * d + ae;\r\n\t\t\t\tte[9] = af * d - be;\r\n\t\t\t\tte[2] = -d;\r\n\t\t\t\tte[6] = b * c;\r\n\t\t\t\tte[10] = a * c;\r\n\t\t\t} else if (euler.order === 'YZX') {\r\n\t\t\t\tconst ac = a * c,\r\n\t\t\t\t\t\t\tad = a * d,\r\n\t\t\t\t\t\t\tbc = b * c,\r\n\t\t\t\t\t\t\tbd = b * d;\r\n\t\t\t\tte[0] = c * e;\r\n\t\t\t\tte[4] = bd - ac * f;\r\n\t\t\t\tte[8] = bc * f + ad;\r\n\t\t\t\tte[1] = f;\r\n\t\t\t\tte[5] = a * e;\r\n\t\t\t\tte[9] = -b * e;\r\n\t\t\t\tte[2] = -d * e;\r\n\t\t\t\tte[6] = ad * f + bc;\r\n\t\t\t\tte[10] = ac - bd * f;\r\n\t\t\t} else if (euler.order === 'XZY') {\r\n\t\t\t\tconst ac = a * c,\r\n\t\t\t\t\t\t\tad = a * d,\r\n\t\t\t\t\t\t\tbc = b * c,\r\n\t\t\t\t\t\t\tbd = b * d;\r\n\t\t\t\tte[0] = c * e;\r\n\t\t\t\tte[4] = -f;\r\n\t\t\t\tte[8] = d * e;\r\n\t\t\t\tte[1] = ac * f + bd;\r\n\t\t\t\tte[5] = a * e;\r\n\t\t\t\tte[9] = ad * f - bc;\r\n\t\t\t\tte[2] = bc * f - ad;\r\n\t\t\t\tte[6] = b * e;\r\n\t\t\t\tte[10] = bd * f + ac;\r\n\t\t\t} // bottom row\r\n\r\n\r\n\t\t\tte[3] = 0;\r\n\t\t\tte[7] = 0;\r\n\t\t\tte[11] = 0; // last column\r\n\r\n\t\t\tte[12] = 0;\r\n\t\t\tte[13] = 0;\r\n\t\t\tte[14] = 0;\r\n\t\t\tte[15] = 1;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmakeRotationFromQuaternion(q) {\r\n\t\t\treturn this.compose(_zero, q, _one);\r\n\t\t}\r\n\r\n\t\tlookAt(eye, target, up) {\r\n\t\t\tconst te = this.elements;\r\n\r\n\t\t\t_z.subVectors(eye, target);\r\n\r\n\t\t\tif (_z.lengthSq() === 0) {\r\n\t\t\t\t// eye and target are in the same position\r\n\t\t\t\t_z.z = 1;\r\n\t\t\t}\r\n\r\n\t\t\t_z.normalize();\r\n\r\n\t\t\t_x.crossVectors(up, _z);\r\n\r\n\t\t\tif (_x.lengthSq() === 0) {\r\n\t\t\t\t// up and z are parallel\r\n\t\t\t\tif (Math.abs(up.z) === 1) {\r\n\t\t\t\t\t_z.x += 0.0001;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t_z.z += 0.0001;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_z.normalize();\r\n\r\n\t\t\t\t_x.crossVectors(up, _z);\r\n\t\t\t}\r\n\r\n\t\t\t_x.normalize();\r\n\r\n\t\t\t_y.crossVectors(_z, _x);\r\n\r\n\t\t\tte[0] = _x.x;\r\n\t\t\tte[4] = _y.x;\r\n\t\t\tte[8] = _z.x;\r\n\t\t\tte[1] = _x.y;\r\n\t\t\tte[5] = _y.y;\r\n\t\t\tte[9] = _z.y;\r\n\t\t\tte[2] = _x.z;\r\n\t\t\tte[6] = _y.z;\r\n\t\t\tte[10] = _z.z;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmultiply(m, n) {\r\n\t\t\tif (n !== undefined) {\r\n\t\t\t\tconsole.warn('THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.');\r\n\t\t\t\treturn this.multiplyMatrices(m, n);\r\n\t\t\t}\r\n\r\n\t\t\treturn this.multiplyMatrices(this, m);\r\n\t\t}\r\n\r\n\t\tpremultiply(m) {\r\n\t\t\treturn this.multiplyMatrices(m, this);\r\n\t\t}\r\n\r\n\t\tmultiplyMatrices(a, b) {\r\n\t\t\tconst ae = a.elements;\r\n\t\t\tconst be = b.elements;\r\n\t\t\tconst te = this.elements;\r\n\t\t\tconst a11 = ae[0],\r\n\t\t\t\t\t\ta12 = ae[4],\r\n\t\t\t\t\t\ta13 = ae[8],\r\n\t\t\t\t\t\ta14 = ae[12];\r\n\t\t\tconst a21 = ae[1],\r\n\t\t\t\t\t\ta22 = ae[5],\r\n\t\t\t\t\t\ta23 = ae[9],\r\n\t\t\t\t\t\ta24 = ae[13];\r\n\t\t\tconst a31 = ae[2],\r\n\t\t\t\t\t\ta32 = ae[6],\r\n\t\t\t\t\t\ta33 = ae[10],\r\n\t\t\t\t\t\ta34 = ae[14];\r\n\t\t\tconst a41 = ae[3],\r\n\t\t\t\t\t\ta42 = ae[7],\r\n\t\t\t\t\t\ta43 = ae[11],\r\n\t\t\t\t\t\ta44 = ae[15];\r\n\t\t\tconst b11 = be[0],\r\n\t\t\t\t\t\tb12 = be[4],\r\n\t\t\t\t\t\tb13 = be[8],\r\n\t\t\t\t\t\tb14 = be[12];\r\n\t\t\tconst b21 = be[1],\r\n\t\t\t\t\t\tb22 = be[5],\r\n\t\t\t\t\t\tb23 = be[9],\r\n\t\t\t\t\t\tb24 = be[13];\r\n\t\t\tconst b31 = be[2],\r\n\t\t\t\t\t\tb32 = be[6],\r\n\t\t\t\t\t\tb33 = be[10],\r\n\t\t\t\t\t\tb34 = be[14];\r\n\t\t\tconst b41 = be[3],\r\n\t\t\t\t\t\tb42 = be[7],\r\n\t\t\t\t\t\tb43 = be[11],\r\n\t\t\t\t\t\tb44 = be[15];\r\n\t\t\tte[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n\t\t\tte[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n\t\t\tte[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n\t\t\tte[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n\t\t\tte[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n\t\t\tte[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n\t\t\tte[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n\t\t\tte[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n\t\t\tte[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n\t\t\tte[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n\t\t\tte[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n\t\t\tte[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n\t\t\tte[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n\t\t\tte[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n\t\t\tte[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n\t\t\tte[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmultiplyScalar(s) {\r\n\t\t\tconst te = this.elements;\r\n\t\t\tte[0] *= s;\r\n\t\t\tte[4] *= s;\r\n\t\t\tte[8] *= s;\r\n\t\t\tte[12] *= s;\r\n\t\t\tte[1] *= s;\r\n\t\t\tte[5] *= s;\r\n\t\t\tte[9] *= s;\r\n\t\t\tte[13] *= s;\r\n\t\t\tte[2] *= s;\r\n\t\t\tte[6] *= s;\r\n\t\t\tte[10] *= s;\r\n\t\t\tte[14] *= s;\r\n\t\t\tte[3] *= s;\r\n\t\t\tte[7] *= s;\r\n\t\t\tte[11] *= s;\r\n\t\t\tte[15] *= s;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tdeterminant() {\r\n\t\t\tconst te = this.elements;\r\n\t\t\tconst n11 = te[0],\r\n\t\t\t\t\t\tn12 = te[4],\r\n\t\t\t\t\t\tn13 = te[8],\r\n\t\t\t\t\t\tn14 = te[12];\r\n\t\t\tconst n21 = te[1],\r\n\t\t\t\t\t\tn22 = te[5],\r\n\t\t\t\t\t\tn23 = te[9],\r\n\t\t\t\t\t\tn24 = te[13];\r\n\t\t\tconst n31 = te[2],\r\n\t\t\t\t\t\tn32 = te[6],\r\n\t\t\t\t\t\tn33 = te[10],\r\n\t\t\t\t\t\tn34 = te[14];\r\n\t\t\tconst n41 = te[3],\r\n\t\t\t\t\t\tn42 = te[7],\r\n\t\t\t\t\t\tn43 = te[11],\r\n\t\t\t\t\t\tn44 = te[15]; //TODO: make this more efficient\r\n\t\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\r\n\r\n\t\t\treturn n41 * (+n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34) + n42 * (+n11 * n23 * n34 - n11 * n24 * n33 + n14 * n21 * n33 - n13 * n21 * n34 + n13 * n24 * n31 - n14 * n23 * n31) + n43 * (+n11 * n24 * n32 - n11 * n22 * n34 - n14 * n21 * n32 + n12 * n21 * n34 + n14 * n22 * n31 - n12 * n24 * n31) + n44 * (-n13 * n22 * n31 - n11 * n23 * n32 + n11 * n22 * n33 + n13 * n21 * n32 - n12 * n21 * n33 + n12 * n23 * n31);\r\n\t\t}\r\n\r\n\t\ttranspose() {\r\n\t\t\tconst te = this.elements;\r\n\t\t\tlet tmp;\r\n\t\t\ttmp = te[1];\r\n\t\t\tte[1] = te[4];\r\n\t\t\tte[4] = tmp;\r\n\t\t\ttmp = te[2];\r\n\t\t\tte[2] = te[8];\r\n\t\t\tte[8] = tmp;\r\n\t\t\ttmp = te[6];\r\n\t\t\tte[6] = te[9];\r\n\t\t\tte[9] = tmp;\r\n\t\t\ttmp = te[3];\r\n\t\t\tte[3] = te[12];\r\n\t\t\tte[12] = tmp;\r\n\t\t\ttmp = te[7];\r\n\t\t\tte[7] = te[13];\r\n\t\t\tte[13] = tmp;\r\n\t\t\ttmp = te[11];\r\n\t\t\tte[11] = te[14];\r\n\t\t\tte[14] = tmp;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetPosition(x, y, z) {\r\n\t\t\tconst te = this.elements;\r\n\r\n\t\t\tif (x.isVector3) {\r\n\t\t\t\tte[12] = x.x;\r\n\t\t\t\tte[13] = x.y;\r\n\t\t\t\tte[14] = x.z;\r\n\t\t\t} else {\r\n\t\t\t\tte[12] = x;\r\n\t\t\t\tte[13] = y;\r\n\t\t\t\tte[14] = z;\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tinvert() {\r\n\t\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\r\n\t\t\tconst te = this.elements,\r\n\t\t\t\t\t\tn11 = te[0],\r\n\t\t\t\t\t\tn21 = te[1],\r\n\t\t\t\t\t\tn31 = te[2],\r\n\t\t\t\t\t\tn41 = te[3],\r\n\t\t\t\t\t\tn12 = te[4],\r\n\t\t\t\t\t\tn22 = te[5],\r\n\t\t\t\t\t\tn32 = te[6],\r\n\t\t\t\t\t\tn42 = te[7],\r\n\t\t\t\t\t\tn13 = te[8],\r\n\t\t\t\t\t\tn23 = te[9],\r\n\t\t\t\t\t\tn33 = te[10],\r\n\t\t\t\t\t\tn43 = te[11],\r\n\t\t\t\t\t\tn14 = te[12],\r\n\t\t\t\t\t\tn24 = te[13],\r\n\t\t\t\t\t\tn34 = te[14],\r\n\t\t\t\t\t\tn44 = te[15],\r\n\t\t\t\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\r\n\t\t\t\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\r\n\t\t\t\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\r\n\t\t\t\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\r\n\t\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\r\n\t\t\tif (det === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\r\n\t\t\tconst detInv = 1 / det;\r\n\t\t\tte[0] = t11 * detInv;\r\n\t\t\tte[1] = (n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44) * detInv;\r\n\t\t\tte[2] = (n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44) * detInv;\r\n\t\t\tte[3] = (n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43) * detInv;\r\n\t\t\tte[4] = t12 * detInv;\r\n\t\t\tte[5] = (n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44) * detInv;\r\n\t\t\tte[6] = (n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44) * detInv;\r\n\t\t\tte[7] = (n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43) * detInv;\r\n\t\t\tte[8] = t13 * detInv;\r\n\t\t\tte[9] = (n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44) * detInv;\r\n\t\t\tte[10] = (n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44) * detInv;\r\n\t\t\tte[11] = (n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43) * detInv;\r\n\t\t\tte[12] = t14 * detInv;\r\n\t\t\tte[13] = (n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34) * detInv;\r\n\t\t\tte[14] = (n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34) * detInv;\r\n\t\t\tte[15] = (n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33) * detInv;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tscale(v) {\r\n\t\t\tconst te = this.elements;\r\n\t\t\tconst x = v.x,\r\n\t\t\t\t\t\ty = v.y,\r\n\t\t\t\t\t\tz = v.z;\r\n\t\t\tte[0] *= x;\r\n\t\t\tte[4] *= y;\r\n\t\t\tte[8] *= z;\r\n\t\t\tte[1] *= x;\r\n\t\t\tte[5] *= y;\r\n\t\t\tte[9] *= z;\r\n\t\t\tte[2] *= x;\r\n\t\t\tte[6] *= y;\r\n\t\t\tte[10] *= z;\r\n\t\t\tte[3] *= x;\r\n\t\t\tte[7] *= y;\r\n\t\t\tte[11] *= z;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetMaxScaleOnAxis() {\r\n\t\t\tconst te = this.elements;\r\n\t\t\tconst scaleXSq = te[0] * te[0] + te[1] * te[1] + te[2] * te[2];\r\n\t\t\tconst scaleYSq = te[4] * te[4] + te[5] * te[5] + te[6] * te[6];\r\n\t\t\tconst scaleZSq = te[8] * te[8] + te[9] * te[9] + te[10] * te[10];\r\n\t\t\treturn Math.sqrt(Math.max(scaleXSq, scaleYSq, scaleZSq));\r\n\t\t}\r\n\r\n\t\tmakeTranslation(x, y, z) {\r\n\t\t\tthis.set(1, 0, 0, x, 0, 1, 0, y, 0, 0, 1, z, 0, 0, 0, 1);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmakeRotationX(theta) {\r\n\t\t\tconst c = Math.cos(theta),\r\n\t\t\t\t\t\ts = Math.sin(theta);\r\n\t\t\tthis.set(1, 0, 0, 0, 0, c, -s, 0, 0, s, c, 0, 0, 0, 0, 1);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmakeRotationY(theta) {\r\n\t\t\tconst c = Math.cos(theta),\r\n\t\t\t\t\t\ts = Math.sin(theta);\r\n\t\t\tthis.set(c, 0, s, 0, 0, 1, 0, 0, -s, 0, c, 0, 0, 0, 0, 1);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmakeRotationZ(theta) {\r\n\t\t\tconst c = Math.cos(theta),\r\n\t\t\t\t\t\ts = Math.sin(theta);\r\n\t\t\tthis.set(c, -s, 0, 0, s, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmakeRotationAxis(axis, angle) {\r\n\t\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\r\n\t\t\tconst c = Math.cos(angle);\r\n\t\t\tconst s = Math.sin(angle);\r\n\t\t\tconst t = 1 - c;\r\n\t\t\tconst x = axis.x,\r\n\t\t\t\t\t\ty = axis.y,\r\n\t\t\t\t\t\tz = axis.z;\r\n\t\t\tconst tx = t * x,\r\n\t\t\t\t\t\tty = t * y;\r\n\t\t\tthis.set(tx * x + c, tx * y - s * z, tx * z + s * y, 0, tx * y + s * z, ty * y + c, ty * z - s * x, 0, tx * z - s * y, ty * z + s * x, t * z * z + c, 0, 0, 0, 0, 1);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmakeScale(x, y, z) {\r\n\t\t\tthis.set(x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, 0, 0, 0, 1);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmakeShear(xy, xz, yx, yz, zx, zy) {\r\n\t\t\tthis.set(1, yx, zx, 0, xy, 1, zy, 0, xz, yz, 1, 0, 0, 0, 0, 1);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcompose(position, quaternion, scale) {\r\n\t\t\tconst te = this.elements;\r\n\t\t\tconst x = quaternion._x,\r\n\t\t\t\t\t\ty = quaternion._y,\r\n\t\t\t\t\t\tz = quaternion._z,\r\n\t\t\t\t\t\tw = quaternion._w;\r\n\t\t\tconst x2 = x + x,\r\n\t\t\t\t\t\ty2 = y + y,\r\n\t\t\t\t\t\tz2 = z + z;\r\n\t\t\tconst xx = x * x2,\r\n\t\t\t\t\t\txy = x * y2,\r\n\t\t\t\t\t\txz = x * z2;\r\n\t\t\tconst yy = y * y2,\r\n\t\t\t\t\t\tyz = y * z2,\r\n\t\t\t\t\t\tzz = z * z2;\r\n\t\t\tconst wx = w * x2,\r\n\t\t\t\t\t\twy = w * y2,\r\n\t\t\t\t\t\twz = w * z2;\r\n\t\t\tconst sx = scale.x,\r\n\t\t\t\t\t\tsy = scale.y,\r\n\t\t\t\t\t\tsz = scale.z;\r\n\t\t\tte[0] = (1 - (yy + zz)) * sx;\r\n\t\t\tte[1] = (xy + wz) * sx;\r\n\t\t\tte[2] = (xz - wy) * sx;\r\n\t\t\tte[3] = 0;\r\n\t\t\tte[4] = (xy - wz) * sy;\r\n\t\t\tte[5] = (1 - (xx + zz)) * sy;\r\n\t\t\tte[6] = (yz + wx) * sy;\r\n\t\t\tte[7] = 0;\r\n\t\t\tte[8] = (xz + wy) * sz;\r\n\t\t\tte[9] = (yz - wx) * sz;\r\n\t\t\tte[10] = (1 - (xx + yy)) * sz;\r\n\t\t\tte[11] = 0;\r\n\t\t\tte[12] = position.x;\r\n\t\t\tte[13] = position.y;\r\n\t\t\tte[14] = position.z;\r\n\t\t\tte[15] = 1;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tdecompose(position, quaternion, scale) {\r\n\t\t\tconst te = this.elements;\r\n\r\n\t\t\tlet sx = _v1$5.set(te[0], te[1], te[2]).length();\r\n\r\n\t\t\tconst sy = _v1$5.set(te[4], te[5], te[6]).length();\r\n\r\n\t\t\tconst sz = _v1$5.set(te[8], te[9], te[10]).length(); // if determine is negative, we need to invert one scale\r\n\r\n\r\n\t\t\tconst det = this.determinant();\r\n\t\t\tif (det < 0) sx = -sx;\r\n\t\t\tposition.x = te[12];\r\n\t\t\tposition.y = te[13];\r\n\t\t\tposition.z = te[14]; // scale the rotation part\r\n\r\n\t\t\t_m1$2.copy(this);\r\n\r\n\t\t\tconst invSX = 1 / sx;\r\n\t\t\tconst invSY = 1 / sy;\r\n\t\t\tconst invSZ = 1 / sz;\r\n\t\t\t_m1$2.elements[0] *= invSX;\r\n\t\t\t_m1$2.elements[1] *= invSX;\r\n\t\t\t_m1$2.elements[2] *= invSX;\r\n\t\t\t_m1$2.elements[4] *= invSY;\r\n\t\t\t_m1$2.elements[5] *= invSY;\r\n\t\t\t_m1$2.elements[6] *= invSY;\r\n\t\t\t_m1$2.elements[8] *= invSZ;\r\n\t\t\t_m1$2.elements[9] *= invSZ;\r\n\t\t\t_m1$2.elements[10] *= invSZ;\r\n\t\t\tquaternion.setFromRotationMatrix(_m1$2);\r\n\t\t\tscale.x = sx;\r\n\t\t\tscale.y = sy;\r\n\t\t\tscale.z = sz;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmakePerspective(left, right, top, bottom, near, far) {\r\n\t\t\tif (far === undefined) {\r\n\t\t\t\tconsole.warn('THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.');\r\n\t\t\t}\r\n\r\n\t\t\tconst te = this.elements;\r\n\t\t\tconst x = 2 * near / (right - left);\r\n\t\t\tconst y = 2 * near / (top - bottom);\r\n\t\t\tconst a = (right + left) / (right - left);\r\n\t\t\tconst b = (top + bottom) / (top - bottom);\r\n\t\t\tconst c = -(far + near) / (far - near);\r\n\t\t\tconst d = -2 * far * near / (far - near);\r\n\t\t\tte[0] = x;\r\n\t\t\tte[4] = 0;\r\n\t\t\tte[8] = a;\r\n\t\t\tte[12] = 0;\r\n\t\t\tte[1] = 0;\r\n\t\t\tte[5] = y;\r\n\t\t\tte[9] = b;\r\n\t\t\tte[13] = 0;\r\n\t\t\tte[2] = 0;\r\n\t\t\tte[6] = 0;\r\n\t\t\tte[10] = c;\r\n\t\t\tte[14] = d;\r\n\t\t\tte[3] = 0;\r\n\t\t\tte[7] = 0;\r\n\t\t\tte[11] = -1;\r\n\t\t\tte[15] = 0;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmakeOrthographic(left, right, top, bottom, near, far) {\r\n\t\t\tconst te = this.elements;\r\n\t\t\tconst w = 1.0 / (right - left);\r\n\t\t\tconst h = 1.0 / (top - bottom);\r\n\t\t\tconst p = 1.0 / (far - near);\r\n\t\t\tconst x = (right + left) * w;\r\n\t\t\tconst y = (top + bottom) * h;\r\n\t\t\tconst z = (far + near) * p;\r\n\t\t\tte[0] = 2 * w;\r\n\t\t\tte[4] = 0;\r\n\t\t\tte[8] = 0;\r\n\t\t\tte[12] = -x;\r\n\t\t\tte[1] = 0;\r\n\t\t\tte[5] = 2 * h;\r\n\t\t\tte[9] = 0;\r\n\t\t\tte[13] = -y;\r\n\t\t\tte[2] = 0;\r\n\t\t\tte[6] = 0;\r\n\t\t\tte[10] = -2 * p;\r\n\t\t\tte[14] = -z;\r\n\t\t\tte[3] = 0;\r\n\t\t\tte[7] = 0;\r\n\t\t\tte[11] = 0;\r\n\t\t\tte[15] = 1;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tequals(matrix) {\r\n\t\t\tconst te = this.elements;\r\n\t\t\tconst me = matrix.elements;\r\n\r\n\t\t\tfor (let i = 0; i < 16; i++) {\r\n\t\t\t\tif (te[i] !== me[i]) return false;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tfromArray(array, offset = 0) {\r\n\t\t\tfor (let i = 0; i < 16; i++) {\r\n\t\t\t\tthis.elements[i] = array[i + offset];\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoArray(array = [], offset = 0) {\r\n\t\t\tconst te = this.elements;\r\n\t\t\tarray[offset] = te[0];\r\n\t\t\tarray[offset + 1] = te[1];\r\n\t\t\tarray[offset + 2] = te[2];\r\n\t\t\tarray[offset + 3] = te[3];\r\n\t\t\tarray[offset + 4] = te[4];\r\n\t\t\tarray[offset + 5] = te[5];\r\n\t\t\tarray[offset + 6] = te[6];\r\n\t\t\tarray[offset + 7] = te[7];\r\n\t\t\tarray[offset + 8] = te[8];\r\n\t\t\tarray[offset + 9] = te[9];\r\n\t\t\tarray[offset + 10] = te[10];\r\n\t\t\tarray[offset + 11] = te[11];\r\n\t\t\tarray[offset + 12] = te[12];\r\n\t\t\tarray[offset + 13] = te[13];\r\n\t\t\tarray[offset + 14] = te[14];\r\n\t\t\tarray[offset + 15] = te[15];\r\n\t\t\treturn array;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tMatrix4.prototype.isMatrix4 = true;\r\n\r\n\tconst _v1$5 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _m1$2 = /*@__PURE__*/new Matrix4();\r\n\r\n\tconst _zero = /*@__PURE__*/new Vector3(0, 0, 0);\r\n\r\n\tconst _one = /*@__PURE__*/new Vector3(1, 1, 1);\r\n\r\n\tconst _x = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _y = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _z = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _matrix$1 = /*@__PURE__*/new Matrix4();\r\n\r\n\tconst _quaternion$3 = /*@__PURE__*/new Quaternion();\r\n\r\n\tclass Euler {\r\n\t\tconstructor(x = 0, y = 0, z = 0, order = Euler.DefaultOrder) {\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\t\t\tthis._order = order;\r\n\t\t}\r\n\r\n\t\tget x() {\r\n\t\t\treturn this._x;\r\n\t\t}\r\n\r\n\t\tset x(value) {\r\n\t\t\tthis._x = value;\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\t\t}\r\n\r\n\t\tget y() {\r\n\t\t\treturn this._y;\r\n\t\t}\r\n\r\n\t\tset y(value) {\r\n\t\t\tthis._y = value;\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\t\t}\r\n\r\n\t\tget z() {\r\n\t\t\treturn this._z;\r\n\t\t}\r\n\r\n\t\tset z(value) {\r\n\t\t\tthis._z = value;\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\t\t}\r\n\r\n\t\tget order() {\r\n\t\t\treturn this._order;\r\n\t\t}\r\n\r\n\t\tset order(value) {\r\n\t\t\tthis._order = value;\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\t\t}\r\n\r\n\t\tset(x, y, z, order = this._order) {\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\t\t\tthis._order = order;\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor(this._x, this._y, this._z, this._order);\r\n\t\t}\r\n\r\n\t\tcopy(euler) {\r\n\t\t\tthis._x = euler._x;\r\n\t\t\tthis._y = euler._y;\r\n\t\t\tthis._z = euler._z;\r\n\t\t\tthis._order = euler._order;\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromRotationMatrix(m, order = this._order, update = true) {\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\t\tconst te = m.elements;\r\n\t\t\tconst m11 = te[0],\r\n\t\t\t\t\t\tm12 = te[4],\r\n\t\t\t\t\t\tm13 = te[8];\r\n\t\t\tconst m21 = te[1],\r\n\t\t\t\t\t\tm22 = te[5],\r\n\t\t\t\t\t\tm23 = te[9];\r\n\t\t\tconst m31 = te[2],\r\n\t\t\t\t\t\tm32 = te[6],\r\n\t\t\t\t\t\tm33 = te[10];\r\n\r\n\t\t\tswitch (order) {\r\n\t\t\t\tcase 'XYZ':\r\n\t\t\t\t\tthis._y = Math.asin(clamp(m13, -1, 1));\r\n\r\n\t\t\t\t\tif (Math.abs(m13) < 0.9999999) {\r\n\t\t\t\t\t\tthis._x = Math.atan2(-m23, m33);\r\n\t\t\t\t\t\tthis._z = Math.atan2(-m12, m11);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._x = Math.atan2(m32, m22);\r\n\t\t\t\t\t\tthis._z = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'YXZ':\r\n\t\t\t\t\tthis._x = Math.asin(-clamp(m23, -1, 1));\r\n\r\n\t\t\t\t\tif (Math.abs(m23) < 0.9999999) {\r\n\t\t\t\t\t\tthis._y = Math.atan2(m13, m33);\r\n\t\t\t\t\t\tthis._z = Math.atan2(m21, m22);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._y = Math.atan2(-m31, m11);\r\n\t\t\t\t\t\tthis._z = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'ZXY':\r\n\t\t\t\t\tthis._x = Math.asin(clamp(m32, -1, 1));\r\n\r\n\t\t\t\t\tif (Math.abs(m32) < 0.9999999) {\r\n\t\t\t\t\t\tthis._y = Math.atan2(-m31, m33);\r\n\t\t\t\t\t\tthis._z = Math.atan2(-m12, m22);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._y = 0;\r\n\t\t\t\t\t\tthis._z = Math.atan2(m21, m11);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'ZYX':\r\n\t\t\t\t\tthis._y = Math.asin(-clamp(m31, -1, 1));\r\n\r\n\t\t\t\t\tif (Math.abs(m31) < 0.9999999) {\r\n\t\t\t\t\t\tthis._x = Math.atan2(m32, m33);\r\n\t\t\t\t\t\tthis._z = Math.atan2(m21, m11);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._x = 0;\r\n\t\t\t\t\t\tthis._z = Math.atan2(-m12, m22);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'YZX':\r\n\t\t\t\t\tthis._z = Math.asin(clamp(m21, -1, 1));\r\n\r\n\t\t\t\t\tif (Math.abs(m21) < 0.9999999) {\r\n\t\t\t\t\t\tthis._x = Math.atan2(-m23, m22);\r\n\t\t\t\t\t\tthis._y = Math.atan2(-m31, m11);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._x = 0;\r\n\t\t\t\t\t\tthis._y = Math.atan2(m13, m33);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'XZY':\r\n\t\t\t\t\tthis._z = Math.asin(-clamp(m12, -1, 1));\r\n\r\n\t\t\t\t\tif (Math.abs(m12) < 0.9999999) {\r\n\t\t\t\t\t\tthis._x = Math.atan2(m32, m22);\r\n\t\t\t\t\t\tthis._y = Math.atan2(m13, m11);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._x = Math.atan2(-m23, m33);\r\n\t\t\t\t\t\tthis._y = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.warn('THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order);\r\n\t\t\t}\r\n\r\n\t\t\tthis._order = order;\r\n\t\t\tif (update === true) this._onChangeCallback();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromQuaternion(q, order, update) {\r\n\t\t\t_matrix$1.makeRotationFromQuaternion(q);\r\n\r\n\t\t\treturn this.setFromRotationMatrix(_matrix$1, order, update);\r\n\t\t}\r\n\r\n\t\tsetFromVector3(v, order = this._order) {\r\n\t\t\treturn this.set(v.x, v.y, v.z, order);\r\n\t\t}\r\n\r\n\t\treorder(newOrder) {\r\n\t\t\t// WARNING: this discards revolution information -bhouston\r\n\t\t\t_quaternion$3.setFromEuler(this);\r\n\r\n\t\t\treturn this.setFromQuaternion(_quaternion$3, newOrder);\r\n\t\t}\r\n\r\n\t\tequals(euler) {\r\n\t\t\treturn euler._x === this._x && euler._y === this._y && euler._z === this._z && euler._order === this._order;\r\n\t\t}\r\n\r\n\t\tfromArray(array) {\r\n\t\t\tthis._x = array[0];\r\n\t\t\tthis._y = array[1];\r\n\t\t\tthis._z = array[2];\r\n\t\t\tif (array[3] !== undefined) this._order = array[3];\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoArray(array = [], offset = 0) {\r\n\t\t\tarray[offset] = this._x;\r\n\t\t\tarray[offset + 1] = this._y;\r\n\t\t\tarray[offset + 2] = this._z;\r\n\t\t\tarray[offset + 3] = this._order;\r\n\t\t\treturn array;\r\n\t\t}\r\n\r\n\t\ttoVector3(optionalResult) {\r\n\t\t\tif (optionalResult) {\r\n\t\t\t\treturn optionalResult.set(this._x, this._y, this._z);\r\n\t\t\t} else {\r\n\t\t\t\treturn new Vector3(this._x, this._y, this._z);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t_onChange(callback) {\r\n\t\t\tthis._onChangeCallback = callback;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t_onChangeCallback() {}\r\n\r\n\t}\r\n\r\n\tEuler.prototype.isEuler = true;\r\n\tEuler.DefaultOrder = 'XYZ';\r\n\tEuler.RotationOrders = ['XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX'];\r\n\r\n\tclass Layers {\r\n\t\tconstructor() {\r\n\t\t\tthis.mask = 1 | 0;\r\n\t\t}\r\n\r\n\t\tset(channel) {\r\n\t\t\tthis.mask = 1 << channel | 0;\r\n\t\t}\r\n\r\n\t\tenable(channel) {\r\n\t\t\tthis.mask |= 1 << channel | 0;\r\n\t\t}\r\n\r\n\t\tenableAll() {\r\n\t\t\tthis.mask = 0xffffffff | 0;\r\n\t\t}\r\n\r\n\t\ttoggle(channel) {\r\n\t\t\tthis.mask ^= 1 << channel | 0;\r\n\t\t}\r\n\r\n\t\tdisable(channel) {\r\n\t\t\tthis.mask &= ~(1 << channel | 0);\r\n\t\t}\r\n\r\n\t\tdisableAll() {\r\n\t\t\tthis.mask = 0;\r\n\t\t}\r\n\r\n\t\ttest(layers) {\r\n\t\t\treturn (this.mask & layers.mask) !== 0;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tlet _object3DId = 0;\r\n\r\n\tconst _v1$4 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _q1 = /*@__PURE__*/new Quaternion();\r\n\r\n\tconst _m1$1 = /*@__PURE__*/new Matrix4();\r\n\r\n\tconst _target = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _position$3 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _scale$2 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _quaternion$2 = /*@__PURE__*/new Quaternion();\r\n\r\n\tconst _xAxis = /*@__PURE__*/new Vector3(1, 0, 0);\r\n\r\n\tconst _yAxis = /*@__PURE__*/new Vector3(0, 1, 0);\r\n\r\n\tconst _zAxis = /*@__PURE__*/new Vector3(0, 0, 1);\r\n\r\n\tconst _addedEvent = {\r\n\t\ttype: 'added'\r\n\t};\r\n\tconst _removedEvent = {\r\n\t\ttype: 'removed'\r\n\t};\r\n\r\n\tclass Object3D extends EventDispatcher {\r\n\t\tconstructor() {\r\n\t\t\tsuper();\r\n\t\t\tObject.defineProperty(this, 'id', {\r\n\t\t\t\tvalue: _object3DId++\r\n\t\t\t});\r\n\t\t\tthis.uuid = generateUUID();\r\n\t\t\tthis.name = '';\r\n\t\t\tthis.type = 'Object3D';\r\n\t\t\tthis.parent = null;\r\n\t\t\tthis.children = [];\r\n\t\t\tthis.up = Object3D.DefaultUp.clone();\r\n\t\t\tconst position = new Vector3();\r\n\t\t\tconst rotation = new Euler();\r\n\t\t\tconst quaternion = new Quaternion();\r\n\t\t\tconst scale = new Vector3(1, 1, 1);\r\n\r\n\t\t\tfunction onRotationChange() {\r\n\t\t\t\tquaternion.setFromEuler(rotation, false);\r\n\t\t\t}\r\n\r\n\t\t\tfunction onQuaternionChange() {\r\n\t\t\t\trotation.setFromQuaternion(quaternion, undefined, false);\r\n\t\t\t}\r\n\r\n\t\t\trotation._onChange(onRotationChange);\r\n\r\n\t\t\tquaternion._onChange(onQuaternionChange);\r\n\r\n\t\t\tObject.defineProperties(this, {\r\n\t\t\t\tposition: {\r\n\t\t\t\t\tconfigurable: true,\r\n\t\t\t\t\tenumerable: true,\r\n\t\t\t\t\tvalue: position\r\n\t\t\t\t},\r\n\t\t\t\trotation: {\r\n\t\t\t\t\tconfigurable: true,\r\n\t\t\t\t\tenumerable: true,\r\n\t\t\t\t\tvalue: rotation\r\n\t\t\t\t},\r\n\t\t\t\tquaternion: {\r\n\t\t\t\t\tconfigurable: true,\r\n\t\t\t\t\tenumerable: true,\r\n\t\t\t\t\tvalue: quaternion\r\n\t\t\t\t},\r\n\t\t\t\tscale: {\r\n\t\t\t\t\tconfigurable: true,\r\n\t\t\t\t\tenumerable: true,\r\n\t\t\t\t\tvalue: scale\r\n\t\t\t\t},\r\n\t\t\t\tmodelViewMatrix: {\r\n\t\t\t\t\tvalue: new Matrix4()\r\n\t\t\t\t},\r\n\t\t\t\tnormalMatrix: {\r\n\t\t\t\t\tvalue: new Matrix3()\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.matrix = new Matrix4();\r\n\t\t\tthis.matrixWorld = new Matrix4();\r\n\t\t\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\r\n\t\t\tthis.matrixWorldNeedsUpdate = false;\r\n\t\t\tthis.layers = new Layers();\r\n\t\t\tthis.visible = true;\r\n\t\t\tthis.castShadow = false;\r\n\t\t\tthis.receiveShadow = false;\r\n\t\t\tthis.frustumCulled = true;\r\n\t\t\tthis.renderOrder = 0;\r\n\t\t\tthis.animations = [];\r\n\t\t\tthis.userData = {};\r\n\t\t}\r\n\r\n\t\tonBeforeRender() {}\r\n\r\n\t\tonAfterRender() {}\r\n\r\n\t\tapplyMatrix4(matrix) {\r\n\t\t\tif (this.matrixAutoUpdate) this.updateMatrix();\r\n\t\t\tthis.matrix.premultiply(matrix);\r\n\t\t\tthis.matrix.decompose(this.position, this.quaternion, this.scale);\r\n\t\t}\r\n\r\n\t\tapplyQuaternion(q) {\r\n\t\t\tthis.quaternion.premultiply(q);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetRotationFromAxisAngle(axis, angle) {\r\n\t\t\t// assumes axis is normalized\r\n\t\t\tthis.quaternion.setFromAxisAngle(axis, angle);\r\n\t\t}\r\n\r\n\t\tsetRotationFromEuler(euler) {\r\n\t\t\tthis.quaternion.setFromEuler(euler, true);\r\n\t\t}\r\n\r\n\t\tsetRotationFromMatrix(m) {\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\t\tthis.quaternion.setFromRotationMatrix(m);\r\n\t\t}\r\n\r\n\t\tsetRotationFromQuaternion(q) {\r\n\t\t\t// assumes q is normalized\r\n\t\t\tthis.quaternion.copy(q);\r\n\t\t}\r\n\r\n\t\trotateOnAxis(axis, angle) {\r\n\t\t\t// rotate object on axis in object space\r\n\t\t\t// axis is assumed to be normalized\r\n\t\t\t_q1.setFromAxisAngle(axis, angle);\r\n\r\n\t\t\tthis.quaternion.multiply(_q1);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\trotateOnWorldAxis(axis, angle) {\r\n\t\t\t// rotate object on axis in world space\r\n\t\t\t// axis is assumed to be normalized\r\n\t\t\t// method assumes no rotated parent\r\n\t\t\t_q1.setFromAxisAngle(axis, angle);\r\n\r\n\t\t\tthis.quaternion.premultiply(_q1);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\trotateX(angle) {\r\n\t\t\treturn this.rotateOnAxis(_xAxis, angle);\r\n\t\t}\r\n\r\n\t\trotateY(angle) {\r\n\t\t\treturn this.rotateOnAxis(_yAxis, angle);\r\n\t\t}\r\n\r\n\t\trotateZ(angle) {\r\n\t\t\treturn this.rotateOnAxis(_zAxis, angle);\r\n\t\t}\r\n\r\n\t\ttranslateOnAxis(axis, distance) {\r\n\t\t\t// translate object by distance along axis in object space\r\n\t\t\t// axis is assumed to be normalized\r\n\t\t\t_v1$4.copy(axis).applyQuaternion(this.quaternion);\r\n\r\n\t\t\tthis.position.add(_v1$4.multiplyScalar(distance));\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttranslateX(distance) {\r\n\t\t\treturn this.translateOnAxis(_xAxis, distance);\r\n\t\t}\r\n\r\n\t\ttranslateY(distance) {\r\n\t\t\treturn this.translateOnAxis(_yAxis, distance);\r\n\t\t}\r\n\r\n\t\ttranslateZ(distance) {\r\n\t\t\treturn this.translateOnAxis(_zAxis, distance);\r\n\t\t}\r\n\r\n\t\tlocalToWorld(vector) {\r\n\t\t\treturn vector.applyMatrix4(this.matrixWorld);\r\n\t\t}\r\n\r\n\t\tworldToLocal(vector) {\r\n\t\t\treturn vector.applyMatrix4(_m1$1.copy(this.matrixWorld).invert());\r\n\t\t}\r\n\r\n\t\tlookAt(x, y, z) {\r\n\t\t\t// This method does not support objects having non-uniformly-scaled parent(s)\r\n\t\t\tif (x.isVector3) {\r\n\t\t\t\t_target.copy(x);\r\n\t\t\t} else {\r\n\t\t\t\t_target.set(x, y, z);\r\n\t\t\t}\r\n\r\n\t\t\tconst parent = this.parent;\r\n\t\t\tthis.updateWorldMatrix(true, false);\r\n\r\n\t\t\t_position$3.setFromMatrixPosition(this.matrixWorld);\r\n\r\n\t\t\tif (this.isCamera || this.isLight) {\r\n\t\t\t\t_m1$1.lookAt(_position$3, _target, this.up);\r\n\t\t\t} else {\r\n\t\t\t\t_m1$1.lookAt(_target, _position$3, this.up);\r\n\t\t\t}\r\n\r\n\t\t\tthis.quaternion.setFromRotationMatrix(_m1$1);\r\n\r\n\t\t\tif (parent) {\r\n\t\t\t\t_m1$1.extractRotation(parent.matrixWorld);\r\n\r\n\t\t\t\t_q1.setFromRotationMatrix(_m1$1);\r\n\r\n\t\t\t\tthis.quaternion.premultiply(_q1.invert());\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tadd(object) {\r\n\t\t\tif (arguments.length > 1) {\r\n\t\t\t\tfor (let i = 0; i < arguments.length; i++) {\r\n\t\t\t\t\tthis.add(arguments[i]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\r\n\t\t\tif (object === this) {\r\n\t\t\t\tconsole.error('THREE.Object3D.add: object can\\'t be added as a child of itself.', object);\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\r\n\t\t\tif (object && object.isObject3D) {\r\n\t\t\t\tif (object.parent !== null) {\r\n\t\t\t\t\tobject.parent.remove(object);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tobject.parent = this;\r\n\t\t\t\tthis.children.push(object);\r\n\t\t\t\tobject.dispatchEvent(_addedEvent);\r\n\t\t\t} else {\r\n\t\t\t\tconsole.error('THREE.Object3D.add: object not an instance of THREE.Object3D.', object);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tremove(object) {\r\n\t\t\tif (arguments.length > 1) {\r\n\t\t\t\tfor (let i = 0; i < arguments.length; i++) {\r\n\t\t\t\t\tthis.remove(arguments[i]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\r\n\t\t\tconst index = this.children.indexOf(object);\r\n\r\n\t\t\tif (index !== -1) {\r\n\t\t\t\tobject.parent = null;\r\n\t\t\t\tthis.children.splice(index, 1);\r\n\t\t\t\tobject.dispatchEvent(_removedEvent);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tremoveFromParent() {\r\n\t\t\tconst parent = this.parent;\r\n\r\n\t\t\tif (parent !== null) {\r\n\t\t\t\tparent.remove(this);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclear() {\r\n\t\t\tfor (let i = 0; i < this.children.length; i++) {\r\n\t\t\t\tconst object = this.children[i];\r\n\t\t\t\tobject.parent = null;\r\n\t\t\t\tobject.dispatchEvent(_removedEvent);\r\n\t\t\t}\r\n\r\n\t\t\tthis.children.length = 0;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tattach(object) {\r\n\t\t\t// adds object as a child of this, while maintaining the object's world transform\r\n\t\t\tthis.updateWorldMatrix(true, false);\r\n\r\n\t\t\t_m1$1.copy(this.matrixWorld).invert();\r\n\r\n\t\t\tif (object.parent !== null) {\r\n\t\t\t\tobject.parent.updateWorldMatrix(true, false);\r\n\r\n\t\t\t\t_m1$1.multiply(object.parent.matrixWorld);\r\n\t\t\t}\r\n\r\n\t\t\tobject.applyMatrix4(_m1$1);\r\n\t\t\tthis.add(object);\r\n\t\t\tobject.updateWorldMatrix(false, true);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetObjectById(id) {\r\n\t\t\treturn this.getObjectByProperty('id', id);\r\n\t\t}\r\n\r\n\t\tgetObjectByName(name) {\r\n\t\t\treturn this.getObjectByProperty('name', name);\r\n\t\t}\r\n\r\n\t\tgetObjectByProperty(name, value) {\r\n\t\t\tif (this[name] === value) return this;\r\n\r\n\t\t\tfor (let i = 0, l = this.children.length; i < l; i++) {\r\n\t\t\t\tconst child = this.children[i];\r\n\t\t\t\tconst object = child.getObjectByProperty(name, value);\r\n\r\n\t\t\t\tif (object !== undefined) {\r\n\t\t\t\t\treturn object;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t\tgetWorldPosition(target) {\r\n\t\t\tthis.updateWorldMatrix(true, false);\r\n\t\t\treturn target.setFromMatrixPosition(this.matrixWorld);\r\n\t\t}\r\n\r\n\t\tgetWorldQuaternion(target) {\r\n\t\t\tthis.updateWorldMatrix(true, false);\r\n\t\t\tthis.matrixWorld.decompose(_position$3, target, _scale$2);\r\n\t\t\treturn target;\r\n\t\t}\r\n\r\n\t\tgetWorldScale(target) {\r\n\t\t\tthis.updateWorldMatrix(true, false);\r\n\t\t\tthis.matrixWorld.decompose(_position$3, _quaternion$2, target);\r\n\t\t\treturn target;\r\n\t\t}\r\n\r\n\t\tgetWorldDirection(target) {\r\n\t\t\tthis.updateWorldMatrix(true, false);\r\n\t\t\tconst e = this.matrixWorld.elements;\r\n\t\t\treturn target.set(e[8], e[9], e[10]).normalize();\r\n\t\t}\r\n\r\n\t\traycast() {}\r\n\r\n\t\ttraverse(callback) {\r\n\t\t\tcallback(this);\r\n\t\t\tconst children = this.children;\r\n\r\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\r\n\t\t\t\tchildren[i].traverse(callback);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttraverseVisible(callback) {\r\n\t\t\tif (this.visible === false) return;\r\n\t\t\tcallback(this);\r\n\t\t\tconst children = this.children;\r\n\r\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\r\n\t\t\t\tchildren[i].traverseVisible(callback);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttraverseAncestors(callback) {\r\n\t\t\tconst parent = this.parent;\r\n\r\n\t\t\tif (parent !== null) {\r\n\t\t\t\tcallback(parent);\r\n\t\t\t\tparent.traverseAncestors(callback);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tupdateMatrix() {\r\n\t\t\tthis.matrix.compose(this.position, this.quaternion, this.scale);\r\n\t\t\tthis.matrixWorldNeedsUpdate = true;\r\n\t\t}\r\n\r\n\t\tupdateMatrixWorld(force) {\r\n\t\t\tif (this.matrixAutoUpdate) this.updateMatrix();\r\n\r\n\t\t\tif (this.matrixWorldNeedsUpdate || force) {\r\n\t\t\t\tif (this.parent === null) {\r\n\t\t\t\t\tthis.matrixWorld.copy(this.matrix);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.matrixWorldNeedsUpdate = false;\r\n\t\t\t\tforce = true;\r\n\t\t\t} // update children\r\n\r\n\r\n\t\t\tconst children = this.children;\r\n\r\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\r\n\t\t\t\tchildren[i].updateMatrixWorld(force);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tupdateWorldMatrix(updateParents, updateChildren) {\r\n\t\t\tconst parent = this.parent;\r\n\r\n\t\t\tif (updateParents === true && parent !== null) {\r\n\t\t\t\tparent.updateWorldMatrix(true, false);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.matrixAutoUpdate) this.updateMatrix();\r\n\r\n\t\t\tif (this.parent === null) {\r\n\t\t\t\tthis.matrixWorld.copy(this.matrix);\r\n\t\t\t} else {\r\n\t\t\t\tthis.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\r\n\t\t\t} // update children\r\n\r\n\r\n\t\t\tif (updateChildren === true) {\r\n\t\t\t\tconst children = this.children;\r\n\r\n\t\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\r\n\t\t\t\t\tchildren[i].updateWorldMatrix(false, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttoJSON(meta) {\r\n\t\t\t// meta is a string when called from JSON.stringify\r\n\t\t\tconst isRootObject = meta === undefined || typeof meta === 'string';\r\n\t\t\tconst output = {}; // meta is a hash used to collect geometries, materials.\r\n\t\t\t// not providing it implies that this is the root object\r\n\t\t\t// being serialized.\r\n\r\n\t\t\tif (isRootObject) {\r\n\t\t\t\t// initialize meta obj\r\n\t\t\t\tmeta = {\r\n\t\t\t\t\tgeometries: {},\r\n\t\t\t\t\tmaterials: {},\r\n\t\t\t\t\ttextures: {},\r\n\t\t\t\t\timages: {},\r\n\t\t\t\t\tshapes: {},\r\n\t\t\t\t\tskeletons: {},\r\n\t\t\t\t\tanimations: {}\r\n\t\t\t\t};\r\n\t\t\t\toutput.metadata = {\r\n\t\t\t\t\tversion: 4.5,\r\n\t\t\t\t\ttype: 'Object',\r\n\t\t\t\t\tgenerator: 'Object3D.toJSON'\r\n\t\t\t\t};\r\n\t\t\t} // standard Object3D serialization\r\n\r\n\r\n\t\t\tconst object = {};\r\n\t\t\tobject.uuid = this.uuid;\r\n\t\t\tobject.type = this.type;\r\n\t\t\tif (this.name !== '') object.name = this.name;\r\n\t\t\tif (this.castShadow === true) object.castShadow = true;\r\n\t\t\tif (this.receiveShadow === true) object.receiveShadow = true;\r\n\t\t\tif (this.visible === false) object.visible = false;\r\n\t\t\tif (this.frustumCulled === false) object.frustumCulled = false;\r\n\t\t\tif (this.renderOrder !== 0) object.renderOrder = this.renderOrder;\r\n\t\t\tif (JSON.stringify(this.userData) !== '{}') object.userData = this.userData;\r\n\t\t\tobject.layers = this.layers.mask;\r\n\t\t\tobject.matrix = this.matrix.toArray();\r\n\t\t\tif (this.matrixAutoUpdate === false) object.matrixAutoUpdate = false; // object specific properties\r\n\r\n\t\t\tif (this.isInstancedMesh) {\r\n\t\t\t\tobject.type = 'InstancedMesh';\r\n\t\t\t\tobject.count = this.count;\r\n\t\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\r\n\t\t\t\tif (this.instanceColor !== null) object.instanceColor = this.instanceColor.toJSON();\r\n\t\t\t} //\r\n\r\n\r\n\t\t\tfunction serialize(library, element) {\r\n\t\t\t\tif (library[element.uuid] === undefined) {\r\n\t\t\t\t\tlibrary[element.uuid] = element.toJSON(meta);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn element.uuid;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.isScene) {\r\n\t\t\t\tif (this.background) {\r\n\t\t\t\t\tif (this.background.isColor) {\r\n\t\t\t\t\t\tobject.background = this.background.toJSON();\r\n\t\t\t\t\t} else if (this.background.isTexture) {\r\n\t\t\t\t\t\tobject.background = this.background.toJSON(meta).uuid;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.environment && this.environment.isTexture) {\r\n\t\t\t\t\tobject.environment = this.environment.toJSON(meta).uuid;\r\n\t\t\t\t}\r\n\t\t\t} else if (this.isMesh || this.isLine || this.isPoints) {\r\n\t\t\t\tobject.geometry = serialize(meta.geometries, this.geometry);\r\n\t\t\t\tconst parameters = this.geometry.parameters;\r\n\r\n\t\t\t\tif (parameters !== undefined && parameters.shapes !== undefined) {\r\n\t\t\t\t\tconst shapes = parameters.shapes;\r\n\r\n\t\t\t\t\tif (Array.isArray(shapes)) {\r\n\t\t\t\t\t\tfor (let i = 0, l = shapes.length; i < l; i++) {\r\n\t\t\t\t\t\t\tconst shape = shapes[i];\r\n\t\t\t\t\t\t\tserialize(meta.shapes, shape);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tserialize(meta.shapes, shapes);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.isSkinnedMesh) {\r\n\t\t\t\tobject.bindMode = this.bindMode;\r\n\t\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\r\n\r\n\t\t\t\tif (this.skeleton !== undefined) {\r\n\t\t\t\t\tserialize(meta.skeletons, this.skeleton);\r\n\t\t\t\t\tobject.skeleton = this.skeleton.uuid;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.material !== undefined) {\r\n\t\t\t\tif (Array.isArray(this.material)) {\r\n\t\t\t\t\tconst uuids = [];\r\n\r\n\t\t\t\t\tfor (let i = 0, l = this.material.length; i < l; i++) {\r\n\t\t\t\t\t\tuuids.push(serialize(meta.materials, this.material[i]));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tobject.material = uuids;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tobject.material = serialize(meta.materials, this.material);\r\n\t\t\t\t}\r\n\t\t\t} //\r\n\r\n\r\n\t\t\tif (this.children.length > 0) {\r\n\t\t\t\tobject.children = [];\r\n\r\n\t\t\t\tfor (let i = 0; i < this.children.length; i++) {\r\n\t\t\t\t\tobject.children.push(this.children[i].toJSON(meta).object);\r\n\t\t\t\t}\r\n\t\t\t} //\r\n\r\n\r\n\t\t\tif (this.animations.length > 0) {\r\n\t\t\t\tobject.animations = [];\r\n\r\n\t\t\t\tfor (let i = 0; i < this.animations.length; i++) {\r\n\t\t\t\t\tconst animation = this.animations[i];\r\n\t\t\t\t\tobject.animations.push(serialize(meta.animations, animation));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (isRootObject) {\r\n\t\t\t\tconst geometries = extractFromCache(meta.geometries);\r\n\t\t\t\tconst materials = extractFromCache(meta.materials);\r\n\t\t\t\tconst textures = extractFromCache(meta.textures);\r\n\t\t\t\tconst images = extractFromCache(meta.images);\r\n\t\t\t\tconst shapes = extractFromCache(meta.shapes);\r\n\t\t\t\tconst skeletons = extractFromCache(meta.skeletons);\r\n\t\t\t\tconst animations = extractFromCache(meta.animations);\r\n\t\t\t\tif (geometries.length > 0) output.geometries = geometries;\r\n\t\t\t\tif (materials.length > 0) output.materials = materials;\r\n\t\t\t\tif (textures.length > 0) output.textures = textures;\r\n\t\t\t\tif (images.length > 0) output.images = images;\r\n\t\t\t\tif (shapes.length > 0) output.shapes = shapes;\r\n\t\t\t\tif (skeletons.length > 0) output.skeletons = skeletons;\r\n\t\t\t\tif (animations.length > 0) output.animations = animations;\r\n\t\t\t}\r\n\r\n\t\t\toutput.object = object;\r\n\t\t\treturn output; // extract data from the cache hash\r\n\t\t\t// remove metadata on each item\r\n\t\t\t// and return as array\r\n\r\n\t\t\tfunction extractFromCache(cache) {\r\n\t\t\t\tconst values = [];\r\n\r\n\t\t\t\tfor (const key in cache) {\r\n\t\t\t\t\tconst data = cache[key];\r\n\t\t\t\t\tdelete data.metadata;\r\n\t\t\t\t\tvalues.push(data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn values;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tclone(recursive) {\r\n\t\t\treturn new this.constructor().copy(this, recursive);\r\n\t\t}\r\n\r\n\t\tcopy(source, recursive = true) {\r\n\t\t\tthis.name = source.name;\r\n\t\t\tthis.up.copy(source.up);\r\n\t\t\tthis.position.copy(source.position);\r\n\t\t\tthis.rotation.order = source.rotation.order;\r\n\t\t\tthis.quaternion.copy(source.quaternion);\r\n\t\t\tthis.scale.copy(source.scale);\r\n\t\t\tthis.matrix.copy(source.matrix);\r\n\t\t\tthis.matrixWorld.copy(source.matrixWorld);\r\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\r\n\t\t\tthis.layers.mask = source.layers.mask;\r\n\t\t\tthis.visible = source.visible;\r\n\t\t\tthis.castShadow = source.castShadow;\r\n\t\t\tthis.receiveShadow = source.receiveShadow;\r\n\t\t\tthis.frustumCulled = source.frustumCulled;\r\n\t\t\tthis.renderOrder = source.renderOrder;\r\n\t\t\tthis.userData = JSON.parse(JSON.stringify(source.userData));\r\n\r\n\t\t\tif (recursive === true) {\r\n\t\t\t\tfor (let i = 0; i < source.children.length; i++) {\r\n\t\t\t\t\tconst child = source.children[i];\r\n\t\t\t\t\tthis.add(child.clone());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tObject3D.DefaultUp = new Vector3(0, 1, 0);\r\n\tObject3D.DefaultMatrixAutoUpdate = true;\r\n\tObject3D.prototype.isObject3D = true;\r\n\r\n\tconst _v0$1 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _v1$3 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _v2$2 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _v3$1 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _vab = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _vac = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _vbc = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _vap = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _vbp = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _vcp = /*@__PURE__*/new Vector3();\r\n\r\n\tclass Triangle {\r\n\t\tconstructor(a = new Vector3(), b = new Vector3(), c = new Vector3()) {\r\n\t\t\tthis.a = a;\r\n\t\t\tthis.b = b;\r\n\t\t\tthis.c = c;\r\n\t\t}\r\n\r\n\t\tstatic getNormal(a, b, c, target) {\r\n\t\t\ttarget.subVectors(c, b);\r\n\r\n\t\t\t_v0$1.subVectors(a, b);\r\n\r\n\t\t\ttarget.cross(_v0$1);\r\n\t\t\tconst targetLengthSq = target.lengthSq();\r\n\r\n\t\t\tif (targetLengthSq > 0) {\r\n\t\t\t\treturn target.multiplyScalar(1 / Math.sqrt(targetLengthSq));\r\n\t\t\t}\r\n\r\n\t\t\treturn target.set(0, 0, 0);\r\n\t\t} // static/instance method to calculate barycentric coordinates\r\n\t\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\r\n\r\n\r\n\t\tstatic getBarycoord(point, a, b, c, target) {\r\n\t\t\t_v0$1.subVectors(c, a);\r\n\r\n\t\t\t_v1$3.subVectors(b, a);\r\n\r\n\t\t\t_v2$2.subVectors(point, a);\r\n\r\n\t\t\tconst dot00 = _v0$1.dot(_v0$1);\r\n\r\n\t\t\tconst dot01 = _v0$1.dot(_v1$3);\r\n\r\n\t\t\tconst dot02 = _v0$1.dot(_v2$2);\r\n\r\n\t\t\tconst dot11 = _v1$3.dot(_v1$3);\r\n\r\n\t\t\tconst dot12 = _v1$3.dot(_v2$2);\r\n\r\n\t\t\tconst denom = dot00 * dot11 - dot01 * dot01; // collinear or singular triangle\r\n\r\n\t\t\tif (denom === 0) {\r\n\t\t\t\t// arbitrary location outside of triangle?\r\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\r\n\t\t\t\treturn target.set(-2, -1, -1);\r\n\t\t\t}\r\n\r\n\t\t\tconst invDenom = 1 / denom;\r\n\t\t\tconst u = (dot11 * dot02 - dot01 * dot12) * invDenom;\r\n\t\t\tconst v = (dot00 * dot12 - dot01 * dot02) * invDenom; // barycentric coordinates must always sum to 1\r\n\r\n\t\t\treturn target.set(1 - u - v, v, u);\r\n\t\t}\r\n\r\n\t\tstatic containsPoint(point, a, b, c) {\r\n\t\t\tthis.getBarycoord(point, a, b, c, _v3$1);\r\n\t\t\treturn _v3$1.x >= 0 && _v3$1.y >= 0 && _v3$1.x + _v3$1.y <= 1;\r\n\t\t}\r\n\r\n\t\tstatic getUV(point, p1, p2, p3, uv1, uv2, uv3, target) {\r\n\t\t\tthis.getBarycoord(point, p1, p2, p3, _v3$1);\r\n\t\t\ttarget.set(0, 0);\r\n\t\t\ttarget.addScaledVector(uv1, _v3$1.x);\r\n\t\t\ttarget.addScaledVector(uv2, _v3$1.y);\r\n\t\t\ttarget.addScaledVector(uv3, _v3$1.z);\r\n\t\t\treturn target;\r\n\t\t}\r\n\r\n\t\tstatic isFrontFacing(a, b, c, direction) {\r\n\t\t\t_v0$1.subVectors(c, b);\r\n\r\n\t\t\t_v1$3.subVectors(a, b); // strictly front facing\r\n\r\n\r\n\t\t\treturn _v0$1.cross(_v1$3).dot(direction) < 0 ? true : false;\r\n\t\t}\r\n\r\n\t\tset(a, b, c) {\r\n\t\t\tthis.a.copy(a);\r\n\t\t\tthis.b.copy(b);\r\n\t\t\tthis.c.copy(c);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromPointsAndIndices(points, i0, i1, i2) {\r\n\t\t\tthis.a.copy(points[i0]);\r\n\t\t\tthis.b.copy(points[i1]);\r\n\t\t\tthis.c.copy(points[i2]);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor().copy(this);\r\n\t\t}\r\n\r\n\t\tcopy(triangle) {\r\n\t\t\tthis.a.copy(triangle.a);\r\n\t\t\tthis.b.copy(triangle.b);\r\n\t\t\tthis.c.copy(triangle.c);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetArea() {\r\n\t\t\t_v0$1.subVectors(this.c, this.b);\r\n\r\n\t\t\t_v1$3.subVectors(this.a, this.b);\r\n\r\n\t\t\treturn _v0$1.cross(_v1$3).length() * 0.5;\r\n\t\t}\r\n\r\n\t\tgetMidpoint(target) {\r\n\t\t\treturn target.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);\r\n\t\t}\r\n\r\n\t\tgetNormal(target) {\r\n\t\t\treturn Triangle.getNormal(this.a, this.b, this.c, target);\r\n\t\t}\r\n\r\n\t\tgetPlane(target) {\r\n\t\t\treturn target.setFromCoplanarPoints(this.a, this.b, this.c);\r\n\t\t}\r\n\r\n\t\tgetBarycoord(point, target) {\r\n\t\t\treturn Triangle.getBarycoord(point, this.a, this.b, this.c, target);\r\n\t\t}\r\n\r\n\t\tgetUV(point, uv1, uv2, uv3, target) {\r\n\t\t\treturn Triangle.getUV(point, this.a, this.b, this.c, uv1, uv2, uv3, target);\r\n\t\t}\r\n\r\n\t\tcontainsPoint(point) {\r\n\t\t\treturn Triangle.containsPoint(point, this.a, this.b, this.c);\r\n\t\t}\r\n\r\n\t\tisFrontFacing(direction) {\r\n\t\t\treturn Triangle.isFrontFacing(this.a, this.b, this.c, direction);\r\n\t\t}\r\n\r\n\t\tintersectsBox(box) {\r\n\t\t\treturn box.intersectsTriangle(this);\r\n\t\t}\r\n\r\n\t\tclosestPointToPoint(p, target) {\r\n\t\t\tconst a = this.a,\r\n\t\t\t\t\t\tb = this.b,\r\n\t\t\t\t\t\tc = this.c;\r\n\t\t\tlet v, w; // algorithm thanks to Real-Time Collision Detection by Christer Ericson,\r\n\t\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\r\n\t\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\r\n\t\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\r\n\t\t\t// the point lies in with the minimum amount of redundant computation.\r\n\r\n\t\t\t_vab.subVectors(b, a);\r\n\r\n\t\t\t_vac.subVectors(c, a);\r\n\r\n\t\t\t_vap.subVectors(p, a);\r\n\r\n\t\t\tconst d1 = _vab.dot(_vap);\r\n\r\n\t\t\tconst d2 = _vac.dot(_vap);\r\n\r\n\t\t\tif (d1 <= 0 && d2 <= 0) {\r\n\t\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\r\n\t\t\t\treturn target.copy(a);\r\n\t\t\t}\r\n\r\n\t\t\t_vbp.subVectors(p, b);\r\n\r\n\t\t\tconst d3 = _vab.dot(_vbp);\r\n\r\n\t\t\tconst d4 = _vac.dot(_vbp);\r\n\r\n\t\t\tif (d3 >= 0 && d4 <= d3) {\r\n\t\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\r\n\t\t\t\treturn target.copy(b);\r\n\t\t\t}\r\n\r\n\t\t\tconst vc = d1 * d4 - d3 * d2;\r\n\r\n\t\t\tif (vc <= 0 && d1 >= 0 && d3 <= 0) {\r\n\t\t\t\tv = d1 / (d1 - d3); // edge region of AB; barycentric coords (1-v, v, 0)\r\n\r\n\t\t\t\treturn target.copy(a).addScaledVector(_vab, v);\r\n\t\t\t}\r\n\r\n\t\t\t_vcp.subVectors(p, c);\r\n\r\n\t\t\tconst d5 = _vab.dot(_vcp);\r\n\r\n\t\t\tconst d6 = _vac.dot(_vcp);\r\n\r\n\t\t\tif (d6 >= 0 && d5 <= d6) {\r\n\t\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\r\n\t\t\t\treturn target.copy(c);\r\n\t\t\t}\r\n\r\n\t\t\tconst vb = d5 * d2 - d1 * d6;\r\n\r\n\t\t\tif (vb <= 0 && d2 >= 0 && d6 <= 0) {\r\n\t\t\t\tw = d2 / (d2 - d6); // edge region of AC; barycentric coords (1-w, 0, w)\r\n\r\n\t\t\t\treturn target.copy(a).addScaledVector(_vac, w);\r\n\t\t\t}\r\n\r\n\t\t\tconst va = d3 * d6 - d5 * d4;\r\n\r\n\t\t\tif (va <= 0 && d4 - d3 >= 0 && d5 - d6 >= 0) {\r\n\t\t\t\t_vbc.subVectors(c, b);\r\n\r\n\t\t\t\tw = (d4 - d3) / (d4 - d3 + (d5 - d6)); // edge region of BC; barycentric coords (0, 1-w, w)\r\n\r\n\t\t\t\treturn target.copy(b).addScaledVector(_vbc, w); // edge region of BC\r\n\t\t\t} // face region\r\n\r\n\r\n\t\t\tconst denom = 1 / (va + vb + vc); // u = va * denom\r\n\r\n\t\t\tv = vb * denom;\r\n\t\t\tw = vc * denom;\r\n\t\t\treturn target.copy(a).addScaledVector(_vab, v).addScaledVector(_vac, w);\r\n\t\t}\r\n\r\n\t\tequals(triangle) {\r\n\t\t\treturn triangle.a.equals(this.a) && triangle.b.equals(this.b) && triangle.c.equals(this.c);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tlet materialId = 0;\r\n\r\n\tclass Material extends EventDispatcher {\r\n\t\tconstructor() {\r\n\t\t\tsuper();\r\n\t\t\tObject.defineProperty(this, 'id', {\r\n\t\t\t\tvalue: materialId++\r\n\t\t\t});\r\n\t\t\tthis.uuid = generateUUID();\r\n\t\t\tthis.name = '';\r\n\t\t\tthis.type = 'Material';\r\n\t\t\tthis.fog = true;\r\n\t\t\tthis.blending = NormalBlending;\r\n\t\t\tthis.side = FrontSide;\r\n\t\t\tthis.vertexColors = false;\r\n\t\t\tthis.opacity = 1;\r\n\t\t\tthis.transparent = false;\r\n\t\t\tthis.blendSrc = SrcAlphaFactor;\r\n\t\t\tthis.blendDst = OneMinusSrcAlphaFactor;\r\n\t\t\tthis.blendEquation = AddEquation;\r\n\t\t\tthis.blendSrcAlpha = null;\r\n\t\t\tthis.blendDstAlpha = null;\r\n\t\t\tthis.blendEquationAlpha = null;\r\n\t\t\tthis.depthFunc = LessEqualDepth;\r\n\t\t\tthis.depthTest = true;\r\n\t\t\tthis.depthWrite = true;\r\n\t\t\tthis.stencilWriteMask = 0xff;\r\n\t\t\tthis.stencilFunc = AlwaysStencilFunc;\r\n\t\t\tthis.stencilRef = 0;\r\n\t\t\tthis.stencilFuncMask = 0xff;\r\n\t\t\tthis.stencilFail = KeepStencilOp;\r\n\t\t\tthis.stencilZFail = KeepStencilOp;\r\n\t\t\tthis.stencilZPass = KeepStencilOp;\r\n\t\t\tthis.stencilWrite = false;\r\n\t\t\tthis.clippingPlanes = null;\r\n\t\t\tthis.clipIntersection = false;\r\n\t\t\tthis.clipShadows = false;\r\n\t\t\tthis.shadowSide = null;\r\n\t\t\tthis.colorWrite = true;\r\n\t\t\tthis.precision = null; // override the renderer's default precision for this material\r\n\r\n\t\t\tthis.polygonOffset = false;\r\n\t\t\tthis.polygonOffsetFactor = 0;\r\n\t\t\tthis.polygonOffsetUnits = 0;\r\n\t\t\tthis.dithering = false;\r\n\t\t\tthis.alphaTest = 0;\r\n\t\t\tthis.alphaToCoverage = false;\r\n\t\t\tthis.premultipliedAlpha = false;\r\n\t\t\tthis.visible = true;\r\n\t\t\tthis.toneMapped = true;\r\n\t\t\tthis.userData = {};\r\n\t\t\tthis.version = 0;\r\n\t\t}\r\n\r\n\t\tonBuild()\r\n\t\t/* shaderobject, renderer */\r\n\t\t{}\r\n\r\n\t\tonBeforeCompile()\r\n\t\t/* shaderobject, renderer */\r\n\t\t{}\r\n\r\n\t\tcustomProgramCacheKey() {\r\n\t\t\treturn this.onBeforeCompile.toString();\r\n\t\t}\r\n\r\n\t\tsetValues(values) {\r\n\t\t\tif (values === undefined) return;\r\n\r\n\t\t\tfor (const key in values) {\r\n\t\t\t\tconst newValue = values[key];\r\n\r\n\t\t\t\tif (newValue === undefined) {\r\n\t\t\t\t\tconsole.warn('THREE.Material: \\'' + key + '\\' parameter is undefined.');\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t} // for backward compatability if shading is set in the constructor\r\n\r\n\r\n\t\t\t\tif (key === 'shading') {\r\n\t\t\t\t\tconsole.warn('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\r\n\t\t\t\t\tthis.flatShading = newValue === FlatShading ? true : false;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst currentValue = this[key];\r\n\r\n\t\t\t\tif (currentValue === undefined) {\r\n\t\t\t\t\tconsole.warn('THREE.' + this.type + ': \\'' + key + '\\' is not a property of this material.');\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (currentValue && currentValue.isColor) {\r\n\t\t\t\t\tcurrentValue.set(newValue);\r\n\t\t\t\t} else if (currentValue && currentValue.isVector3 && newValue && newValue.isVector3) {\r\n\t\t\t\t\tcurrentValue.copy(newValue);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis[key] = newValue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttoJSON(meta) {\r\n\t\t\tconst isRoot = meta === undefined || typeof meta === 'string';\r\n\r\n\t\t\tif (isRoot) {\r\n\t\t\t\tmeta = {\r\n\t\t\t\t\ttextures: {},\r\n\t\t\t\t\timages: {}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tconst data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.5,\r\n\t\t\t\t\ttype: 'Material',\r\n\t\t\t\t\tgenerator: 'Material.toJSON'\r\n\t\t\t\t}\r\n\t\t\t}; // standard Material serialization\r\n\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\t\tif (this.name !== '') data.name = this.name;\r\n\t\t\tif (this.color && this.color.isColor) data.color = this.color.getHex();\r\n\t\t\tif (this.roughness !== undefined) data.roughness = this.roughness;\r\n\t\t\tif (this.metalness !== undefined) data.metalness = this.metalness;\r\n\t\t\tif (this.sheen && this.sheen.isColor) data.sheen = this.sheen.getHex();\r\n\t\t\tif (this.emissive && this.emissive.isColor) data.emissive = this.emissive.getHex();\r\n\t\t\tif (this.emissiveIntensity && this.emissiveIntensity !== 1) data.emissiveIntensity = this.emissiveIntensity;\r\n\t\t\tif (this.specular && this.specular.isColor) data.specular = this.specular.getHex();\r\n\t\t\tif (this.specularIntensity !== undefined) data.specularIntensity = this.specularIntensity;\r\n\t\t\tif (this.specularTint && this.specularTint.isColor) data.specularTint = this.specularTint.getHex();\r\n\t\t\tif (this.shininess !== undefined) data.shininess = this.shininess;\r\n\t\t\tif (this.clearcoat !== undefined) data.clearcoat = this.clearcoat;\r\n\t\t\tif (this.clearcoatRoughness !== undefined) data.clearcoatRoughness = this.clearcoatRoughness;\r\n\r\n\t\t\tif (this.clearcoatMap && this.clearcoatMap.isTexture) {\r\n\t\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON(meta).uuid;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture) {\r\n\t\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(meta).uuid;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture) {\r\n\t\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(meta).uuid;\r\n\t\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\r\n\t\t\t}\r\n\r\n\t\t\tif (this.map && this.map.isTexture) data.map = this.map.toJSON(meta).uuid;\r\n\t\t\tif (this.matcap && this.matcap.isTexture) data.matcap = this.matcap.toJSON(meta).uuid;\r\n\t\t\tif (this.alphaMap && this.alphaMap.isTexture) data.alphaMap = this.alphaMap.toJSON(meta).uuid;\r\n\r\n\t\t\tif (this.lightMap && this.lightMap.isTexture) {\r\n\t\t\t\tdata.lightMap = this.lightMap.toJSON(meta).uuid;\r\n\t\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.aoMap && this.aoMap.isTexture) {\r\n\t\t\t\tdata.aoMap = this.aoMap.toJSON(meta).uuid;\r\n\t\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.bumpMap && this.bumpMap.isTexture) {\r\n\t\t\t\tdata.bumpMap = this.bumpMap.toJSON(meta).uuid;\r\n\t\t\t\tdata.bumpScale = this.bumpScale;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.normalMap && this.normalMap.isTexture) {\r\n\t\t\t\tdata.normalMap = this.normalMap.toJSON(meta).uuid;\r\n\t\t\t\tdata.normalMapType = this.normalMapType;\r\n\t\t\t\tdata.normalScale = this.normalScale.toArray();\r\n\t\t\t}\r\n\r\n\t\t\tif (this.displacementMap && this.displacementMap.isTexture) {\r\n\t\t\t\tdata.displacementMap = this.displacementMap.toJSON(meta).uuid;\r\n\t\t\t\tdata.displacementScale = this.displacementScale;\r\n\t\t\t\tdata.displacementBias = this.displacementBias;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.roughnessMap && this.roughnessMap.isTexture) data.roughnessMap = this.roughnessMap.toJSON(meta).uuid;\r\n\t\t\tif (this.metalnessMap && this.metalnessMap.isTexture) data.metalnessMap = this.metalnessMap.toJSON(meta).uuid;\r\n\t\t\tif (this.emissiveMap && this.emissiveMap.isTexture) data.emissiveMap = this.emissiveMap.toJSON(meta).uuid;\r\n\t\t\tif (this.specularMap && this.specularMap.isTexture) data.specularMap = this.specularMap.toJSON(meta).uuid;\r\n\t\t\tif (this.specularIntensityMap && this.specularIntensityMap.isTexture) data.specularIntensityMap = this.specularIntensityMap.toJSON(meta).uuid;\r\n\t\t\tif (this.specularTintMap && this.specularTintMap.isTexture) data.specularTintMap = this.specularTintMap.toJSON(meta).uuid;\r\n\r\n\t\t\tif (this.envMap && this.envMap.isTexture) {\r\n\t\t\t\tdata.envMap = this.envMap.toJSON(meta).uuid;\r\n\t\t\t\tif (this.combine !== undefined) data.combine = this.combine;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.envMapIntensity !== undefined) data.envMapIntensity = this.envMapIntensity;\r\n\t\t\tif (this.reflectivity !== undefined) data.reflectivity = this.reflectivity;\r\n\t\t\tif (this.refractionRatio !== undefined) data.refractionRatio = this.refractionRatio;\r\n\r\n\t\t\tif (this.gradientMap && this.gradientMap.isTexture) {\r\n\t\t\t\tdata.gradientMap = this.gradientMap.toJSON(meta).uuid;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.transmission !== undefined) data.transmission = this.transmission;\r\n\t\t\tif (this.transmissionMap && this.transmissionMap.isTexture) data.transmissionMap = this.transmissionMap.toJSON(meta).uuid;\r\n\t\t\tif (this.thickness !== undefined) data.thickness = this.thickness;\r\n\t\t\tif (this.thicknessMap && this.thicknessMap.isTexture) data.thicknessMap = this.thicknessMap.toJSON(meta).uuid;\r\n\t\t\tif (this.attenuationDistance !== undefined) data.attenuationDistance = this.attenuationDistance;\r\n\t\t\tif (this.attenuationTint !== undefined) data.attenuationTint = this.attenuationTint.getHex();\r\n\t\t\tif (this.size !== undefined) data.size = this.size;\r\n\t\t\tif (this.shadowSide !== null) data.shadowSide = this.shadowSide;\r\n\t\t\tif (this.sizeAttenuation !== undefined) data.sizeAttenuation = this.sizeAttenuation;\r\n\t\t\tif (this.blending !== NormalBlending) data.blending = this.blending;\r\n\t\t\tif (this.side !== FrontSide) data.side = this.side;\r\n\t\t\tif (this.vertexColors) data.vertexColors = true;\r\n\t\t\tif (this.opacity < 1) data.opacity = this.opacity;\r\n\t\t\tif (this.transparent === true) data.transparent = this.transparent;\r\n\t\t\tdata.depthFunc = this.depthFunc;\r\n\t\t\tdata.depthTest = this.depthTest;\r\n\t\t\tdata.depthWrite = this.depthWrite;\r\n\t\t\tdata.colorWrite = this.colorWrite;\r\n\t\t\tdata.stencilWrite = this.stencilWrite;\r\n\t\t\tdata.stencilWriteMask = this.stencilWriteMask;\r\n\t\t\tdata.stencilFunc = this.stencilFunc;\r\n\t\t\tdata.stencilRef = this.stencilRef;\r\n\t\t\tdata.stencilFuncMask = this.stencilFuncMask;\r\n\t\t\tdata.stencilFail = this.stencilFail;\r\n\t\t\tdata.stencilZFail = this.stencilZFail;\r\n\t\t\tdata.stencilZPass = this.stencilZPass; // rotation (SpriteMaterial)\r\n\r\n\t\t\tif (this.rotation && this.rotation !== 0) data.rotation = this.rotation;\r\n\t\t\tif (this.polygonOffset === true) data.polygonOffset = true;\r\n\t\t\tif (this.polygonOffsetFactor !== 0) data.polygonOffsetFactor = this.polygonOffsetFactor;\r\n\t\t\tif (this.polygonOffsetUnits !== 0) data.polygonOffsetUnits = this.polygonOffsetUnits;\r\n\t\t\tif (this.linewidth && this.linewidth !== 1) data.linewidth = this.linewidth;\r\n\t\t\tif (this.dashSize !== undefined) data.dashSize = this.dashSize;\r\n\t\t\tif (this.gapSize !== undefined) data.gapSize = this.gapSize;\r\n\t\t\tif (this.scale !== undefined) data.scale = this.scale;\r\n\t\t\tif (this.dithering === true) data.dithering = true;\r\n\t\t\tif (this.alphaTest > 0) data.alphaTest = this.alphaTest;\r\n\t\t\tif (this.alphaToCoverage === true) data.alphaToCoverage = this.alphaToCoverage;\r\n\t\t\tif (this.premultipliedAlpha === true) data.premultipliedAlpha = this.premultipliedAlpha;\r\n\t\t\tif (this.wireframe === true) data.wireframe = this.wireframe;\r\n\t\t\tif (this.wireframeLinewidth > 1) data.wireframeLinewidth = this.wireframeLinewidth;\r\n\t\t\tif (this.wireframeLinecap !== 'round') data.wireframeLinecap = this.wireframeLinecap;\r\n\t\t\tif (this.wireframeLinejoin !== 'round') data.wireframeLinejoin = this.wireframeLinejoin;\r\n\t\t\tif (this.flatShading === true) data.flatShading = this.flatShading;\r\n\t\t\tif (this.visible === false) data.visible = false;\r\n\t\t\tif (this.toneMapped === false) data.toneMapped = false;\r\n\t\t\tif (JSON.stringify(this.userData) !== '{}') data.userData = this.userData; // TODO: Copied from Object3D.toJSON\r\n\r\n\t\t\tfunction extractFromCache(cache) {\r\n\t\t\t\tconst values = [];\r\n\r\n\t\t\t\tfor (const key in cache) {\r\n\t\t\t\t\tconst data = cache[key];\r\n\t\t\t\t\tdelete data.metadata;\r\n\t\t\t\t\tvalues.push(data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn values;\r\n\t\t\t}\r\n\r\n\t\t\tif (isRoot) {\r\n\t\t\t\tconst textures = extractFromCache(meta.textures);\r\n\t\t\t\tconst images = extractFromCache(meta.images);\r\n\t\t\t\tif (textures.length > 0) data.textures = textures;\r\n\t\t\t\tif (images.length > 0) data.images = images;\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor().copy(this);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tthis.name = source.name;\r\n\t\t\tthis.fog = source.fog;\r\n\t\t\tthis.blending = source.blending;\r\n\t\t\tthis.side = source.side;\r\n\t\t\tthis.vertexColors = source.vertexColors;\r\n\t\t\tthis.opacity = source.opacity;\r\n\t\t\tthis.transparent = source.transparent;\r\n\t\t\tthis.blendSrc = source.blendSrc;\r\n\t\t\tthis.blendDst = source.blendDst;\r\n\t\t\tthis.blendEquation = source.blendEquation;\r\n\t\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\r\n\t\t\tthis.blendDstAlpha = source.blendDstAlpha;\r\n\t\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\r\n\t\t\tthis.depthFunc = source.depthFunc;\r\n\t\t\tthis.depthTest = source.depthTest;\r\n\t\t\tthis.depthWrite = source.depthWrite;\r\n\t\t\tthis.stencilWriteMask = source.stencilWriteMask;\r\n\t\t\tthis.stencilFunc = source.stencilFunc;\r\n\t\t\tthis.stencilRef = source.stencilRef;\r\n\t\t\tthis.stencilFuncMask = source.stencilFuncMask;\r\n\t\t\tthis.stencilFail = source.stencilFail;\r\n\t\t\tthis.stencilZFail = source.stencilZFail;\r\n\t\t\tthis.stencilZPass = source.stencilZPass;\r\n\t\t\tthis.stencilWrite = source.stencilWrite;\r\n\t\t\tconst srcPlanes = source.clippingPlanes;\r\n\t\t\tlet dstPlanes = null;\r\n\r\n\t\t\tif (srcPlanes !== null) {\r\n\t\t\t\tconst n = srcPlanes.length;\r\n\t\t\t\tdstPlanes = new Array(n);\r\n\r\n\t\t\t\tfor (let i = 0; i !== n; ++i) {\r\n\t\t\t\t\tdstPlanes[i] = srcPlanes[i].clone();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.clippingPlanes = dstPlanes;\r\n\t\t\tthis.clipIntersection = source.clipIntersection;\r\n\t\t\tthis.clipShadows = source.clipShadows;\r\n\t\t\tthis.shadowSide = source.shadowSide;\r\n\t\t\tthis.colorWrite = source.colorWrite;\r\n\t\t\tthis.precision = source.precision;\r\n\t\t\tthis.polygonOffset = source.polygonOffset;\r\n\t\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\r\n\t\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\r\n\t\t\tthis.dithering = source.dithering;\r\n\t\t\tthis.alphaTest = source.alphaTest;\r\n\t\t\tthis.alphaToCoverage = source.alphaToCoverage;\r\n\t\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\r\n\t\t\tthis.visible = source.visible;\r\n\t\t\tthis.toneMapped = source.toneMapped;\r\n\t\t\tthis.userData = JSON.parse(JSON.stringify(source.userData));\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tdispose() {\r\n\t\t\tthis.dispatchEvent({\r\n\t\t\t\ttype: 'dispose'\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tset needsUpdate(value) {\r\n\t\t\tif (value === true) this.version++;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tMaterial.prototype.isMaterial = true;\r\n\r\n\tconst _colorKeywords = {\r\n\t\t'aliceblue': 0xF0F8FF,\r\n\t\t'antiquewhite': 0xFAEBD7,\r\n\t\t'aqua': 0x00FFFF,\r\n\t\t'aquamarine': 0x7FFFD4,\r\n\t\t'azure': 0xF0FFFF,\r\n\t\t'beige': 0xF5F5DC,\r\n\t\t'bisque': 0xFFE4C4,\r\n\t\t'black': 0x000000,\r\n\t\t'blanchedalmond': 0xFFEBCD,\r\n\t\t'blue': 0x0000FF,\r\n\t\t'blueviolet': 0x8A2BE2,\r\n\t\t'brown': 0xA52A2A,\r\n\t\t'burlywood': 0xDEB887,\r\n\t\t'cadetblue': 0x5F9EA0,\r\n\t\t'chartreuse': 0x7FFF00,\r\n\t\t'chocolate': 0xD2691E,\r\n\t\t'coral': 0xFF7F50,\r\n\t\t'cornflowerblue': 0x6495ED,\r\n\t\t'cornsilk': 0xFFF8DC,\r\n\t\t'crimson': 0xDC143C,\r\n\t\t'cyan': 0x00FFFF,\r\n\t\t'darkblue': 0x00008B,\r\n\t\t'darkcyan': 0x008B8B,\r\n\t\t'darkgoldenrod': 0xB8860B,\r\n\t\t'darkgray': 0xA9A9A9,\r\n\t\t'darkgreen': 0x006400,\r\n\t\t'darkgrey': 0xA9A9A9,\r\n\t\t'darkkhaki': 0xBDB76B,\r\n\t\t'darkmagenta': 0x8B008B,\r\n\t\t'darkolivegreen': 0x556B2F,\r\n\t\t'darkorange': 0xFF8C00,\r\n\t\t'darkorchid': 0x9932CC,\r\n\t\t'darkred': 0x8B0000,\r\n\t\t'darksalmon': 0xE9967A,\r\n\t\t'darkseagreen': 0x8FBC8F,\r\n\t\t'darkslateblue': 0x483D8B,\r\n\t\t'darkslategray': 0x2F4F4F,\r\n\t\t'darkslategrey': 0x2F4F4F,\r\n\t\t'darkturquoise': 0x00CED1,\r\n\t\t'darkviolet': 0x9400D3,\r\n\t\t'deeppink': 0xFF1493,\r\n\t\t'deepskyblue': 0x00BFFF,\r\n\t\t'dimgray': 0x696969,\r\n\t\t'dimgrey': 0x696969,\r\n\t\t'dodgerblue': 0x1E90FF,\r\n\t\t'firebrick': 0xB22222,\r\n\t\t'floralwhite': 0xFFFAF0,\r\n\t\t'forestgreen': 0x228B22,\r\n\t\t'fuchsia': 0xFF00FF,\r\n\t\t'gainsboro': 0xDCDCDC,\r\n\t\t'ghostwhite': 0xF8F8FF,\r\n\t\t'gold': 0xFFD700,\r\n\t\t'goldenrod': 0xDAA520,\r\n\t\t'gray': 0x808080,\r\n\t\t'green': 0x008000,\r\n\t\t'greenyellow': 0xADFF2F,\r\n\t\t'grey': 0x808080,\r\n\t\t'honeydew': 0xF0FFF0,\r\n\t\t'hotpink': 0xFF69B4,\r\n\t\t'indianred': 0xCD5C5C,\r\n\t\t'indigo': 0x4B0082,\r\n\t\t'ivory': 0xFFFFF0,\r\n\t\t'khaki': 0xF0E68C,\r\n\t\t'lavender': 0xE6E6FA,\r\n\t\t'lavenderblush': 0xFFF0F5,\r\n\t\t'lawngreen': 0x7CFC00,\r\n\t\t'lemonchiffon': 0xFFFACD,\r\n\t\t'lightblue': 0xADD8E6,\r\n\t\t'lightcoral': 0xF08080,\r\n\t\t'lightcyan': 0xE0FFFF,\r\n\t\t'lightgoldenrodyellow': 0xFAFAD2,\r\n\t\t'lightgray': 0xD3D3D3,\r\n\t\t'lightgreen': 0x90EE90,\r\n\t\t'lightgrey': 0xD3D3D3,\r\n\t\t'lightpink': 0xFFB6C1,\r\n\t\t'lightsalmon': 0xFFA07A,\r\n\t\t'lightseagreen': 0x20B2AA,\r\n\t\t'lightskyblue': 0x87CEFA,\r\n\t\t'lightslategray': 0x778899,\r\n\t\t'lightslategrey': 0x778899,\r\n\t\t'lightsteelblue': 0xB0C4DE,\r\n\t\t'lightyellow': 0xFFFFE0,\r\n\t\t'lime': 0x00FF00,\r\n\t\t'limegreen': 0x32CD32,\r\n\t\t'linen': 0xFAF0E6,\r\n\t\t'magenta': 0xFF00FF,\r\n\t\t'maroon': 0x800000,\r\n\t\t'mediumaquamarine': 0x66CDAA,\r\n\t\t'mediumblue': 0x0000CD,\r\n\t\t'mediumorchid': 0xBA55D3,\r\n\t\t'mediumpurple': 0x9370DB,\r\n\t\t'mediumseagreen': 0x3CB371,\r\n\t\t'mediumslateblue': 0x7B68EE,\r\n\t\t'mediumspringgreen': 0x00FA9A,\r\n\t\t'mediumturquoise': 0x48D1CC,\r\n\t\t'mediumvioletred': 0xC71585,\r\n\t\t'midnightblue': 0x191970,\r\n\t\t'mintcream': 0xF5FFFA,\r\n\t\t'mistyrose': 0xFFE4E1,\r\n\t\t'moccasin': 0xFFE4B5,\r\n\t\t'navajowhite': 0xFFDEAD,\r\n\t\t'navy': 0x000080,\r\n\t\t'oldlace': 0xFDF5E6,\r\n\t\t'olive': 0x808000,\r\n\t\t'olivedrab': 0x6B8E23,\r\n\t\t'orange': 0xFFA500,\r\n\t\t'orangered': 0xFF4500,\r\n\t\t'orchid': 0xDA70D6,\r\n\t\t'palegoldenrod': 0xEEE8AA,\r\n\t\t'palegreen': 0x98FB98,\r\n\t\t'paleturquoise': 0xAFEEEE,\r\n\t\t'palevioletred': 0xDB7093,\r\n\t\t'papayawhip': 0xFFEFD5,\r\n\t\t'peachpuff': 0xFFDAB9,\r\n\t\t'peru': 0xCD853F,\r\n\t\t'pink': 0xFFC0CB,\r\n\t\t'plum': 0xDDA0DD,\r\n\t\t'powderblue': 0xB0E0E6,\r\n\t\t'purple': 0x800080,\r\n\t\t'rebeccapurple': 0x663399,\r\n\t\t'red': 0xFF0000,\r\n\t\t'rosybrown': 0xBC8F8F,\r\n\t\t'royalblue': 0x4169E1,\r\n\t\t'saddlebrown': 0x8B4513,\r\n\t\t'salmon': 0xFA8072,\r\n\t\t'sandybrown': 0xF4A460,\r\n\t\t'seagreen': 0x2E8B57,\r\n\t\t'seashell': 0xFFF5EE,\r\n\t\t'sienna': 0xA0522D,\r\n\t\t'silver': 0xC0C0C0,\r\n\t\t'skyblue': 0x87CEEB,\r\n\t\t'slateblue': 0x6A5ACD,\r\n\t\t'slategray': 0x708090,\r\n\t\t'slategrey': 0x708090,\r\n\t\t'snow': 0xFFFAFA,\r\n\t\t'springgreen': 0x00FF7F,\r\n\t\t'steelblue': 0x4682B4,\r\n\t\t'tan': 0xD2B48C,\r\n\t\t'teal': 0x008080,\r\n\t\t'thistle': 0xD8BFD8,\r\n\t\t'tomato': 0xFF6347,\r\n\t\t'turquoise': 0x40E0D0,\r\n\t\t'violet': 0xEE82EE,\r\n\t\t'wheat': 0xF5DEB3,\r\n\t\t'white': 0xFFFFFF,\r\n\t\t'whitesmoke': 0xF5F5F5,\r\n\t\t'yellow': 0xFFFF00,\r\n\t\t'yellowgreen': 0x9ACD32\r\n\t};\r\n\tconst _hslA = {\r\n\t\th: 0,\r\n\t\ts: 0,\r\n\t\tl: 0\r\n\t};\r\n\tconst _hslB = {\r\n\t\th: 0,\r\n\t\ts: 0,\r\n\t\tl: 0\r\n\t};\r\n\r\n\tfunction hue2rgb(p, q, t) {\r\n\t\tif (t < 0) t += 1;\r\n\t\tif (t > 1) t -= 1;\r\n\t\tif (t < 1 / 6) return p + (q - p) * 6 * t;\r\n\t\tif (t < 1 / 2) return q;\r\n\t\tif (t < 2 / 3) return p + (q - p) * 6 * (2 / 3 - t);\r\n\t\treturn p;\r\n\t}\r\n\r\n\tfunction SRGBToLinear(c) {\r\n\t\treturn c < 0.04045 ? c * 0.0773993808 : Math.pow(c * 0.9478672986 + 0.0521327014, 2.4);\r\n\t}\r\n\r\n\tfunction LinearToSRGB(c) {\r\n\t\treturn c < 0.0031308 ? c * 12.92 : 1.055 * Math.pow(c, 0.41666) - 0.055;\r\n\t}\r\n\r\n\tclass Color {\r\n\t\tconstructor(r, g, b) {\r\n\t\t\tif (g === undefined && b === undefined) {\r\n\t\t\t\t// r is THREE.Color, hex or string\r\n\t\t\t\treturn this.set(r);\r\n\t\t\t}\r\n\r\n\t\t\treturn this.setRGB(r, g, b);\r\n\t\t}\r\n\r\n\t\tset(value) {\r\n\t\t\tif (value && value.isColor) {\r\n\t\t\t\tthis.copy(value);\r\n\t\t\t} else if (typeof value === 'number') {\r\n\t\t\t\tthis.setHex(value);\r\n\t\t\t} else if (typeof value === 'string') {\r\n\t\t\t\tthis.setStyle(value);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetScalar(scalar) {\r\n\t\t\tthis.r = scalar;\r\n\t\t\tthis.g = scalar;\r\n\t\t\tthis.b = scalar;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetHex(hex) {\r\n\t\t\thex = Math.floor(hex);\r\n\t\t\tthis.r = (hex >> 16 & 255) / 255;\r\n\t\t\tthis.g = (hex >> 8 & 255) / 255;\r\n\t\t\tthis.b = (hex & 255) / 255;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetRGB(r, g, b) {\r\n\t\t\tthis.r = r;\r\n\t\t\tthis.g = g;\r\n\t\t\tthis.b = b;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetHSL(h, s, l) {\r\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\t\t\th = euclideanModulo(h, 1);\r\n\t\t\ts = clamp(s, 0, 1);\r\n\t\t\tl = clamp(l, 0, 1);\r\n\r\n\t\t\tif (s === 0) {\r\n\t\t\t\tthis.r = this.g = this.b = l;\r\n\t\t\t} else {\r\n\t\t\t\tconst p = l <= 0.5 ? l * (1 + s) : l + s - l * s;\r\n\t\t\t\tconst q = 2 * l - p;\r\n\t\t\t\tthis.r = hue2rgb(q, p, h + 1 / 3);\r\n\t\t\t\tthis.g = hue2rgb(q, p, h);\r\n\t\t\t\tthis.b = hue2rgb(q, p, h - 1 / 3);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetStyle(style) {\r\n\t\t\tfunction handleAlpha(string) {\r\n\t\t\t\tif (string === undefined) return;\r\n\r\n\t\t\t\tif (parseFloat(string) < 1) {\r\n\t\t\t\t\tconsole.warn('THREE.Color: Alpha component of ' + style + ' will be ignored.');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet m;\r\n\r\n\t\t\tif (m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec(style)) {\r\n\t\t\t\t// rgb / hsl\r\n\t\t\t\tlet color;\r\n\t\t\t\tconst name = m[1];\r\n\t\t\t\tconst components = m[2];\r\n\r\n\t\t\t\tswitch (name) {\r\n\t\t\t\t\tcase 'rgb':\r\n\t\t\t\t\tcase 'rgba':\r\n\t\t\t\t\t\tif (color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\r\n\t\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\r\n\t\t\t\t\t\t\tthis.r = Math.min(255, parseInt(color[1], 10)) / 255;\r\n\t\t\t\t\t\t\tthis.g = Math.min(255, parseInt(color[2], 10)) / 255;\r\n\t\t\t\t\t\t\tthis.b = Math.min(255, parseInt(color[3], 10)) / 255;\r\n\t\t\t\t\t\t\thandleAlpha(color[4]);\r\n\t\t\t\t\t\t\treturn this;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\r\n\t\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\r\n\t\t\t\t\t\t\tthis.r = Math.min(100, parseInt(color[1], 10)) / 100;\r\n\t\t\t\t\t\t\tthis.g = Math.min(100, parseInt(color[2], 10)) / 100;\r\n\t\t\t\t\t\t\tthis.b = Math.min(100, parseInt(color[3], 10)) / 100;\r\n\t\t\t\t\t\t\thandleAlpha(color[4]);\r\n\t\t\t\t\t\t\treturn this;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'hsl':\r\n\t\t\t\t\tcase 'hsla':\r\n\t\t\t\t\t\tif (color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\r\n\t\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\r\n\t\t\t\t\t\t\tconst h = parseFloat(color[1]) / 360;\r\n\t\t\t\t\t\t\tconst s = parseInt(color[2], 10) / 100;\r\n\t\t\t\t\t\t\tconst l = parseInt(color[3], 10) / 100;\r\n\t\t\t\t\t\t\thandleAlpha(color[4]);\r\n\t\t\t\t\t\t\treturn this.setHSL(h, s, l);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else if (m = /^\\#([A-Fa-f\\d]+)$/.exec(style)) {\r\n\t\t\t\t// hex color\r\n\t\t\t\tconst hex = m[1];\r\n\t\t\t\tconst size = hex.length;\r\n\r\n\t\t\t\tif (size === 3) {\r\n\t\t\t\t\t// #ff0\r\n\t\t\t\t\tthis.r = parseInt(hex.charAt(0) + hex.charAt(0), 16) / 255;\r\n\t\t\t\t\tthis.g = parseInt(hex.charAt(1) + hex.charAt(1), 16) / 255;\r\n\t\t\t\t\tthis.b = parseInt(hex.charAt(2) + hex.charAt(2), 16) / 255;\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t} else if (size === 6) {\r\n\t\t\t\t\t// #ff0000\r\n\t\t\t\t\tthis.r = parseInt(hex.charAt(0) + hex.charAt(1), 16) / 255;\r\n\t\t\t\t\tthis.g = parseInt(hex.charAt(2) + hex.charAt(3), 16) / 255;\r\n\t\t\t\t\tthis.b = parseInt(hex.charAt(4) + hex.charAt(5), 16) / 255;\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (style && style.length > 0) {\r\n\t\t\t\treturn this.setColorName(style);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetColorName(style) {\r\n\t\t\t// color keywords\r\n\t\t\tconst hex = _colorKeywords[style.toLowerCase()];\r\n\r\n\t\t\tif (hex !== undefined) {\r\n\t\t\t\t// red\r\n\t\t\t\tthis.setHex(hex);\r\n\t\t\t} else {\r\n\t\t\t\t// unknown color\r\n\t\t\t\tconsole.warn('THREE.Color: Unknown color ' + style);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor(this.r, this.g, this.b);\r\n\t\t}\r\n\r\n\t\tcopy(color) {\r\n\t\t\tthis.r = color.r;\r\n\t\t\tthis.g = color.g;\r\n\t\t\tthis.b = color.b;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopyGammaToLinear(color, gammaFactor = 2.0) {\r\n\t\t\tthis.r = Math.pow(color.r, gammaFactor);\r\n\t\t\tthis.g = Math.pow(color.g, gammaFactor);\r\n\t\t\tthis.b = Math.pow(color.b, gammaFactor);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopyLinearToGamma(color, gammaFactor = 2.0) {\r\n\t\t\tconst safeInverse = gammaFactor > 0 ? 1.0 / gammaFactor : 1.0;\r\n\t\t\tthis.r = Math.pow(color.r, safeInverse);\r\n\t\t\tthis.g = Math.pow(color.g, safeInverse);\r\n\t\t\tthis.b = Math.pow(color.b, safeInverse);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tconvertGammaToLinear(gammaFactor) {\r\n\t\t\tthis.copyGammaToLinear(this, gammaFactor);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tconvertLinearToGamma(gammaFactor) {\r\n\t\t\tthis.copyLinearToGamma(this, gammaFactor);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopySRGBToLinear(color) {\r\n\t\t\tthis.r = SRGBToLinear(color.r);\r\n\t\t\tthis.g = SRGBToLinear(color.g);\r\n\t\t\tthis.b = SRGBToLinear(color.b);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopyLinearToSRGB(color) {\r\n\t\t\tthis.r = LinearToSRGB(color.r);\r\n\t\t\tthis.g = LinearToSRGB(color.g);\r\n\t\t\tthis.b = LinearToSRGB(color.b);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tconvertSRGBToLinear() {\r\n\t\t\tthis.copySRGBToLinear(this);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tconvertLinearToSRGB() {\r\n\t\t\tthis.copyLinearToSRGB(this);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetHex() {\r\n\t\t\treturn this.r * 255 << 16 ^ this.g * 255 << 8 ^ this.b * 255 << 0;\r\n\t\t}\r\n\r\n\t\tgetHexString() {\r\n\t\t\treturn ('000000' + this.getHex().toString(16)).slice(-6);\r\n\t\t}\r\n\r\n\t\tgetHSL(target) {\r\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\t\t\tconst r = this.r,\r\n\t\t\t\t\t\tg = this.g,\r\n\t\t\t\t\t\tb = this.b;\r\n\t\t\tconst max = Math.max(r, g, b);\r\n\t\t\tconst min = Math.min(r, g, b);\r\n\t\t\tlet hue, saturation;\r\n\t\t\tconst lightness = (min + max) / 2.0;\r\n\r\n\t\t\tif (min === max) {\r\n\t\t\t\thue = 0;\r\n\t\t\t\tsaturation = 0;\r\n\t\t\t} else {\r\n\t\t\t\tconst delta = max - min;\r\n\t\t\t\tsaturation = lightness <= 0.5 ? delta / (max + min) : delta / (2 - max - min);\r\n\r\n\t\t\t\tswitch (max) {\r\n\t\t\t\t\tcase r:\r\n\t\t\t\t\t\thue = (g - b) / delta + (g < b ? 6 : 0);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase g:\r\n\t\t\t\t\t\thue = (b - r) / delta + 2;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase b:\r\n\t\t\t\t\t\thue = (r - g) / delta + 4;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\thue /= 6;\r\n\t\t\t}\r\n\r\n\t\t\ttarget.h = hue;\r\n\t\t\ttarget.s = saturation;\r\n\t\t\ttarget.l = lightness;\r\n\t\t\treturn target;\r\n\t\t}\r\n\r\n\t\tgetStyle() {\r\n\t\t\treturn 'rgb(' + (this.r * 255 | 0) + ',' + (this.g * 255 | 0) + ',' + (this.b * 255 | 0) + ')';\r\n\t\t}\r\n\r\n\t\toffsetHSL(h, s, l) {\r\n\t\t\tthis.getHSL(_hslA);\r\n\t\t\t_hslA.h += h;\r\n\t\t\t_hslA.s += s;\r\n\t\t\t_hslA.l += l;\r\n\t\t\tthis.setHSL(_hslA.h, _hslA.s, _hslA.l);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tadd(color) {\r\n\t\t\tthis.r += color.r;\r\n\t\t\tthis.g += color.g;\r\n\t\t\tthis.b += color.b;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\taddColors(color1, color2) {\r\n\t\t\tthis.r = color1.r + color2.r;\r\n\t\t\tthis.g = color1.g + color2.g;\r\n\t\t\tthis.b = color1.b + color2.b;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\taddScalar(s) {\r\n\t\t\tthis.r += s;\r\n\t\t\tthis.g += s;\r\n\t\t\tthis.b += s;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsub(color) {\r\n\t\t\tthis.r = Math.max(0, this.r - color.r);\r\n\t\t\tthis.g = Math.max(0, this.g - color.g);\r\n\t\t\tthis.b = Math.max(0, this.b - color.b);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmultiply(color) {\r\n\t\t\tthis.r *= color.r;\r\n\t\t\tthis.g *= color.g;\r\n\t\t\tthis.b *= color.b;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmultiplyScalar(s) {\r\n\t\t\tthis.r *= s;\r\n\t\t\tthis.g *= s;\r\n\t\t\tthis.b *= s;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tlerp(color, alpha) {\r\n\t\t\tthis.r += (color.r - this.r) * alpha;\r\n\t\t\tthis.g += (color.g - this.g) * alpha;\r\n\t\t\tthis.b += (color.b - this.b) * alpha;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tlerpColors(color1, color2, alpha) {\r\n\t\t\tthis.r = color1.r + (color2.r - color1.r) * alpha;\r\n\t\t\tthis.g = color1.g + (color2.g - color1.g) * alpha;\r\n\t\t\tthis.b = color1.b + (color2.b - color1.b) * alpha;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tlerpHSL(color, alpha) {\r\n\t\t\tthis.getHSL(_hslA);\r\n\t\t\tcolor.getHSL(_hslB);\r\n\t\t\tconst h = lerp(_hslA.h, _hslB.h, alpha);\r\n\t\t\tconst s = lerp(_hslA.s, _hslB.s, alpha);\r\n\t\t\tconst l = lerp(_hslA.l, _hslB.l, alpha);\r\n\t\t\tthis.setHSL(h, s, l);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tequals(c) {\r\n\t\t\treturn c.r === this.r && c.g === this.g && c.b === this.b;\r\n\t\t}\r\n\r\n\t\tfromArray(array, offset = 0) {\r\n\t\t\tthis.r = array[offset];\r\n\t\t\tthis.g = array[offset + 1];\r\n\t\t\tthis.b = array[offset + 2];\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoArray(array = [], offset = 0) {\r\n\t\t\tarray[offset] = this.r;\r\n\t\t\tarray[offset + 1] = this.g;\r\n\t\t\tarray[offset + 2] = this.b;\r\n\t\t\treturn array;\r\n\t\t}\r\n\r\n\t\tfromBufferAttribute(attribute, index) {\r\n\t\t\tthis.r = attribute.getX(index);\r\n\t\t\tthis.g = attribute.getY(index);\r\n\t\t\tthis.b = attribute.getZ(index);\r\n\r\n\t\t\tif (attribute.normalized === true) {\r\n\t\t\t\t// assuming Uint8Array\r\n\t\t\t\tthis.r /= 255;\r\n\t\t\t\tthis.g /= 255;\r\n\t\t\t\tthis.b /= 255;\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\treturn this.getHex();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tColor.NAMES = _colorKeywords;\r\n\tColor.prototype.isColor = true;\r\n\tColor.prototype.r = 1;\r\n\tColor.prototype.g = 1;\r\n\tColor.prototype.b = 1;\r\n\r\n\t/**\r\n\t * parameters = {\r\n\t *\tcolor: <hex>,\r\n\t *\topacity: <float>,\r\n\t *\tmap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tlightMap: new THREE.Texture( <Image> ),\r\n\t *\tlightMapIntensity: <float>\r\n\t *\r\n\t *\taoMap: new THREE.Texture( <Image> ),\r\n\t *\taoMapIntensity: <float>\r\n\t *\r\n\t *\tspecularMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\talphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\r\n\t *\tcombine: THREE.Multiply,\r\n\t *\treflectivity: <float>,\r\n\t *\trefractionRatio: <float>,\r\n\t *\r\n\t *\tdepthTest: <bool>,\r\n\t *\tdepthWrite: <bool>,\r\n\t *\r\n\t *\twireframe: <boolean>,\r\n\t *\twireframeLinewidth: <float>,\r\n\t * }\r\n\t */\r\n\r\n\tclass MeshBasicMaterial extends Material {\r\n\t\tconstructor(parameters) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'MeshBasicMaterial';\r\n\t\t\tthis.color = new Color(0xffffff); // emissive\r\n\r\n\t\t\tthis.map = null;\r\n\t\t\tthis.lightMap = null;\r\n\t\t\tthis.lightMapIntensity = 1.0;\r\n\t\t\tthis.aoMap = null;\r\n\t\t\tthis.aoMapIntensity = 1.0;\r\n\t\t\tthis.specularMap = null;\r\n\t\t\tthis.alphaMap = null;\r\n\t\t\tthis.envMap = null;\r\n\t\t\tthis.combine = MultiplyOperation;\r\n\t\t\tthis.reflectivity = 1;\r\n\t\t\tthis.refractionRatio = 0.98;\r\n\t\t\tthis.wireframe = false;\r\n\t\t\tthis.wireframeLinewidth = 1;\r\n\t\t\tthis.wireframeLinecap = 'round';\r\n\t\t\tthis.wireframeLinejoin = 'round';\r\n\t\t\tthis.setValues(parameters);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.color.copy(source.color);\r\n\t\t\tthis.map = source.map;\r\n\t\t\tthis.lightMap = source.lightMap;\r\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\t\t\tthis.aoMap = source.aoMap;\r\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\t\t\tthis.specularMap = source.specularMap;\r\n\t\t\tthis.alphaMap = source.alphaMap;\r\n\t\t\tthis.envMap = source.envMap;\r\n\t\t\tthis.combine = source.combine;\r\n\t\t\tthis.reflectivity = source.reflectivity;\r\n\t\t\tthis.refractionRatio = source.refractionRatio;\r\n\t\t\tthis.wireframe = source.wireframe;\r\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\r\n\r\n\tconst _vector$9 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _vector2$1 = /*@__PURE__*/new Vector2();\r\n\r\n\tclass BufferAttribute {\r\n\t\tconstructor(array, itemSize, normalized) {\r\n\t\t\tif (Array.isArray(array)) {\r\n\t\t\t\tthrow new TypeError('THREE.BufferAttribute: array should be a Typed Array.');\r\n\t\t\t}\r\n\r\n\t\t\tthis.name = '';\r\n\t\t\tthis.array = array;\r\n\t\t\tthis.itemSize = itemSize;\r\n\t\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\r\n\t\t\tthis.normalized = normalized === true;\r\n\t\t\tthis.usage = StaticDrawUsage;\r\n\t\t\tthis.updateRange = {\r\n\t\t\t\toffset: 0,\r\n\t\t\t\tcount: -1\r\n\t\t\t};\r\n\t\t\tthis.version = 0;\r\n\t\t}\r\n\r\n\t\tonUploadCallback() {}\r\n\r\n\t\tset needsUpdate(value) {\r\n\t\t\tif (value === true) this.version++;\r\n\t\t}\r\n\r\n\t\tsetUsage(value) {\r\n\t\t\tthis.usage = value;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tthis.name = source.name;\r\n\t\t\tthis.array = new source.array.constructor(source.array);\r\n\t\t\tthis.itemSize = source.itemSize;\r\n\t\t\tthis.count = source.count;\r\n\t\t\tthis.normalized = source.normalized;\r\n\t\t\tthis.usage = source.usage;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopyAt(index1, attribute, index2) {\r\n\t\t\tindex1 *= this.itemSize;\r\n\t\t\tindex2 *= attribute.itemSize;\r\n\r\n\t\t\tfor (let i = 0, l = this.itemSize; i < l; i++) {\r\n\t\t\t\tthis.array[index1 + i] = attribute.array[index2 + i];\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopyArray(array) {\r\n\t\t\tthis.array.set(array);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopyColorsArray(colors) {\r\n\t\t\tconst array = this.array;\r\n\t\t\tlet offset = 0;\r\n\r\n\t\t\tfor (let i = 0, l = colors.length; i < l; i++) {\r\n\t\t\t\tlet color = colors[i];\r\n\r\n\t\t\t\tif (color === undefined) {\r\n\t\t\t\t\tconsole.warn('THREE.BufferAttribute.copyColorsArray(): color is undefined', i);\r\n\t\t\t\t\tcolor = new Color();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tarray[offset++] = color.r;\r\n\t\t\t\tarray[offset++] = color.g;\r\n\t\t\t\tarray[offset++] = color.b;\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopyVector2sArray(vectors) {\r\n\t\t\tconst array = this.array;\r\n\t\t\tlet offset = 0;\r\n\r\n\t\t\tfor (let i = 0, l = vectors.length; i < l; i++) {\r\n\t\t\t\tlet vector = vectors[i];\r\n\r\n\t\t\t\tif (vector === undefined) {\r\n\t\t\t\t\tconsole.warn('THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i);\r\n\t\t\t\t\tvector = new Vector2();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tarray[offset++] = vector.x;\r\n\t\t\t\tarray[offset++] = vector.y;\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopyVector3sArray(vectors) {\r\n\t\t\tconst array = this.array;\r\n\t\t\tlet offset = 0;\r\n\r\n\t\t\tfor (let i = 0, l = vectors.length; i < l; i++) {\r\n\t\t\t\tlet vector = vectors[i];\r\n\r\n\t\t\t\tif (vector === undefined) {\r\n\t\t\t\t\tconsole.warn('THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i);\r\n\t\t\t\t\tvector = new Vector3();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tarray[offset++] = vector.x;\r\n\t\t\t\tarray[offset++] = vector.y;\r\n\t\t\t\tarray[offset++] = vector.z;\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopyVector4sArray(vectors) {\r\n\t\t\tconst array = this.array;\r\n\t\t\tlet offset = 0;\r\n\r\n\t\t\tfor (let i = 0, l = vectors.length; i < l; i++) {\r\n\t\t\t\tlet vector = vectors[i];\r\n\r\n\t\t\t\tif (vector === undefined) {\r\n\t\t\t\t\tconsole.warn('THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i);\r\n\t\t\t\t\tvector = new Vector4();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tarray[offset++] = vector.x;\r\n\t\t\t\tarray[offset++] = vector.y;\r\n\t\t\t\tarray[offset++] = vector.z;\r\n\t\t\t\tarray[offset++] = vector.w;\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tapplyMatrix3(m) {\r\n\t\t\tif (this.itemSize === 2) {\r\n\t\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\r\n\t\t\t\t\t_vector2$1.fromBufferAttribute(this, i);\r\n\r\n\t\t\t\t\t_vector2$1.applyMatrix3(m);\r\n\r\n\t\t\t\t\tthis.setXY(i, _vector2$1.x, _vector2$1.y);\r\n\t\t\t\t}\r\n\t\t\t} else if (this.itemSize === 3) {\r\n\t\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\r\n\t\t\t\t\t_vector$9.fromBufferAttribute(this, i);\r\n\r\n\t\t\t\t\t_vector$9.applyMatrix3(m);\r\n\r\n\t\t\t\t\tthis.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tapplyMatrix4(m) {\r\n\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\r\n\t\t\t\t_vector$9.x = this.getX(i);\r\n\t\t\t\t_vector$9.y = this.getY(i);\r\n\t\t\t\t_vector$9.z = this.getZ(i);\r\n\r\n\t\t\t\t_vector$9.applyMatrix4(m);\r\n\r\n\t\t\t\tthis.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tapplyNormalMatrix(m) {\r\n\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\r\n\t\t\t\t_vector$9.x = this.getX(i);\r\n\t\t\t\t_vector$9.y = this.getY(i);\r\n\t\t\t\t_vector$9.z = this.getZ(i);\r\n\r\n\t\t\t\t_vector$9.applyNormalMatrix(m);\r\n\r\n\t\t\t\tthis.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttransformDirection(m) {\r\n\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\r\n\t\t\t\t_vector$9.x = this.getX(i);\r\n\t\t\t\t_vector$9.y = this.getY(i);\r\n\t\t\t\t_vector$9.z = this.getZ(i);\r\n\r\n\t\t\t\t_vector$9.transformDirection(m);\r\n\r\n\t\t\t\tthis.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tset(value, offset = 0) {\r\n\t\t\tthis.array.set(value, offset);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetX(index) {\r\n\t\t\treturn this.array[index * this.itemSize];\r\n\t\t}\r\n\r\n\t\tsetX(index, x) {\r\n\t\t\tthis.array[index * this.itemSize] = x;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetY(index) {\r\n\t\t\treturn this.array[index * this.itemSize + 1];\r\n\t\t}\r\n\r\n\t\tsetY(index, y) {\r\n\t\t\tthis.array[index * this.itemSize + 1] = y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetZ(index) {\r\n\t\t\treturn this.array[index * this.itemSize + 2];\r\n\t\t}\r\n\r\n\t\tsetZ(index, z) {\r\n\t\t\tthis.array[index * this.itemSize + 2] = z;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetW(index) {\r\n\t\t\treturn this.array[index * this.itemSize + 3];\r\n\t\t}\r\n\r\n\t\tsetW(index, w) {\r\n\t\t\tthis.array[index * this.itemSize + 3] = w;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetXY(index, x, y) {\r\n\t\t\tindex *= this.itemSize;\r\n\t\t\tthis.array[index + 0] = x;\r\n\t\t\tthis.array[index + 1] = y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetXYZ(index, x, y, z) {\r\n\t\t\tindex *= this.itemSize;\r\n\t\t\tthis.array[index + 0] = x;\r\n\t\t\tthis.array[index + 1] = y;\r\n\t\t\tthis.array[index + 2] = z;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetXYZW(index, x, y, z, w) {\r\n\t\t\tindex *= this.itemSize;\r\n\t\t\tthis.array[index + 0] = x;\r\n\t\t\tthis.array[index + 1] = y;\r\n\t\t\tthis.array[index + 2] = z;\r\n\t\t\tthis.array[index + 3] = w;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tonUpload(callback) {\r\n\t\t\tthis.onUploadCallback = callback;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor(this.array, this.itemSize).copy(this);\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst data = {\r\n\t\t\t\titemSize: this.itemSize,\r\n\t\t\t\ttype: this.array.constructor.name,\r\n\t\t\t\tarray: Array.prototype.slice.call(this.array),\r\n\t\t\t\tnormalized: this.normalized\r\n\t\t\t};\r\n\t\t\tif (this.name !== '') data.name = this.name;\r\n\t\t\tif (this.usage !== StaticDrawUsage) data.usage = this.usage;\r\n\t\t\tif (this.updateRange.offset !== 0 || this.updateRange.count !== -1) data.updateRange = this.updateRange;\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tBufferAttribute.prototype.isBufferAttribute = true; //\r\n\r\n\tclass Int8BufferAttribute extends BufferAttribute {\r\n\t\tconstructor(array, itemSize, normalized) {\r\n\t\t\tsuper(new Int8Array(array), itemSize, normalized);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass Uint8BufferAttribute extends BufferAttribute {\r\n\t\tconstructor(array, itemSize, normalized) {\r\n\t\t\tsuper(new Uint8Array(array), itemSize, normalized);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass Uint8ClampedBufferAttribute extends BufferAttribute {\r\n\t\tconstructor(array, itemSize, normalized) {\r\n\t\t\tsuper(new Uint8ClampedArray(array), itemSize, normalized);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass Int16BufferAttribute extends BufferAttribute {\r\n\t\tconstructor(array, itemSize, normalized) {\r\n\t\t\tsuper(new Int16Array(array), itemSize, normalized);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass Uint16BufferAttribute extends BufferAttribute {\r\n\t\tconstructor(array, itemSize, normalized) {\r\n\t\t\tsuper(new Uint16Array(array), itemSize, normalized);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass Int32BufferAttribute extends BufferAttribute {\r\n\t\tconstructor(array, itemSize, normalized) {\r\n\t\t\tsuper(new Int32Array(array), itemSize, normalized);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass Uint32BufferAttribute extends BufferAttribute {\r\n\t\tconstructor(array, itemSize, normalized) {\r\n\t\t\tsuper(new Uint32Array(array), itemSize, normalized);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass Float16BufferAttribute extends BufferAttribute {\r\n\t\tconstructor(array, itemSize, normalized) {\r\n\t\t\tsuper(new Uint16Array(array), itemSize, normalized);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tFloat16BufferAttribute.prototype.isFloat16BufferAttribute = true;\r\n\r\n\tclass Float32BufferAttribute extends BufferAttribute {\r\n\t\tconstructor(array, itemSize, normalized) {\r\n\t\t\tsuper(new Float32Array(array), itemSize, normalized);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass Float64BufferAttribute extends BufferAttribute {\r\n\t\tconstructor(array, itemSize, normalized) {\r\n\t\t\tsuper(new Float64Array(array), itemSize, normalized);\r\n\t\t}\r\n\r\n\t} //\r\n\r\n\tfunction arrayMax(array) {\r\n\t\tif (array.length === 0) return -Infinity;\r\n\t\tlet max = array[0];\r\n\r\n\t\tfor (let i = 1, l = array.length; i < l; ++i) {\r\n\t\t\tif (array[i] > max) max = array[i];\r\n\t\t}\r\n\r\n\t\treturn max;\r\n\t}\r\n\r\n\tconst TYPED_ARRAYS = {\r\n\t\tInt8Array: Int8Array,\r\n\t\tUint8Array: Uint8Array,\r\n\t\tUint8ClampedArray: Uint8ClampedArray,\r\n\t\tInt16Array: Int16Array,\r\n\t\tUint16Array: Uint16Array,\r\n\t\tInt32Array: Int32Array,\r\n\t\tUint32Array: Uint32Array,\r\n\t\tFloat32Array: Float32Array,\r\n\t\tFloat64Array: Float64Array\r\n\t};\r\n\r\n\tfunction getTypedArray(type, buffer) {\r\n\t\treturn new TYPED_ARRAYS[type](buffer);\r\n\t}\r\n\r\n\tlet _id = 0;\r\n\r\n\tconst _m1 = /*@__PURE__*/new Matrix4();\r\n\r\n\tconst _obj = /*@__PURE__*/new Object3D();\r\n\r\n\tconst _offset = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _box$1 = /*@__PURE__*/new Box3();\r\n\r\n\tconst _boxMorphTargets = /*@__PURE__*/new Box3();\r\n\r\n\tconst _vector$8 = /*@__PURE__*/new Vector3();\r\n\r\n\tclass BufferGeometry extends EventDispatcher {\r\n\t\tconstructor() {\r\n\t\t\tsuper();\r\n\t\t\tObject.defineProperty(this, 'id', {\r\n\t\t\t\tvalue: _id++\r\n\t\t\t});\r\n\t\t\tthis.uuid = generateUUID();\r\n\t\t\tthis.name = '';\r\n\t\t\tthis.type = 'BufferGeometry';\r\n\t\t\tthis.index = null;\r\n\t\t\tthis.attributes = {};\r\n\t\t\tthis.morphAttributes = {};\r\n\t\t\tthis.morphTargetsRelative = false;\r\n\t\t\tthis.groups = [];\r\n\t\t\tthis.boundingBox = null;\r\n\t\t\tthis.boundingSphere = null;\r\n\t\t\tthis.drawRange = {\r\n\t\t\t\tstart: 0,\r\n\t\t\t\tcount: Infinity\r\n\t\t\t};\r\n\t\t\tthis.userData = {};\r\n\t\t}\r\n\r\n\t\tgetIndex() {\r\n\t\t\treturn this.index;\r\n\t\t}\r\n\r\n\t\tsetIndex(index) {\r\n\t\t\tif (Array.isArray(index)) {\r\n\t\t\t\tthis.index = new (arrayMax(index) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute)(index, 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis.index = index;\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetAttribute(name) {\r\n\t\t\treturn this.attributes[name];\r\n\t\t}\r\n\r\n\t\tsetAttribute(name, attribute) {\r\n\t\t\tthis.attributes[name] = attribute;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tdeleteAttribute(name) {\r\n\t\t\tdelete this.attributes[name];\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\thasAttribute(name) {\r\n\t\t\treturn this.attributes[name] !== undefined;\r\n\t\t}\r\n\r\n\t\taddGroup(start, count, materialIndex = 0) {\r\n\t\t\tthis.groups.push({\r\n\t\t\t\tstart: start,\r\n\t\t\t\tcount: count,\r\n\t\t\t\tmaterialIndex: materialIndex\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tclearGroups() {\r\n\t\t\tthis.groups = [];\r\n\t\t}\r\n\r\n\t\tsetDrawRange(start, count) {\r\n\t\t\tthis.drawRange.start = start;\r\n\t\t\tthis.drawRange.count = count;\r\n\t\t}\r\n\r\n\t\tapplyMatrix4(matrix) {\r\n\t\t\tconst position = this.attributes.position;\r\n\r\n\t\t\tif (position !== undefined) {\r\n\t\t\t\tposition.applyMatrix4(matrix);\r\n\t\t\t\tposition.needsUpdate = true;\r\n\t\t\t}\r\n\r\n\t\t\tconst normal = this.attributes.normal;\r\n\r\n\t\t\tif (normal !== undefined) {\r\n\t\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix(matrix);\r\n\t\t\t\tnormal.applyNormalMatrix(normalMatrix);\r\n\t\t\t\tnormal.needsUpdate = true;\r\n\t\t\t}\r\n\r\n\t\t\tconst tangent = this.attributes.tangent;\r\n\r\n\t\t\tif (tangent !== undefined) {\r\n\t\t\t\ttangent.transformDirection(matrix);\r\n\t\t\t\ttangent.needsUpdate = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.boundingBox !== null) {\r\n\t\t\t\tthis.computeBoundingBox();\r\n\t\t\t}\r\n\r\n\t\t\tif (this.boundingSphere !== null) {\r\n\t\t\t\tthis.computeBoundingSphere();\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tapplyQuaternion(q) {\r\n\t\t\t_m1.makeRotationFromQuaternion(q);\r\n\r\n\t\t\tthis.applyMatrix4(_m1);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\trotateX(angle) {\r\n\t\t\t// rotate geometry around world x-axis\r\n\t\t\t_m1.makeRotationX(angle);\r\n\r\n\t\t\tthis.applyMatrix4(_m1);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\trotateY(angle) {\r\n\t\t\t// rotate geometry around world y-axis\r\n\t\t\t_m1.makeRotationY(angle);\r\n\r\n\t\t\tthis.applyMatrix4(_m1);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\trotateZ(angle) {\r\n\t\t\t// rotate geometry around world z-axis\r\n\t\t\t_m1.makeRotationZ(angle);\r\n\r\n\t\t\tthis.applyMatrix4(_m1);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttranslate(x, y, z) {\r\n\t\t\t// translate geometry\r\n\t\t\t_m1.makeTranslation(x, y, z);\r\n\r\n\t\t\tthis.applyMatrix4(_m1);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tscale(x, y, z) {\r\n\t\t\t// scale geometry\r\n\t\t\t_m1.makeScale(x, y, z);\r\n\r\n\t\t\tthis.applyMatrix4(_m1);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tlookAt(vector) {\r\n\t\t\t_obj.lookAt(vector);\r\n\r\n\t\t\t_obj.updateMatrix();\r\n\r\n\t\t\tthis.applyMatrix4(_obj.matrix);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcenter() {\r\n\t\t\tthis.computeBoundingBox();\r\n\t\t\tthis.boundingBox.getCenter(_offset).negate();\r\n\t\t\tthis.translate(_offset.x, _offset.y, _offset.z);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromPoints(points) {\r\n\t\t\tconst position = [];\r\n\r\n\t\t\tfor (let i = 0, l = points.length; i < l; i++) {\r\n\t\t\t\tconst point = points[i];\r\n\t\t\t\tposition.push(point.x, point.y, point.z || 0);\r\n\t\t\t}\r\n\r\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(position, 3));\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcomputeBoundingBox() {\r\n\t\t\tif (this.boundingBox === null) {\r\n\t\t\t\tthis.boundingBox = new Box3();\r\n\t\t\t}\r\n\r\n\t\t\tconst position = this.attributes.position;\r\n\t\t\tconst morphAttributesPosition = this.morphAttributes.position;\r\n\r\n\t\t\tif (position && position.isGLBufferAttribute) {\r\n\t\t\t\tconsole.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this);\r\n\t\t\t\tthis.boundingBox.set(new Vector3(-Infinity, -Infinity, -Infinity), new Vector3(+Infinity, +Infinity, +Infinity));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (position !== undefined) {\r\n\t\t\t\tthis.boundingBox.setFromBufferAttribute(position); // process morph attributes if present\r\n\r\n\t\t\t\tif (morphAttributesPosition) {\r\n\t\t\t\t\tfor (let i = 0, il = morphAttributesPosition.length; i < il; i++) {\r\n\t\t\t\t\t\tconst morphAttribute = morphAttributesPosition[i];\r\n\r\n\t\t\t\t\t\t_box$1.setFromBufferAttribute(morphAttribute);\r\n\r\n\t\t\t\t\t\tif (this.morphTargetsRelative) {\r\n\t\t\t\t\t\t\t_vector$8.addVectors(this.boundingBox.min, _box$1.min);\r\n\r\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint(_vector$8);\r\n\r\n\t\t\t\t\t\t\t_vector$8.addVectors(this.boundingBox.max, _box$1.max);\r\n\r\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint(_vector$8);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint(_box$1.min);\r\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint(_box$1.max);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.boundingBox.makeEmpty();\r\n\t\t\t}\r\n\r\n\t\t\tif (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) {\r\n\t\t\t\tconsole.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcomputeBoundingSphere() {\r\n\t\t\tif (this.boundingSphere === null) {\r\n\t\t\t\tthis.boundingSphere = new Sphere();\r\n\t\t\t}\r\n\r\n\t\t\tconst position = this.attributes.position;\r\n\t\t\tconst morphAttributesPosition = this.morphAttributes.position;\r\n\r\n\t\t\tif (position && position.isGLBufferAttribute) {\r\n\t\t\t\tconsole.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this);\r\n\t\t\t\tthis.boundingSphere.set(new Vector3(), Infinity);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (position) {\r\n\t\t\t\t// first, find the center of the bounding sphere\r\n\t\t\t\tconst center = this.boundingSphere.center;\r\n\r\n\t\t\t\t_box$1.setFromBufferAttribute(position); // process morph attributes if present\r\n\r\n\r\n\t\t\t\tif (morphAttributesPosition) {\r\n\t\t\t\t\tfor (let i = 0, il = morphAttributesPosition.length; i < il; i++) {\r\n\t\t\t\t\t\tconst morphAttribute = morphAttributesPosition[i];\r\n\r\n\t\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute(morphAttribute);\r\n\r\n\t\t\t\t\t\tif (this.morphTargetsRelative) {\r\n\t\t\t\t\t\t\t_vector$8.addVectors(_box$1.min, _boxMorphTargets.min);\r\n\r\n\t\t\t\t\t\t\t_box$1.expandByPoint(_vector$8);\r\n\r\n\t\t\t\t\t\t\t_vector$8.addVectors(_box$1.max, _boxMorphTargets.max);\r\n\r\n\t\t\t\t\t\t\t_box$1.expandByPoint(_vector$8);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t_box$1.expandByPoint(_boxMorphTargets.min);\r\n\r\n\t\t\t\t\t\t\t_box$1.expandByPoint(_boxMorphTargets.max);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_box$1.getCenter(center); // second, try to find a boundingSphere with a radius smaller than the\r\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\r\n\r\n\r\n\t\t\t\tlet maxRadiusSq = 0;\r\n\r\n\t\t\t\tfor (let i = 0, il = position.count; i < il; i++) {\r\n\t\t\t\t\t_vector$8.fromBufferAttribute(position, i);\r\n\r\n\t\t\t\t\tmaxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector$8));\r\n\t\t\t\t} // process morph attributes if present\r\n\r\n\r\n\t\t\t\tif (morphAttributesPosition) {\r\n\t\t\t\t\tfor (let i = 0, il = morphAttributesPosition.length; i < il; i++) {\r\n\t\t\t\t\t\tconst morphAttribute = morphAttributesPosition[i];\r\n\t\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\r\n\r\n\t\t\t\t\t\tfor (let j = 0, jl = morphAttribute.count; j < jl; j++) {\r\n\t\t\t\t\t\t\t_vector$8.fromBufferAttribute(morphAttribute, j);\r\n\r\n\t\t\t\t\t\t\tif (morphTargetsRelative) {\r\n\t\t\t\t\t\t\t\t_offset.fromBufferAttribute(position, j);\r\n\r\n\t\t\t\t\t\t\t\t_vector$8.add(_offset);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tmaxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector$8));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt(maxRadiusSq);\r\n\r\n\t\t\t\tif (isNaN(this.boundingSphere.radius)) {\r\n\t\t\t\t\tconsole.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcomputeFaceNormals() {// backwards compatibility\r\n\t\t}\r\n\r\n\t\tcomputeTangents() {\r\n\t\t\tconst index = this.index;\r\n\t\t\tconst attributes = this.attributes; // based on http://www.terathon.com/code/tangent.html\r\n\t\t\t// (per vertex tangents)\r\n\r\n\t\t\tif (index === null || attributes.position === undefined || attributes.normal === undefined || attributes.uv === undefined) {\r\n\t\t\t\tconsole.error('THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst indices = index.array;\r\n\t\t\tconst positions = attributes.position.array;\r\n\t\t\tconst normals = attributes.normal.array;\r\n\t\t\tconst uvs = attributes.uv.array;\r\n\t\t\tconst nVertices = positions.length / 3;\r\n\r\n\t\t\tif (attributes.tangent === undefined) {\r\n\t\t\t\tthis.setAttribute('tangent', new BufferAttribute(new Float32Array(4 * nVertices), 4));\r\n\t\t\t}\r\n\r\n\t\t\tconst tangents = attributes.tangent.array;\r\n\t\t\tconst tan1 = [],\r\n\t\t\t\t\t\ttan2 = [];\r\n\r\n\t\t\tfor (let i = 0; i < nVertices; i++) {\r\n\t\t\t\ttan1[i] = new Vector3();\r\n\t\t\t\ttan2[i] = new Vector3();\r\n\t\t\t}\r\n\r\n\t\t\tconst vA = new Vector3(),\r\n\t\t\t\t\t\tvB = new Vector3(),\r\n\t\t\t\t\t\tvC = new Vector3(),\r\n\t\t\t\t\t\tuvA = new Vector2(),\r\n\t\t\t\t\t\tuvB = new Vector2(),\r\n\t\t\t\t\t\tuvC = new Vector2(),\r\n\t\t\t\t\t\tsdir = new Vector3(),\r\n\t\t\t\t\t\ttdir = new Vector3();\r\n\r\n\t\t\tfunction handleTriangle(a, b, c) {\r\n\t\t\t\tvA.fromArray(positions, a * 3);\r\n\t\t\t\tvB.fromArray(positions, b * 3);\r\n\t\t\t\tvC.fromArray(positions, c * 3);\r\n\t\t\t\tuvA.fromArray(uvs, a * 2);\r\n\t\t\t\tuvB.fromArray(uvs, b * 2);\r\n\t\t\t\tuvC.fromArray(uvs, c * 2);\r\n\t\t\t\tvB.sub(vA);\r\n\t\t\t\tvC.sub(vA);\r\n\t\t\t\tuvB.sub(uvA);\r\n\t\t\t\tuvC.sub(uvA);\r\n\t\t\t\tconst r = 1.0 / (uvB.x * uvC.y - uvC.x * uvB.y); // silently ignore degenerate uv triangles having coincident or colinear vertices\r\n\r\n\t\t\t\tif (!isFinite(r)) return;\r\n\t\t\t\tsdir.copy(vB).multiplyScalar(uvC.y).addScaledVector(vC, -uvB.y).multiplyScalar(r);\r\n\t\t\t\ttdir.copy(vC).multiplyScalar(uvB.x).addScaledVector(vB, -uvC.x).multiplyScalar(r);\r\n\t\t\t\ttan1[a].add(sdir);\r\n\t\t\t\ttan1[b].add(sdir);\r\n\t\t\t\ttan1[c].add(sdir);\r\n\t\t\t\ttan2[a].add(tdir);\r\n\t\t\t\ttan2[b].add(tdir);\r\n\t\t\t\ttan2[c].add(tdir);\r\n\t\t\t}\r\n\r\n\t\t\tlet groups = this.groups;\r\n\r\n\t\t\tif (groups.length === 0) {\r\n\t\t\t\tgroups = [{\r\n\t\t\t\t\tstart: 0,\r\n\t\t\t\t\tcount: indices.length\r\n\t\t\t\t}];\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = 0, il = groups.length; i < il; ++i) {\r\n\t\t\t\tconst group = groups[i];\r\n\t\t\t\tconst start = group.start;\r\n\t\t\t\tconst count = group.count;\r\n\r\n\t\t\t\tfor (let j = start, jl = start + count; j < jl; j += 3) {\r\n\t\t\t\t\thandleTriangle(indices[j + 0], indices[j + 1], indices[j + 2]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst tmp = new Vector3(),\r\n\t\t\t\t\t\ttmp2 = new Vector3();\r\n\t\t\tconst n = new Vector3(),\r\n\t\t\t\t\t\tn2 = new Vector3();\r\n\r\n\t\t\tfunction handleVertex(v) {\r\n\t\t\t\tn.fromArray(normals, v * 3);\r\n\t\t\t\tn2.copy(n);\r\n\t\t\t\tconst t = tan1[v]; // Gram-Schmidt orthogonalize\r\n\r\n\t\t\t\ttmp.copy(t);\r\n\t\t\t\ttmp.sub(n.multiplyScalar(n.dot(t))).normalize(); // Calculate handedness\r\n\r\n\t\t\t\ttmp2.crossVectors(n2, t);\r\n\t\t\t\tconst test = tmp2.dot(tan2[v]);\r\n\t\t\t\tconst w = test < 0.0 ? -1.0 : 1.0;\r\n\t\t\t\ttangents[v * 4] = tmp.x;\r\n\t\t\t\ttangents[v * 4 + 1] = tmp.y;\r\n\t\t\t\ttangents[v * 4 + 2] = tmp.z;\r\n\t\t\t\ttangents[v * 4 + 3] = w;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = 0, il = groups.length; i < il; ++i) {\r\n\t\t\t\tconst group = groups[i];\r\n\t\t\t\tconst start = group.start;\r\n\t\t\t\tconst count = group.count;\r\n\r\n\t\t\t\tfor (let j = start, jl = start + count; j < jl; j += 3) {\r\n\t\t\t\t\thandleVertex(indices[j + 0]);\r\n\t\t\t\t\thandleVertex(indices[j + 1]);\r\n\t\t\t\t\thandleVertex(indices[j + 2]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcomputeVertexNormals() {\r\n\t\t\tconst index = this.index;\r\n\t\t\tconst positionAttribute = this.getAttribute('position');\r\n\r\n\t\t\tif (positionAttribute !== undefined) {\r\n\t\t\t\tlet normalAttribute = this.getAttribute('normal');\r\n\r\n\t\t\t\tif (normalAttribute === undefined) {\r\n\t\t\t\t\tnormalAttribute = new BufferAttribute(new Float32Array(positionAttribute.count * 3), 3);\r\n\t\t\t\t\tthis.setAttribute('normal', normalAttribute);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// reset existing normals to zero\r\n\t\t\t\t\tfor (let i = 0, il = normalAttribute.count; i < il; i++) {\r\n\t\t\t\t\t\tnormalAttribute.setXYZ(i, 0, 0, 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst pA = new Vector3(),\r\n\t\t\t\t\t\t\tpB = new Vector3(),\r\n\t\t\t\t\t\t\tpC = new Vector3();\r\n\t\t\t\tconst nA = new Vector3(),\r\n\t\t\t\t\t\t\tnB = new Vector3(),\r\n\t\t\t\t\t\t\tnC = new Vector3();\r\n\t\t\t\tconst cb = new Vector3(),\r\n\t\t\t\t\t\t\tab = new Vector3(); // indexed elements\r\n\r\n\t\t\t\tif (index) {\r\n\t\t\t\t\tfor (let i = 0, il = index.count; i < il; i += 3) {\r\n\t\t\t\t\t\tconst vA = index.getX(i + 0);\r\n\t\t\t\t\t\tconst vB = index.getX(i + 1);\r\n\t\t\t\t\t\tconst vC = index.getX(i + 2);\r\n\t\t\t\t\t\tpA.fromBufferAttribute(positionAttribute, vA);\r\n\t\t\t\t\t\tpB.fromBufferAttribute(positionAttribute, vB);\r\n\t\t\t\t\t\tpC.fromBufferAttribute(positionAttribute, vC);\r\n\t\t\t\t\t\tcb.subVectors(pC, pB);\r\n\t\t\t\t\t\tab.subVectors(pA, pB);\r\n\t\t\t\t\t\tcb.cross(ab);\r\n\t\t\t\t\t\tnA.fromBufferAttribute(normalAttribute, vA);\r\n\t\t\t\t\t\tnB.fromBufferAttribute(normalAttribute, vB);\r\n\t\t\t\t\t\tnC.fromBufferAttribute(normalAttribute, vC);\r\n\t\t\t\t\t\tnA.add(cb);\r\n\t\t\t\t\t\tnB.add(cb);\r\n\t\t\t\t\t\tnC.add(cb);\r\n\t\t\t\t\t\tnormalAttribute.setXYZ(vA, nA.x, nA.y, nA.z);\r\n\t\t\t\t\t\tnormalAttribute.setXYZ(vB, nB.x, nB.y, nB.z);\r\n\t\t\t\t\t\tnormalAttribute.setXYZ(vC, nC.x, nC.y, nC.z);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// non-indexed elements (unconnected triangle soup)\r\n\t\t\t\t\tfor (let i = 0, il = positionAttribute.count; i < il; i += 3) {\r\n\t\t\t\t\t\tpA.fromBufferAttribute(positionAttribute, i + 0);\r\n\t\t\t\t\t\tpB.fromBufferAttribute(positionAttribute, i + 1);\r\n\t\t\t\t\t\tpC.fromBufferAttribute(positionAttribute, i + 2);\r\n\t\t\t\t\t\tcb.subVectors(pC, pB);\r\n\t\t\t\t\t\tab.subVectors(pA, pB);\r\n\t\t\t\t\t\tcb.cross(ab);\r\n\t\t\t\t\t\tnormalAttribute.setXYZ(i + 0, cb.x, cb.y, cb.z);\r\n\t\t\t\t\t\tnormalAttribute.setXYZ(i + 1, cb.x, cb.y, cb.z);\r\n\t\t\t\t\t\tnormalAttribute.setXYZ(i + 2, cb.x, cb.y, cb.z);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.normalizeNormals();\r\n\t\t\t\tnormalAttribute.needsUpdate = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tmerge(geometry, offset) {\r\n\t\t\tif (!(geometry && geometry.isBufferGeometry)) {\r\n\t\t\t\tconsole.error('THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (offset === undefined) {\r\n\t\t\t\toffset = 0;\r\n\t\t\t\tconsole.warn('THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. ' + 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.');\r\n\t\t\t}\r\n\r\n\t\t\tconst attributes = this.attributes;\r\n\r\n\t\t\tfor (const key in attributes) {\r\n\t\t\t\tif (geometry.attributes[key] === undefined) continue;\r\n\t\t\t\tconst attribute1 = attributes[key];\r\n\t\t\t\tconst attributeArray1 = attribute1.array;\r\n\t\t\t\tconst attribute2 = geometry.attributes[key];\r\n\t\t\t\tconst attributeArray2 = attribute2.array;\r\n\t\t\t\tconst attributeOffset = attribute2.itemSize * offset;\r\n\t\t\t\tconst length = Math.min(attributeArray2.length, attributeArray1.length - attributeOffset);\r\n\r\n\t\t\t\tfor (let i = 0, j = attributeOffset; i < length; i++, j++) {\r\n\t\t\t\t\tattributeArray1[j] = attributeArray2[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tnormalizeNormals() {\r\n\t\t\tconst normals = this.attributes.normal;\r\n\r\n\t\t\tfor (let i = 0, il = normals.count; i < il; i++) {\r\n\t\t\t\t_vector$8.fromBufferAttribute(normals, i);\r\n\r\n\t\t\t\t_vector$8.normalize();\r\n\r\n\t\t\t\tnormals.setXYZ(i, _vector$8.x, _vector$8.y, _vector$8.z);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttoNonIndexed() {\r\n\t\t\tfunction convertBufferAttribute(attribute, indices) {\r\n\t\t\t\tconst array = attribute.array;\r\n\t\t\t\tconst itemSize = attribute.itemSize;\r\n\t\t\t\tconst normalized = attribute.normalized;\r\n\t\t\t\tconst array2 = new array.constructor(indices.length * itemSize);\r\n\t\t\t\tlet index = 0,\r\n\t\t\t\t\t\tindex2 = 0;\r\n\r\n\t\t\t\tfor (let i = 0, l = indices.length; i < l; i++) {\r\n\t\t\t\t\tif (attribute.isInterleavedBufferAttribute) {\r\n\t\t\t\t\t\tindex = indices[i] * attribute.data.stride + attribute.offset;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tindex = indices[i] * itemSize;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor (let j = 0; j < itemSize; j++) {\r\n\t\t\t\t\t\tarray2[index2++] = array[index++];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn new BufferAttribute(array2, itemSize, normalized);\r\n\t\t\t} //\r\n\r\n\r\n\t\t\tif (this.index === null) {\r\n\t\t\t\tconsole.warn('THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.');\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\r\n\t\t\tconst geometry2 = new BufferGeometry();\r\n\t\t\tconst indices = this.index.array;\r\n\t\t\tconst attributes = this.attributes; // attributes\r\n\r\n\t\t\tfor (const name in attributes) {\r\n\t\t\t\tconst attribute = attributes[name];\r\n\t\t\t\tconst newAttribute = convertBufferAttribute(attribute, indices);\r\n\t\t\t\tgeometry2.setAttribute(name, newAttribute);\r\n\t\t\t} // morph attributes\r\n\r\n\r\n\t\t\tconst morphAttributes = this.morphAttributes;\r\n\r\n\t\t\tfor (const name in morphAttributes) {\r\n\t\t\t\tconst morphArray = [];\r\n\t\t\t\tconst morphAttribute = morphAttributes[name]; // morphAttribute: array of Float32BufferAttributes\r\n\r\n\t\t\t\tfor (let i = 0, il = morphAttribute.length; i < il; i++) {\r\n\t\t\t\t\tconst attribute = morphAttribute[i];\r\n\t\t\t\t\tconst newAttribute = convertBufferAttribute(attribute, indices);\r\n\t\t\t\t\tmorphArray.push(newAttribute);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry2.morphAttributes[name] = morphArray;\r\n\t\t\t}\r\n\r\n\t\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative; // groups\r\n\r\n\t\t\tconst groups = this.groups;\r\n\r\n\t\t\tfor (let i = 0, l = groups.length; i < l; i++) {\r\n\t\t\t\tconst group = groups[i];\r\n\t\t\t\tgeometry2.addGroup(group.start, group.count, group.materialIndex);\r\n\t\t\t}\r\n\r\n\t\t\treturn geometry2;\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.5,\r\n\t\t\t\t\ttype: 'BufferGeometry',\r\n\t\t\t\t\tgenerator: 'BufferGeometry.toJSON'\r\n\t\t\t\t}\r\n\t\t\t}; // standard BufferGeometry serialization\r\n\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\t\tif (this.name !== '') data.name = this.name;\r\n\t\t\tif (Object.keys(this.userData).length > 0) data.userData = this.userData;\r\n\r\n\t\t\tif (this.parameters !== undefined) {\r\n\t\t\t\tconst parameters = this.parameters;\r\n\r\n\t\t\t\tfor (const key in parameters) {\r\n\t\t\t\t\tif (parameters[key] !== undefined) data[key] = parameters[key];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn data;\r\n\t\t\t} // for simplicity the code assumes attributes are not shared across geometries, see #15811\r\n\r\n\r\n\t\t\tdata.data = {\r\n\t\t\t\tattributes: {}\r\n\t\t\t};\r\n\t\t\tconst index = this.index;\r\n\r\n\t\t\tif (index !== null) {\r\n\t\t\t\tdata.data.index = {\r\n\t\t\t\t\ttype: index.array.constructor.name,\r\n\t\t\t\t\tarray: Array.prototype.slice.call(index.array)\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tconst attributes = this.attributes;\r\n\r\n\t\t\tfor (const key in attributes) {\r\n\t\t\t\tconst attribute = attributes[key];\r\n\t\t\t\tdata.data.attributes[key] = attribute.toJSON(data.data);\r\n\t\t\t}\r\n\r\n\t\t\tconst morphAttributes = {};\r\n\t\t\tlet hasMorphAttributes = false;\r\n\r\n\t\t\tfor (const key in this.morphAttributes) {\r\n\t\t\t\tconst attributeArray = this.morphAttributes[key];\r\n\t\t\t\tconst array = [];\r\n\r\n\t\t\t\tfor (let i = 0, il = attributeArray.length; i < il; i++) {\r\n\t\t\t\t\tconst attribute = attributeArray[i];\r\n\t\t\t\t\tarray.push(attribute.toJSON(data.data));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (array.length > 0) {\r\n\t\t\t\t\tmorphAttributes[key] = array;\r\n\t\t\t\t\thasMorphAttributes = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (hasMorphAttributes) {\r\n\t\t\t\tdata.data.morphAttributes = morphAttributes;\r\n\t\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\r\n\t\t\t}\r\n\r\n\t\t\tconst groups = this.groups;\r\n\r\n\t\t\tif (groups.length > 0) {\r\n\t\t\t\tdata.data.groups = JSON.parse(JSON.stringify(groups));\r\n\t\t\t}\r\n\r\n\t\t\tconst boundingSphere = this.boundingSphere;\r\n\r\n\t\t\tif (boundingSphere !== null) {\r\n\t\t\t\tdata.data.boundingSphere = {\r\n\t\t\t\t\tcenter: boundingSphere.center.toArray(),\r\n\t\t\t\t\tradius: boundingSphere.radius\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\t/*\r\n\t\t\t // Handle primitives\r\n\t\t\t\t const parameters = this.parameters;\r\n\t\t\t\t if ( parameters !== undefined ) {\r\n\t\t\t\t const values = [];\r\n\t\t\t\t for ( const key in parameters ) {\r\n\t\t\t\t values.push( parameters[ key ] );\r\n\t\t\t\t }\r\n\t\t\t\t const geometry = Object.create( this.constructor.prototype );\r\n\t\t\t this.constructor.apply( geometry, values );\r\n\t\t\t return geometry;\r\n\t\t\t\t }\r\n\t\t\t\t return new this.constructor().copy( this );\r\n\t\t\t */\r\n\t\t\treturn new BufferGeometry().copy(this);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\t// reset\r\n\t\t\tthis.index = null;\r\n\t\t\tthis.attributes = {};\r\n\t\t\tthis.morphAttributes = {};\r\n\t\t\tthis.groups = [];\r\n\t\t\tthis.boundingBox = null;\r\n\t\t\tthis.boundingSphere = null; // used for storing cloned, shared data\r\n\r\n\t\t\tconst data = {}; // name\r\n\r\n\t\t\tthis.name = source.name; // index\r\n\r\n\t\t\tconst index = source.index;\r\n\r\n\t\t\tif (index !== null) {\r\n\t\t\t\tthis.setIndex(index.clone(data));\r\n\t\t\t} // attributes\r\n\r\n\r\n\t\t\tconst attributes = source.attributes;\r\n\r\n\t\t\tfor (const name in attributes) {\r\n\t\t\t\tconst attribute = attributes[name];\r\n\t\t\t\tthis.setAttribute(name, attribute.clone(data));\r\n\t\t\t} // morph attributes\r\n\r\n\r\n\t\t\tconst morphAttributes = source.morphAttributes;\r\n\r\n\t\t\tfor (const name in morphAttributes) {\r\n\t\t\t\tconst array = [];\r\n\t\t\t\tconst morphAttribute = morphAttributes[name]; // morphAttribute: array of Float32BufferAttributes\r\n\r\n\t\t\t\tfor (let i = 0, l = morphAttribute.length; i < l; i++) {\r\n\t\t\t\t\tarray.push(morphAttribute[i].clone(data));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.morphAttributes[name] = array;\r\n\t\t\t}\r\n\r\n\t\t\tthis.morphTargetsRelative = source.morphTargetsRelative; // groups\r\n\r\n\t\t\tconst groups = source.groups;\r\n\r\n\t\t\tfor (let i = 0, l = groups.length; i < l; i++) {\r\n\t\t\t\tconst group = groups[i];\r\n\t\t\t\tthis.addGroup(group.start, group.count, group.materialIndex);\r\n\t\t\t} // bounding box\r\n\r\n\r\n\t\t\tconst boundingBox = source.boundingBox;\r\n\r\n\t\t\tif (boundingBox !== null) {\r\n\t\t\t\tthis.boundingBox = boundingBox.clone();\r\n\t\t\t} // bounding sphere\r\n\r\n\r\n\t\t\tconst boundingSphere = source.boundingSphere;\r\n\r\n\t\t\tif (boundingSphere !== null) {\r\n\t\t\t\tthis.boundingSphere = boundingSphere.clone();\r\n\t\t\t} // draw range\r\n\r\n\r\n\t\t\tthis.drawRange.start = source.drawRange.start;\r\n\t\t\tthis.drawRange.count = source.drawRange.count; // user data\r\n\r\n\t\t\tthis.userData = source.userData;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tdispose() {\r\n\t\t\tthis.dispatchEvent({\r\n\t\t\t\ttype: 'dispose'\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tBufferGeometry.prototype.isBufferGeometry = true;\r\n\r\n\tconst _inverseMatrix$2 = /*@__PURE__*/new Matrix4();\r\n\r\n\tconst _ray$2 = /*@__PURE__*/new Ray();\r\n\r\n\tconst _sphere$3 = /*@__PURE__*/new Sphere();\r\n\r\n\tconst _vA$1 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _vB$1 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _vC$1 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _tempA = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _tempB = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _tempC = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _morphA = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _morphB = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _morphC = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _uvA$1 = /*@__PURE__*/new Vector2();\r\n\r\n\tconst _uvB$1 = /*@__PURE__*/new Vector2();\r\n\r\n\tconst _uvC$1 = /*@__PURE__*/new Vector2();\r\n\r\n\tconst _intersectionPoint = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _intersectionPointWorld = /*@__PURE__*/new Vector3();\r\n\r\n\tclass Mesh extends Object3D {\r\n\t\tconstructor(geometry = new BufferGeometry(), material = new MeshBasicMaterial()) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'Mesh';\r\n\t\t\tthis.geometry = geometry;\r\n\t\t\tthis.material = material;\r\n\t\t\tthis.updateMorphTargets();\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\r\n\t\t\tif (source.morphTargetInfluences !== undefined) {\r\n\t\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\r\n\t\t\t}\r\n\r\n\t\t\tif (source.morphTargetDictionary !== undefined) {\r\n\t\t\t\tthis.morphTargetDictionary = Object.assign({}, source.morphTargetDictionary);\r\n\t\t\t}\r\n\r\n\t\t\tthis.material = source.material;\r\n\t\t\tthis.geometry = source.geometry;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tupdateMorphTargets() {\r\n\t\t\tconst geometry = this.geometry;\r\n\r\n\t\t\tif (geometry.isBufferGeometry) {\r\n\t\t\t\tconst morphAttributes = geometry.morphAttributes;\r\n\t\t\t\tconst keys = Object.keys(morphAttributes);\r\n\r\n\t\t\t\tif (keys.length > 0) {\r\n\t\t\t\t\tconst morphAttribute = morphAttributes[keys[0]];\r\n\r\n\t\t\t\t\tif (morphAttribute !== undefined) {\r\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\r\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\r\n\r\n\t\t\t\t\t\tfor (let m = 0, ml = morphAttribute.length; m < ml; m++) {\r\n\t\t\t\t\t\t\tconst name = morphAttribute[m].name || String(m);\r\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push(0);\r\n\t\t\t\t\t\t\tthis.morphTargetDictionary[name] = m;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconst morphTargets = geometry.morphTargets;\r\n\r\n\t\t\t\tif (morphTargets !== undefined && morphTargets.length > 0) {\r\n\t\t\t\t\tconsole.error('THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\traycast(raycaster, intersects) {\r\n\t\t\tconst geometry = this.geometry;\r\n\t\t\tconst material = this.material;\r\n\t\t\tconst matrixWorld = this.matrixWorld;\r\n\t\t\tif (material === undefined) return; // Checking boundingSphere distance to ray\r\n\r\n\t\t\tif (geometry.boundingSphere === null) geometry.computeBoundingSphere();\r\n\r\n\t\t\t_sphere$3.copy(geometry.boundingSphere);\r\n\r\n\t\t\t_sphere$3.applyMatrix4(matrixWorld);\r\n\r\n\t\t\tif (raycaster.ray.intersectsSphere(_sphere$3) === false) return; //\r\n\r\n\t\t\t_inverseMatrix$2.copy(matrixWorld).invert();\r\n\r\n\t\t\t_ray$2.copy(raycaster.ray).applyMatrix4(_inverseMatrix$2); // Check boundingBox before continuing\r\n\r\n\r\n\t\t\tif (geometry.boundingBox !== null) {\r\n\t\t\t\tif (_ray$2.intersectsBox(geometry.boundingBox) === false) return;\r\n\t\t\t}\r\n\r\n\t\t\tlet intersection;\r\n\r\n\t\t\tif (geometry.isBufferGeometry) {\r\n\t\t\t\tconst index = geometry.index;\r\n\t\t\t\tconst position = geometry.attributes.position;\r\n\t\t\t\tconst morphPosition = geometry.morphAttributes.position;\r\n\t\t\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\r\n\t\t\t\tconst uv = geometry.attributes.uv;\r\n\t\t\t\tconst uv2 = geometry.attributes.uv2;\r\n\t\t\t\tconst groups = geometry.groups;\r\n\t\t\t\tconst drawRange = geometry.drawRange;\r\n\r\n\t\t\t\tif (index !== null) {\r\n\t\t\t\t\t// indexed buffer geometry\r\n\t\t\t\t\tif (Array.isArray(material)) {\r\n\t\t\t\t\t\tfor (let i = 0, il = groups.length; i < il; i++) {\r\n\t\t\t\t\t\t\tconst group = groups[i];\r\n\t\t\t\t\t\t\tconst groupMaterial = material[group.materialIndex];\r\n\t\t\t\t\t\t\tconst start = Math.max(group.start, drawRange.start);\r\n\t\t\t\t\t\t\tconst end = Math.min(group.start + group.count, drawRange.start + drawRange.count);\r\n\r\n\t\t\t\t\t\t\tfor (let j = start, jl = end; j < jl; j += 3) {\r\n\t\t\t\t\t\t\t\tconst a = index.getX(j);\r\n\t\t\t\t\t\t\t\tconst b = index.getX(j + 1);\r\n\t\t\t\t\t\t\t\tconst c = index.getX(j + 2);\r\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection(this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\r\n\r\n\t\t\t\t\t\t\t\tif (intersection) {\r\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor(j / 3); // triangle number in indexed buffer semantics\r\n\r\n\t\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\r\n\t\t\t\t\t\t\t\t\tintersects.push(intersection);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst start = Math.max(0, drawRange.start);\r\n\t\t\t\t\t\tconst end = Math.min(index.count, drawRange.start + drawRange.count);\r\n\r\n\t\t\t\t\t\tfor (let i = start, il = end; i < il; i += 3) {\r\n\t\t\t\t\t\t\tconst a = index.getX(i);\r\n\t\t\t\t\t\t\tconst b = index.getX(i + 1);\r\n\t\t\t\t\t\t\tconst c = index.getX(i + 2);\r\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection(this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\r\n\r\n\t\t\t\t\t\t\tif (intersection) {\r\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor(i / 3); // triangle number in indexed buffer semantics\r\n\r\n\t\t\t\t\t\t\t\tintersects.push(intersection);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (position !== undefined) {\r\n\t\t\t\t\t// non-indexed buffer geometry\r\n\t\t\t\t\tif (Array.isArray(material)) {\r\n\t\t\t\t\t\tfor (let i = 0, il = groups.length; i < il; i++) {\r\n\t\t\t\t\t\t\tconst group = groups[i];\r\n\t\t\t\t\t\t\tconst groupMaterial = material[group.materialIndex];\r\n\t\t\t\t\t\t\tconst start = Math.max(group.start, drawRange.start);\r\n\t\t\t\t\t\t\tconst end = Math.min(group.start + group.count, drawRange.start + drawRange.count);\r\n\r\n\t\t\t\t\t\t\tfor (let j = start, jl = end; j < jl; j += 3) {\r\n\t\t\t\t\t\t\t\tconst a = j;\r\n\t\t\t\t\t\t\t\tconst b = j + 1;\r\n\t\t\t\t\t\t\t\tconst c = j + 2;\r\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection(this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\r\n\r\n\t\t\t\t\t\t\t\tif (intersection) {\r\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor(j / 3); // triangle number in non-indexed buffer semantics\r\n\r\n\t\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\r\n\t\t\t\t\t\t\t\t\tintersects.push(intersection);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst start = Math.max(0, drawRange.start);\r\n\t\t\t\t\t\tconst end = Math.min(position.count, drawRange.start + drawRange.count);\r\n\r\n\t\t\t\t\t\tfor (let i = start, il = end; i < il; i += 3) {\r\n\t\t\t\t\t\t\tconst a = i;\r\n\t\t\t\t\t\t\tconst b = i + 1;\r\n\t\t\t\t\t\t\tconst c = i + 2;\r\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection(this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\r\n\r\n\t\t\t\t\t\t\tif (intersection) {\r\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor(i / 3); // triangle number in non-indexed buffer semantics\r\n\r\n\t\t\t\t\t\t\t\tintersects.push(intersection);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (geometry.isGeometry) {\r\n\t\t\t\tconsole.error('THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tMesh.prototype.isMesh = true;\r\n\r\n\tfunction checkIntersection(object, material, raycaster, ray, pA, pB, pC, point) {\r\n\t\tlet intersect;\r\n\r\n\t\tif (material.side === BackSide) {\r\n\t\t\tintersect = ray.intersectTriangle(pC, pB, pA, true, point);\r\n\t\t} else {\r\n\t\t\tintersect = ray.intersectTriangle(pA, pB, pC, material.side !== DoubleSide, point);\r\n\t\t}\r\n\r\n\t\tif (intersect === null) return null;\r\n\r\n\t\t_intersectionPointWorld.copy(point);\r\n\r\n\t\t_intersectionPointWorld.applyMatrix4(object.matrixWorld);\r\n\r\n\t\tconst distance = raycaster.ray.origin.distanceTo(_intersectionPointWorld);\r\n\t\tif (distance < raycaster.near || distance > raycaster.far) return null;\r\n\t\treturn {\r\n\t\t\tdistance: distance,\r\n\t\t\tpoint: _intersectionPointWorld.clone(),\r\n\t\t\tobject: object\r\n\t\t};\r\n\t}\r\n\r\n\tfunction checkBufferGeometryIntersection(object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c) {\r\n\t\t_vA$1.fromBufferAttribute(position, a);\r\n\r\n\t\t_vB$1.fromBufferAttribute(position, b);\r\n\r\n\t\t_vC$1.fromBufferAttribute(position, c);\r\n\r\n\t\tconst morphInfluences = object.morphTargetInfluences;\r\n\r\n\t\tif (morphPosition && morphInfluences) {\r\n\t\t\t_morphA.set(0, 0, 0);\r\n\r\n\t\t\t_morphB.set(0, 0, 0);\r\n\r\n\t\t\t_morphC.set(0, 0, 0);\r\n\r\n\t\t\tfor (let i = 0, il = morphPosition.length; i < il; i++) {\r\n\t\t\t\tconst influence = morphInfluences[i];\r\n\t\t\t\tconst morphAttribute = morphPosition[i];\r\n\t\t\t\tif (influence === 0) continue;\r\n\r\n\t\t\t\t_tempA.fromBufferAttribute(morphAttribute, a);\r\n\r\n\t\t\t\t_tempB.fromBufferAttribute(morphAttribute, b);\r\n\r\n\t\t\t\t_tempC.fromBufferAttribute(morphAttribute, c);\r\n\r\n\t\t\t\tif (morphTargetsRelative) {\r\n\t\t\t\t\t_morphA.addScaledVector(_tempA, influence);\r\n\r\n\t\t\t\t\t_morphB.addScaledVector(_tempB, influence);\r\n\r\n\t\t\t\t\t_morphC.addScaledVector(_tempC, influence);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t_morphA.addScaledVector(_tempA.sub(_vA$1), influence);\r\n\r\n\t\t\t\t\t_morphB.addScaledVector(_tempB.sub(_vB$1), influence);\r\n\r\n\t\t\t\t\t_morphC.addScaledVector(_tempC.sub(_vC$1), influence);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t_vA$1.add(_morphA);\r\n\r\n\t\t\t_vB$1.add(_morphB);\r\n\r\n\t\t\t_vC$1.add(_morphC);\r\n\t\t}\r\n\r\n\t\tif (object.isSkinnedMesh) {\r\n\t\t\tobject.boneTransform(a, _vA$1);\r\n\t\t\tobject.boneTransform(b, _vB$1);\r\n\t\t\tobject.boneTransform(c, _vC$1);\r\n\t\t}\r\n\r\n\t\tconst intersection = checkIntersection(object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint);\r\n\r\n\t\tif (intersection) {\r\n\t\t\tif (uv) {\r\n\t\t\t\t_uvA$1.fromBufferAttribute(uv, a);\r\n\r\n\t\t\t\t_uvB$1.fromBufferAttribute(uv, b);\r\n\r\n\t\t\t\t_uvC$1.fromBufferAttribute(uv, c);\r\n\r\n\t\t\t\tintersection.uv = Triangle.getUV(_intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2());\r\n\t\t\t}\r\n\r\n\t\t\tif (uv2) {\r\n\t\t\t\t_uvA$1.fromBufferAttribute(uv2, a);\r\n\r\n\t\t\t\t_uvB$1.fromBufferAttribute(uv2, b);\r\n\r\n\t\t\t\t_uvC$1.fromBufferAttribute(uv2, c);\r\n\r\n\t\t\t\tintersection.uv2 = Triangle.getUV(_intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2());\r\n\t\t\t}\r\n\r\n\t\t\tconst face = {\r\n\t\t\t\ta: a,\r\n\t\t\t\tb: b,\r\n\t\t\t\tc: c,\r\n\t\t\t\tnormal: new Vector3(),\r\n\t\t\t\tmaterialIndex: 0\r\n\t\t\t};\r\n\t\t\tTriangle.getNormal(_vA$1, _vB$1, _vC$1, face.normal);\r\n\t\t\tintersection.face = face;\r\n\t\t}\r\n\r\n\t\treturn intersection;\r\n\t}\r\n\r\n\tclass BoxGeometry extends BufferGeometry {\r\n\t\tconstructor(width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'BoxGeometry';\r\n\t\t\tthis.parameters = {\r\n\t\t\t\twidth: width,\r\n\t\t\t\theight: height,\r\n\t\t\t\tdepth: depth,\r\n\t\t\t\twidthSegments: widthSegments,\r\n\t\t\t\theightSegments: heightSegments,\r\n\t\t\t\tdepthSegments: depthSegments\r\n\t\t\t};\r\n\t\t\tconst scope = this; // segments\r\n\r\n\t\t\twidthSegments = Math.floor(widthSegments);\r\n\t\t\theightSegments = Math.floor(heightSegments);\r\n\t\t\tdepthSegments = Math.floor(depthSegments); // buffers\r\n\r\n\t\t\tconst indices = [];\r\n\t\t\tconst vertices = [];\r\n\t\t\tconst normals = [];\r\n\t\t\tconst uvs = []; // helper variables\r\n\r\n\t\t\tlet numberOfVertices = 0;\r\n\t\t\tlet groupStart = 0; // build each side of the box geometry\r\n\r\n\t\t\tbuildPlane('z', 'y', 'x', -1, -1, depth, height, width, depthSegments, heightSegments, 0); // px\r\n\r\n\t\t\tbuildPlane('z', 'y', 'x', 1, -1, depth, height, -width, depthSegments, heightSegments, 1); // nx\r\n\r\n\t\t\tbuildPlane('x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2); // py\r\n\r\n\t\t\tbuildPlane('x', 'z', 'y', 1, -1, width, depth, -height, widthSegments, depthSegments, 3); // ny\r\n\r\n\t\t\tbuildPlane('x', 'y', 'z', 1, -1, width, height, depth, widthSegments, heightSegments, 4); // pz\r\n\r\n\t\t\tbuildPlane('x', 'y', 'z', -1, -1, width, height, -depth, widthSegments, heightSegments, 5); // nz\r\n\t\t\t// build geometry\r\n\r\n\t\t\tthis.setIndex(indices);\r\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\r\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\r\n\r\n\t\t\tfunction buildPlane(u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex) {\r\n\t\t\t\tconst segmentWidth = width / gridX;\r\n\t\t\t\tconst segmentHeight = height / gridY;\r\n\t\t\t\tconst widthHalf = width / 2;\r\n\t\t\t\tconst heightHalf = height / 2;\r\n\t\t\t\tconst depthHalf = depth / 2;\r\n\t\t\t\tconst gridX1 = gridX + 1;\r\n\t\t\t\tconst gridY1 = gridY + 1;\r\n\t\t\t\tlet vertexCounter = 0;\r\n\t\t\t\tlet groupCount = 0;\r\n\t\t\t\tconst vector = new Vector3(); // generate vertices, normals and uvs\r\n\r\n\t\t\t\tfor (let iy = 0; iy < gridY1; iy++) {\r\n\t\t\t\t\tconst y = iy * segmentHeight - heightHalf;\r\n\r\n\t\t\t\t\tfor (let ix = 0; ix < gridX1; ix++) {\r\n\t\t\t\t\t\tconst x = ix * segmentWidth - widthHalf; // set values to correct vector component\r\n\r\n\t\t\t\t\t\tvector[u] = x * udir;\r\n\t\t\t\t\t\tvector[v] = y * vdir;\r\n\t\t\t\t\t\tvector[w] = depthHalf; // now apply vector to vertex buffer\r\n\r\n\t\t\t\t\t\tvertices.push(vector.x, vector.y, vector.z); // set values to correct vector component\r\n\r\n\t\t\t\t\t\tvector[u] = 0;\r\n\t\t\t\t\t\tvector[v] = 0;\r\n\t\t\t\t\t\tvector[w] = depth > 0 ? 1 : -1; // now apply vector to normal buffer\r\n\r\n\t\t\t\t\t\tnormals.push(vector.x, vector.y, vector.z); // uvs\r\n\r\n\t\t\t\t\t\tuvs.push(ix / gridX);\r\n\t\t\t\t\t\tuvs.push(1 - iy / gridY); // counters\r\n\r\n\t\t\t\t\t\tvertexCounter += 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t} // indices\r\n\t\t\t\t// 1. you need three indices to draw a single face\r\n\t\t\t\t// 2. a single segment consists of two faces\r\n\t\t\t\t// 3. so we need to generate six (2*3) indices per segment\r\n\r\n\r\n\t\t\t\tfor (let iy = 0; iy < gridY; iy++) {\r\n\t\t\t\t\tfor (let ix = 0; ix < gridX; ix++) {\r\n\t\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\r\n\t\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * (iy + 1);\r\n\t\t\t\t\t\tconst c = numberOfVertices + (ix + 1) + gridX1 * (iy + 1);\r\n\t\t\t\t\t\tconst d = numberOfVertices + (ix + 1) + gridX1 * iy; // faces\r\n\r\n\t\t\t\t\t\tindices.push(a, b, d);\r\n\t\t\t\t\t\tindices.push(b, c, d); // increase counter\r\n\r\n\t\t\t\t\t\tgroupCount += 6;\r\n\t\t\t\t\t}\r\n\t\t\t\t} // add a group to the geometry. this will ensure multi material support\r\n\r\n\r\n\t\t\t\tscope.addGroup(groupStart, groupCount, materialIndex); // calculate new start value for groups\r\n\r\n\t\t\t\tgroupStart += groupCount; // update total number of vertices\r\n\r\n\t\t\t\tnumberOfVertices += vertexCounter;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tstatic fromJSON(data) {\r\n\t\t\treturn new BoxGeometry(data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Uniform Utilities\r\n\t */\r\n\tfunction cloneUniforms(src) {\r\n\t\tconst dst = {};\r\n\r\n\t\tfor (const u in src) {\r\n\t\t\tdst[u] = {};\r\n\r\n\t\t\tfor (const p in src[u]) {\r\n\t\t\t\tconst property = src[u][p];\r\n\r\n\t\t\t\tif (property && (property.isColor || property.isMatrix3 || property.isMatrix4 || property.isVector2 || property.isVector3 || property.isVector4 || property.isTexture || property.isQuaternion)) {\r\n\t\t\t\t\tdst[u][p] = property.clone();\r\n\t\t\t\t} else if (Array.isArray(property)) {\r\n\t\t\t\t\tdst[u][p] = property.slice();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdst[u][p] = property;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn dst;\r\n\t}\r\n\tfunction mergeUniforms(uniforms) {\r\n\t\tconst merged = {};\r\n\r\n\t\tfor (let u = 0; u < uniforms.length; u++) {\r\n\t\t\tconst tmp = cloneUniforms(uniforms[u]);\r\n\r\n\t\t\tfor (const p in tmp) {\r\n\t\t\t\tmerged[p] = tmp[p];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn merged;\r\n\t} // Legacy\r\n\r\n\tconst UniformsUtils = {\r\n\t\tclone: cloneUniforms,\r\n\t\tmerge: mergeUniforms\r\n\t};\r\n\r\n\tvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\r\n\r\n\tvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\r\n\r\n\t/**\r\n\t * parameters = {\r\n\t *\tdefines: { \"label\" : \"value\" },\r\n\t *\tuniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\r\n\t *\r\n\t *\tfragmentShader: <string>,\r\n\t *\tvertexShader: <string>,\r\n\t *\r\n\t *\twireframe: <boolean>,\r\n\t *\twireframeLinewidth: <float>,\r\n\t *\r\n\t *\tlights: <bool>\r\n\t * }\r\n\t */\r\n\r\n\tclass ShaderMaterial extends Material {\r\n\t\tconstructor(parameters) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'ShaderMaterial';\r\n\t\t\tthis.defines = {};\r\n\t\t\tthis.uniforms = {};\r\n\t\t\tthis.vertexShader = default_vertex;\r\n\t\t\tthis.fragmentShader = default_fragment;\r\n\t\t\tthis.linewidth = 1;\r\n\t\t\tthis.wireframe = false;\r\n\t\t\tthis.wireframeLinewidth = 1;\r\n\t\t\tthis.fog = false; // set to use scene fog\r\n\r\n\t\t\tthis.lights = false; // set to use scene lights\r\n\r\n\t\t\tthis.clipping = false; // set to use user-defined clipping planes\r\n\r\n\t\t\tthis.extensions = {\r\n\t\t\t\tderivatives: false,\r\n\t\t\t\t// set to use derivatives\r\n\t\t\t\tfragDepth: false,\r\n\t\t\t\t// set to use fragment depth values\r\n\t\t\t\tdrawBuffers: false,\r\n\t\t\t\t// set to use draw buffers\r\n\t\t\t\tshaderTextureLOD: false // set to use shader texture LOD\r\n\r\n\t\t\t}; // When rendered geometry doesn't include these attributes but the material does,\r\n\t\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\r\n\r\n\t\t\tthis.defaultAttributeValues = {\r\n\t\t\t\t'color': [1, 1, 1],\r\n\t\t\t\t'uv': [0, 0],\r\n\t\t\t\t'uv2': [0, 0]\r\n\t\t\t};\r\n\t\t\tthis.index0AttributeName = undefined;\r\n\t\t\tthis.uniformsNeedUpdate = false;\r\n\t\t\tthis.glslVersion = null;\r\n\r\n\t\t\tif (parameters !== undefined) {\r\n\t\t\t\tif (parameters.attributes !== undefined) {\r\n\t\t\t\t\tconsole.error('THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.setValues(parameters);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.fragmentShader = source.fragmentShader;\r\n\t\t\tthis.vertexShader = source.vertexShader;\r\n\t\t\tthis.uniforms = cloneUniforms(source.uniforms);\r\n\t\t\tthis.defines = Object.assign({}, source.defines);\r\n\t\t\tthis.wireframe = source.wireframe;\r\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\t\tthis.lights = source.lights;\r\n\t\t\tthis.clipping = source.clipping;\r\n\t\t\tthis.extensions = Object.assign({}, source.extensions);\r\n\t\t\tthis.glslVersion = source.glslVersion;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON(meta) {\r\n\t\t\tconst data = super.toJSON(meta);\r\n\t\t\tdata.glslVersion = this.glslVersion;\r\n\t\t\tdata.uniforms = {};\r\n\r\n\t\t\tfor (const name in this.uniforms) {\r\n\t\t\t\tconst uniform = this.uniforms[name];\r\n\t\t\t\tconst value = uniform.value;\r\n\r\n\t\t\t\tif (value && value.isTexture) {\r\n\t\t\t\t\tdata.uniforms[name] = {\r\n\t\t\t\t\t\ttype: 't',\r\n\t\t\t\t\t\tvalue: value.toJSON(meta).uuid\r\n\t\t\t\t\t};\r\n\t\t\t\t} else if (value && value.isColor) {\r\n\t\t\t\t\tdata.uniforms[name] = {\r\n\t\t\t\t\t\ttype: 'c',\r\n\t\t\t\t\t\tvalue: value.getHex()\r\n\t\t\t\t\t};\r\n\t\t\t\t} else if (value && value.isVector2) {\r\n\t\t\t\t\tdata.uniforms[name] = {\r\n\t\t\t\t\t\ttype: 'v2',\r\n\t\t\t\t\t\tvalue: value.toArray()\r\n\t\t\t\t\t};\r\n\t\t\t\t} else if (value && value.isVector3) {\r\n\t\t\t\t\tdata.uniforms[name] = {\r\n\t\t\t\t\t\ttype: 'v3',\r\n\t\t\t\t\t\tvalue: value.toArray()\r\n\t\t\t\t\t};\r\n\t\t\t\t} else if (value && value.isVector4) {\r\n\t\t\t\t\tdata.uniforms[name] = {\r\n\t\t\t\t\t\ttype: 'v4',\r\n\t\t\t\t\t\tvalue: value.toArray()\r\n\t\t\t\t\t};\r\n\t\t\t\t} else if (value && value.isMatrix3) {\r\n\t\t\t\t\tdata.uniforms[name] = {\r\n\t\t\t\t\t\ttype: 'm3',\r\n\t\t\t\t\t\tvalue: value.toArray()\r\n\t\t\t\t\t};\r\n\t\t\t\t} else if (value && value.isMatrix4) {\r\n\t\t\t\t\tdata.uniforms[name] = {\r\n\t\t\t\t\t\ttype: 'm4',\r\n\t\t\t\t\t\tvalue: value.toArray()\r\n\t\t\t\t\t};\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdata.uniforms[name] = {\r\n\t\t\t\t\t\tvalue: value\r\n\t\t\t\t\t}; // note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (Object.keys(this.defines).length > 0) data.defines = this.defines;\r\n\t\t\tdata.vertexShader = this.vertexShader;\r\n\t\t\tdata.fragmentShader = this.fragmentShader;\r\n\t\t\tconst extensions = {};\r\n\r\n\t\t\tfor (const key in this.extensions) {\r\n\t\t\t\tif (this.extensions[key] === true) extensions[key] = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (Object.keys(extensions).length > 0) data.extensions = extensions;\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tShaderMaterial.prototype.isShaderMaterial = true;\r\n\r\n\tclass Camera extends Object3D {\r\n\t\tconstructor() {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'Camera';\r\n\t\t\tthis.matrixWorldInverse = new Matrix4();\r\n\t\t\tthis.projectionMatrix = new Matrix4();\r\n\t\t\tthis.projectionMatrixInverse = new Matrix4();\r\n\t\t}\r\n\r\n\t\tcopy(source, recursive) {\r\n\t\t\tsuper.copy(source, recursive);\r\n\t\t\tthis.matrixWorldInverse.copy(source.matrixWorldInverse);\r\n\t\t\tthis.projectionMatrix.copy(source.projectionMatrix);\r\n\t\t\tthis.projectionMatrixInverse.copy(source.projectionMatrixInverse);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetWorldDirection(target) {\r\n\t\t\tthis.updateWorldMatrix(true, false);\r\n\t\t\tconst e = this.matrixWorld.elements;\r\n\t\t\treturn target.set(-e[8], -e[9], -e[10]).normalize();\r\n\t\t}\r\n\r\n\t\tupdateMatrixWorld(force) {\r\n\t\t\tsuper.updateMatrixWorld(force);\r\n\t\t\tthis.matrixWorldInverse.copy(this.matrixWorld).invert();\r\n\t\t}\r\n\r\n\t\tupdateWorldMatrix(updateParents, updateChildren) {\r\n\t\t\tsuper.updateWorldMatrix(updateParents, updateChildren);\r\n\t\t\tthis.matrixWorldInverse.copy(this.matrixWorld).invert();\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor().copy(this);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tCamera.prototype.isCamera = true;\r\n\r\n\tclass PerspectiveCamera extends Camera {\r\n\t\tconstructor(fov = 50, aspect = 1, near = 0.1, far = 2000) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'PerspectiveCamera';\r\n\t\t\tthis.fov = fov;\r\n\t\t\tthis.zoom = 1;\r\n\t\t\tthis.near = near;\r\n\t\t\tthis.far = far;\r\n\t\t\tthis.focus = 10;\r\n\t\t\tthis.aspect = aspect;\r\n\t\t\tthis.view = null;\r\n\t\t\tthis.filmGauge = 35; // width of the film (default in millimeters)\r\n\r\n\t\t\tthis.filmOffset = 0; // horizontal film offset (same unit as gauge)\r\n\r\n\t\t\tthis.updateProjectionMatrix();\r\n\t\t}\r\n\r\n\t\tcopy(source, recursive) {\r\n\t\t\tsuper.copy(source, recursive);\r\n\t\t\tthis.fov = source.fov;\r\n\t\t\tthis.zoom = source.zoom;\r\n\t\t\tthis.near = source.near;\r\n\t\t\tthis.far = source.far;\r\n\t\t\tthis.focus = source.focus;\r\n\t\t\tthis.aspect = source.aspect;\r\n\t\t\tthis.view = source.view === null ? null : Object.assign({}, source.view);\r\n\t\t\tthis.filmGauge = source.filmGauge;\r\n\t\t\tthis.filmOffset = source.filmOffset;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t/**\r\n\t\t * Sets the FOV by focal length in respect to the current .filmGauge.\r\n\t\t *\r\n\t\t * The default film gauge is 35, so that the focal length can be specified for\r\n\t\t * a 35mm (full frame) camera.\r\n\t\t *\r\n\t\t * Values for focal length and film gauge must have the same unit.\r\n\t\t */\r\n\r\n\r\n\t\tsetFocalLength(focalLength) {\r\n\t\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\r\n\t\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\r\n\t\t\tthis.fov = RAD2DEG * 2 * Math.atan(vExtentSlope);\r\n\t\t\tthis.updateProjectionMatrix();\r\n\t\t}\r\n\t\t/**\r\n\t\t * Calculates the focal length from the current .fov and .filmGauge.\r\n\t\t */\r\n\r\n\r\n\t\tgetFocalLength() {\r\n\t\t\tconst vExtentSlope = Math.tan(DEG2RAD * 0.5 * this.fov);\r\n\t\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\r\n\t\t}\r\n\r\n\t\tgetEffectiveFOV() {\r\n\t\t\treturn RAD2DEG * 2 * Math.atan(Math.tan(DEG2RAD * 0.5 * this.fov) / this.zoom);\r\n\t\t}\r\n\r\n\t\tgetFilmWidth() {\r\n\t\t\t// film not completely covered in portrait format (aspect < 1)\r\n\t\t\treturn this.filmGauge * Math.min(this.aspect, 1);\r\n\t\t}\r\n\r\n\t\tgetFilmHeight() {\r\n\t\t\t// film not completely covered in landscape format (aspect > 1)\r\n\t\t\treturn this.filmGauge / Math.max(this.aspect, 1);\r\n\t\t}\r\n\t\t/**\r\n\t\t * Sets an offset in a larger frustum. This is useful for multi-window or\r\n\t\t * multi-monitor/multi-machine setups.\r\n\t\t *\r\n\t\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\r\n\t\t * the monitors are in grid like this\r\n\t\t *\r\n\t\t *\t +---+---+---+\r\n\t\t *\t | A | B | C |\r\n\t\t *\t +---+---+---+\r\n\t\t *\t | D | E | F |\r\n\t\t *\t +---+---+---+\r\n\t\t *\r\n\t\t * then for each monitor you would call it like this\r\n\t\t *\r\n\t\t *\t const w = 1920;\r\n\t\t *\t const h = 1080;\r\n\t\t *\t const fullWidth = w * 3;\r\n\t\t *\t const fullHeight = h * 2;\r\n\t\t *\r\n\t\t *\t --A--\r\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\r\n\t\t *\t --B--\r\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\r\n\t\t *\t --C--\r\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\r\n\t\t *\t --D--\r\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\r\n\t\t *\t --E--\r\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\r\n\t\t *\t --F--\r\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\r\n\t\t *\r\n\t\t *\t Note there is no reason monitors have to be the same size or in a grid.\r\n\t\t */\r\n\r\n\r\n\t\tsetViewOffset(fullWidth, fullHeight, x, y, width, height) {\r\n\t\t\tthis.aspect = fullWidth / fullHeight;\r\n\r\n\t\t\tif (this.view === null) {\r\n\t\t\t\tthis.view = {\r\n\t\t\t\t\tenabled: true,\r\n\t\t\t\t\tfullWidth: 1,\r\n\t\t\t\t\tfullHeight: 1,\r\n\t\t\t\t\toffsetX: 0,\r\n\t\t\t\t\toffsetY: 0,\r\n\t\t\t\t\twidth: 1,\r\n\t\t\t\t\theight: 1\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tthis.view.enabled = true;\r\n\t\t\tthis.view.fullWidth = fullWidth;\r\n\t\t\tthis.view.fullHeight = fullHeight;\r\n\t\t\tthis.view.offsetX = x;\r\n\t\t\tthis.view.offsetY = y;\r\n\t\t\tthis.view.width = width;\r\n\t\t\tthis.view.height = height;\r\n\t\t\tthis.updateProjectionMatrix();\r\n\t\t}\r\n\r\n\t\tclearViewOffset() {\r\n\t\t\tif (this.view !== null) {\r\n\t\t\t\tthis.view.enabled = false;\r\n\t\t\t}\r\n\r\n\t\t\tthis.updateProjectionMatrix();\r\n\t\t}\r\n\r\n\t\tupdateProjectionMatrix() {\r\n\t\t\tconst near = this.near;\r\n\t\t\tlet top = near * Math.tan(DEG2RAD * 0.5 * this.fov) / this.zoom;\r\n\t\t\tlet height = 2 * top;\r\n\t\t\tlet width = this.aspect * height;\r\n\t\t\tlet left = -0.5 * width;\r\n\t\t\tconst view = this.view;\r\n\r\n\t\t\tif (this.view !== null && this.view.enabled) {\r\n\t\t\t\tconst fullWidth = view.fullWidth,\r\n\t\t\t\t\t\t\tfullHeight = view.fullHeight;\r\n\t\t\t\tleft += view.offsetX * width / fullWidth;\r\n\t\t\t\ttop -= view.offsetY * height / fullHeight;\r\n\t\t\t\twidth *= view.width / fullWidth;\r\n\t\t\t\theight *= view.height / fullHeight;\r\n\t\t\t}\r\n\r\n\t\t\tconst skew = this.filmOffset;\r\n\t\t\tif (skew !== 0) left += near * skew / this.getFilmWidth();\r\n\t\t\tthis.projectionMatrix.makePerspective(left, left + width, top, top - height, near, this.far);\r\n\t\t\tthis.projectionMatrixInverse.copy(this.projectionMatrix).invert();\r\n\t\t}\r\n\r\n\t\ttoJSON(meta) {\r\n\t\t\tconst data = super.toJSON(meta);\r\n\t\t\tdata.object.fov = this.fov;\r\n\t\t\tdata.object.zoom = this.zoom;\r\n\t\t\tdata.object.near = this.near;\r\n\t\t\tdata.object.far = this.far;\r\n\t\t\tdata.object.focus = this.focus;\r\n\t\t\tdata.object.aspect = this.aspect;\r\n\t\t\tif (this.view !== null) data.object.view = Object.assign({}, this.view);\r\n\t\t\tdata.object.filmGauge = this.filmGauge;\r\n\t\t\tdata.object.filmOffset = this.filmOffset;\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tPerspectiveCamera.prototype.isPerspectiveCamera = true;\r\n\r\n\tconst fov = 90,\r\n\t\t\t\taspect = 1;\r\n\r\n\tclass CubeCamera extends Object3D {\r\n\t\tconstructor(near, far, renderTarget) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'CubeCamera';\r\n\r\n\t\t\tif (renderTarget.isWebGLCubeRenderTarget !== true) {\r\n\t\t\t\tconsole.error('THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.renderTarget = renderTarget;\r\n\t\t\tconst cameraPX = new PerspectiveCamera(fov, aspect, near, far);\r\n\t\t\tcameraPX.layers = this.layers;\r\n\t\t\tcameraPX.up.set(0, -1, 0);\r\n\t\t\tcameraPX.lookAt(new Vector3(1, 0, 0));\r\n\t\t\tthis.add(cameraPX);\r\n\t\t\tconst cameraNX = new PerspectiveCamera(fov, aspect, near, far);\r\n\t\t\tcameraNX.layers = this.layers;\r\n\t\t\tcameraNX.up.set(0, -1, 0);\r\n\t\t\tcameraNX.lookAt(new Vector3(-1, 0, 0));\r\n\t\t\tthis.add(cameraNX);\r\n\t\t\tconst cameraPY = new PerspectiveCamera(fov, aspect, near, far);\r\n\t\t\tcameraPY.layers = this.layers;\r\n\t\t\tcameraPY.up.set(0, 0, 1);\r\n\t\t\tcameraPY.lookAt(new Vector3(0, 1, 0));\r\n\t\t\tthis.add(cameraPY);\r\n\t\t\tconst cameraNY = new PerspectiveCamera(fov, aspect, near, far);\r\n\t\t\tcameraNY.layers = this.layers;\r\n\t\t\tcameraNY.up.set(0, 0, -1);\r\n\t\t\tcameraNY.lookAt(new Vector3(0, -1, 0));\r\n\t\t\tthis.add(cameraNY);\r\n\t\t\tconst cameraPZ = new PerspectiveCamera(fov, aspect, near, far);\r\n\t\t\tcameraPZ.layers = this.layers;\r\n\t\t\tcameraPZ.up.set(0, -1, 0);\r\n\t\t\tcameraPZ.lookAt(new Vector3(0, 0, 1));\r\n\t\t\tthis.add(cameraPZ);\r\n\t\t\tconst cameraNZ = new PerspectiveCamera(fov, aspect, near, far);\r\n\t\t\tcameraNZ.layers = this.layers;\r\n\t\t\tcameraNZ.up.set(0, -1, 0);\r\n\t\t\tcameraNZ.lookAt(new Vector3(0, 0, -1));\r\n\t\t\tthis.add(cameraNZ);\r\n\t\t}\r\n\r\n\t\tupdate(renderer, scene) {\r\n\t\t\tif (this.parent === null) this.updateMatrixWorld();\r\n\t\t\tconst renderTarget = this.renderTarget;\r\n\t\t\tconst [cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ] = this.children;\r\n\t\t\tconst currentXrEnabled = renderer.xr.enabled;\r\n\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\r\n\t\t\trenderer.xr.enabled = false;\r\n\t\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\r\n\t\t\trenderTarget.texture.generateMipmaps = false;\r\n\t\t\trenderer.setRenderTarget(renderTarget, 0);\r\n\t\t\trenderer.render(scene, cameraPX);\r\n\t\t\trenderer.setRenderTarget(renderTarget, 1);\r\n\t\t\trenderer.render(scene, cameraNX);\r\n\t\t\trenderer.setRenderTarget(renderTarget, 2);\r\n\t\t\trenderer.render(scene, cameraPY);\r\n\t\t\trenderer.setRenderTarget(renderTarget, 3);\r\n\t\t\trenderer.render(scene, cameraNY);\r\n\t\t\trenderer.setRenderTarget(renderTarget, 4);\r\n\t\t\trenderer.render(scene, cameraPZ);\r\n\t\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\r\n\t\t\trenderer.setRenderTarget(renderTarget, 5);\r\n\t\t\trenderer.render(scene, cameraNZ);\r\n\t\t\trenderer.setRenderTarget(currentRenderTarget);\r\n\t\t\trenderer.xr.enabled = currentXrEnabled;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass CubeTexture extends Texture {\r\n\t\tconstructor(images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding) {\r\n\t\t\timages = images !== undefined ? images : [];\r\n\t\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\r\n\t\t\tformat = format !== undefined ? format : RGBFormat;\r\n\t\t\tsuper(images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\r\n\t\t\tthis.flipY = false;\r\n\t\t}\r\n\r\n\t\tget images() {\r\n\t\t\treturn this.image;\r\n\t\t}\r\n\r\n\t\tset images(value) {\r\n\t\t\tthis.image = value;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tCubeTexture.prototype.isCubeTexture = true;\r\n\r\n\tclass WebGLCubeRenderTarget extends WebGLRenderTarget {\r\n\t\tconstructor(size, options, dummy) {\r\n\t\t\tif (Number.isInteger(options)) {\r\n\t\t\t\tconsole.warn('THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )');\r\n\t\t\t\toptions = dummy;\r\n\t\t\t}\r\n\r\n\t\t\tsuper(size, size, options);\r\n\t\t\toptions = options || {}; // By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\r\n\t\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\r\n\t\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\r\n\t\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\r\n\t\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\r\n\t\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\r\n\r\n\t\t\tthis.texture = new CubeTexture(undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding);\r\n\t\t\tthis.texture.isRenderTargetTexture = true;\r\n\t\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\r\n\t\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\r\n\t\t\tthis.texture._needsFlipEnvMap = false;\r\n\t\t}\r\n\r\n\t\tfromEquirectangularTexture(renderer, texture) {\r\n\t\t\tthis.texture.type = texture.type;\r\n\t\t\tthis.texture.format = RGBAFormat; // see #18859\r\n\r\n\t\t\tthis.texture.encoding = texture.encoding;\r\n\t\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\r\n\t\t\tthis.texture.minFilter = texture.minFilter;\r\n\t\t\tthis.texture.magFilter = texture.magFilter;\r\n\t\t\tconst shader = {\r\n\t\t\t\tuniforms: {\r\n\t\t\t\t\ttEquirect: {\r\n\t\t\t\t\t\tvalue: null\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tvertexShader:\r\n\t\t\t\t/* glsl */\r\n\t\t\t\t`\r\n\r\n\t\t\t\tvarying vec3 vWorldDirection;\r\n\r\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\r\n\r\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvoid main() {\r\n\r\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\r\n\r\n\t\t\t\t\t#include <begin_vertex>\r\n\t\t\t\t\t#include <project_vertex>\r\n\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\tfragmentShader:\r\n\t\t\t\t/* glsl */\r\n\t\t\t\t`\r\n\r\n\t\t\t\tuniform sampler2D tEquirect;\r\n\r\n\t\t\t\tvarying vec3 vWorldDirection;\r\n\r\n\t\t\t\t#include <common>\r\n\r\n\t\t\t\tvoid main() {\r\n\r\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\r\n\r\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\r\n\r\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\r\n\r\n\t\t\t\t}\r\n\t\t\t`\r\n\t\t\t};\r\n\t\t\tconst geometry = new BoxGeometry(5, 5, 5);\r\n\t\t\tconst material = new ShaderMaterial({\r\n\t\t\t\tname: 'CubemapFromEquirect',\r\n\t\t\t\tuniforms: cloneUniforms(shader.uniforms),\r\n\t\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\t\tfragmentShader: shader.fragmentShader,\r\n\t\t\t\tside: BackSide,\r\n\t\t\t\tblending: NoBlending\r\n\t\t\t});\r\n\t\t\tmaterial.uniforms.tEquirect.value = texture;\r\n\t\t\tconst mesh = new Mesh(geometry, material);\r\n\t\t\tconst currentMinFilter = texture.minFilter; // Avoid blurred poles\r\n\r\n\t\t\tif (texture.minFilter === LinearMipmapLinearFilter) texture.minFilter = LinearFilter;\r\n\t\t\tconst camera = new CubeCamera(1, 10, this);\r\n\t\t\tcamera.update(renderer, mesh);\r\n\t\t\ttexture.minFilter = currentMinFilter;\r\n\t\t\tmesh.geometry.dispose();\r\n\t\t\tmesh.material.dispose();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclear(renderer, color, depth, stencil) {\r\n\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\r\n\r\n\t\t\tfor (let i = 0; i < 6; i++) {\r\n\t\t\t\trenderer.setRenderTarget(this, i);\r\n\t\t\t\trenderer.clear(color, depth, stencil);\r\n\t\t\t}\r\n\r\n\t\t\trenderer.setRenderTarget(currentRenderTarget);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tWebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget = true;\r\n\r\n\tconst _vector1 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _vector2 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _normalMatrix = /*@__PURE__*/new Matrix3();\r\n\r\n\tclass Plane {\r\n\t\tconstructor(normal = new Vector3(1, 0, 0), constant = 0) {\r\n\t\t\t// normal is assumed to be normalized\r\n\t\t\tthis.normal = normal;\r\n\t\t\tthis.constant = constant;\r\n\t\t}\r\n\r\n\t\tset(normal, constant) {\r\n\t\t\tthis.normal.copy(normal);\r\n\t\t\tthis.constant = constant;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetComponents(x, y, z, w) {\r\n\t\t\tthis.normal.set(x, y, z);\r\n\t\t\tthis.constant = w;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromNormalAndCoplanarPoint(normal, point) {\r\n\t\t\tthis.normal.copy(normal);\r\n\t\t\tthis.constant = -point.dot(this.normal);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromCoplanarPoints(a, b, c) {\r\n\t\t\tconst normal = _vector1.subVectors(c, b).cross(_vector2.subVectors(a, b)).normalize(); // Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\r\n\r\n\r\n\t\t\tthis.setFromNormalAndCoplanarPoint(normal, a);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopy(plane) {\r\n\t\t\tthis.normal.copy(plane.normal);\r\n\t\t\tthis.constant = plane.constant;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tnormalize() {\r\n\t\t\t// Note: will lead to a divide by zero if the plane is invalid.\r\n\t\t\tconst inverseNormalLength = 1.0 / this.normal.length();\r\n\t\t\tthis.normal.multiplyScalar(inverseNormalLength);\r\n\t\t\tthis.constant *= inverseNormalLength;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tnegate() {\r\n\t\t\tthis.constant *= -1;\r\n\t\t\tthis.normal.negate();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tdistanceToPoint(point) {\r\n\t\t\treturn this.normal.dot(point) + this.constant;\r\n\t\t}\r\n\r\n\t\tdistanceToSphere(sphere) {\r\n\t\t\treturn this.distanceToPoint(sphere.center) - sphere.radius;\r\n\t\t}\r\n\r\n\t\tprojectPoint(point, target) {\r\n\t\t\treturn target.copy(this.normal).multiplyScalar(-this.distanceToPoint(point)).add(point);\r\n\t\t}\r\n\r\n\t\tintersectLine(line, target) {\r\n\t\t\tconst direction = line.delta(_vector1);\r\n\t\t\tconst denominator = this.normal.dot(direction);\r\n\r\n\t\t\tif (denominator === 0) {\r\n\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\tif (this.distanceToPoint(line.start) === 0) {\r\n\t\t\t\t\treturn target.copy(line.start);\r\n\t\t\t\t} // Unsure if this is the correct method to handle this case.\r\n\r\n\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tconst t = -(line.start.dot(this.normal) + this.constant) / denominator;\r\n\r\n\t\t\tif (t < 0 || t > 1) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\treturn target.copy(direction).multiplyScalar(t).add(line.start);\r\n\t\t}\r\n\r\n\t\tintersectsLine(line) {\r\n\t\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\r\n\t\t\tconst startSign = this.distanceToPoint(line.start);\r\n\t\t\tconst endSign = this.distanceToPoint(line.end);\r\n\t\t\treturn startSign < 0 && endSign > 0 || endSign < 0 && startSign > 0;\r\n\t\t}\r\n\r\n\t\tintersectsBox(box) {\r\n\t\t\treturn box.intersectsPlane(this);\r\n\t\t}\r\n\r\n\t\tintersectsSphere(sphere) {\r\n\t\t\treturn sphere.intersectsPlane(this);\r\n\t\t}\r\n\r\n\t\tcoplanarPoint(target) {\r\n\t\t\treturn target.copy(this.normal).multiplyScalar(-this.constant);\r\n\t\t}\r\n\r\n\t\tapplyMatrix4(matrix, optionalNormalMatrix) {\r\n\t\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix(matrix);\r\n\r\n\t\t\tconst referencePoint = this.coplanarPoint(_vector1).applyMatrix4(matrix);\r\n\t\t\tconst normal = this.normal.applyMatrix3(normalMatrix).normalize();\r\n\t\t\tthis.constant = -referencePoint.dot(normal);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttranslate(offset) {\r\n\t\t\tthis.constant -= offset.dot(this.normal);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tequals(plane) {\r\n\t\t\treturn plane.normal.equals(this.normal) && plane.constant === this.constant;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor().copy(this);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tPlane.prototype.isPlane = true;\r\n\r\n\tconst _sphere$2 = /*@__PURE__*/new Sphere();\r\n\r\n\tconst _vector$7 = /*@__PURE__*/new Vector3();\r\n\r\n\tclass Frustum {\r\n\t\tconstructor(p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane()) {\r\n\t\t\tthis.planes = [p0, p1, p2, p3, p4, p5];\r\n\t\t}\r\n\r\n\t\tset(p0, p1, p2, p3, p4, p5) {\r\n\t\t\tconst planes = this.planes;\r\n\t\t\tplanes[0].copy(p0);\r\n\t\t\tplanes[1].copy(p1);\r\n\t\t\tplanes[2].copy(p2);\r\n\t\t\tplanes[3].copy(p3);\r\n\t\t\tplanes[4].copy(p4);\r\n\t\t\tplanes[5].copy(p5);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopy(frustum) {\r\n\t\t\tconst planes = this.planes;\r\n\r\n\t\t\tfor (let i = 0; i < 6; i++) {\r\n\t\t\t\tplanes[i].copy(frustum.planes[i]);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromProjectionMatrix(m) {\r\n\t\t\tconst planes = this.planes;\r\n\t\t\tconst me = m.elements;\r\n\t\t\tconst me0 = me[0],\r\n\t\t\t\t\t\tme1 = me[1],\r\n\t\t\t\t\t\tme2 = me[2],\r\n\t\t\t\t\t\tme3 = me[3];\r\n\t\t\tconst me4 = me[4],\r\n\t\t\t\t\t\tme5 = me[5],\r\n\t\t\t\t\t\tme6 = me[6],\r\n\t\t\t\t\t\tme7 = me[7];\r\n\t\t\tconst me8 = me[8],\r\n\t\t\t\t\t\tme9 = me[9],\r\n\t\t\t\t\t\tme10 = me[10],\r\n\t\t\t\t\t\tme11 = me[11];\r\n\t\t\tconst me12 = me[12],\r\n\t\t\t\t\t\tme13 = me[13],\r\n\t\t\t\t\t\tme14 = me[14],\r\n\t\t\t\t\t\tme15 = me[15];\r\n\t\t\tplanes[0].setComponents(me3 - me0, me7 - me4, me11 - me8, me15 - me12).normalize();\r\n\t\t\tplanes[1].setComponents(me3 + me0, me7 + me4, me11 + me8, me15 + me12).normalize();\r\n\t\t\tplanes[2].setComponents(me3 + me1, me7 + me5, me11 + me9, me15 + me13).normalize();\r\n\t\t\tplanes[3].setComponents(me3 - me1, me7 - me5, me11 - me9, me15 - me13).normalize();\r\n\t\t\tplanes[4].setComponents(me3 - me2, me7 - me6, me11 - me10, me15 - me14).normalize();\r\n\t\t\tplanes[5].setComponents(me3 + me2, me7 + me6, me11 + me10, me15 + me14).normalize();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tintersectsObject(object) {\r\n\t\t\tconst geometry = object.geometry;\r\n\t\t\tif (geometry.boundingSphere === null) geometry.computeBoundingSphere();\r\n\r\n\t\t\t_sphere$2.copy(geometry.boundingSphere).applyMatrix4(object.matrixWorld);\r\n\r\n\t\t\treturn this.intersectsSphere(_sphere$2);\r\n\t\t}\r\n\r\n\t\tintersectsSprite(sprite) {\r\n\t\t\t_sphere$2.center.set(0, 0, 0);\r\n\r\n\t\t\t_sphere$2.radius = 0.7071067811865476;\r\n\r\n\t\t\t_sphere$2.applyMatrix4(sprite.matrixWorld);\r\n\r\n\t\t\treturn this.intersectsSphere(_sphere$2);\r\n\t\t}\r\n\r\n\t\tintersectsSphere(sphere) {\r\n\t\t\tconst planes = this.planes;\r\n\t\t\tconst center = sphere.center;\r\n\t\t\tconst negRadius = -sphere.radius;\r\n\r\n\t\t\tfor (let i = 0; i < 6; i++) {\r\n\t\t\t\tconst distance = planes[i].distanceToPoint(center);\r\n\r\n\t\t\t\tif (distance < negRadius) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tintersectsBox(box) {\r\n\t\t\tconst planes = this.planes;\r\n\r\n\t\t\tfor (let i = 0; i < 6; i++) {\r\n\t\t\t\tconst plane = planes[i]; // corner at max distance\r\n\r\n\t\t\t\t_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\r\n\t\t\t\t_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\r\n\t\t\t\t_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\r\n\r\n\t\t\t\tif (plane.distanceToPoint(_vector$7) < 0) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tcontainsPoint(point) {\r\n\t\t\tconst planes = this.planes;\r\n\r\n\t\t\tfor (let i = 0; i < 6; i++) {\r\n\t\t\t\tif (planes[i].distanceToPoint(point) < 0) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor().copy(this);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction WebGLAnimation() {\r\n\t\tlet context = null;\r\n\t\tlet isAnimating = false;\r\n\t\tlet animationLoop = null;\r\n\t\tlet requestId = null;\r\n\r\n\t\tfunction onAnimationFrame(time, frame) {\r\n\t\t\tanimationLoop(time, frame);\r\n\t\t\trequestId = context.requestAnimationFrame(onAnimationFrame);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tstart: function () {\r\n\t\t\t\tif (isAnimating === true) return;\r\n\t\t\t\tif (animationLoop === null) return;\r\n\t\t\t\trequestId = context.requestAnimationFrame(onAnimationFrame);\r\n\t\t\t\tisAnimating = true;\r\n\t\t\t},\r\n\t\t\tstop: function () {\r\n\t\t\t\tcontext.cancelAnimationFrame(requestId);\r\n\t\t\t\tisAnimating = false;\r\n\t\t\t},\r\n\t\t\tsetAnimationLoop: function (callback) {\r\n\t\t\t\tanimationLoop = callback;\r\n\t\t\t},\r\n\t\t\tsetContext: function (value) {\r\n\t\t\t\tcontext = value;\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tfunction WebGLAttributes(gl, capabilities) {\r\n\t\tconst isWebGL2 = capabilities.isWebGL2;\r\n\t\tconst buffers = new WeakMap();\r\n\r\n\t\tfunction createBuffer(attribute, bufferType) {\r\n\t\t\tconst array = attribute.array;\r\n\t\t\tconst usage = attribute.usage;\r\n\t\t\tconst buffer = gl.createBuffer();\r\n\t\t\tgl.bindBuffer(bufferType, buffer);\r\n\t\t\tgl.bufferData(bufferType, array, usage);\r\n\t\t\tattribute.onUploadCallback();\r\n\t\t\tlet type = gl.FLOAT;\r\n\r\n\t\t\tif (array instanceof Float32Array) {\r\n\t\t\t\ttype = gl.FLOAT;\r\n\t\t\t} else if (array instanceof Float64Array) {\r\n\t\t\t\tconsole.warn('THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.');\r\n\t\t\t} else if (array instanceof Uint16Array) {\r\n\t\t\t\tif (attribute.isFloat16BufferAttribute) {\r\n\t\t\t\t\tif (isWebGL2) {\r\n\t\t\t\t\t\ttype = gl.HALF_FLOAT;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.warn('THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.');\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttype = gl.UNSIGNED_SHORT;\r\n\t\t\t\t}\r\n\t\t\t} else if (array instanceof Int16Array) {\r\n\t\t\t\ttype = gl.SHORT;\r\n\t\t\t} else if (array instanceof Uint32Array) {\r\n\t\t\t\ttype = gl.UNSIGNED_INT;\r\n\t\t\t} else if (array instanceof Int32Array) {\r\n\t\t\t\ttype = gl.INT;\r\n\t\t\t} else if (array instanceof Int8Array) {\r\n\t\t\t\ttype = gl.BYTE;\r\n\t\t\t} else if (array instanceof Uint8Array) {\r\n\t\t\t\ttype = gl.UNSIGNED_BYTE;\r\n\t\t\t} else if (array instanceof Uint8ClampedArray) {\r\n\t\t\t\ttype = gl.UNSIGNED_BYTE;\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tbuffer: buffer,\r\n\t\t\t\ttype: type,\r\n\t\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\r\n\t\t\t\tversion: attribute.version\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tfunction updateBuffer(buffer, attribute, bufferType) {\r\n\t\t\tconst array = attribute.array;\r\n\t\t\tconst updateRange = attribute.updateRange;\r\n\t\t\tgl.bindBuffer(bufferType, buffer);\r\n\r\n\t\t\tif (updateRange.count === -1) {\r\n\t\t\t\t// Not using update ranges\r\n\t\t\t\tgl.bufferSubData(bufferType, 0, array);\r\n\t\t\t} else {\r\n\t\t\t\tif (isWebGL2) {\r\n\t\t\t\t\tgl.bufferSubData(bufferType, updateRange.offset * array.BYTES_PER_ELEMENT, array, updateRange.offset, updateRange.count);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tgl.bufferSubData(bufferType, updateRange.offset * array.BYTES_PER_ELEMENT, array.subarray(updateRange.offset, updateRange.offset + updateRange.count));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tupdateRange.count = -1; // reset range\r\n\t\t\t}\r\n\t\t} //\r\n\r\n\r\n\t\tfunction get(attribute) {\r\n\t\t\tif (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\r\n\t\t\treturn buffers.get(attribute);\r\n\t\t}\r\n\r\n\t\tfunction remove(attribute) {\r\n\t\t\tif (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\r\n\t\t\tconst data = buffers.get(attribute);\r\n\r\n\t\t\tif (data) {\r\n\t\t\t\tgl.deleteBuffer(data.buffer);\r\n\t\t\t\tbuffers.delete(attribute);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction update(attribute, bufferType) {\r\n\t\t\tif (attribute.isGLBufferAttribute) {\r\n\t\t\t\tconst cached = buffers.get(attribute);\r\n\r\n\t\t\t\tif (!cached || cached.version < attribute.version) {\r\n\t\t\t\t\tbuffers.set(attribute, {\r\n\t\t\t\t\t\tbuffer: attribute.buffer,\r\n\t\t\t\t\t\ttype: attribute.type,\r\n\t\t\t\t\t\tbytesPerElement: attribute.elementSize,\r\n\t\t\t\t\t\tversion: attribute.version\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\r\n\t\t\tconst data = buffers.get(attribute);\r\n\r\n\t\t\tif (data === undefined) {\r\n\t\t\t\tbuffers.set(attribute, createBuffer(attribute, bufferType));\r\n\t\t\t} else if (data.version < attribute.version) {\r\n\t\t\t\tupdateBuffer(data.buffer, attribute, bufferType);\r\n\t\t\t\tdata.version = attribute.version;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tget: get,\r\n\t\t\tremove: remove,\r\n\t\t\tupdate: update\r\n\t\t};\r\n\t}\r\n\r\n\tclass PlaneGeometry extends BufferGeometry {\r\n\t\tconstructor(width = 1, height = 1, widthSegments = 1, heightSegments = 1) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'PlaneGeometry';\r\n\t\t\tthis.parameters = {\r\n\t\t\t\twidth: width,\r\n\t\t\t\theight: height,\r\n\t\t\t\twidthSegments: widthSegments,\r\n\t\t\t\theightSegments: heightSegments\r\n\t\t\t};\r\n\t\t\tconst width_half = width / 2;\r\n\t\t\tconst height_half = height / 2;\r\n\t\t\tconst gridX = Math.floor(widthSegments);\r\n\t\t\tconst gridY = Math.floor(heightSegments);\r\n\t\t\tconst gridX1 = gridX + 1;\r\n\t\t\tconst gridY1 = gridY + 1;\r\n\t\t\tconst segment_width = width / gridX;\r\n\t\t\tconst segment_height = height / gridY; //\r\n\r\n\t\t\tconst indices = [];\r\n\t\t\tconst vertices = [];\r\n\t\t\tconst normals = [];\r\n\t\t\tconst uvs = [];\r\n\r\n\t\t\tfor (let iy = 0; iy < gridY1; iy++) {\r\n\t\t\t\tconst y = iy * segment_height - height_half;\r\n\r\n\t\t\t\tfor (let ix = 0; ix < gridX1; ix++) {\r\n\t\t\t\t\tconst x = ix * segment_width - width_half;\r\n\t\t\t\t\tvertices.push(x, -y, 0);\r\n\t\t\t\t\tnormals.push(0, 0, 1);\r\n\t\t\t\t\tuvs.push(ix / gridX);\r\n\t\t\t\t\tuvs.push(1 - iy / gridY);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (let iy = 0; iy < gridY; iy++) {\r\n\t\t\t\tfor (let ix = 0; ix < gridX; ix++) {\r\n\t\t\t\t\tconst a = ix + gridX1 * iy;\r\n\t\t\t\t\tconst b = ix + gridX1 * (iy + 1);\r\n\t\t\t\t\tconst c = ix + 1 + gridX1 * (iy + 1);\r\n\t\t\t\t\tconst d = ix + 1 + gridX1 * iy;\r\n\t\t\t\t\tindices.push(a, b, d);\r\n\t\t\t\t\tindices.push(b, c, d);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.setIndex(indices);\r\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\r\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\r\n\t\t}\r\n\r\n\t\tstatic fromJSON(data) {\r\n\t\t\treturn new PlaneGeometry(data.width, data.height, data.widthSegments, data.heightSegments);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\r\n\r\n\tvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\r\n\r\n\tvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\";\r\n\r\n\tvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\";\r\n\r\n\tvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\r\n\r\n\tvar begin_vertex = \"vec3 transformed = vec3( position );\";\r\n\r\n\tvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\r\n\r\n\tvar bsdfs = \"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n#else\\n\\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t}\\n\\treturn 1.0;\\n#endif\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in vec3 f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn ( f90 - f0 ) * fresnel + f0;\\n}\\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\\n\\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\\n\\treturn Fr * fresnel + F0;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in vec3 f90, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\treturn specularColor * brdf.x + brdf.y;\\n}\\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\tvec3 FssEss = F * brdf.x + brdf.y;\\n\\tfloat Ess = brdf.x + brdf.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, vec3( 1.0 ), dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie(float roughness, float NoH) {\\n\\tfloat invAlpha = 1.0 / roughness;\\n\\tfloat cos2h = NoH * NoH;\\n\\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\\n}\\nfloat V_Neubelt(float NoV, float NoL) {\\n\\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\\n}\\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\\n\\tvec3 N = geometry.normal;\\n\\tvec3 V = geometry.viewDir;\\n\\tvec3 H = normalize( V + L );\\n\\tfloat dotNH = saturate( dot( N, H ) );\\n\\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\\n}\\n#endif\";\r\n\r\n\tvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\r\n\r\n\tvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\r\n\r\n\tvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\r\n\r\n\tvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\r\n\r\n\tvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\r\n\r\n\tvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\r\n\r\n\tvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\r\n\r\n\tvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\r\n\r\n\tvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\r\n\r\n\tvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\";\r\n\r\n\tvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_maxMipLevel 8.0\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_maxTileSize 256.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\\n\\t\\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\\n\\t\\tvec2 f = fract( uv );\\n\\t\\tuv += 0.5 - f;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tif ( mipInt < cubeUV_maxMipLevel ) {\\n\\t\\t\\tuv.y += 2.0 * cubeUV_maxTileSize;\\n\\t\\t}\\n\\t\\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\\n\\t\\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\\n\\t\\tuv *= texelSize;\\n\\t\\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x += texelSize;\\n\\t\\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.y += texelSize;\\n\\t\\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x -= texelSize;\\n\\t\\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tvec3 tm = mix( tl, tr, f.x );\\n\\t\\tvec3 bm = mix( bl, br, f.x );\\n\\t\\treturn mix( tm, bm, f.y );\\n\\t}\\n\\t#define r0 1.0\\n\\t#define v0 0.339\\n\\t#define m0 - 2.0\\n\\t#define r1 0.8\\n\\t#define v1 0.276\\n\\t#define m1 - 1.0\\n\\t#define r4 0.4\\n\\t#define v4 0.046\\n\\t#define m4 2.0\\n\\t#define r5 0.305\\n\\t#define v5 0.016\\n\\t#define m5 3.0\\n\\t#define r6 0.21\\n\\t#define v6 0.0038\\n\\t#define m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= r1 ) {\\n\\t\\t\\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\\n\\t\\t} else if ( roughness >= r4 ) {\\n\\t\\t\\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\\n\\t\\t} else if ( roughness >= r5 ) {\\n\\t\\t\\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\\n\\t\\t} else if ( roughness >= r6 ) {\\n\\t\\t\\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\r\n\r\n\tvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\r\n\r\n\tvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\r\n\r\n\tvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";\r\n\r\n\tvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\r\n\r\n\tvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\r\n\r\n\tvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\r\n\r\n\tvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value ) {\\n\\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\";\r\n\r\n\tvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifndef ENVMAP_TYPE_CUBE_UV\\n\\t\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\r\n\r\n\tvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\r\n\r\n\tvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\r\n\r\n\tvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\r\n\r\n\tvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\r\n\r\n\tvar fog_vertex = \"#ifdef USE_FOG\\n\\tfogDepth = - mvPosition.z;\\n#endif\";\r\n\r\n\tvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float fogDepth;\\n#endif\";\r\n\r\n\tvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\r\n\r\n\tvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\r\n\r\n\tvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t#else\\n\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t#endif\\n}\";\r\n\r\n\tvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n#endif\";\r\n\r\n\tvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\r\n\r\n\tvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\\n#ifdef DOUBLE_SIDED\\n\\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\\n\\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\r\n\r\n\tvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\\n\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\r\n\r\n\tvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\t#ifdef ENVMAP_MODE_REFRACTION\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\";\r\n\r\n\tvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\r\n\r\n\tvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\\t(0)\";\r\n\r\n\tvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\r\n\r\n\tvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\r\n\r\n\tvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\\n#ifdef REFLECTIVITY\\n\\t#ifdef SPECULAR\\n\\t\\tvec3 specularIntensityFactor = vec3( specularIntensity );\\n\\t\\tvec3 specularTintFactor = specularTint;\\n\\t\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULARTINTMAP\\n\\t\\t\\tspecularTintFactor *= specularTintMapTexelToLinear( texture2D( specularTintMap, vUv ) ).rgb;\\n\\t\\t#endif\\n\\t\\tmaterial.specularColorF90 = mix( specularIntensityFactor, vec3( 1.0 ), metalnessFactor );\\n\\t#else\\n\\t\\tvec3 specularIntensityFactor = vec3( 1.0 );\\n\\t\\tvec3 specularTintFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularColorF90 = vec3( 1.0 );\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ) * specularTintFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularColorF90 = vec3( 1.0 );\\n#endif\\n#ifdef CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheen;\\n#endif\";\r\n\r\n\tvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularRoughness;\\n\\tvec3 specularColor;\\n\\tvec3 specularColorF90;\\n#ifdef CLEARCOAT\\n\\tfloat clearcoat;\\n\\tfloat clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tvec3 sheenColor;\\n#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(\t\t0, 1,\t\t0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = ccDotNL * directLight.color;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tccIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t\\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), vec3( 1.0 ), material.clearcoatRoughness );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\\n\\t\\t\\tmaterial.specularRoughness,\\n\\t\\t\\tdirectLight.direction,\\n\\t\\t\\tgeometry,\\n\\t\\t\\tmaterial.sheenColor\\n\\t\\t);\\n\\t#else\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularColorF90, material.specularRoughness);\\n\\t#endif\\n\\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t\\tfloat ccDotNL = ccDotNV;\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\tfloat clearcoatInv = 1.0 - clearcoatDHR;\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\\n\\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\r\n\r\n\tvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\r\n\r\n\tvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\\n\\t#ifdef CLEARCOAT\\n\\t\\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\\n\\t#endif\\n#endif\";\r\n\r\n\tvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\r\n\r\n\tvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\r\n\r\n\tvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\r\n\r\n\tvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\r\n\r\n\tvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\r\n\r\n\tvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\";\r\n\r\n\tvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\r\n\r\n\tvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\r\n\r\n\tvar map_particle_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\r\n\r\n\tvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\r\n\r\n\tvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\r\n\r\n\tvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n#endif\";\r\n\r\n\tvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifndef USE_MORPHNORMALS\\n\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\r\n\r\n\tvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\";\r\n\r\n\tvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * faceDirection;\\n\\t\\t\\tbitangent = bitangent * faceDirection;\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\r\n\r\n\tvar normal_fragment_maps = \"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN, faceDirection );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\r\n\r\n\tvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\\n\\t\\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\\n\\t}\\n#endif\";\r\n\r\n\tvar clearcoat_normal_fragment_begin = \"#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\r\n\r\n\tvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\\n\\t#endif\\n#endif\";\r\n\r\n\tvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";\r\n\r\n\tvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\r\n\r\n\tvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\r\n\r\n\tvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\r\n\r\n\tvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\r\n\r\n\tvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\r\n\r\n\tvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\r\n\r\n\tvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\r\n\r\n\tvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t\tf.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t\tf.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\r\n\r\n\tvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\r\n\r\n\tvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\";\r\n\r\n\tvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\r\n\r\n\tvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\r\n\r\n\tvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform highp sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\";\r\n\r\n\tvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\r\n\r\n\tvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\r\n\r\n\tvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\r\n\r\n\tvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\r\n\r\n\tvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\r\n\r\n\tvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(\t1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,\t1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,\t1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\r\n\r\n\tvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tfloat transmissionFactor = transmission;\\n\\tfloat thicknessFactor = thickness;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition.xyz / vWorldPosition.w;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tfloat ior = ( 1.0 + 0.4 * reflectivity ) / ( 1.0 - 0.4 * reflectivity );\\n\\tvec3 transmission = transmissionFactor * getIBLVolumeRefraction(\\n\\t\\tn, v, roughnessFactor, material.diffuseColor, material.specularColor,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\\n\\t\\tattenuationTint, attenuationDistance );\\n\\ttotalDiffuse = mix( totalDiffuse, transmission, transmissionFactor );\\n#endif\";\r\n\r\n\tvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec4 vWorldPosition;\\n\\tvec3 getVolumeTransmissionRay(vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix) {\\n\\t\\tvec3 refractionVector = refract(-v, normalize(n), 1.0 / ior);\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length(vec3(modelMatrix[0].xyz));\\n\\t\\tmodelScale.y = length(vec3(modelMatrix[1].xyz));\\n\\t\\tmodelScale.z = length(vec3(modelMatrix[2].xyz));\\n\\t\\treturn normalize(refractionVector) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness(float roughness, float ior) {\\n\\t\\treturn roughness * clamp(ior * 2.0 - 2.0, 0.0, 1.0);\\n\\t}\\n\\tvec3 getTransmissionSample(vec2 fragCoord, float roughness, float ior) {\\n\\t\\tfloat framebufferLod = log2(transmissionSamplerSize.x) * applyIorToRoughness(roughness, ior);\\n\\t\\treturn texture2DLodEXT(transmissionSamplerMap, fragCoord.xy, framebufferLod).rgb;\\n\\t}\\n\\tvec3 applyVolumeAttenuation(vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance) {\\n\\t\\tif (attenuationDistance == 0.0) {\\n\\t\\t\\treturn radiance;\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log(attenuationColor) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp(-attenuationCoefficient * transmissionDistance);\\t\\t\\treturn transmittance * radiance;\\n\\t\\t}\\n\\t}\\n\\tvec3 getIBLVolumeRefraction(vec3 n, vec3 v, float perceptualRoughness, vec3 baseColor, vec3 specularColor,\\n\\t\\tvec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness,\\n\\t\\tvec3 attenuationColor, float attenuationDistance) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay(n, v, thickness, ior, modelMatrix);\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4(refractedRayExit, 1.0);\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec3 transmittedLight = getTransmissionSample(refractionCoords, perceptualRoughness, ior);\\n\\t\\tvec3 attenuatedColor = applyVolumeAttenuation(transmittedLight, length(transmissionRay), attenuationColor, attenuationDistance);\\n\\t\\treturn (1.0 - specularColor) * attenuatedColor * baseColor;\\n\\t}\\n#endif\";\r\n\r\n\tvar uv_pars_fragment = \"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";\r\n\r\n\tvar uv_pars_vertex = \"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";\r\n\r\n\tvar uv_vertex = \"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\r\n\r\n\tvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\r\n\r\n\tvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";\r\n\r\n\tvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";\r\n\r\n\tvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\r\n\r\n\tvar background_frag = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\r\n\r\n\tvar background_vert = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\r\n\r\n\tvar cube_frag = \"#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\tvec3 vReflect = vWorldDirection;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = envColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\r\n\r\n\tvar cube_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\r\n\r\n\tvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\r\n\r\n\tvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\r\n\r\n\tvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\r\n\r\n\tvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\r\n\r\n\tvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tvec4 texColor = texture2D( tEquirect, sampleUV );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\r\n\r\n\tvar equirect_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\r\n\r\n\tvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\r\n\r\n\tvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\r\n\r\n\tvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\r\n\r\n\tvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\r\n\r\n\tvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\r\n\r\n\tvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\r\n\r\n\tvar meshmatcap_frag = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\r\n\r\n\tvar meshmatcap_vert = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#ifndef FLAT_SHADED\\n\\t\\tvNormal = normalize( transformedNormal );\\n\\t\\t#ifdef USE_TANGENT\\n\\t\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t\\t#endif\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\r\n\r\n\tvar meshtoon_frag = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\r\n\r\n\tvar meshtoon_vert = \"#define TOON\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\r\n\r\n\tvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\r\n\r\n\tvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\r\n\r\n\tvar meshphysical_frag = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define REFLECTIVITY\\n\\t#define CLEARCOAT\\n\\t#define SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationTint;\\n#endif\\n#ifdef REFLECTIVITY\\n\\tuniform float reflectivity;\\n#endif\\n#ifdef SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularTint;\\n\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULARTINTMAP\\n\\t\\tuniform sampler2D specularTintMap;\\n\\t#endif\\n#endif\\n#ifdef CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheen;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <transmission_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\r\n\r\n\tvar meshphysical_vert = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec4 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition;\\n#endif\\n}\";\r\n\r\n\tvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\";\r\n\r\n\tvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\r\n\r\n\tvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\r\n\r\n\tvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\r\n\r\n\tvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\r\n\r\n\tvar shadow_vert = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\r\n\r\n\tvar sprite_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\r\n\r\n\tvar sprite_vert = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\r\n\r\n\tconst ShaderChunk = {\r\n\t\talphamap_fragment: alphamap_fragment,\r\n\t\talphamap_pars_fragment: alphamap_pars_fragment,\r\n\t\talphatest_fragment: alphatest_fragment,\r\n\t\taomap_fragment: aomap_fragment,\r\n\t\taomap_pars_fragment: aomap_pars_fragment,\r\n\t\tbegin_vertex: begin_vertex,\r\n\t\tbeginnormal_vertex: beginnormal_vertex,\r\n\t\tbsdfs: bsdfs,\r\n\t\tbumpmap_pars_fragment: bumpmap_pars_fragment,\r\n\t\tclipping_planes_fragment: clipping_planes_fragment,\r\n\t\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\r\n\t\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\r\n\t\tclipping_planes_vertex: clipping_planes_vertex,\r\n\t\tcolor_fragment: color_fragment,\r\n\t\tcolor_pars_fragment: color_pars_fragment,\r\n\t\tcolor_pars_vertex: color_pars_vertex,\r\n\t\tcolor_vertex: color_vertex,\r\n\t\tcommon: common,\r\n\t\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\r\n\t\tdefaultnormal_vertex: defaultnormal_vertex,\r\n\t\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\r\n\t\tdisplacementmap_vertex: displacementmap_vertex,\r\n\t\temissivemap_fragment: emissivemap_fragment,\r\n\t\temissivemap_pars_fragment: emissivemap_pars_fragment,\r\n\t\tencodings_fragment: encodings_fragment,\r\n\t\tencodings_pars_fragment: encodings_pars_fragment,\r\n\t\tenvmap_fragment: envmap_fragment,\r\n\t\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\r\n\t\tenvmap_pars_fragment: envmap_pars_fragment,\r\n\t\tenvmap_pars_vertex: envmap_pars_vertex,\r\n\t\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\r\n\t\tenvmap_vertex: envmap_vertex,\r\n\t\tfog_vertex: fog_vertex,\r\n\t\tfog_pars_vertex: fog_pars_vertex,\r\n\t\tfog_fragment: fog_fragment,\r\n\t\tfog_pars_fragment: fog_pars_fragment,\r\n\t\tgradientmap_pars_fragment: gradientmap_pars_fragment,\r\n\t\tlightmap_fragment: lightmap_fragment,\r\n\t\tlightmap_pars_fragment: lightmap_pars_fragment,\r\n\t\tlights_lambert_vertex: lights_lambert_vertex,\r\n\t\tlights_pars_begin: lights_pars_begin,\r\n\t\tlights_toon_fragment: lights_toon_fragment,\r\n\t\tlights_toon_pars_fragment: lights_toon_pars_fragment,\r\n\t\tlights_phong_fragment: lights_phong_fragment,\r\n\t\tlights_phong_pars_fragment: lights_phong_pars_fragment,\r\n\t\tlights_physical_fragment: lights_physical_fragment,\r\n\t\tlights_physical_pars_fragment: lights_physical_pars_fragment,\r\n\t\tlights_fragment_begin: lights_fragment_begin,\r\n\t\tlights_fragment_maps: lights_fragment_maps,\r\n\t\tlights_fragment_end: lights_fragment_end,\r\n\t\tlogdepthbuf_fragment: logdepthbuf_fragment,\r\n\t\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\r\n\t\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\r\n\t\tlogdepthbuf_vertex: logdepthbuf_vertex,\r\n\t\tmap_fragment: map_fragment,\r\n\t\tmap_pars_fragment: map_pars_fragment,\r\n\t\tmap_particle_fragment: map_particle_fragment,\r\n\t\tmap_particle_pars_fragment: map_particle_pars_fragment,\r\n\t\tmetalnessmap_fragment: metalnessmap_fragment,\r\n\t\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\r\n\t\tmorphnormal_vertex: morphnormal_vertex,\r\n\t\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\r\n\t\tmorphtarget_vertex: morphtarget_vertex,\r\n\t\tnormal_fragment_begin: normal_fragment_begin,\r\n\t\tnormal_fragment_maps: normal_fragment_maps,\r\n\t\tnormalmap_pars_fragment: normalmap_pars_fragment,\r\n\t\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\r\n\t\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\r\n\t\tclearcoat_pars_fragment: clearcoat_pars_fragment,\r\n\t\tpacking: packing,\r\n\t\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\r\n\t\tproject_vertex: project_vertex,\r\n\t\tdithering_fragment: dithering_fragment,\r\n\t\tdithering_pars_fragment: dithering_pars_fragment,\r\n\t\troughnessmap_fragment: roughnessmap_fragment,\r\n\t\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\r\n\t\tshadowmap_pars_fragment: shadowmap_pars_fragment,\r\n\t\tshadowmap_pars_vertex: shadowmap_pars_vertex,\r\n\t\tshadowmap_vertex: shadowmap_vertex,\r\n\t\tshadowmask_pars_fragment: shadowmask_pars_fragment,\r\n\t\tskinbase_vertex: skinbase_vertex,\r\n\t\tskinning_pars_vertex: skinning_pars_vertex,\r\n\t\tskinning_vertex: skinning_vertex,\r\n\t\tskinnormal_vertex: skinnormal_vertex,\r\n\t\tspecularmap_fragment: specularmap_fragment,\r\n\t\tspecularmap_pars_fragment: specularmap_pars_fragment,\r\n\t\ttonemapping_fragment: tonemapping_fragment,\r\n\t\ttonemapping_pars_fragment: tonemapping_pars_fragment,\r\n\t\ttransmission_fragment: transmission_fragment,\r\n\t\ttransmission_pars_fragment: transmission_pars_fragment,\r\n\t\tuv_pars_fragment: uv_pars_fragment,\r\n\t\tuv_pars_vertex: uv_pars_vertex,\r\n\t\tuv_vertex: uv_vertex,\r\n\t\tuv2_pars_fragment: uv2_pars_fragment,\r\n\t\tuv2_pars_vertex: uv2_pars_vertex,\r\n\t\tuv2_vertex: uv2_vertex,\r\n\t\tworldpos_vertex: worldpos_vertex,\r\n\t\tbackground_frag: background_frag,\r\n\t\tbackground_vert: background_vert,\r\n\t\tcube_frag: cube_frag,\r\n\t\tcube_vert: cube_vert,\r\n\t\tdepth_frag: depth_frag,\r\n\t\tdepth_vert: depth_vert,\r\n\t\tdistanceRGBA_frag: distanceRGBA_frag,\r\n\t\tdistanceRGBA_vert: distanceRGBA_vert,\r\n\t\tequirect_frag: equirect_frag,\r\n\t\tequirect_vert: equirect_vert,\r\n\t\tlinedashed_frag: linedashed_frag,\r\n\t\tlinedashed_vert: linedashed_vert,\r\n\t\tmeshbasic_frag: meshbasic_frag,\r\n\t\tmeshbasic_vert: meshbasic_vert,\r\n\t\tmeshlambert_frag: meshlambert_frag,\r\n\t\tmeshlambert_vert: meshlambert_vert,\r\n\t\tmeshmatcap_frag: meshmatcap_frag,\r\n\t\tmeshmatcap_vert: meshmatcap_vert,\r\n\t\tmeshtoon_frag: meshtoon_frag,\r\n\t\tmeshtoon_vert: meshtoon_vert,\r\n\t\tmeshphong_frag: meshphong_frag,\r\n\t\tmeshphong_vert: meshphong_vert,\r\n\t\tmeshphysical_frag: meshphysical_frag,\r\n\t\tmeshphysical_vert: meshphysical_vert,\r\n\t\tnormal_frag: normal_frag,\r\n\t\tnormal_vert: normal_vert,\r\n\t\tpoints_frag: points_frag,\r\n\t\tpoints_vert: points_vert,\r\n\t\tshadow_frag: shadow_frag,\r\n\t\tshadow_vert: shadow_vert,\r\n\t\tsprite_frag: sprite_frag,\r\n\t\tsprite_vert: sprite_vert\r\n\t};\r\n\r\n\t/**\r\n\t * Uniforms library for shared webgl shaders\r\n\t */\r\n\r\n\tconst UniformsLib = {\r\n\t\tcommon: {\r\n\t\t\tdiffuse: {\r\n\t\t\t\tvalue: new Color(0xffffff)\r\n\t\t\t},\r\n\t\t\topacity: {\r\n\t\t\t\tvalue: 1.0\r\n\t\t\t},\r\n\t\t\tmap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t},\r\n\t\t\tuvTransform: {\r\n\t\t\t\tvalue: new Matrix3()\r\n\t\t\t},\r\n\t\t\tuv2Transform: {\r\n\t\t\t\tvalue: new Matrix3()\r\n\t\t\t},\r\n\t\t\talphaMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t}\r\n\t\t},\r\n\t\tspecularmap: {\r\n\t\t\tspecularMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t}\r\n\t\t},\r\n\t\tenvmap: {\r\n\t\t\tenvMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t},\r\n\t\t\tflipEnvMap: {\r\n\t\t\t\tvalue: -1\r\n\t\t\t},\r\n\t\t\treflectivity: {\r\n\t\t\t\tvalue: 1.0\r\n\t\t\t},\r\n\t\t\trefractionRatio: {\r\n\t\t\t\tvalue: 0.98\r\n\t\t\t},\r\n\t\t\tmaxMipLevel: {\r\n\t\t\t\tvalue: 0\r\n\t\t\t}\r\n\t\t},\r\n\t\taomap: {\r\n\t\t\taoMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t},\r\n\t\t\taoMapIntensity: {\r\n\t\t\t\tvalue: 1\r\n\t\t\t}\r\n\t\t},\r\n\t\tlightmap: {\r\n\t\t\tlightMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t},\r\n\t\t\tlightMapIntensity: {\r\n\t\t\t\tvalue: 1\r\n\t\t\t}\r\n\t\t},\r\n\t\temissivemap: {\r\n\t\t\temissiveMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t}\r\n\t\t},\r\n\t\tbumpmap: {\r\n\t\t\tbumpMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t},\r\n\t\t\tbumpScale: {\r\n\t\t\t\tvalue: 1\r\n\t\t\t}\r\n\t\t},\r\n\t\tnormalmap: {\r\n\t\t\tnormalMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t},\r\n\t\t\tnormalScale: {\r\n\t\t\t\tvalue: new Vector2(1, 1)\r\n\t\t\t}\r\n\t\t},\r\n\t\tdisplacementmap: {\r\n\t\t\tdisplacementMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t},\r\n\t\t\tdisplacementScale: {\r\n\t\t\t\tvalue: 1\r\n\t\t\t},\r\n\t\t\tdisplacementBias: {\r\n\t\t\t\tvalue: 0\r\n\t\t\t}\r\n\t\t},\r\n\t\troughnessmap: {\r\n\t\t\troughnessMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t}\r\n\t\t},\r\n\t\tmetalnessmap: {\r\n\t\t\tmetalnessMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t}\r\n\t\t},\r\n\t\tgradientmap: {\r\n\t\t\tgradientMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t}\r\n\t\t},\r\n\t\tfog: {\r\n\t\t\tfogDensity: {\r\n\t\t\t\tvalue: 0.00025\r\n\t\t\t},\r\n\t\t\tfogNear: {\r\n\t\t\t\tvalue: 1\r\n\t\t\t},\r\n\t\t\tfogFar: {\r\n\t\t\t\tvalue: 2000\r\n\t\t\t},\r\n\t\t\tfogColor: {\r\n\t\t\t\tvalue: new Color(0xffffff)\r\n\t\t\t}\r\n\t\t},\r\n\t\tlights: {\r\n\t\t\tambientLightColor: {\r\n\t\t\t\tvalue: []\r\n\t\t\t},\r\n\t\t\tlightProbe: {\r\n\t\t\t\tvalue: []\r\n\t\t\t},\r\n\t\t\tdirectionalLights: {\r\n\t\t\t\tvalue: [],\r\n\t\t\t\tproperties: {\r\n\t\t\t\t\tdirection: {},\r\n\t\t\t\t\tcolor: {}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdirectionalLightShadows: {\r\n\t\t\t\tvalue: [],\r\n\t\t\t\tproperties: {\r\n\t\t\t\t\tshadowBias: {},\r\n\t\t\t\t\tshadowNormalBias: {},\r\n\t\t\t\t\tshadowRadius: {},\r\n\t\t\t\t\tshadowMapSize: {}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdirectionalShadowMap: {\r\n\t\t\t\tvalue: []\r\n\t\t\t},\r\n\t\t\tdirectionalShadowMatrix: {\r\n\t\t\t\tvalue: []\r\n\t\t\t},\r\n\t\t\tspotLights: {\r\n\t\t\t\tvalue: [],\r\n\t\t\t\tproperties: {\r\n\t\t\t\t\tcolor: {},\r\n\t\t\t\t\tposition: {},\r\n\t\t\t\t\tdirection: {},\r\n\t\t\t\t\tdistance: {},\r\n\t\t\t\t\tconeCos: {},\r\n\t\t\t\t\tpenumbraCos: {},\r\n\t\t\t\t\tdecay: {}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tspotLightShadows: {\r\n\t\t\t\tvalue: [],\r\n\t\t\t\tproperties: {\r\n\t\t\t\t\tshadowBias: {},\r\n\t\t\t\t\tshadowNormalBias: {},\r\n\t\t\t\t\tshadowRadius: {},\r\n\t\t\t\t\tshadowMapSize: {}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tspotShadowMap: {\r\n\t\t\t\tvalue: []\r\n\t\t\t},\r\n\t\t\tspotShadowMatrix: {\r\n\t\t\t\tvalue: []\r\n\t\t\t},\r\n\t\t\tpointLights: {\r\n\t\t\t\tvalue: [],\r\n\t\t\t\tproperties: {\r\n\t\t\t\t\tcolor: {},\r\n\t\t\t\t\tposition: {},\r\n\t\t\t\t\tdecay: {},\r\n\t\t\t\t\tdistance: {}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tpointLightShadows: {\r\n\t\t\t\tvalue: [],\r\n\t\t\t\tproperties: {\r\n\t\t\t\t\tshadowBias: {},\r\n\t\t\t\t\tshadowNormalBias: {},\r\n\t\t\t\t\tshadowRadius: {},\r\n\t\t\t\t\tshadowMapSize: {},\r\n\t\t\t\t\tshadowCameraNear: {},\r\n\t\t\t\t\tshadowCameraFar: {}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tpointShadowMap: {\r\n\t\t\t\tvalue: []\r\n\t\t\t},\r\n\t\t\tpointShadowMatrix: {\r\n\t\t\t\tvalue: []\r\n\t\t\t},\r\n\t\t\themisphereLights: {\r\n\t\t\t\tvalue: [],\r\n\t\t\t\tproperties: {\r\n\t\t\t\t\tdirection: {},\r\n\t\t\t\t\tskyColor: {},\r\n\t\t\t\t\tgroundColor: {}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\r\n\t\t\trectAreaLights: {\r\n\t\t\t\tvalue: [],\r\n\t\t\t\tproperties: {\r\n\t\t\t\t\tcolor: {},\r\n\t\t\t\t\tposition: {},\r\n\t\t\t\t\twidth: {},\r\n\t\t\t\t\theight: {}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tltc_1: {\r\n\t\t\t\tvalue: null\r\n\t\t\t},\r\n\t\t\tltc_2: {\r\n\t\t\t\tvalue: null\r\n\t\t\t}\r\n\t\t},\r\n\t\tpoints: {\r\n\t\t\tdiffuse: {\r\n\t\t\t\tvalue: new Color(0xffffff)\r\n\t\t\t},\r\n\t\t\topacity: {\r\n\t\t\t\tvalue: 1.0\r\n\t\t\t},\r\n\t\t\tsize: {\r\n\t\t\t\tvalue: 1.0\r\n\t\t\t},\r\n\t\t\tscale: {\r\n\t\t\t\tvalue: 1.0\r\n\t\t\t},\r\n\t\t\tmap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t},\r\n\t\t\talphaMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t},\r\n\t\t\tuvTransform: {\r\n\t\t\t\tvalue: new Matrix3()\r\n\t\t\t}\r\n\t\t},\r\n\t\tsprite: {\r\n\t\t\tdiffuse: {\r\n\t\t\t\tvalue: new Color(0xffffff)\r\n\t\t\t},\r\n\t\t\topacity: {\r\n\t\t\t\tvalue: 1.0\r\n\t\t\t},\r\n\t\t\tcenter: {\r\n\t\t\t\tvalue: new Vector2(0.5, 0.5)\r\n\t\t\t},\r\n\t\t\trotation: {\r\n\t\t\t\tvalue: 0.0\r\n\t\t\t},\r\n\t\t\tmap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t},\r\n\t\t\talphaMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t},\r\n\t\t\tuvTransform: {\r\n\t\t\t\tvalue: new Matrix3()\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst ShaderLib = {\r\n\t\tbasic: {\r\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.fog]),\r\n\t\t\tvertexShader: ShaderChunk.meshbasic_vert,\r\n\t\t\tfragmentShader: ShaderChunk.meshbasic_frag\r\n\t\t},\r\n\t\tlambert: {\r\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.fog, UniformsLib.lights, {\r\n\t\t\t\temissive: {\r\n\t\t\t\t\tvalue: new Color(0x000000)\r\n\t\t\t\t}\r\n\t\t\t}]),\r\n\t\t\tvertexShader: ShaderChunk.meshlambert_vert,\r\n\t\t\tfragmentShader: ShaderChunk.meshlambert_frag\r\n\t\t},\r\n\t\tphong: {\r\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.fog, UniformsLib.lights, {\r\n\t\t\t\temissive: {\r\n\t\t\t\t\tvalue: new Color(0x000000)\r\n\t\t\t\t},\r\n\t\t\t\tspecular: {\r\n\t\t\t\t\tvalue: new Color(0x111111)\r\n\t\t\t\t},\r\n\t\t\t\tshininess: {\r\n\t\t\t\t\tvalue: 30\r\n\t\t\t\t}\r\n\t\t\t}]),\r\n\t\t\tvertexShader: ShaderChunk.meshphong_vert,\r\n\t\t\tfragmentShader: ShaderChunk.meshphong_frag\r\n\t\t},\r\n\t\tstandard: {\r\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.roughnessmap, UniformsLib.metalnessmap, UniformsLib.fog, UniformsLib.lights, {\r\n\t\t\t\temissive: {\r\n\t\t\t\t\tvalue: new Color(0x000000)\r\n\t\t\t\t},\r\n\t\t\t\troughness: {\r\n\t\t\t\t\tvalue: 1.0\r\n\t\t\t\t},\r\n\t\t\t\tmetalness: {\r\n\t\t\t\t\tvalue: 0.0\r\n\t\t\t\t},\r\n\t\t\t\tenvMapIntensity: {\r\n\t\t\t\t\tvalue: 1\r\n\t\t\t\t} // temporary\r\n\r\n\t\t\t}]),\r\n\t\t\tvertexShader: ShaderChunk.meshphysical_vert,\r\n\t\t\tfragmentShader: ShaderChunk.meshphysical_frag\r\n\t\t},\r\n\t\ttoon: {\r\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.gradientmap, UniformsLib.fog, UniformsLib.lights, {\r\n\t\t\t\temissive: {\r\n\t\t\t\t\tvalue: new Color(0x000000)\r\n\t\t\t\t}\r\n\t\t\t}]),\r\n\t\t\tvertexShader: ShaderChunk.meshtoon_vert,\r\n\t\t\tfragmentShader: ShaderChunk.meshtoon_frag\r\n\t\t},\r\n\t\tmatcap: {\r\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.fog, {\r\n\t\t\t\tmatcap: {\r\n\t\t\t\t\tvalue: null\r\n\t\t\t\t}\r\n\t\t\t}]),\r\n\t\t\tvertexShader: ShaderChunk.meshmatcap_vert,\r\n\t\t\tfragmentShader: ShaderChunk.meshmatcap_frag\r\n\t\t},\r\n\t\tpoints: {\r\n\t\t\tuniforms: mergeUniforms([UniformsLib.points, UniformsLib.fog]),\r\n\t\t\tvertexShader: ShaderChunk.points_vert,\r\n\t\t\tfragmentShader: ShaderChunk.points_frag\r\n\t\t},\r\n\t\tdashed: {\r\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.fog, {\r\n\t\t\t\tscale: {\r\n\t\t\t\t\tvalue: 1\r\n\t\t\t\t},\r\n\t\t\t\tdashSize: {\r\n\t\t\t\t\tvalue: 1\r\n\t\t\t\t},\r\n\t\t\t\ttotalSize: {\r\n\t\t\t\t\tvalue: 2\r\n\t\t\t\t}\r\n\t\t\t}]),\r\n\t\t\tvertexShader: ShaderChunk.linedashed_vert,\r\n\t\t\tfragmentShader: ShaderChunk.linedashed_frag\r\n\t\t},\r\n\t\tdepth: {\r\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.displacementmap]),\r\n\t\t\tvertexShader: ShaderChunk.depth_vert,\r\n\t\t\tfragmentShader: ShaderChunk.depth_frag\r\n\t\t},\r\n\t\tnormal: {\r\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, {\r\n\t\t\t\topacity: {\r\n\t\t\t\t\tvalue: 1.0\r\n\t\t\t\t}\r\n\t\t\t}]),\r\n\t\t\tvertexShader: ShaderChunk.normal_vert,\r\n\t\t\tfragmentShader: ShaderChunk.normal_frag\r\n\t\t},\r\n\t\tsprite: {\r\n\t\t\tuniforms: mergeUniforms([UniformsLib.sprite, UniformsLib.fog]),\r\n\t\t\tvertexShader: ShaderChunk.sprite_vert,\r\n\t\t\tfragmentShader: ShaderChunk.sprite_frag\r\n\t\t},\r\n\t\tbackground: {\r\n\t\t\tuniforms: {\r\n\t\t\t\tuvTransform: {\r\n\t\t\t\t\tvalue: new Matrix3()\r\n\t\t\t\t},\r\n\t\t\t\tt2D: {\r\n\t\t\t\t\tvalue: null\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tvertexShader: ShaderChunk.background_vert,\r\n\t\t\tfragmentShader: ShaderChunk.background_frag\r\n\t\t},\r\n\r\n\t\t/* -------------------------------------------------------------------------\r\n\t\t//\tCube map shader\r\n\t\t ------------------------------------------------------------------------- */\r\n\t\tcube: {\r\n\t\t\tuniforms: mergeUniforms([UniformsLib.envmap, {\r\n\t\t\t\topacity: {\r\n\t\t\t\t\tvalue: 1.0\r\n\t\t\t\t}\r\n\t\t\t}]),\r\n\t\t\tvertexShader: ShaderChunk.cube_vert,\r\n\t\t\tfragmentShader: ShaderChunk.cube_frag\r\n\t\t},\r\n\t\tequirect: {\r\n\t\t\tuniforms: {\r\n\t\t\t\ttEquirect: {\r\n\t\t\t\t\tvalue: null\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tvertexShader: ShaderChunk.equirect_vert,\r\n\t\t\tfragmentShader: ShaderChunk.equirect_frag\r\n\t\t},\r\n\t\tdistanceRGBA: {\r\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.displacementmap, {\r\n\t\t\t\treferencePosition: {\r\n\t\t\t\t\tvalue: new Vector3()\r\n\t\t\t\t},\r\n\t\t\t\tnearDistance: {\r\n\t\t\t\t\tvalue: 1\r\n\t\t\t\t},\r\n\t\t\t\tfarDistance: {\r\n\t\t\t\t\tvalue: 1000\r\n\t\t\t\t}\r\n\t\t\t}]),\r\n\t\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\r\n\t\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\r\n\t\t},\r\n\t\tshadow: {\r\n\t\t\tuniforms: mergeUniforms([UniformsLib.lights, UniformsLib.fog, {\r\n\t\t\t\tcolor: {\r\n\t\t\t\t\tvalue: new Color(0x00000)\r\n\t\t\t\t},\r\n\t\t\t\topacity: {\r\n\t\t\t\t\tvalue: 1.0\r\n\t\t\t\t}\r\n\t\t\t}]),\r\n\t\t\tvertexShader: ShaderChunk.shadow_vert,\r\n\t\t\tfragmentShader: ShaderChunk.shadow_frag\r\n\t\t}\r\n\t};\r\n\tShaderLib.physical = {\r\n\t\tuniforms: mergeUniforms([ShaderLib.standard.uniforms, {\r\n\t\t\tclearcoat: {\r\n\t\t\t\tvalue: 0\r\n\t\t\t},\r\n\t\t\tclearcoatMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t},\r\n\t\t\tclearcoatRoughness: {\r\n\t\t\t\tvalue: 0\r\n\t\t\t},\r\n\t\t\tclearcoatRoughnessMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t},\r\n\t\t\tclearcoatNormalScale: {\r\n\t\t\t\tvalue: new Vector2(1, 1)\r\n\t\t\t},\r\n\t\t\tclearcoatNormalMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t},\r\n\t\t\tsheen: {\r\n\t\t\t\tvalue: new Color(0x000000)\r\n\t\t\t},\r\n\t\t\ttransmission: {\r\n\t\t\t\tvalue: 0\r\n\t\t\t},\r\n\t\t\ttransmissionMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t},\r\n\t\t\ttransmissionSamplerSize: {\r\n\t\t\t\tvalue: new Vector2()\r\n\t\t\t},\r\n\t\t\ttransmissionSamplerMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t},\r\n\t\t\tthickness: {\r\n\t\t\t\tvalue: 0\r\n\t\t\t},\r\n\t\t\tthicknessMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t},\r\n\t\t\tattenuationDistance: {\r\n\t\t\t\tvalue: 0\r\n\t\t\t},\r\n\t\t\tattenuationTint: {\r\n\t\t\t\tvalue: new Color(0x000000)\r\n\t\t\t},\r\n\t\t\tspecularIntensity: {\r\n\t\t\t\tvalue: 0\r\n\t\t\t},\r\n\t\t\tspecularIntensityMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t},\r\n\t\t\tspecularTint: {\r\n\t\t\t\tvalue: new Color(1, 1, 1)\r\n\t\t\t},\r\n\t\t\tspecularTintMap: {\r\n\t\t\t\tvalue: null\r\n\t\t\t}\r\n\t\t}]),\r\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\r\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\r\n\t};\r\n\r\n\tfunction WebGLBackground(renderer, cubemaps, state, objects, premultipliedAlpha) {\r\n\t\tconst clearColor = new Color(0x000000);\r\n\t\tlet clearAlpha = 0;\r\n\t\tlet planeMesh;\r\n\t\tlet boxMesh;\r\n\t\tlet currentBackground = null;\r\n\t\tlet currentBackgroundVersion = 0;\r\n\t\tlet currentTonemapping = null;\r\n\r\n\t\tfunction render(renderList, scene) {\r\n\t\t\tlet forceClear = false;\r\n\t\t\tlet background = scene.isScene === true ? scene.background : null;\r\n\r\n\t\t\tif (background && background.isTexture) {\r\n\t\t\t\tbackground = cubemaps.get(background);\r\n\t\t\t} // Ignore background in AR\r\n\t\t\t// TODO: Reconsider this.\r\n\r\n\r\n\t\t\tconst xr = renderer.xr;\r\n\t\t\tconst session = xr.getSession && xr.getSession();\r\n\r\n\t\t\tif (session && session.environmentBlendMode === 'additive') {\r\n\t\t\t\tbackground = null;\r\n\t\t\t}\r\n\r\n\t\t\tif (background === null) {\r\n\t\t\t\tsetClear(clearColor, clearAlpha);\r\n\t\t\t} else if (background && background.isColor) {\r\n\t\t\t\tsetClear(background, 1);\r\n\t\t\t\tforceClear = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (renderer.autoClear || forceClear) {\r\n\t\t\t\trenderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\r\n\t\t\t}\r\n\r\n\t\t\tif (background && (background.isCubeTexture || background.mapping === CubeUVReflectionMapping)) {\r\n\t\t\t\tif (boxMesh === undefined) {\r\n\t\t\t\t\tboxMesh = new Mesh(new BoxGeometry(1, 1, 1), new ShaderMaterial({\r\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\r\n\t\t\t\t\t\tuniforms: cloneUniforms(ShaderLib.cube.uniforms),\r\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\r\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\r\n\t\t\t\t\t\tside: BackSide,\r\n\t\t\t\t\t\tdepthTest: false,\r\n\t\t\t\t\t\tdepthWrite: false,\r\n\t\t\t\t\t\tfog: false\r\n\t\t\t\t\t}));\r\n\t\t\t\t\tboxMesh.geometry.deleteAttribute('normal');\r\n\t\t\t\t\tboxMesh.geometry.deleteAttribute('uv');\r\n\r\n\t\t\t\t\tboxMesh.onBeforeRender = function (renderer, scene, camera) {\r\n\t\t\t\t\t\tthis.matrixWorld.copyPosition(camera.matrixWorld);\r\n\t\t\t\t\t}; // enable code injection for non-built-in material\r\n\r\n\r\n\t\t\t\t\tObject.defineProperty(boxMesh.material, 'envMap', {\r\n\t\t\t\t\t\tget: function () {\r\n\t\t\t\t\t\t\treturn this.uniforms.envMap.value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tobjects.update(boxMesh);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tboxMesh.material.uniforms.envMap.value = background;\r\n\t\t\t\tboxMesh.material.uniforms.flipEnvMap.value = background.isCubeTexture && background.isRenderTargetTexture === false ? -1 : 1;\r\n\r\n\t\t\t\tif (currentBackground !== background || currentBackgroundVersion !== background.version || currentTonemapping !== renderer.toneMapping) {\r\n\t\t\t\t\tboxMesh.material.needsUpdate = true;\r\n\t\t\t\t\tcurrentBackground = background;\r\n\t\t\t\t\tcurrentBackgroundVersion = background.version;\r\n\t\t\t\t\tcurrentTonemapping = renderer.toneMapping;\r\n\t\t\t\t} // push to the pre-sorted opaque render list\r\n\r\n\r\n\t\t\t\trenderList.unshift(boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null);\r\n\t\t\t} else if (background && background.isTexture) {\r\n\t\t\t\tif (planeMesh === undefined) {\r\n\t\t\t\t\tplaneMesh = new Mesh(new PlaneGeometry(2, 2), new ShaderMaterial({\r\n\t\t\t\t\t\tname: 'BackgroundMaterial',\r\n\t\t\t\t\t\tuniforms: cloneUniforms(ShaderLib.background.uniforms),\r\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\r\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\r\n\t\t\t\t\t\tside: FrontSide,\r\n\t\t\t\t\t\tdepthTest: false,\r\n\t\t\t\t\t\tdepthWrite: false,\r\n\t\t\t\t\t\tfog: false\r\n\t\t\t\t\t}));\r\n\t\t\t\t\tplaneMesh.geometry.deleteAttribute('normal'); // enable code injection for non-built-in material\r\n\r\n\t\t\t\t\tObject.defineProperty(planeMesh.material, 'map', {\r\n\t\t\t\t\t\tget: function () {\r\n\t\t\t\t\t\t\treturn this.uniforms.t2D.value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tobjects.update(planeMesh);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tplaneMesh.material.uniforms.t2D.value = background;\r\n\r\n\t\t\t\tif (background.matrixAutoUpdate === true) {\r\n\t\t\t\t\tbackground.updateMatrix();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy(background.matrix);\r\n\r\n\t\t\t\tif (currentBackground !== background || currentBackgroundVersion !== background.version || currentTonemapping !== renderer.toneMapping) {\r\n\t\t\t\t\tplaneMesh.material.needsUpdate = true;\r\n\t\t\t\t\tcurrentBackground = background;\r\n\t\t\t\t\tcurrentBackgroundVersion = background.version;\r\n\t\t\t\t\tcurrentTonemapping = renderer.toneMapping;\r\n\t\t\t\t} // push to the pre-sorted opaque render list\r\n\r\n\r\n\t\t\t\trenderList.unshift(planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction setClear(color, alpha) {\r\n\t\t\tstate.buffers.color.setClear(color.r, color.g, color.b, alpha, premultipliedAlpha);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tgetClearColor: function () {\r\n\t\t\t\treturn clearColor;\r\n\t\t\t},\r\n\t\t\tsetClearColor: function (color, alpha = 1) {\r\n\t\t\t\tclearColor.set(color);\r\n\t\t\t\tclearAlpha = alpha;\r\n\t\t\t\tsetClear(clearColor, clearAlpha);\r\n\t\t\t},\r\n\t\t\tgetClearAlpha: function () {\r\n\t\t\t\treturn clearAlpha;\r\n\t\t\t},\r\n\t\t\tsetClearAlpha: function (alpha) {\r\n\t\t\t\tclearAlpha = alpha;\r\n\t\t\t\tsetClear(clearColor, clearAlpha);\r\n\t\t\t},\r\n\t\t\trender: render\r\n\t\t};\r\n\t}\r\n\r\n\tfunction WebGLBindingStates(gl, extensions, attributes, capabilities) {\r\n\t\tconst maxVertexAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\r\n\t\tconst extension = capabilities.isWebGL2 ? null : extensions.get('OES_vertex_array_object');\r\n\t\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\r\n\t\tconst bindingStates = {};\r\n\t\tconst defaultState = createBindingState(null);\r\n\t\tlet currentState = defaultState;\r\n\r\n\t\tfunction setup(object, material, program, geometry, index) {\r\n\t\t\tlet updateBuffers = false;\r\n\r\n\t\t\tif (vaoAvailable) {\r\n\t\t\t\tconst state = getBindingState(geometry, program, material);\r\n\r\n\t\t\t\tif (currentState !== state) {\r\n\t\t\t\t\tcurrentState = state;\r\n\t\t\t\t\tbindVertexArrayObject(currentState.object);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tupdateBuffers = needsUpdate(geometry, index);\r\n\t\t\t\tif (updateBuffers) saveCache(geometry, index);\r\n\t\t\t} else {\r\n\t\t\t\tconst wireframe = material.wireframe === true;\r\n\r\n\t\t\t\tif (currentState.geometry !== geometry.id || currentState.program !== program.id || currentState.wireframe !== wireframe) {\r\n\t\t\t\t\tcurrentState.geometry = geometry.id;\r\n\t\t\t\t\tcurrentState.program = program.id;\r\n\t\t\t\t\tcurrentState.wireframe = wireframe;\r\n\t\t\t\t\tupdateBuffers = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (object.isInstancedMesh === true) {\r\n\t\t\t\tupdateBuffers = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (index !== null) {\r\n\t\t\t\tattributes.update(index, gl.ELEMENT_ARRAY_BUFFER);\r\n\t\t\t}\r\n\r\n\t\t\tif (updateBuffers) {\r\n\t\t\t\tsetupVertexAttributes(object, material, program, geometry);\r\n\r\n\t\t\t\tif (index !== null) {\r\n\t\t\t\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, attributes.get(index).buffer);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction createVertexArrayObject() {\r\n\t\t\tif (capabilities.isWebGL2) return gl.createVertexArray();\r\n\t\t\treturn extension.createVertexArrayOES();\r\n\t\t}\r\n\r\n\t\tfunction bindVertexArrayObject(vao) {\r\n\t\t\tif (capabilities.isWebGL2) return gl.bindVertexArray(vao);\r\n\t\t\treturn extension.bindVertexArrayOES(vao);\r\n\t\t}\r\n\r\n\t\tfunction deleteVertexArrayObject(vao) {\r\n\t\t\tif (capabilities.isWebGL2) return gl.deleteVertexArray(vao);\r\n\t\t\treturn extension.deleteVertexArrayOES(vao);\r\n\t\t}\r\n\r\n\t\tfunction getBindingState(geometry, program, material) {\r\n\t\t\tconst wireframe = material.wireframe === true;\r\n\t\t\tlet programMap = bindingStates[geometry.id];\r\n\r\n\t\t\tif (programMap === undefined) {\r\n\t\t\t\tprogramMap = {};\r\n\t\t\t\tbindingStates[geometry.id] = programMap;\r\n\t\t\t}\r\n\r\n\t\t\tlet stateMap = programMap[program.id];\r\n\r\n\t\t\tif (stateMap === undefined) {\r\n\t\t\t\tstateMap = {};\r\n\t\t\t\tprogramMap[program.id] = stateMap;\r\n\t\t\t}\r\n\r\n\t\t\tlet state = stateMap[wireframe];\r\n\r\n\t\t\tif (state === undefined) {\r\n\t\t\t\tstate = createBindingState(createVertexArrayObject());\r\n\t\t\t\tstateMap[wireframe] = state;\r\n\t\t\t}\r\n\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\tfunction createBindingState(vao) {\r\n\t\t\tconst newAttributes = [];\r\n\t\t\tconst enabledAttributes = [];\r\n\t\t\tconst attributeDivisors = [];\r\n\r\n\t\t\tfor (let i = 0; i < maxVertexAttributes; i++) {\r\n\t\t\t\tnewAttributes[i] = 0;\r\n\t\t\t\tenabledAttributes[i] = 0;\r\n\t\t\t\tattributeDivisors[i] = 0;\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\t// for backward compatibility on non-VAO support browser\r\n\t\t\t\tgeometry: null,\r\n\t\t\t\tprogram: null,\r\n\t\t\t\twireframe: false,\r\n\t\t\t\tnewAttributes: newAttributes,\r\n\t\t\t\tenabledAttributes: enabledAttributes,\r\n\t\t\t\tattributeDivisors: attributeDivisors,\r\n\t\t\t\tobject: vao,\r\n\t\t\t\tattributes: {},\r\n\t\t\t\tindex: null\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tfunction needsUpdate(geometry, index) {\r\n\t\t\tconst cachedAttributes = currentState.attributes;\r\n\t\t\tconst geometryAttributes = geometry.attributes;\r\n\t\t\tlet attributesNum = 0;\r\n\r\n\t\t\tfor (const key in geometryAttributes) {\r\n\t\t\t\tconst cachedAttribute = cachedAttributes[key];\r\n\t\t\t\tconst geometryAttribute = geometryAttributes[key];\r\n\t\t\t\tif (cachedAttribute === undefined) return true;\r\n\t\t\t\tif (cachedAttribute.attribute !== geometryAttribute) return true;\r\n\t\t\t\tif (cachedAttribute.data !== geometryAttribute.data) return true;\r\n\t\t\t\tattributesNum++;\r\n\t\t\t}\r\n\r\n\t\t\tif (currentState.attributesNum !== attributesNum) return true;\r\n\t\t\tif (currentState.index !== index) return true;\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tfunction saveCache(geometry, index) {\r\n\t\t\tconst cache = {};\r\n\t\t\tconst attributes = geometry.attributes;\r\n\t\t\tlet attributesNum = 0;\r\n\r\n\t\t\tfor (const key in attributes) {\r\n\t\t\t\tconst attribute = attributes[key];\r\n\t\t\t\tconst data = {};\r\n\t\t\t\tdata.attribute = attribute;\r\n\r\n\t\t\t\tif (attribute.data) {\r\n\t\t\t\t\tdata.data = attribute.data;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcache[key] = data;\r\n\t\t\t\tattributesNum++;\r\n\t\t\t}\r\n\r\n\t\t\tcurrentState.attributes = cache;\r\n\t\t\tcurrentState.attributesNum = attributesNum;\r\n\t\t\tcurrentState.index = index;\r\n\t\t}\r\n\r\n\t\tfunction initAttributes() {\r\n\t\t\tconst newAttributes = currentState.newAttributes;\r\n\r\n\t\t\tfor (let i = 0, il = newAttributes.length; i < il; i++) {\r\n\t\t\t\tnewAttributes[i] = 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction enableAttribute(attribute) {\r\n\t\t\tenableAttributeAndDivisor(attribute, 0);\r\n\t\t}\r\n\r\n\t\tfunction enableAttributeAndDivisor(attribute, meshPerAttribute) {\r\n\t\t\tconst newAttributes = currentState.newAttributes;\r\n\t\t\tconst enabledAttributes = currentState.enabledAttributes;\r\n\t\t\tconst attributeDivisors = currentState.attributeDivisors;\r\n\t\t\tnewAttributes[attribute] = 1;\r\n\r\n\t\t\tif (enabledAttributes[attribute] === 0) {\r\n\t\t\t\tgl.enableVertexAttribArray(attribute);\r\n\t\t\t\tenabledAttributes[attribute] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tif (attributeDivisors[attribute] !== meshPerAttribute) {\r\n\t\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get('ANGLE_instanced_arrays');\r\n\t\t\t\textension[capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE'](attribute, meshPerAttribute);\r\n\t\t\t\tattributeDivisors[attribute] = meshPerAttribute;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction disableUnusedAttributes() {\r\n\t\t\tconst newAttributes = currentState.newAttributes;\r\n\t\t\tconst enabledAttributes = currentState.enabledAttributes;\r\n\r\n\t\t\tfor (let i = 0, il = enabledAttributes.length; i < il; i++) {\r\n\t\t\t\tif (enabledAttributes[i] !== newAttributes[i]) {\r\n\t\t\t\t\tgl.disableVertexAttribArray(i);\r\n\t\t\t\t\tenabledAttributes[i] = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction vertexAttribPointer(index, size, type, normalized, stride, offset) {\r\n\t\t\tif (capabilities.isWebGL2 === true && (type === gl.INT || type === gl.UNSIGNED_INT)) {\r\n\t\t\t\tgl.vertexAttribIPointer(index, size, type, stride, offset);\r\n\t\t\t} else {\r\n\t\t\t\tgl.vertexAttribPointer(index, size, type, normalized, stride, offset);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction setupVertexAttributes(object, material, program, geometry) {\r\n\t\t\tif (capabilities.isWebGL2 === false && (object.isInstancedMesh || geometry.isInstancedBufferGeometry)) {\r\n\t\t\t\tif (extensions.get('ANGLE_instanced_arrays') === null) return;\r\n\t\t\t}\r\n\r\n\t\t\tinitAttributes();\r\n\t\t\tconst geometryAttributes = geometry.attributes;\r\n\t\t\tconst programAttributes = program.getAttributes();\r\n\t\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\r\n\r\n\t\t\tfor (const name in programAttributes) {\r\n\t\t\t\tconst programAttribute = programAttributes[name];\r\n\r\n\t\t\t\tif (programAttribute >= 0) {\r\n\t\t\t\t\tconst geometryAttribute = geometryAttributes[name];\r\n\r\n\t\t\t\t\tif (geometryAttribute !== undefined) {\r\n\t\t\t\t\t\tconst normalized = geometryAttribute.normalized;\r\n\t\t\t\t\t\tconst size = geometryAttribute.itemSize;\r\n\t\t\t\t\t\tconst attribute = attributes.get(geometryAttribute); // TODO Attribute may not be available on context restore\r\n\r\n\t\t\t\t\t\tif (attribute === undefined) continue;\r\n\t\t\t\t\t\tconst buffer = attribute.buffer;\r\n\t\t\t\t\t\tconst type = attribute.type;\r\n\t\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\r\n\r\n\t\t\t\t\t\tif (geometryAttribute.isInterleavedBufferAttribute) {\r\n\t\t\t\t\t\t\tconst data = geometryAttribute.data;\r\n\t\t\t\t\t\t\tconst stride = data.stride;\r\n\t\t\t\t\t\t\tconst offset = geometryAttribute.offset;\r\n\r\n\t\t\t\t\t\t\tif (data && data.isInstancedInterleavedBuffer) {\r\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute, data.meshPerAttribute);\r\n\r\n\t\t\t\t\t\t\t\tif (geometry._maxInstanceCount === undefined) {\r\n\t\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tenableAttribute(programAttribute);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n\t\t\t\t\t\t\tvertexAttribPointer(programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (geometryAttribute.isInstancedBufferAttribute) {\r\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute, geometryAttribute.meshPerAttribute);\r\n\r\n\t\t\t\t\t\t\t\tif (geometry._maxInstanceCount === undefined) {\r\n\t\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tenableAttribute(programAttribute);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n\t\t\t\t\t\t\tvertexAttribPointer(programAttribute, size, type, normalized, 0, 0);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (name === 'instanceMatrix') {\r\n\t\t\t\t\t\tconst attribute = attributes.get(object.instanceMatrix); // TODO Attribute may not be available on context restore\r\n\r\n\t\t\t\t\t\tif (attribute === undefined) continue;\r\n\t\t\t\t\t\tconst buffer = attribute.buffer;\r\n\t\t\t\t\t\tconst type = attribute.type;\r\n\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute + 0, 1);\r\n\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute + 1, 1);\r\n\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute + 2, 1);\r\n\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute + 3, 1);\r\n\t\t\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n\t\t\t\t\t\tgl.vertexAttribPointer(programAttribute + 0, 4, type, false, 64, 0);\r\n\t\t\t\t\t\tgl.vertexAttribPointer(programAttribute + 1, 4, type, false, 64, 16);\r\n\t\t\t\t\t\tgl.vertexAttribPointer(programAttribute + 2, 4, type, false, 64, 32);\r\n\t\t\t\t\t\tgl.vertexAttribPointer(programAttribute + 3, 4, type, false, 64, 48);\r\n\t\t\t\t\t} else if (name === 'instanceColor') {\r\n\t\t\t\t\t\tconst attribute = attributes.get(object.instanceColor); // TODO Attribute may not be available on context restore\r\n\r\n\t\t\t\t\t\tif (attribute === undefined) continue;\r\n\t\t\t\t\t\tconst buffer = attribute.buffer;\r\n\t\t\t\t\t\tconst type = attribute.type;\r\n\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute, 1);\r\n\t\t\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n\t\t\t\t\t\tgl.vertexAttribPointer(programAttribute, 3, type, false, 12, 0);\r\n\t\t\t\t\t} else if (materialDefaultAttributeValues !== undefined) {\r\n\t\t\t\t\t\tconst value = materialDefaultAttributeValues[name];\r\n\r\n\t\t\t\t\t\tif (value !== undefined) {\r\n\t\t\t\t\t\t\tswitch (value.length) {\r\n\t\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib2fv(programAttribute, value);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib3fv(programAttribute, value);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib4fv(programAttribute, value);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib1fv(programAttribute, value);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdisableUnusedAttributes();\r\n\t\t}\r\n\r\n\t\tfunction dispose() {\r\n\t\t\treset();\r\n\r\n\t\t\tfor (const geometryId in bindingStates) {\r\n\t\t\t\tconst programMap = bindingStates[geometryId];\r\n\r\n\t\t\t\tfor (const programId in programMap) {\r\n\t\t\t\t\tconst stateMap = programMap[programId];\r\n\r\n\t\t\t\t\tfor (const wireframe in stateMap) {\r\n\t\t\t\t\t\tdeleteVertexArrayObject(stateMap[wireframe].object);\r\n\t\t\t\t\t\tdelete stateMap[wireframe];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdelete programMap[programId];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdelete bindingStates[geometryId];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction releaseStatesOfGeometry(geometry) {\r\n\t\t\tif (bindingStates[geometry.id] === undefined) return;\r\n\t\t\tconst programMap = bindingStates[geometry.id];\r\n\r\n\t\t\tfor (const programId in programMap) {\r\n\t\t\t\tconst stateMap = programMap[programId];\r\n\r\n\t\t\t\tfor (const wireframe in stateMap) {\r\n\t\t\t\t\tdeleteVertexArrayObject(stateMap[wireframe].object);\r\n\t\t\t\t\tdelete stateMap[wireframe];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdelete programMap[programId];\r\n\t\t\t}\r\n\r\n\t\t\tdelete bindingStates[geometry.id];\r\n\t\t}\r\n\r\n\t\tfunction releaseStatesOfProgram(program) {\r\n\t\t\tfor (const geometryId in bindingStates) {\r\n\t\t\t\tconst programMap = bindingStates[geometryId];\r\n\t\t\t\tif (programMap[program.id] === undefined) continue;\r\n\t\t\t\tconst stateMap = programMap[program.id];\r\n\r\n\t\t\t\tfor (const wireframe in stateMap) {\r\n\t\t\t\t\tdeleteVertexArrayObject(stateMap[wireframe].object);\r\n\t\t\t\t\tdelete stateMap[wireframe];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdelete programMap[program.id];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction reset() {\r\n\t\t\tresetDefaultState();\r\n\t\t\tif (currentState === defaultState) return;\r\n\t\t\tcurrentState = defaultState;\r\n\t\t\tbindVertexArrayObject(currentState.object);\r\n\t\t} // for backward-compatilibity\r\n\r\n\r\n\t\tfunction resetDefaultState() {\r\n\t\t\tdefaultState.geometry = null;\r\n\t\t\tdefaultState.program = null;\r\n\t\t\tdefaultState.wireframe = false;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tsetup: setup,\r\n\t\t\treset: reset,\r\n\t\t\tresetDefaultState: resetDefaultState,\r\n\t\t\tdispose: dispose,\r\n\t\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\r\n\t\t\treleaseStatesOfProgram: releaseStatesOfProgram,\r\n\t\t\tinitAttributes: initAttributes,\r\n\t\t\tenableAttribute: enableAttribute,\r\n\t\t\tdisableUnusedAttributes: disableUnusedAttributes\r\n\t\t};\r\n\t}\r\n\r\n\tfunction WebGLBufferRenderer(gl, extensions, info, capabilities) {\r\n\t\tconst isWebGL2 = capabilities.isWebGL2;\r\n\t\tlet mode;\r\n\r\n\t\tfunction setMode(value) {\r\n\t\t\tmode = value;\r\n\t\t}\r\n\r\n\t\tfunction render(start, count) {\r\n\t\t\tgl.drawArrays(mode, start, count);\r\n\t\t\tinfo.update(count, mode, 1);\r\n\t\t}\r\n\r\n\t\tfunction renderInstances(start, count, primcount) {\r\n\t\t\tif (primcount === 0) return;\r\n\t\t\tlet extension, methodName;\r\n\r\n\t\t\tif (isWebGL2) {\r\n\t\t\t\textension = gl;\r\n\t\t\t\tmethodName = 'drawArraysInstanced';\r\n\t\t\t} else {\r\n\t\t\t\textension = extensions.get('ANGLE_instanced_arrays');\r\n\t\t\t\tmethodName = 'drawArraysInstancedANGLE';\r\n\r\n\t\t\t\tif (extension === null) {\r\n\t\t\t\t\tconsole.error('THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\textension[methodName](mode, start, count, primcount);\r\n\t\t\tinfo.update(count, mode, primcount);\r\n\t\t} //\r\n\r\n\r\n\t\tthis.setMode = setMode;\r\n\t\tthis.render = render;\r\n\t\tthis.renderInstances = renderInstances;\r\n\t}\r\n\r\n\tfunction WebGLCapabilities(gl, extensions, parameters) {\r\n\t\tlet maxAnisotropy;\r\n\r\n\t\tfunction getMaxAnisotropy() {\r\n\t\t\tif (maxAnisotropy !== undefined) return maxAnisotropy;\r\n\r\n\t\t\tif (extensions.has('EXT_texture_filter_anisotropic') === true) {\r\n\t\t\t\tconst extension = extensions.get('EXT_texture_filter_anisotropic');\r\n\t\t\t\tmaxAnisotropy = gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\r\n\t\t\t} else {\r\n\t\t\t\tmaxAnisotropy = 0;\r\n\t\t\t}\r\n\r\n\t\t\treturn maxAnisotropy;\r\n\t\t}\r\n\r\n\t\tfunction getMaxPrecision(precision) {\r\n\t\t\tif (precision === 'highp') {\r\n\t\t\t\tif (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).precision > 0) {\r\n\t\t\t\t\treturn 'highp';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tprecision = 'mediump';\r\n\t\t\t}\r\n\r\n\t\t\tif (precision === 'mediump') {\r\n\t\t\t\tif (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).precision > 0) {\r\n\t\t\t\t\treturn 'mediump';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn 'lowp';\r\n\t\t}\r\n\t\t/* eslint-disable no-undef */\r\n\r\n\r\n\t\tconst isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext || typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext;\r\n\t\t/* eslint-enable no-undef */\r\n\r\n\t\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\r\n\t\tconst maxPrecision = getMaxPrecision(precision);\r\n\r\n\t\tif (maxPrecision !== precision) {\r\n\t\t\tconsole.warn('THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.');\r\n\t\t\tprecision = maxPrecision;\r\n\t\t}\r\n\r\n\t\tconst drawBuffers = isWebGL2 || extensions.has('WEBGL_draw_buffers');\r\n\t\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\r\n\t\tconst maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\r\n\t\tconst maxVertexTextures = gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS);\r\n\t\tconst maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\r\n\t\tconst maxCubemapSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\r\n\t\tconst maxAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\r\n\t\tconst maxVertexUniforms = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\r\n\t\tconst maxVaryings = gl.getParameter(gl.MAX_VARYING_VECTORS);\r\n\t\tconst maxFragmentUniforms = gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS);\r\n\t\tconst vertexTextures = maxVertexTextures > 0;\r\n\t\tconst floatFragmentTextures = isWebGL2 || extensions.has('OES_texture_float');\r\n\t\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\r\n\t\tconst maxSamples = isWebGL2 ? gl.getParameter(gl.MAX_SAMPLES) : 0;\r\n\t\treturn {\r\n\t\t\tisWebGL2: isWebGL2,\r\n\t\t\tdrawBuffers: drawBuffers,\r\n\t\t\tgetMaxAnisotropy: getMaxAnisotropy,\r\n\t\t\tgetMaxPrecision: getMaxPrecision,\r\n\t\t\tprecision: precision,\r\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\r\n\t\t\tmaxTextures: maxTextures,\r\n\t\t\tmaxVertexTextures: maxVertexTextures,\r\n\t\t\tmaxTextureSize: maxTextureSize,\r\n\t\t\tmaxCubemapSize: maxCubemapSize,\r\n\t\t\tmaxAttributes: maxAttributes,\r\n\t\t\tmaxVertexUniforms: maxVertexUniforms,\r\n\t\t\tmaxVaryings: maxVaryings,\r\n\t\t\tmaxFragmentUniforms: maxFragmentUniforms,\r\n\t\t\tvertexTextures: vertexTextures,\r\n\t\t\tfloatFragmentTextures: floatFragmentTextures,\r\n\t\t\tfloatVertexTextures: floatVertexTextures,\r\n\t\t\tmaxSamples: maxSamples\r\n\t\t};\r\n\t}\r\n\r\n\tfunction WebGLClipping(properties) {\r\n\t\tconst scope = this;\r\n\t\tlet globalState = null,\r\n\t\t\t\tnumGlobalPlanes = 0,\r\n\t\t\t\tlocalClippingEnabled = false,\r\n\t\t\t\trenderingShadows = false;\r\n\t\tconst plane = new Plane(),\r\n\t\t\t\t\tviewNormalMatrix = new Matrix3(),\r\n\t\t\t\t\tuniform = {\r\n\t\t\tvalue: null,\r\n\t\t\tneedsUpdate: false\r\n\t\t};\r\n\t\tthis.uniform = uniform;\r\n\t\tthis.numPlanes = 0;\r\n\t\tthis.numIntersection = 0;\r\n\r\n\t\tthis.init = function (planes, enableLocalClipping, camera) {\r\n\t\t\tconst enabled = planes.length !== 0 || enableLocalClipping || // enable state of previous frame - the clipping code has to\r\n\t\t\t// run another frame in order to reset the state:\r\n\t\t\tnumGlobalPlanes !== 0 || localClippingEnabled;\r\n\t\t\tlocalClippingEnabled = enableLocalClipping;\r\n\t\t\tglobalState = projectPlanes(planes, camera, 0);\r\n\t\t\tnumGlobalPlanes = planes.length;\r\n\t\t\treturn enabled;\r\n\t\t};\r\n\r\n\t\tthis.beginShadows = function () {\r\n\t\t\trenderingShadows = true;\r\n\t\t\tprojectPlanes(null);\r\n\t\t};\r\n\r\n\t\tthis.endShadows = function () {\r\n\t\t\trenderingShadows = false;\r\n\t\t\tresetGlobalState();\r\n\t\t};\r\n\r\n\t\tthis.setState = function (material, camera, useCache) {\r\n\t\t\tconst planes = material.clippingPlanes,\r\n\t\t\t\t\t\tclipIntersection = material.clipIntersection,\r\n\t\t\t\t\t\tclipShadows = material.clipShadows;\r\n\t\t\tconst materialProperties = properties.get(material);\r\n\r\n\t\t\tif (!localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && !clipShadows) {\r\n\t\t\t\t// there's no local clipping\r\n\t\t\t\tif (renderingShadows) {\r\n\t\t\t\t\t// there's no global clipping\r\n\t\t\t\t\tprojectPlanes(null);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresetGlobalState();\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\r\n\t\t\t\t\t\t\tlGlobal = nGlobal * 4;\r\n\t\t\t\tlet dstArray = materialProperties.clippingState || null;\r\n\t\t\t\tuniform.value = dstArray; // ensure unique state\r\n\r\n\t\t\t\tdstArray = projectPlanes(planes, camera, lGlobal, useCache);\r\n\r\n\t\t\t\tfor (let i = 0; i !== lGlobal; ++i) {\r\n\t\t\t\t\tdstArray[i] = globalState[i];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmaterialProperties.clippingState = dstArray;\r\n\t\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\r\n\t\t\t\tthis.numPlanes += nGlobal;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfunction resetGlobalState() {\r\n\t\t\tif (uniform.value !== globalState) {\r\n\t\t\t\tuniform.value = globalState;\r\n\t\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\r\n\t\t\t}\r\n\r\n\t\t\tscope.numPlanes = numGlobalPlanes;\r\n\t\t\tscope.numIntersection = 0;\r\n\t\t}\r\n\r\n\t\tfunction projectPlanes(planes, camera, dstOffset, skipTransform) {\r\n\t\t\tconst nPlanes = planes !== null ? planes.length : 0;\r\n\t\t\tlet dstArray = null;\r\n\r\n\t\t\tif (nPlanes !== 0) {\r\n\t\t\t\tdstArray = uniform.value;\r\n\r\n\t\t\t\tif (skipTransform !== true || dstArray === null) {\r\n\t\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\r\n\t\t\t\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\r\n\t\t\t\t\tviewNormalMatrix.getNormalMatrix(viewMatrix);\r\n\r\n\t\t\t\t\tif (dstArray === null || dstArray.length < flatSize) {\r\n\t\t\t\t\t\tdstArray = new Float32Array(flatSize);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor (let i = 0, i4 = dstOffset; i !== nPlanes; ++i, i4 += 4) {\r\n\t\t\t\t\t\tplane.copy(planes[i]).applyMatrix4(viewMatrix, viewNormalMatrix);\r\n\t\t\t\t\t\tplane.normal.toArray(dstArray, i4);\r\n\t\t\t\t\t\tdstArray[i4 + 3] = plane.constant;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tuniform.value = dstArray;\r\n\t\t\t\tuniform.needsUpdate = true;\r\n\t\t\t}\r\n\r\n\t\t\tscope.numPlanes = nPlanes;\r\n\t\t\tscope.numIntersection = 0;\r\n\t\t\treturn dstArray;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction WebGLCubeMaps(renderer) {\r\n\t\tlet cubemaps = new WeakMap();\r\n\r\n\t\tfunction mapTextureMapping(texture, mapping) {\r\n\t\t\tif (mapping === EquirectangularReflectionMapping) {\r\n\t\t\t\ttexture.mapping = CubeReflectionMapping;\r\n\t\t\t} else if (mapping === EquirectangularRefractionMapping) {\r\n\t\t\t\ttexture.mapping = CubeRefractionMapping;\r\n\t\t\t}\r\n\r\n\t\t\treturn texture;\r\n\t\t}\r\n\r\n\t\tfunction get(texture) {\r\n\t\t\tif (texture && texture.isTexture && texture.isRenderTargetTexture === false) {\r\n\t\t\t\tconst mapping = texture.mapping;\r\n\r\n\t\t\t\tif (mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping) {\r\n\t\t\t\t\tif (cubemaps.has(texture)) {\r\n\t\t\t\t\t\tconst cubemap = cubemaps.get(texture).texture;\r\n\t\t\t\t\t\treturn mapTextureMapping(cubemap, texture.mapping);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst image = texture.image;\r\n\r\n\t\t\t\t\t\tif (image && image.height > 0) {\r\n\t\t\t\t\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\r\n\t\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget(image.height / 2);\r\n\t\t\t\t\t\t\trenderTarget.fromEquirectangularTexture(renderer, texture);\r\n\t\t\t\t\t\t\tcubemaps.set(texture, renderTarget);\r\n\t\t\t\t\t\t\trenderer.setRenderTarget(currentRenderTarget);\r\n\t\t\t\t\t\t\ttexture.addEventListener('dispose', onTextureDispose);\r\n\t\t\t\t\t\t\treturn mapTextureMapping(renderTarget.texture, texture.mapping);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\r\n\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn texture;\r\n\t\t}\r\n\r\n\t\tfunction onTextureDispose(event) {\r\n\t\t\tconst texture = event.target;\r\n\t\t\ttexture.removeEventListener('dispose', onTextureDispose);\r\n\t\t\tconst cubemap = cubemaps.get(texture);\r\n\r\n\t\t\tif (cubemap !== undefined) {\r\n\t\t\t\tcubemaps.delete(texture);\r\n\t\t\t\tcubemap.dispose();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction dispose() {\r\n\t\t\tcubemaps = new WeakMap();\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tget: get,\r\n\t\t\tdispose: dispose\r\n\t\t};\r\n\t}\r\n\r\n\tclass OrthographicCamera extends Camera {\r\n\t\tconstructor(left = -1, right = 1, top = 1, bottom = -1, near = 0.1, far = 2000) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'OrthographicCamera';\r\n\t\t\tthis.zoom = 1;\r\n\t\t\tthis.view = null;\r\n\t\t\tthis.left = left;\r\n\t\t\tthis.right = right;\r\n\t\t\tthis.top = top;\r\n\t\t\tthis.bottom = bottom;\r\n\t\t\tthis.near = near;\r\n\t\t\tthis.far = far;\r\n\t\t\tthis.updateProjectionMatrix();\r\n\t\t}\r\n\r\n\t\tcopy(source, recursive) {\r\n\t\t\tsuper.copy(source, recursive);\r\n\t\t\tthis.left = source.left;\r\n\t\t\tthis.right = source.right;\r\n\t\t\tthis.top = source.top;\r\n\t\t\tthis.bottom = source.bottom;\r\n\t\t\tthis.near = source.near;\r\n\t\t\tthis.far = source.far;\r\n\t\t\tthis.zoom = source.zoom;\r\n\t\t\tthis.view = source.view === null ? null : Object.assign({}, source.view);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetViewOffset(fullWidth, fullHeight, x, y, width, height) {\r\n\t\t\tif (this.view === null) {\r\n\t\t\t\tthis.view = {\r\n\t\t\t\t\tenabled: true,\r\n\t\t\t\t\tfullWidth: 1,\r\n\t\t\t\t\tfullHeight: 1,\r\n\t\t\t\t\toffsetX: 0,\r\n\t\t\t\t\toffsetY: 0,\r\n\t\t\t\t\twidth: 1,\r\n\t\t\t\t\theight: 1\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tthis.view.enabled = true;\r\n\t\t\tthis.view.fullWidth = fullWidth;\r\n\t\t\tthis.view.fullHeight = fullHeight;\r\n\t\t\tthis.view.offsetX = x;\r\n\t\t\tthis.view.offsetY = y;\r\n\t\t\tthis.view.width = width;\r\n\t\t\tthis.view.height = height;\r\n\t\t\tthis.updateProjectionMatrix();\r\n\t\t}\r\n\r\n\t\tclearViewOffset() {\r\n\t\t\tif (this.view !== null) {\r\n\t\t\t\tthis.view.enabled = false;\r\n\t\t\t}\r\n\r\n\t\t\tthis.updateProjectionMatrix();\r\n\t\t}\r\n\r\n\t\tupdateProjectionMatrix() {\r\n\t\t\tconst dx = (this.right - this.left) / (2 * this.zoom);\r\n\t\t\tconst dy = (this.top - this.bottom) / (2 * this.zoom);\r\n\t\t\tconst cx = (this.right + this.left) / 2;\r\n\t\t\tconst cy = (this.top + this.bottom) / 2;\r\n\t\t\tlet left = cx - dx;\r\n\t\t\tlet right = cx + dx;\r\n\t\t\tlet top = cy + dy;\r\n\t\t\tlet bottom = cy - dy;\r\n\r\n\t\t\tif (this.view !== null && this.view.enabled) {\r\n\t\t\t\tconst scaleW = (this.right - this.left) / this.view.fullWidth / this.zoom;\r\n\t\t\t\tconst scaleH = (this.top - this.bottom) / this.view.fullHeight / this.zoom;\r\n\t\t\t\tleft += scaleW * this.view.offsetX;\r\n\t\t\t\tright = left + scaleW * this.view.width;\r\n\t\t\t\ttop -= scaleH * this.view.offsetY;\r\n\t\t\t\tbottom = top - scaleH * this.view.height;\r\n\t\t\t}\r\n\r\n\t\t\tthis.projectionMatrix.makeOrthographic(left, right, top, bottom, this.near, this.far);\r\n\t\t\tthis.projectionMatrixInverse.copy(this.projectionMatrix).invert();\r\n\t\t}\r\n\r\n\t\ttoJSON(meta) {\r\n\t\t\tconst data = super.toJSON(meta);\r\n\t\t\tdata.object.zoom = this.zoom;\r\n\t\t\tdata.object.left = this.left;\r\n\t\t\tdata.object.right = this.right;\r\n\t\t\tdata.object.top = this.top;\r\n\t\t\tdata.object.bottom = this.bottom;\r\n\t\t\tdata.object.near = this.near;\r\n\t\t\tdata.object.far = this.far;\r\n\t\t\tif (this.view !== null) data.object.view = Object.assign({}, this.view);\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tOrthographicCamera.prototype.isOrthographicCamera = true;\r\n\r\n\tclass RawShaderMaterial extends ShaderMaterial {\r\n\t\tconstructor(parameters) {\r\n\t\t\tsuper(parameters);\r\n\t\t\tthis.type = 'RawShaderMaterial';\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tRawShaderMaterial.prototype.isRawShaderMaterial = true;\r\n\r\n\tconst LOD_MIN = 4;\r\n\tconst LOD_MAX = 8;\r\n\tconst SIZE_MAX = Math.pow(2, LOD_MAX); // The standard deviations (radians) associated with the extra mips. These are\r\n\t// chosen to approximate a Trowbridge-Reitz distribution function times the\r\n\t// geometric shadowing function. These sigma values squared must match the\r\n\t// variance #defines in cube_uv_reflection_fragment.glsl.js.\r\n\r\n\tconst EXTRA_LOD_SIGMA = [0.125, 0.215, 0.35, 0.446, 0.526, 0.582];\r\n\tconst TOTAL_LODS = LOD_MAX - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length; // The maximum length of the blur for loop. Smaller sigmas will use fewer\r\n\t// samples and exit early, but not recompile the shader.\r\n\r\n\tconst MAX_SAMPLES = 20;\r\n\tconst ENCODINGS = {\r\n\t\t[LinearEncoding]: 0,\r\n\t\t[sRGBEncoding]: 1,\r\n\t\t[RGBEEncoding]: 2,\r\n\t\t[RGBM7Encoding]: 3,\r\n\t\t[RGBM16Encoding]: 4,\r\n\t\t[RGBDEncoding]: 5,\r\n\t\t[GammaEncoding]: 6\r\n\t};\r\n\tconst backgroundMaterial = new MeshBasicMaterial({\r\n\t\tside: BackSide,\r\n\t\tdepthWrite: false,\r\n\t\tdepthTest: false\r\n\t});\r\n\tconst backgroundBox = new Mesh(new BoxGeometry(), backgroundMaterial);\r\n\r\n\tconst _flatCamera = /*@__PURE__*/new OrthographicCamera();\r\n\r\n\tconst {\r\n\t\t_lodPlanes,\r\n\t\t_sizeLods,\r\n\t\t_sigmas\r\n\t} = /*@__PURE__*/_createPlanes();\r\n\r\n\tconst _clearColor = /*@__PURE__*/new Color();\r\n\r\n\tlet _oldTarget = null; // Golden Ratio\r\n\r\n\tconst PHI = (1 + Math.sqrt(5)) / 2;\r\n\tconst INV_PHI = 1 / PHI; // Vertices of a dodecahedron (except the opposites, which represent the\r\n\t// same axis), used as axis directions evenly spread on a sphere.\r\n\r\n\tconst _axisDirections = [/*@__PURE__*/new Vector3(1, 1, 1), /*@__PURE__*/new Vector3(-1, 1, 1), /*@__PURE__*/new Vector3(1, 1, -1), /*@__PURE__*/new Vector3(-1, 1, -1), /*@__PURE__*/new Vector3(0, PHI, INV_PHI), /*@__PURE__*/new Vector3(0, PHI, -INV_PHI), /*@__PURE__*/new Vector3(INV_PHI, 0, PHI), /*@__PURE__*/new Vector3(-INV_PHI, 0, PHI), /*@__PURE__*/new Vector3(PHI, INV_PHI, 0), /*@__PURE__*/new Vector3(-PHI, INV_PHI, 0)];\r\n\t/**\r\n\t * This class generates a Prefiltered, Mipmapped Radiance Environment Map\r\n\t * (PMREM) from a cubeMap environment texture. This allows different levels of\r\n\t * blur to be quickly accessed based on material roughness. It is packed into a\r\n\t * special CubeUV format that allows us to perform custom interpolation so that\r\n\t * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\r\n\t * chain, it only goes down to the LOD_MIN level (above), and then creates extra\r\n\t * even more filtered 'mips' at the same LOD_MIN resolution, associated with\r\n\t * higher roughness levels. In this way we maintain resolution to smoothly\r\n\t * interpolate diffuse lighting while limiting sampling computation.\r\n\t *\r\n\t * Paper: Fast, Accurate Image-Based Lighting\r\n\t * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\r\n\t*/\r\n\r\n\tfunction convertLinearToRGBE(color) {\r\n\t\tconst maxComponent = Math.max(color.r, color.g, color.b);\r\n\t\tconst fExp = Math.min(Math.max(Math.ceil(Math.log2(maxComponent)), -128.0), 127.0);\r\n\t\tcolor.multiplyScalar(Math.pow(2.0, -fExp));\r\n\t\tconst alpha = (fExp + 128.0) / 255.0;\r\n\t\treturn alpha;\r\n\t}\r\n\r\n\tclass PMREMGenerator {\r\n\t\tconstructor(renderer) {\r\n\t\t\tthis._renderer = renderer;\r\n\t\t\tthis._pingPongRenderTarget = null;\r\n\t\t\tthis._blurMaterial = _getBlurShader(MAX_SAMPLES);\r\n\t\t\tthis._equirectShader = null;\r\n\t\t\tthis._cubemapShader = null;\r\n\r\n\t\t\tthis._compileMaterial(this._blurMaterial);\r\n\t\t}\r\n\t\t/**\r\n\t\t * Generates a PMREM from a supplied Scene, which can be faster than using an\r\n\t\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\r\n\t\t * in radians to be applied to the scene before PMREM generation. Optional near\r\n\t\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\r\n\t\t * is placed at the origin).\r\n\t\t */\r\n\r\n\r\n\t\tfromScene(scene, sigma = 0, near = 0.1, far = 100) {\r\n\t\t\t_oldTarget = this._renderer.getRenderTarget();\r\n\r\n\t\t\tconst cubeUVRenderTarget = this._allocateTargets();\r\n\r\n\t\t\tthis._sceneToCubeUV(scene, near, far, cubeUVRenderTarget);\r\n\r\n\t\t\tif (sigma > 0) {\r\n\t\t\t\tthis._blur(cubeUVRenderTarget, 0, 0, sigma);\r\n\t\t\t}\r\n\r\n\t\t\tthis._applyPMREM(cubeUVRenderTarget);\r\n\r\n\t\t\tthis._cleanup(cubeUVRenderTarget);\r\n\r\n\t\t\treturn cubeUVRenderTarget;\r\n\t\t}\r\n\t\t/**\r\n\t\t * Generates a PMREM from an equirectangular texture, which can be either LDR\r\n\t\t * (RGBFormat) or HDR (RGBEFormat). The ideal input image size is 1k (1024 x 512),\r\n\t\t * as this matches best with the 256 x 256 cubemap output.\r\n\t\t */\r\n\r\n\r\n\t\tfromEquirectangular(equirectangular) {\r\n\t\t\treturn this._fromTexture(equirectangular);\r\n\t\t}\r\n\t\t/**\r\n\t\t * Generates a PMREM from an cubemap texture, which can be either LDR\r\n\t\t * (RGBFormat) or HDR (RGBEFormat). The ideal input cube size is 256 x 256,\r\n\t\t * as this matches best with the 256 x 256 cubemap output.\r\n\t\t */\r\n\r\n\r\n\t\tfromCubemap(cubemap) {\r\n\t\t\treturn this._fromTexture(cubemap);\r\n\t\t}\r\n\t\t/**\r\n\t\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\r\n\t\t * your texture's network fetch for increased concurrency.\r\n\t\t */\r\n\r\n\r\n\t\tcompileCubemapShader() {\r\n\t\t\tif (this._cubemapShader === null) {\r\n\t\t\t\tthis._cubemapShader = _getCubemapShader();\r\n\r\n\t\t\t\tthis._compileMaterial(this._cubemapShader);\r\n\t\t\t}\r\n\t\t}\r\n\t\t/**\r\n\t\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\r\n\t\t * your texture's network fetch for increased concurrency.\r\n\t\t */\r\n\r\n\r\n\t\tcompileEquirectangularShader() {\r\n\t\t\tif (this._equirectShader === null) {\r\n\t\t\t\tthis._equirectShader = _getEquirectShader();\r\n\r\n\t\t\t\tthis._compileMaterial(this._equirectShader);\r\n\t\t\t}\r\n\t\t}\r\n\t\t/**\r\n\t\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\r\n\t\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\r\n\t\t * one of them will cause any others to also become unusable.\r\n\t\t */\r\n\r\n\r\n\t\tdispose() {\r\n\t\t\tthis._blurMaterial.dispose();\r\n\r\n\t\t\tif (this._cubemapShader !== null) this._cubemapShader.dispose();\r\n\t\t\tif (this._equirectShader !== null) this._equirectShader.dispose();\r\n\r\n\t\t\tfor (let i = 0; i < _lodPlanes.length; i++) {\r\n\t\t\t\t_lodPlanes[i].dispose();\r\n\t\t\t}\r\n\t\t} // private interface\r\n\r\n\r\n\t\t_cleanup(outputTarget) {\r\n\t\t\tthis._pingPongRenderTarget.dispose();\r\n\r\n\t\t\tthis._renderer.setRenderTarget(_oldTarget);\r\n\r\n\t\t\toutputTarget.scissorTest = false;\r\n\r\n\t\t\t_setViewport(outputTarget, 0, 0, outputTarget.width, outputTarget.height);\r\n\t\t}\r\n\r\n\t\t_fromTexture(texture) {\r\n\t\t\t_oldTarget = this._renderer.getRenderTarget();\r\n\r\n\t\t\tconst cubeUVRenderTarget = this._allocateTargets(texture);\r\n\r\n\t\t\tthis._textureToCubeUV(texture, cubeUVRenderTarget);\r\n\r\n\t\t\tthis._applyPMREM(cubeUVRenderTarget);\r\n\r\n\t\t\tthis._cleanup(cubeUVRenderTarget);\r\n\r\n\t\t\treturn cubeUVRenderTarget;\r\n\t\t}\r\n\r\n\t\t_allocateTargets(texture) {\r\n\t\t\t// warning: null texture is valid\r\n\t\t\tconst params = {\r\n\t\t\t\tmagFilter: NearestFilter,\r\n\t\t\t\tminFilter: NearestFilter,\r\n\t\t\t\tgenerateMipmaps: false,\r\n\t\t\t\ttype: UnsignedByteType,\r\n\t\t\t\tformat: RGBEFormat,\r\n\t\t\t\tencoding: _isLDR(texture) ? texture.encoding : RGBEEncoding,\r\n\t\t\t\tdepthBuffer: false\r\n\t\t\t};\r\n\r\n\t\t\tconst cubeUVRenderTarget = _createRenderTarget(params);\r\n\r\n\t\t\tcubeUVRenderTarget.depthBuffer = texture ? false : true;\r\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget(params);\r\n\t\t\treturn cubeUVRenderTarget;\r\n\t\t}\r\n\r\n\t\t_compileMaterial(material) {\r\n\t\t\tconst tmpMesh = new Mesh(_lodPlanes[0], material);\r\n\r\n\t\t\tthis._renderer.compile(tmpMesh, _flatCamera);\r\n\t\t}\r\n\r\n\t\t_sceneToCubeUV(scene, near, far, cubeUVRenderTarget) {\r\n\t\t\tconst fov = 90;\r\n\t\t\tconst aspect = 1;\r\n\t\t\tconst cubeCamera = new PerspectiveCamera(fov, aspect, near, far);\r\n\t\t\tconst upSign = [1, -1, 1, 1, 1, 1];\r\n\t\t\tconst forwardSign = [1, 1, 1, -1, -1, -1];\r\n\t\t\tconst renderer = this._renderer;\r\n\t\t\tconst originalAutoClear = renderer.autoClear;\r\n\t\t\tconst outputEncoding = renderer.outputEncoding;\r\n\t\t\tconst toneMapping = renderer.toneMapping;\r\n\t\t\trenderer.getClearColor(_clearColor);\r\n\t\t\trenderer.toneMapping = NoToneMapping;\r\n\t\t\trenderer.outputEncoding = LinearEncoding;\r\n\t\t\trenderer.autoClear = false;\r\n\t\t\tlet useSolidColor = false;\r\n\t\t\tconst background = scene.background;\r\n\r\n\t\t\tif (background) {\r\n\t\t\t\tif (background.isColor) {\r\n\t\t\t\t\tbackgroundMaterial.color.copy(background).convertSRGBToLinear();\r\n\t\t\t\t\tscene.background = null;\r\n\t\t\t\t\tconst alpha = convertLinearToRGBE(backgroundMaterial.color);\r\n\t\t\t\t\tbackgroundMaterial.opacity = alpha;\r\n\t\t\t\t\tuseSolidColor = true;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tbackgroundMaterial.color.copy(_clearColor).convertSRGBToLinear();\r\n\t\t\t\tconst alpha = convertLinearToRGBE(backgroundMaterial.color);\r\n\t\t\t\tbackgroundMaterial.opacity = alpha;\r\n\t\t\t\tuseSolidColor = true;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = 0; i < 6; i++) {\r\n\t\t\t\tconst col = i % 3;\r\n\r\n\t\t\t\tif (col == 0) {\r\n\t\t\t\t\tcubeCamera.up.set(0, upSign[i], 0);\r\n\t\t\t\t\tcubeCamera.lookAt(forwardSign[i], 0, 0);\r\n\t\t\t\t} else if (col == 1) {\r\n\t\t\t\t\tcubeCamera.up.set(0, 0, upSign[i]);\r\n\t\t\t\t\tcubeCamera.lookAt(0, forwardSign[i], 0);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcubeCamera.up.set(0, upSign[i], 0);\r\n\t\t\t\t\tcubeCamera.lookAt(0, 0, forwardSign[i]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_setViewport(cubeUVRenderTarget, col * SIZE_MAX, i > 2 ? SIZE_MAX : 0, SIZE_MAX, SIZE_MAX);\r\n\r\n\t\t\t\trenderer.setRenderTarget(cubeUVRenderTarget);\r\n\r\n\t\t\t\tif (useSolidColor) {\r\n\t\t\t\t\trenderer.render(backgroundBox, cubeCamera);\r\n\t\t\t\t}\r\n\r\n\t\t\t\trenderer.render(scene, cubeCamera);\r\n\t\t\t}\r\n\r\n\t\t\trenderer.toneMapping = toneMapping;\r\n\t\t\trenderer.outputEncoding = outputEncoding;\r\n\t\t\trenderer.autoClear = originalAutoClear;\r\n\t\t}\r\n\r\n\t\t_textureToCubeUV(texture, cubeUVRenderTarget) {\r\n\t\t\tconst renderer = this._renderer;\r\n\r\n\t\t\tif (texture.isCubeTexture) {\r\n\t\t\t\tif (this._cubemapShader == null) {\r\n\t\t\t\t\tthis._cubemapShader = _getCubemapShader();\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (this._equirectShader == null) {\r\n\t\t\t\t\tthis._equirectShader = _getEquirectShader();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst material = texture.isCubeTexture ? this._cubemapShader : this._equirectShader;\r\n\t\t\tconst mesh = new Mesh(_lodPlanes[0], material);\r\n\t\t\tconst uniforms = material.uniforms;\r\n\t\t\tuniforms['envMap'].value = texture;\r\n\r\n\t\t\tif (!texture.isCubeTexture) {\r\n\t\t\t\tuniforms['texelSize'].value.set(1.0 / texture.image.width, 1.0 / texture.image.height);\r\n\t\t\t}\r\n\r\n\t\t\tuniforms['inputEncoding'].value = ENCODINGS[texture.encoding];\r\n\t\t\tuniforms['outputEncoding'].value = ENCODINGS[cubeUVRenderTarget.texture.encoding];\r\n\r\n\t\t\t_setViewport(cubeUVRenderTarget, 0, 0, 3 * SIZE_MAX, 2 * SIZE_MAX);\r\n\r\n\t\t\trenderer.setRenderTarget(cubeUVRenderTarget);\r\n\t\t\trenderer.render(mesh, _flatCamera);\r\n\t\t}\r\n\r\n\t\t_applyPMREM(cubeUVRenderTarget) {\r\n\t\t\tconst renderer = this._renderer;\r\n\t\t\tconst autoClear = renderer.autoClear;\r\n\t\t\trenderer.autoClear = false;\r\n\r\n\t\t\tfor (let i = 1; i < TOTAL_LODS; i++) {\r\n\t\t\t\tconst sigma = Math.sqrt(_sigmas[i] * _sigmas[i] - _sigmas[i - 1] * _sigmas[i - 1]);\r\n\t\t\t\tconst poleAxis = _axisDirections[(i - 1) % _axisDirections.length];\r\n\r\n\t\t\t\tthis._blur(cubeUVRenderTarget, i - 1, i, sigma, poleAxis);\r\n\t\t\t}\r\n\r\n\t\t\trenderer.autoClear = autoClear;\r\n\t\t}\r\n\t\t/**\r\n\t\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\r\n\t\t * vertically and horizontally, but this breaks down on a cube. Here we apply\r\n\t\t * the blur latitudinally (around the poles), and then longitudinally (towards\r\n\t\t * the poles) to approximate the orthogonally-separable blur. It is least\r\n\t\t * accurate at the poles, but still does a decent job.\r\n\t\t */\r\n\r\n\r\n\t\t_blur(cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis) {\r\n\t\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\r\n\r\n\t\t\tthis._halfBlur(cubeUVRenderTarget, pingPongRenderTarget, lodIn, lodOut, sigma, 'latitudinal', poleAxis);\r\n\r\n\t\t\tthis._halfBlur(pingPongRenderTarget, cubeUVRenderTarget, lodOut, lodOut, sigma, 'longitudinal', poleAxis);\r\n\t\t}\r\n\r\n\t\t_halfBlur(targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis) {\r\n\t\t\tconst renderer = this._renderer;\r\n\t\t\tconst blurMaterial = this._blurMaterial;\r\n\r\n\t\t\tif (direction !== 'latitudinal' && direction !== 'longitudinal') {\r\n\t\t\t\tconsole.error('blur direction must be either latitudinal or longitudinal!');\r\n\t\t\t} // Number of standard deviations at which to cut off the discrete approximation.\r\n\r\n\r\n\t\t\tconst STANDARD_DEVIATIONS = 3;\r\n\t\t\tconst blurMesh = new Mesh(_lodPlanes[lodOut], blurMaterial);\r\n\t\t\tconst blurUniforms = blurMaterial.uniforms;\r\n\t\t\tconst pixels = _sizeLods[lodIn] - 1;\r\n\t\t\tconst radiansPerPixel = isFinite(sigmaRadians) ? Math.PI / (2 * pixels) : 2 * Math.PI / (2 * MAX_SAMPLES - 1);\r\n\t\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\r\n\t\t\tconst samples = isFinite(sigmaRadians) ? 1 + Math.floor(STANDARD_DEVIATIONS * sigmaPixels) : MAX_SAMPLES;\r\n\r\n\t\t\tif (samples > MAX_SAMPLES) {\r\n\t\t\t\tconsole.warn(`sigmaRadians, ${sigmaRadians}, is too large and will clip, as it requested ${samples} samples when the maximum is set to ${MAX_SAMPLES}`);\r\n\t\t\t}\r\n\r\n\t\t\tconst weights = [];\r\n\t\t\tlet sum = 0;\r\n\r\n\t\t\tfor (let i = 0; i < MAX_SAMPLES; ++i) {\r\n\t\t\t\tconst x = i / sigmaPixels;\r\n\t\t\t\tconst weight = Math.exp(-x * x / 2);\r\n\t\t\t\tweights.push(weight);\r\n\r\n\t\t\t\tif (i == 0) {\r\n\t\t\t\t\tsum += weight;\r\n\t\t\t\t} else if (i < samples) {\r\n\t\t\t\t\tsum += 2 * weight;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = 0; i < weights.length; i++) {\r\n\t\t\t\tweights[i] = weights[i] / sum;\r\n\t\t\t}\r\n\r\n\t\t\tblurUniforms['envMap'].value = targetIn.texture;\r\n\t\t\tblurUniforms['samples'].value = samples;\r\n\t\t\tblurUniforms['weights'].value = weights;\r\n\t\t\tblurUniforms['latitudinal'].value = direction === 'latitudinal';\r\n\r\n\t\t\tif (poleAxis) {\r\n\t\t\t\tblurUniforms['poleAxis'].value = poleAxis;\r\n\t\t\t}\r\n\r\n\t\t\tblurUniforms['dTheta'].value = radiansPerPixel;\r\n\t\t\tblurUniforms['mipInt'].value = LOD_MAX - lodIn;\r\n\t\t\tblurUniforms['inputEncoding'].value = ENCODINGS[targetIn.texture.encoding];\r\n\t\t\tblurUniforms['outputEncoding'].value = ENCODINGS[targetIn.texture.encoding];\r\n\t\t\tconst outputSize = _sizeLods[lodOut];\r\n\t\t\tconst x = 3 * Math.max(0, SIZE_MAX - 2 * outputSize);\r\n\t\t\tconst y = (lodOut === 0 ? 0 : 2 * SIZE_MAX) + 2 * outputSize * (lodOut > LOD_MAX - LOD_MIN ? lodOut - LOD_MAX + LOD_MIN : 0);\r\n\r\n\t\t\t_setViewport(targetOut, x, y, 3 * outputSize, 2 * outputSize);\r\n\r\n\t\t\trenderer.setRenderTarget(targetOut);\r\n\t\t\trenderer.render(blurMesh, _flatCamera);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction _isLDR(texture) {\r\n\t\tif (texture === undefined || texture.type !== UnsignedByteType) return false;\r\n\t\treturn texture.encoding === LinearEncoding || texture.encoding === sRGBEncoding || texture.encoding === GammaEncoding;\r\n\t}\r\n\r\n\tfunction _createPlanes() {\r\n\t\tconst _lodPlanes = [];\r\n\t\tconst _sizeLods = [];\r\n\t\tconst _sigmas = [];\r\n\t\tlet lod = LOD_MAX;\r\n\r\n\t\tfor (let i = 0; i < TOTAL_LODS; i++) {\r\n\t\t\tconst sizeLod = Math.pow(2, lod);\r\n\r\n\t\t\t_sizeLods.push(sizeLod);\r\n\r\n\t\t\tlet sigma = 1.0 / sizeLod;\r\n\r\n\t\t\tif (i > LOD_MAX - LOD_MIN) {\r\n\t\t\t\tsigma = EXTRA_LOD_SIGMA[i - LOD_MAX + LOD_MIN - 1];\r\n\t\t\t} else if (i == 0) {\r\n\t\t\t\tsigma = 0;\r\n\t\t\t}\r\n\r\n\t\t\t_sigmas.push(sigma);\r\n\r\n\t\t\tconst texelSize = 1.0 / (sizeLod - 1);\r\n\t\t\tconst min = -texelSize / 2;\r\n\t\t\tconst max = 1 + texelSize / 2;\r\n\t\t\tconst uv1 = [min, min, max, min, max, max, min, min, max, max, min, max];\r\n\t\t\tconst cubeFaces = 6;\r\n\t\t\tconst vertices = 6;\r\n\t\t\tconst positionSize = 3;\r\n\t\t\tconst uvSize = 2;\r\n\t\t\tconst faceIndexSize = 1;\r\n\t\t\tconst position = new Float32Array(positionSize * vertices * cubeFaces);\r\n\t\t\tconst uv = new Float32Array(uvSize * vertices * cubeFaces);\r\n\t\t\tconst faceIndex = new Float32Array(faceIndexSize * vertices * cubeFaces);\r\n\r\n\t\t\tfor (let face = 0; face < cubeFaces; face++) {\r\n\t\t\t\tconst x = face % 3 * 2 / 3 - 1;\r\n\t\t\t\tconst y = face > 2 ? 0 : -1;\r\n\t\t\t\tconst coordinates = [x, y, 0, x + 2 / 3, y, 0, x + 2 / 3, y + 1, 0, x, y, 0, x + 2 / 3, y + 1, 0, x, y + 1, 0];\r\n\t\t\t\tposition.set(coordinates, positionSize * vertices * face);\r\n\t\t\t\tuv.set(uv1, uvSize * vertices * face);\r\n\t\t\t\tconst fill = [face, face, face, face, face, face];\r\n\t\t\t\tfaceIndex.set(fill, faceIndexSize * vertices * face);\r\n\t\t\t}\r\n\r\n\t\t\tconst planes = new BufferGeometry();\r\n\t\t\tplanes.setAttribute('position', new BufferAttribute(position, positionSize));\r\n\t\t\tplanes.setAttribute('uv', new BufferAttribute(uv, uvSize));\r\n\t\t\tplanes.setAttribute('faceIndex', new BufferAttribute(faceIndex, faceIndexSize));\r\n\r\n\t\t\t_lodPlanes.push(planes);\r\n\r\n\t\t\tif (lod > LOD_MIN) {\r\n\t\t\t\tlod--;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\t_lodPlanes,\r\n\t\t\t_sizeLods,\r\n\t\t\t_sigmas\r\n\t\t};\r\n\t}\r\n\r\n\tfunction _createRenderTarget(params) {\r\n\t\tconst cubeUVRenderTarget = new WebGLRenderTarget(3 * SIZE_MAX, 3 * SIZE_MAX, params);\r\n\t\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\r\n\t\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\r\n\t\tcubeUVRenderTarget.scissorTest = true;\r\n\t\treturn cubeUVRenderTarget;\r\n\t}\r\n\r\n\tfunction _setViewport(target, x, y, width, height) {\r\n\t\ttarget.viewport.set(x, y, width, height);\r\n\t\ttarget.scissor.set(x, y, width, height);\r\n\t}\r\n\r\n\tfunction _getBlurShader(maxSamples) {\r\n\t\tconst weights = new Float32Array(maxSamples);\r\n\t\tconst poleAxis = new Vector3(0, 1, 0);\r\n\t\tconst shaderMaterial = new RawShaderMaterial({\r\n\t\t\tname: 'SphericalGaussianBlur',\r\n\t\t\tdefines: {\r\n\t\t\t\t'n': maxSamples\r\n\t\t\t},\r\n\t\t\tuniforms: {\r\n\t\t\t\t'envMap': {\r\n\t\t\t\t\tvalue: null\r\n\t\t\t\t},\r\n\t\t\t\t'samples': {\r\n\t\t\t\t\tvalue: 1\r\n\t\t\t\t},\r\n\t\t\t\t'weights': {\r\n\t\t\t\t\tvalue: weights\r\n\t\t\t\t},\r\n\t\t\t\t'latitudinal': {\r\n\t\t\t\t\tvalue: false\r\n\t\t\t\t},\r\n\t\t\t\t'dTheta': {\r\n\t\t\t\t\tvalue: 0\r\n\t\t\t\t},\r\n\t\t\t\t'mipInt': {\r\n\t\t\t\t\tvalue: 0\r\n\t\t\t\t},\r\n\t\t\t\t'poleAxis': {\r\n\t\t\t\t\tvalue: poleAxis\r\n\t\t\t\t},\r\n\t\t\t\t'inputEncoding': {\r\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\r\n\t\t\t\t},\r\n\t\t\t\t'outputEncoding': {\r\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tvertexShader: _getCommonVertexShader(),\r\n\t\t\tfragmentShader:\r\n\t\t\t/* glsl */\r\n\t\t\t`\r\n\r\n\t\t\tprecision mediump float;\r\n\t\t\tprecision mediump int;\r\n\r\n\t\t\tvarying vec3 vOutputDirection;\r\n\r\n\t\t\tuniform sampler2D envMap;\r\n\t\t\tuniform int samples;\r\n\t\t\tuniform float weights[ n ];\r\n\t\t\tuniform bool latitudinal;\r\n\t\t\tuniform float dTheta;\r\n\t\t\tuniform float mipInt;\r\n\t\t\tuniform vec3 poleAxis;\r\n\r\n\t\t\t${_getEncodings()}\r\n\r\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\r\n\t\t\t#include <cube_uv_reflection_fragment>\r\n\r\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\r\n\r\n\t\t\t\tfloat cosTheta = cos( theta );\r\n\t\t\t\t// Rodrigues' axis-angle rotation\r\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\r\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\r\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\r\n\r\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvoid main() {\r\n\r\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\r\n\r\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\r\n\r\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\taxis = normalize( axis );\r\n\r\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\r\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\r\n\r\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\r\n\r\n\t\t\t\t\tif ( i >= samples ) {\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfloat theta = dTheta * float( i );\r\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\r\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\r\n\r\n\t\t\t}\r\n\t\t`,\r\n\t\t\tblending: NoBlending,\r\n\t\t\tdepthTest: false,\r\n\t\t\tdepthWrite: false\r\n\t\t});\r\n\t\treturn shaderMaterial;\r\n\t}\r\n\r\n\tfunction _getEquirectShader() {\r\n\t\tconst texelSize = new Vector2(1, 1);\r\n\t\tconst shaderMaterial = new RawShaderMaterial({\r\n\t\t\tname: 'EquirectangularToCubeUV',\r\n\t\t\tuniforms: {\r\n\t\t\t\t'envMap': {\r\n\t\t\t\t\tvalue: null\r\n\t\t\t\t},\r\n\t\t\t\t'texelSize': {\r\n\t\t\t\t\tvalue: texelSize\r\n\t\t\t\t},\r\n\t\t\t\t'inputEncoding': {\r\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\r\n\t\t\t\t},\r\n\t\t\t\t'outputEncoding': {\r\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tvertexShader: _getCommonVertexShader(),\r\n\t\t\tfragmentShader:\r\n\t\t\t/* glsl */\r\n\t\t\t`\r\n\r\n\t\t\tprecision mediump float;\r\n\t\t\tprecision mediump int;\r\n\r\n\t\t\tvarying vec3 vOutputDirection;\r\n\r\n\t\t\tuniform sampler2D envMap;\r\n\t\t\tuniform vec2 texelSize;\r\n\r\n\t\t\t${_getEncodings()}\r\n\r\n\t\t\t#include <common>\r\n\r\n\t\t\tvoid main() {\r\n\r\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\r\n\r\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\r\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\r\n\r\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\r\n\t\t\t\tuv -= f * texelSize;\r\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\r\n\t\t\t\tuv.x += texelSize.x;\r\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\r\n\t\t\t\tuv.y += texelSize.y;\r\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\r\n\t\t\t\tuv.x -= texelSize.x;\r\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\r\n\r\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\r\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\r\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\r\n\r\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\r\n\r\n\t\t\t}\r\n\t\t`,\r\n\t\t\tblending: NoBlending,\r\n\t\t\tdepthTest: false,\r\n\t\t\tdepthWrite: false\r\n\t\t});\r\n\t\treturn shaderMaterial;\r\n\t}\r\n\r\n\tfunction _getCubemapShader() {\r\n\t\tconst shaderMaterial = new RawShaderMaterial({\r\n\t\t\tname: 'CubemapToCubeUV',\r\n\t\t\tuniforms: {\r\n\t\t\t\t'envMap': {\r\n\t\t\t\t\tvalue: null\r\n\t\t\t\t},\r\n\t\t\t\t'inputEncoding': {\r\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\r\n\t\t\t\t},\r\n\t\t\t\t'outputEncoding': {\r\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tvertexShader: _getCommonVertexShader(),\r\n\t\t\tfragmentShader:\r\n\t\t\t/* glsl */\r\n\t\t\t`\r\n\r\n\t\t\tprecision mediump float;\r\n\t\t\tprecision mediump int;\r\n\r\n\t\t\tvarying vec3 vOutputDirection;\r\n\r\n\t\t\tuniform samplerCube envMap;\r\n\r\n\t\t\t${_getEncodings()}\r\n\r\n\t\t\tvoid main() {\r\n\r\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\r\n\t\t\t\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\r\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\r\n\r\n\t\t\t}\r\n\t\t`,\r\n\t\t\tblending: NoBlending,\r\n\t\t\tdepthTest: false,\r\n\t\t\tdepthWrite: false\r\n\t\t});\r\n\t\treturn shaderMaterial;\r\n\t}\r\n\r\n\tfunction _getCommonVertexShader() {\r\n\t\treturn (\r\n\t\t\t/* glsl */\r\n\t\t\t`\r\n\r\n\t\tprecision mediump float;\r\n\t\tprecision mediump int;\r\n\r\n\t\tattribute vec3 position;\r\n\t\tattribute vec2 uv;\r\n\t\tattribute float faceIndex;\r\n\r\n\t\tvarying vec3 vOutputDirection;\r\n\r\n\t\t// RH coordinate system; PMREM face-indexing convention\r\n\t\tvec3 getDirection( vec2 uv, float face ) {\r\n\r\n\t\t\tuv = 2.0 * uv - 1.0;\r\n\r\n\t\t\tvec3 direction = vec3( uv, 1.0 );\r\n\r\n\t\t\tif ( face == 0.0 ) {\r\n\r\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\r\n\r\n\t\t\t} else if ( face == 1.0 ) {\r\n\r\n\t\t\t\tdirection = direction.xzy;\r\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\r\n\r\n\t\t\t} else if ( face == 2.0 ) {\r\n\r\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\r\n\r\n\t\t\t} else if ( face == 3.0 ) {\r\n\r\n\t\t\t\tdirection = direction.zyx;\r\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\r\n\r\n\t\t\t} else if ( face == 4.0 ) {\r\n\r\n\t\t\t\tdirection = direction.xzy;\r\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\r\n\r\n\t\t\t} else if ( face == 5.0 ) {\r\n\r\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn direction;\r\n\r\n\t\t}\r\n\r\n\t\tvoid main() {\r\n\r\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\r\n\t\t\tgl_Position = vec4( position, 1.0 );\r\n\r\n\t\t}\r\n\t`\r\n\t\t);\r\n\t}\r\n\r\n\tfunction _getEncodings() {\r\n\t\treturn (\r\n\t\t\t/* glsl */\r\n\t\t\t`\r\n\r\n\t\tuniform int inputEncoding;\r\n\t\tuniform int outputEncoding;\r\n\r\n\t\t#include <encodings_pars_fragment>\r\n\r\n\t\tvec4 inputTexelToLinear( vec4 value ) {\r\n\r\n\t\t\tif ( inputEncoding == 0 ) {\r\n\r\n\t\t\t\treturn value;\r\n\r\n\t\t\t} else if ( inputEncoding == 1 ) {\r\n\r\n\t\t\t\treturn sRGBToLinear( value );\r\n\r\n\t\t\t} else if ( inputEncoding == 2 ) {\r\n\r\n\t\t\t\treturn RGBEToLinear( value );\r\n\r\n\t\t\t} else if ( inputEncoding == 3 ) {\r\n\r\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\r\n\r\n\t\t\t} else if ( inputEncoding == 4 ) {\r\n\r\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\r\n\r\n\t\t\t} else if ( inputEncoding == 5 ) {\r\n\r\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn GammaToLinear( value, 2.2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvec4 linearToOutputTexel( vec4 value ) {\r\n\r\n\t\t\tif ( outputEncoding == 0 ) {\r\n\r\n\t\t\t\treturn value;\r\n\r\n\t\t\t} else if ( outputEncoding == 1 ) {\r\n\r\n\t\t\t\treturn LinearTosRGB( value );\r\n\r\n\t\t\t} else if ( outputEncoding == 2 ) {\r\n\r\n\t\t\t\treturn LinearToRGBE( value );\r\n\r\n\t\t\t} else if ( outputEncoding == 3 ) {\r\n\r\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\r\n\r\n\t\t\t} else if ( outputEncoding == 4 ) {\r\n\r\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\r\n\r\n\t\t\t} else if ( outputEncoding == 5 ) {\r\n\r\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn LinearToGamma( value, 2.2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\r\n\r\n\t\t\treturn inputTexelToLinear( color );\r\n\r\n\t\t}\r\n\t`\r\n\t\t);\r\n\t}\r\n\r\n\tfunction WebGLCubeUVMaps(renderer) {\r\n\t\tlet cubeUVmaps = new WeakMap();\r\n\t\tlet pmremGenerator = null;\r\n\r\n\t\tfunction get(texture) {\r\n\t\t\tif (texture && texture.isTexture && texture.isRenderTargetTexture === false) {\r\n\t\t\t\tconst mapping = texture.mapping;\r\n\t\t\t\tconst isEquirectMap = mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping;\r\n\t\t\t\tconst isCubeMap = mapping === CubeReflectionMapping || mapping === CubeRefractionMapping;\r\n\r\n\t\t\t\tif (isEquirectMap || isCubeMap) {\r\n\t\t\t\t\t// equirect/cube map to cubeUV conversion\r\n\t\t\t\t\tif (cubeUVmaps.has(texture)) {\r\n\t\t\t\t\t\treturn cubeUVmaps.get(texture).texture;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst image = texture.image;\r\n\r\n\t\t\t\t\t\tif (isEquirectMap && image && image.height > 0 || isCubeMap && image && isCubeTextureComplete(image)) {\r\n\t\t\t\t\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\r\n\t\t\t\t\t\t\tif (pmremGenerator === null) pmremGenerator = new PMREMGenerator(renderer);\r\n\t\t\t\t\t\t\tconst renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular(texture) : pmremGenerator.fromCubemap(texture);\r\n\t\t\t\t\t\t\tcubeUVmaps.set(texture, renderTarget);\r\n\t\t\t\t\t\t\trenderer.setRenderTarget(currentRenderTarget);\r\n\t\t\t\t\t\t\ttexture.addEventListener('dispose', onTextureDispose);\r\n\t\t\t\t\t\t\treturn renderTarget.texture;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\r\n\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn texture;\r\n\t\t}\r\n\r\n\t\tfunction isCubeTextureComplete(image) {\r\n\t\t\tlet count = 0;\r\n\t\t\tconst length = 6;\r\n\r\n\t\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\t\tif (image[i] !== undefined) count++;\r\n\t\t\t}\r\n\r\n\t\t\treturn count === length;\r\n\t\t}\r\n\r\n\t\tfunction onTextureDispose(event) {\r\n\t\t\tconst texture = event.target;\r\n\t\t\ttexture.removeEventListener('dispose', onTextureDispose);\r\n\t\t\tconst cubemapUV = cubeUVmaps.get(texture);\r\n\r\n\t\t\tif (cubemapUV !== undefined) {\r\n\t\t\t\tcubemapUV.delete(texture);\r\n\t\t\t\tcubemapUV.dispose();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction dispose() {\r\n\t\t\tcubeUVmaps = new WeakMap();\r\n\r\n\t\t\tif (pmremGenerator !== null) {\r\n\t\t\t\tpmremGenerator.dispose();\r\n\t\t\t\tpmremGenerator = null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tget: get,\r\n\t\t\tdispose: dispose\r\n\t\t};\r\n\t}\r\n\r\n\tfunction WebGLExtensions(gl) {\r\n\t\tconst extensions = {};\r\n\r\n\t\tfunction getExtension(name) {\r\n\t\t\tif (extensions[name] !== undefined) {\r\n\t\t\t\treturn extensions[name];\r\n\t\t\t}\r\n\r\n\t\t\tlet extension;\r\n\r\n\t\t\tswitch (name) {\r\n\t\t\t\tcase 'WEBGL_depth_texture':\r\n\t\t\t\t\textension = gl.getExtension('WEBGL_depth_texture') || gl.getExtension('MOZ_WEBGL_depth_texture') || gl.getExtension('WEBKIT_WEBGL_depth_texture');\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\r\n\t\t\t\t\textension = gl.getExtension('EXT_texture_filter_anisotropic') || gl.getExtension('MOZ_EXT_texture_filter_anisotropic') || gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\r\n\t\t\t\t\textension = gl.getExtension('WEBGL_compressed_texture_s3tc') || gl.getExtension('MOZ_WEBGL_compressed_texture_s3tc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\r\n\t\t\t\t\textension = gl.getExtension('WEBGL_compressed_texture_pvrtc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\textension = gl.getExtension(name);\r\n\t\t\t}\r\n\r\n\t\t\textensions[name] = extension;\r\n\t\t\treturn extension;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\thas: function (name) {\r\n\t\t\t\treturn getExtension(name) !== null;\r\n\t\t\t},\r\n\t\t\tinit: function (capabilities) {\r\n\t\t\t\tif (capabilities.isWebGL2) {\r\n\t\t\t\t\tgetExtension('EXT_color_buffer_float');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tgetExtension('WEBGL_depth_texture');\r\n\t\t\t\t\tgetExtension('OES_texture_float');\r\n\t\t\t\t\tgetExtension('OES_texture_half_float');\r\n\t\t\t\t\tgetExtension('OES_texture_half_float_linear');\r\n\t\t\t\t\tgetExtension('OES_standard_derivatives');\r\n\t\t\t\t\tgetExtension('OES_element_index_uint');\r\n\t\t\t\t\tgetExtension('OES_vertex_array_object');\r\n\t\t\t\t\tgetExtension('ANGLE_instanced_arrays');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgetExtension('OES_texture_float_linear');\r\n\t\t\t\tgetExtension('EXT_color_buffer_half_float');\r\n\t\t\t},\r\n\t\t\tget: function (name) {\r\n\t\t\t\tconst extension = getExtension(name);\r\n\r\n\t\t\t\tif (extension === null) {\r\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: ' + name + ' extension not supported.');\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn extension;\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tfunction WebGLGeometries(gl, attributes, info, bindingStates) {\r\n\t\tconst geometries = {};\r\n\t\tconst wireframeAttributes = new WeakMap();\r\n\r\n\t\tfunction onGeometryDispose(event) {\r\n\t\t\tconst geometry = event.target;\r\n\r\n\t\t\tif (geometry.index !== null) {\r\n\t\t\t\tattributes.remove(geometry.index);\r\n\t\t\t}\r\n\r\n\t\t\tfor (const name in geometry.attributes) {\r\n\t\t\t\tattributes.remove(geometry.attributes[name]);\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.removeEventListener('dispose', onGeometryDispose);\r\n\t\t\tdelete geometries[geometry.id];\r\n\t\t\tconst attribute = wireframeAttributes.get(geometry);\r\n\r\n\t\t\tif (attribute) {\r\n\t\t\t\tattributes.remove(attribute);\r\n\t\t\t\twireframeAttributes.delete(geometry);\r\n\t\t\t}\r\n\r\n\t\t\tbindingStates.releaseStatesOfGeometry(geometry);\r\n\r\n\t\t\tif (geometry.isInstancedBufferGeometry === true) {\r\n\t\t\t\tdelete geometry._maxInstanceCount;\r\n\t\t\t} //\r\n\r\n\r\n\t\t\tinfo.memory.geometries--;\r\n\t\t}\r\n\r\n\t\tfunction get(object, geometry) {\r\n\t\t\tif (geometries[geometry.id] === true) return geometry;\r\n\t\t\tgeometry.addEventListener('dispose', onGeometryDispose);\r\n\t\t\tgeometries[geometry.id] = true;\r\n\t\t\tinfo.memory.geometries++;\r\n\t\t\treturn geometry;\r\n\t\t}\r\n\r\n\t\tfunction update(geometry) {\r\n\t\t\tconst geometryAttributes = geometry.attributes; // Updating index buffer in VAO now. See WebGLBindingStates.\r\n\r\n\t\t\tfor (const name in geometryAttributes) {\r\n\t\t\t\tattributes.update(geometryAttributes[name], gl.ARRAY_BUFFER);\r\n\t\t\t} // morph targets\r\n\r\n\r\n\t\t\tconst morphAttributes = geometry.morphAttributes;\r\n\r\n\t\t\tfor (const name in morphAttributes) {\r\n\t\t\t\tconst array = morphAttributes[name];\r\n\r\n\t\t\t\tfor (let i = 0, l = array.length; i < l; i++) {\r\n\t\t\t\t\tattributes.update(array[i], gl.ARRAY_BUFFER);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction updateWireframeAttribute(geometry) {\r\n\t\t\tconst indices = [];\r\n\t\t\tconst geometryIndex = geometry.index;\r\n\t\t\tconst geometryPosition = geometry.attributes.position;\r\n\t\t\tlet version = 0;\r\n\r\n\t\t\tif (geometryIndex !== null) {\r\n\t\t\t\tconst array = geometryIndex.array;\r\n\t\t\t\tversion = geometryIndex.version;\r\n\r\n\t\t\t\tfor (let i = 0, l = array.length; i < l; i += 3) {\r\n\t\t\t\t\tconst a = array[i + 0];\r\n\t\t\t\t\tconst b = array[i + 1];\r\n\t\t\t\t\tconst c = array[i + 2];\r\n\t\t\t\t\tindices.push(a, b, b, c, c, a);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconst array = geometryPosition.array;\r\n\t\t\t\tversion = geometryPosition.version;\r\n\r\n\t\t\t\tfor (let i = 0, l = array.length / 3 - 1; i < l; i += 3) {\r\n\t\t\t\t\tconst a = i + 0;\r\n\t\t\t\t\tconst b = i + 1;\r\n\t\t\t\t\tconst c = i + 2;\r\n\t\t\t\t\tindices.push(a, b, b, c, c, a);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst attribute = new (arrayMax(indices) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute)(indices, 1);\r\n\t\t\tattribute.version = version; // Updating index buffer in VAO now. See WebGLBindingStates\r\n\t\t\t//\r\n\r\n\t\t\tconst previousAttribute = wireframeAttributes.get(geometry);\r\n\t\t\tif (previousAttribute) attributes.remove(previousAttribute); //\r\n\r\n\t\t\twireframeAttributes.set(geometry, attribute);\r\n\t\t}\r\n\r\n\t\tfunction getWireframeAttribute(geometry) {\r\n\t\t\tconst currentAttribute = wireframeAttributes.get(geometry);\r\n\r\n\t\t\tif (currentAttribute) {\r\n\t\t\t\tconst geometryIndex = geometry.index;\r\n\r\n\t\t\t\tif (geometryIndex !== null) {\r\n\t\t\t\t\t// if the attribute is obsolete, create a new one\r\n\t\t\t\t\tif (currentAttribute.version < geometryIndex.version) {\r\n\t\t\t\t\t\tupdateWireframeAttribute(geometry);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tupdateWireframeAttribute(geometry);\r\n\t\t\t}\r\n\r\n\t\t\treturn wireframeAttributes.get(geometry);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tget: get,\r\n\t\t\tupdate: update,\r\n\t\t\tgetWireframeAttribute: getWireframeAttribute\r\n\t\t};\r\n\t}\r\n\r\n\tfunction WebGLIndexedBufferRenderer(gl, extensions, info, capabilities) {\r\n\t\tconst isWebGL2 = capabilities.isWebGL2;\r\n\t\tlet mode;\r\n\r\n\t\tfunction setMode(value) {\r\n\t\t\tmode = value;\r\n\t\t}\r\n\r\n\t\tlet type, bytesPerElement;\r\n\r\n\t\tfunction setIndex(value) {\r\n\t\t\ttype = value.type;\r\n\t\t\tbytesPerElement = value.bytesPerElement;\r\n\t\t}\r\n\r\n\t\tfunction render(start, count) {\r\n\t\t\tgl.drawElements(mode, count, type, start * bytesPerElement);\r\n\t\t\tinfo.update(count, mode, 1);\r\n\t\t}\r\n\r\n\t\tfunction renderInstances(start, count, primcount) {\r\n\t\t\tif (primcount === 0) return;\r\n\t\t\tlet extension, methodName;\r\n\r\n\t\t\tif (isWebGL2) {\r\n\t\t\t\textension = gl;\r\n\t\t\t\tmethodName = 'drawElementsInstanced';\r\n\t\t\t} else {\r\n\t\t\t\textension = extensions.get('ANGLE_instanced_arrays');\r\n\t\t\t\tmethodName = 'drawElementsInstancedANGLE';\r\n\r\n\t\t\t\tif (extension === null) {\r\n\t\t\t\t\tconsole.error('THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\textension[methodName](mode, count, type, start * bytesPerElement, primcount);\r\n\t\t\tinfo.update(count, mode, primcount);\r\n\t\t} //\r\n\r\n\r\n\t\tthis.setMode = setMode;\r\n\t\tthis.setIndex = setIndex;\r\n\t\tthis.render = render;\r\n\t\tthis.renderInstances = renderInstances;\r\n\t}\r\n\r\n\tfunction WebGLInfo(gl) {\r\n\t\tconst memory = {\r\n\t\t\tgeometries: 0,\r\n\t\t\ttextures: 0\r\n\t\t};\r\n\t\tconst render = {\r\n\t\t\tframe: 0,\r\n\t\t\tcalls: 0,\r\n\t\t\ttriangles: 0,\r\n\t\t\tpoints: 0,\r\n\t\t\tlines: 0\r\n\t\t};\r\n\r\n\t\tfunction update(count, mode, instanceCount) {\r\n\t\t\trender.calls++;\r\n\r\n\t\t\tswitch (mode) {\r\n\t\t\t\tcase gl.TRIANGLES:\r\n\t\t\t\t\trender.triangles += instanceCount * (count / 3);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase gl.LINES:\r\n\t\t\t\t\trender.lines += instanceCount * (count / 2);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase gl.LINE_STRIP:\r\n\t\t\t\t\trender.lines += instanceCount * (count - 1);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase gl.LINE_LOOP:\r\n\t\t\t\t\trender.lines += instanceCount * count;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase gl.POINTS:\r\n\t\t\t\t\trender.points += instanceCount * count;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.error('THREE.WebGLInfo: Unknown draw mode:', mode);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction reset() {\r\n\t\t\trender.frame++;\r\n\t\t\trender.calls = 0;\r\n\t\t\trender.triangles = 0;\r\n\t\t\trender.points = 0;\r\n\t\t\trender.lines = 0;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tmemory: memory,\r\n\t\t\trender: render,\r\n\t\t\tprograms: null,\r\n\t\t\tautoReset: true,\r\n\t\t\treset: reset,\r\n\t\t\tupdate: update\r\n\t\t};\r\n\t}\r\n\r\n\tfunction numericalSort(a, b) {\r\n\t\treturn a[0] - b[0];\r\n\t}\r\n\r\n\tfunction absNumericalSort(a, b) {\r\n\t\treturn Math.abs(b[1]) - Math.abs(a[1]);\r\n\t}\r\n\r\n\tfunction WebGLMorphtargets(gl) {\r\n\t\tconst influencesList = {};\r\n\t\tconst morphInfluences = new Float32Array(8);\r\n\t\tconst workInfluences = [];\r\n\r\n\t\tfor (let i = 0; i < 8; i++) {\r\n\t\t\tworkInfluences[i] = [i, 0];\r\n\t\t}\r\n\r\n\t\tfunction update(object, geometry, material, program) {\r\n\t\t\tconst objectInfluences = object.morphTargetInfluences; // When object doesn't have morph target influences defined, we treat it as a 0-length array\r\n\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\r\n\r\n\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\r\n\t\t\tlet influences = influencesList[geometry.id];\r\n\r\n\t\t\tif (influences === undefined || influences.length !== length) {\r\n\t\t\t\t// initialise list\r\n\t\t\t\tinfluences = [];\r\n\r\n\t\t\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\t\t\tinfluences[i] = [i, 0];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinfluencesList[geometry.id] = influences;\r\n\t\t\t} // Collect influences\r\n\r\n\r\n\t\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\t\tconst influence = influences[i];\r\n\t\t\t\tinfluence[0] = i;\r\n\t\t\t\tinfluence[1] = objectInfluences[i];\r\n\t\t\t}\r\n\r\n\t\t\tinfluences.sort(absNumericalSort);\r\n\r\n\t\t\tfor (let i = 0; i < 8; i++) {\r\n\t\t\t\tif (i < length && influences[i][1]) {\r\n\t\t\t\t\tworkInfluences[i][0] = influences[i][0];\r\n\t\t\t\t\tworkInfluences[i][1] = influences[i][1];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tworkInfluences[i][0] = Number.MAX_SAFE_INTEGER;\r\n\t\t\t\t\tworkInfluences[i][1] = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tworkInfluences.sort(numericalSort);\r\n\t\t\tconst morphTargets = geometry.morphAttributes.position;\r\n\t\t\tconst morphNormals = geometry.morphAttributes.normal;\r\n\t\t\tlet morphInfluencesSum = 0;\r\n\r\n\t\t\tfor (let i = 0; i < 8; i++) {\r\n\t\t\t\tconst influence = workInfluences[i];\r\n\t\t\t\tconst index = influence[0];\r\n\t\t\t\tconst value = influence[1];\r\n\r\n\t\t\t\tif (index !== Number.MAX_SAFE_INTEGER && value) {\r\n\t\t\t\t\tif (morphTargets && geometry.getAttribute('morphTarget' + i) !== morphTargets[index]) {\r\n\t\t\t\t\t\tgeometry.setAttribute('morphTarget' + i, morphTargets[index]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (morphNormals && geometry.getAttribute('morphNormal' + i) !== morphNormals[index]) {\r\n\t\t\t\t\t\tgeometry.setAttribute('morphNormal' + i, morphNormals[index]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tmorphInfluences[i] = value;\r\n\t\t\t\t\tmorphInfluencesSum += value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (morphTargets && geometry.hasAttribute('morphTarget' + i) === true) {\r\n\t\t\t\t\t\tgeometry.deleteAttribute('morphTarget' + i);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (morphNormals && geometry.hasAttribute('morphNormal' + i) === true) {\r\n\t\t\t\t\t\tgeometry.deleteAttribute('morphNormal' + i);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tmorphInfluences[i] = 0;\r\n\t\t\t\t}\r\n\t\t\t} // GLSL shader uses formula baseinfluence * base + sum(target * influence)\r\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\r\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\r\n\r\n\r\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\r\n\t\t\tprogram.getUniforms().setValue(gl, 'morphTargetBaseInfluence', morphBaseInfluence);\r\n\t\t\tprogram.getUniforms().setValue(gl, 'morphTargetInfluences', morphInfluences);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tupdate: update\r\n\t\t};\r\n\t}\r\n\r\n\tfunction WebGLObjects(gl, geometries, attributes, info) {\r\n\t\tlet updateMap = new WeakMap();\r\n\r\n\t\tfunction update(object) {\r\n\t\t\tconst frame = info.render.frame;\r\n\t\t\tconst geometry = object.geometry;\r\n\t\t\tconst buffergeometry = geometries.get(object, geometry); // Update once per frame\r\n\r\n\t\t\tif (updateMap.get(buffergeometry) !== frame) {\r\n\t\t\t\tgeometries.update(buffergeometry);\r\n\t\t\t\tupdateMap.set(buffergeometry, frame);\r\n\t\t\t}\r\n\r\n\t\t\tif (object.isInstancedMesh) {\r\n\t\t\t\tif (object.hasEventListener('dispose', onInstancedMeshDispose) === false) {\r\n\t\t\t\t\tobject.addEventListener('dispose', onInstancedMeshDispose);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tattributes.update(object.instanceMatrix, gl.ARRAY_BUFFER);\r\n\r\n\t\t\t\tif (object.instanceColor !== null) {\r\n\t\t\t\t\tattributes.update(object.instanceColor, gl.ARRAY_BUFFER);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn buffergeometry;\r\n\t\t}\r\n\r\n\t\tfunction dispose() {\r\n\t\t\tupdateMap = new WeakMap();\r\n\t\t}\r\n\r\n\t\tfunction onInstancedMeshDispose(event) {\r\n\t\t\tconst instancedMesh = event.target;\r\n\t\t\tinstancedMesh.removeEventListener('dispose', onInstancedMeshDispose);\r\n\t\t\tattributes.remove(instancedMesh.instanceMatrix);\r\n\t\t\tif (instancedMesh.instanceColor !== null) attributes.remove(instancedMesh.instanceColor);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tupdate: update,\r\n\t\t\tdispose: dispose\r\n\t\t};\r\n\t}\r\n\r\n\tclass DataTexture2DArray extends Texture {\r\n\t\tconstructor(data = null, width = 1, height = 1, depth = 1) {\r\n\t\t\tsuper(null);\r\n\t\t\tthis.image = {\r\n\t\t\t\tdata,\r\n\t\t\t\twidth,\r\n\t\t\t\theight,\r\n\t\t\t\tdepth\r\n\t\t\t};\r\n\t\t\tthis.magFilter = NearestFilter;\r\n\t\t\tthis.minFilter = NearestFilter;\r\n\t\t\tthis.wrapR = ClampToEdgeWrapping;\r\n\t\t\tthis.generateMipmaps = false;\r\n\t\t\tthis.flipY = false;\r\n\t\t\tthis.unpackAlignment = 1;\r\n\t\t\tthis.needsUpdate = true;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tDataTexture2DArray.prototype.isDataTexture2DArray = true;\r\n\r\n\tclass DataTexture3D extends Texture {\r\n\t\tconstructor(data = null, width = 1, height = 1, depth = 1) {\r\n\t\t\t// We're going to add .setXXX() methods for setting properties later.\r\n\t\t\t// Users can still set in DataTexture3D directly.\r\n\t\t\t//\r\n\t\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\r\n\t\t\t// \ttexture.anisotropy = 16;\r\n\t\t\t//\r\n\t\t\t// See #14839\r\n\t\t\tsuper(null);\r\n\t\t\tthis.image = {\r\n\t\t\t\tdata,\r\n\t\t\t\twidth,\r\n\t\t\t\theight,\r\n\t\t\t\tdepth\r\n\t\t\t};\r\n\t\t\tthis.magFilter = NearestFilter;\r\n\t\t\tthis.minFilter = NearestFilter;\r\n\t\t\tthis.wrapR = ClampToEdgeWrapping;\r\n\t\t\tthis.generateMipmaps = false;\r\n\t\t\tthis.flipY = false;\r\n\t\t\tthis.unpackAlignment = 1;\r\n\t\t\tthis.needsUpdate = true;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tDataTexture3D.prototype.isDataTexture3D = true;\r\n\r\n\t/**\r\n\t * Uniforms of a program.\r\n\t * Those form a tree structure with a special top-level container for the root,\r\n\t * which you get by calling 'new WebGLUniforms( gl, program )'.\r\n\t *\r\n\t *\r\n\t * Properties of inner nodes including the top-level container:\r\n\t *\r\n\t * .seq - array of nested uniforms\r\n\t * .map - nested uniforms by name\r\n\t *\r\n\t *\r\n\t * Methods of all nodes except the top-level container:\r\n\t *\r\n\t * .setValue( gl, value, [textures] )\r\n\t *\r\n\t * \t\tuploads a uniform value(s)\r\n\t *\t\tthe 'textures' parameter is needed for sampler uniforms\r\n\t *\r\n\t *\r\n\t * Static methods of the top-level container (textures factorizations):\r\n\t *\r\n\t * .upload( gl, seq, values, textures )\r\n\t *\r\n\t * \t\tsets uniforms in 'seq' to 'values[id].value'\r\n\t *\r\n\t * .seqWithValue( seq, values ) : filteredSeq\r\n\t *\r\n\t * \t\tfilters 'seq' entries with corresponding entry in values\r\n\t *\r\n\t *\r\n\t * Methods of the top-level container (textures factorizations):\r\n\t *\r\n\t * .setValue( gl, name, value, textures )\r\n\t *\r\n\t * \t\tsets uniform with\tname 'name' to 'value'\r\n\t *\r\n\t * .setOptional( gl, obj, prop )\r\n\t *\r\n\t * \t\tlike .set for an optional property of the object\r\n\t *\r\n\t */\r\n\tconst emptyTexture = new Texture();\r\n\tconst emptyTexture2dArray = new DataTexture2DArray();\r\n\tconst emptyTexture3d = new DataTexture3D();\r\n\tconst emptyCubeTexture = new CubeTexture(); // --- Utilities ---\r\n\t// Array Caches (provide typed arrays for temporary by size)\r\n\r\n\tconst arrayCacheF32 = [];\r\n\tconst arrayCacheI32 = []; // Float32Array caches used for uploading Matrix uniforms\r\n\r\n\tconst mat4array = new Float32Array(16);\r\n\tconst mat3array = new Float32Array(9);\r\n\tconst mat2array = new Float32Array(4); // Flattening for arrays of vectors and matrices\r\n\r\n\tfunction flatten(array, nBlocks, blockSize) {\r\n\t\tconst firstElem = array[0];\r\n\t\tif (firstElem <= 0 || firstElem > 0) return array; // unoptimized: ! isNaN( firstElem )\r\n\t\t// see http://jacksondunstan.com/articles/983\r\n\r\n\t\tconst n = nBlocks * blockSize;\r\n\t\tlet r = arrayCacheF32[n];\r\n\r\n\t\tif (r === undefined) {\r\n\t\t\tr = new Float32Array(n);\r\n\t\t\tarrayCacheF32[n] = r;\r\n\t\t}\r\n\r\n\t\tif (nBlocks !== 0) {\r\n\t\t\tfirstElem.toArray(r, 0);\r\n\r\n\t\t\tfor (let i = 1, offset = 0; i !== nBlocks; ++i) {\r\n\t\t\t\toffset += blockSize;\r\n\t\t\t\tarray[i].toArray(r, offset);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn r;\r\n\t}\r\n\r\n\tfunction arraysEqual(a, b) {\r\n\t\tif (a.length !== b.length) return false;\r\n\r\n\t\tfor (let i = 0, l = a.length; i < l; i++) {\r\n\t\t\tif (a[i] !== b[i]) return false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction copyArray(a, b) {\r\n\t\tfor (let i = 0, l = b.length; i < l; i++) {\r\n\t\t\ta[i] = b[i];\r\n\t\t}\r\n\t} // Texture unit allocation\r\n\r\n\r\n\tfunction allocTexUnits(textures, n) {\r\n\t\tlet r = arrayCacheI32[n];\r\n\r\n\t\tif (r === undefined) {\r\n\t\t\tr = new Int32Array(n);\r\n\t\t\tarrayCacheI32[n] = r;\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i !== n; ++i) {\r\n\t\t\tr[i] = textures.allocateTextureUnit();\r\n\t\t}\r\n\r\n\t\treturn r;\r\n\t} // --- Setters ---\r\n\t// Note: Defining these methods externally, because they come in a bunch\r\n\t// and this way their names minify.\r\n\t// Single scalar\r\n\r\n\r\n\tfunction setValueV1f(gl, v) {\r\n\t\tconst cache = this.cache;\r\n\t\tif (cache[0] === v) return;\r\n\t\tgl.uniform1f(this.addr, v);\r\n\t\tcache[0] = v;\r\n\t} // Single float vector (from flat array or THREE.VectorN)\r\n\r\n\r\n\tfunction setValueV2f(gl, v) {\r\n\t\tconst cache = this.cache;\r\n\r\n\t\tif (v.x !== undefined) {\r\n\t\t\tif (cache[0] !== v.x || cache[1] !== v.y) {\r\n\t\t\t\tgl.uniform2f(this.addr, v.x, v.y);\r\n\t\t\t\tcache[0] = v.x;\r\n\t\t\t\tcache[1] = v.y;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (arraysEqual(cache, v)) return;\r\n\t\t\tgl.uniform2fv(this.addr, v);\r\n\t\t\tcopyArray(cache, v);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction setValueV3f(gl, v) {\r\n\t\tconst cache = this.cache;\r\n\r\n\t\tif (v.x !== undefined) {\r\n\t\t\tif (cache[0] !== v.x || cache[1] !== v.y || cache[2] !== v.z) {\r\n\t\t\t\tgl.uniform3f(this.addr, v.x, v.y, v.z);\r\n\t\t\t\tcache[0] = v.x;\r\n\t\t\t\tcache[1] = v.y;\r\n\t\t\t\tcache[2] = v.z;\r\n\t\t\t}\r\n\t\t} else if (v.r !== undefined) {\r\n\t\t\tif (cache[0] !== v.r || cache[1] !== v.g || cache[2] !== v.b) {\r\n\t\t\t\tgl.uniform3f(this.addr, v.r, v.g, v.b);\r\n\t\t\t\tcache[0] = v.r;\r\n\t\t\t\tcache[1] = v.g;\r\n\t\t\t\tcache[2] = v.b;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (arraysEqual(cache, v)) return;\r\n\t\t\tgl.uniform3fv(this.addr, v);\r\n\t\t\tcopyArray(cache, v);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction setValueV4f(gl, v) {\r\n\t\tconst cache = this.cache;\r\n\r\n\t\tif (v.x !== undefined) {\r\n\t\t\tif (cache[0] !== v.x || cache[1] !== v.y || cache[2] !== v.z || cache[3] !== v.w) {\r\n\t\t\t\tgl.uniform4f(this.addr, v.x, v.y, v.z, v.w);\r\n\t\t\t\tcache[0] = v.x;\r\n\t\t\t\tcache[1] = v.y;\r\n\t\t\t\tcache[2] = v.z;\r\n\t\t\t\tcache[3] = v.w;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (arraysEqual(cache, v)) return;\r\n\t\t\tgl.uniform4fv(this.addr, v);\r\n\t\t\tcopyArray(cache, v);\r\n\t\t}\r\n\t} // Single matrix (from flat array or THREE.MatrixN)\r\n\r\n\r\n\tfunction setValueM2(gl, v) {\r\n\t\tconst cache = this.cache;\r\n\t\tconst elements = v.elements;\r\n\r\n\t\tif (elements === undefined) {\r\n\t\t\tif (arraysEqual(cache, v)) return;\r\n\t\t\tgl.uniformMatrix2fv(this.addr, false, v);\r\n\t\t\tcopyArray(cache, v);\r\n\t\t} else {\r\n\t\t\tif (arraysEqual(cache, elements)) return;\r\n\t\t\tmat2array.set(elements);\r\n\t\t\tgl.uniformMatrix2fv(this.addr, false, mat2array);\r\n\t\t\tcopyArray(cache, elements);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction setValueM3(gl, v) {\r\n\t\tconst cache = this.cache;\r\n\t\tconst elements = v.elements;\r\n\r\n\t\tif (elements === undefined) {\r\n\t\t\tif (arraysEqual(cache, v)) return;\r\n\t\t\tgl.uniformMatrix3fv(this.addr, false, v);\r\n\t\t\tcopyArray(cache, v);\r\n\t\t} else {\r\n\t\t\tif (arraysEqual(cache, elements)) return;\r\n\t\t\tmat3array.set(elements);\r\n\t\t\tgl.uniformMatrix3fv(this.addr, false, mat3array);\r\n\t\t\tcopyArray(cache, elements);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction setValueM4(gl, v) {\r\n\t\tconst cache = this.cache;\r\n\t\tconst elements = v.elements;\r\n\r\n\t\tif (elements === undefined) {\r\n\t\t\tif (arraysEqual(cache, v)) return;\r\n\t\t\tgl.uniformMatrix4fv(this.addr, false, v);\r\n\t\t\tcopyArray(cache, v);\r\n\t\t} else {\r\n\t\t\tif (arraysEqual(cache, elements)) return;\r\n\t\t\tmat4array.set(elements);\r\n\t\t\tgl.uniformMatrix4fv(this.addr, false, mat4array);\r\n\t\t\tcopyArray(cache, elements);\r\n\t\t}\r\n\t} // Single integer / boolean\r\n\r\n\r\n\tfunction setValueV1i(gl, v) {\r\n\t\tconst cache = this.cache;\r\n\t\tif (cache[0] === v) return;\r\n\t\tgl.uniform1i(this.addr, v);\r\n\t\tcache[0] = v;\r\n\t} // Single integer / boolean vector (from flat array)\r\n\r\n\r\n\tfunction setValueV2i(gl, v) {\r\n\t\tconst cache = this.cache;\r\n\t\tif (arraysEqual(cache, v)) return;\r\n\t\tgl.uniform2iv(this.addr, v);\r\n\t\tcopyArray(cache, v);\r\n\t}\r\n\r\n\tfunction setValueV3i(gl, v) {\r\n\t\tconst cache = this.cache;\r\n\t\tif (arraysEqual(cache, v)) return;\r\n\t\tgl.uniform3iv(this.addr, v);\r\n\t\tcopyArray(cache, v);\r\n\t}\r\n\r\n\tfunction setValueV4i(gl, v) {\r\n\t\tconst cache = this.cache;\r\n\t\tif (arraysEqual(cache, v)) return;\r\n\t\tgl.uniform4iv(this.addr, v);\r\n\t\tcopyArray(cache, v);\r\n\t} // Single unsigned integer\r\n\r\n\r\n\tfunction setValueV1ui(gl, v) {\r\n\t\tconst cache = this.cache;\r\n\t\tif (cache[0] === v) return;\r\n\t\tgl.uniform1ui(this.addr, v);\r\n\t\tcache[0] = v;\r\n\t} // Single unsigned integer vector (from flat array)\r\n\r\n\r\n\tfunction setValueV2ui(gl, v) {\r\n\t\tconst cache = this.cache;\r\n\t\tif (arraysEqual(cache, v)) return;\r\n\t\tgl.uniform2uiv(this.addr, v);\r\n\t\tcopyArray(cache, v);\r\n\t}\r\n\r\n\tfunction setValueV3ui(gl, v) {\r\n\t\tconst cache = this.cache;\r\n\t\tif (arraysEqual(cache, v)) return;\r\n\t\tgl.uniform3uiv(this.addr, v);\r\n\t\tcopyArray(cache, v);\r\n\t}\r\n\r\n\tfunction setValueV4ui(gl, v) {\r\n\t\tconst cache = this.cache;\r\n\t\tif (arraysEqual(cache, v)) return;\r\n\t\tgl.uniform4uiv(this.addr, v);\r\n\t\tcopyArray(cache, v);\r\n\t} // Single texture (2D / Cube)\r\n\r\n\r\n\tfunction setValueT1(gl, v, textures) {\r\n\t\tconst cache = this.cache;\r\n\t\tconst unit = textures.allocateTextureUnit();\r\n\r\n\t\tif (cache[0] !== unit) {\r\n\t\t\tgl.uniform1i(this.addr, unit);\r\n\t\t\tcache[0] = unit;\r\n\t\t}\r\n\r\n\t\ttextures.safeSetTexture2D(v || emptyTexture, unit);\r\n\t}\r\n\r\n\tfunction setValueT3D1(gl, v, textures) {\r\n\t\tconst cache = this.cache;\r\n\t\tconst unit = textures.allocateTextureUnit();\r\n\r\n\t\tif (cache[0] !== unit) {\r\n\t\t\tgl.uniform1i(this.addr, unit);\r\n\t\t\tcache[0] = unit;\r\n\t\t}\r\n\r\n\t\ttextures.setTexture3D(v || emptyTexture3d, unit);\r\n\t}\r\n\r\n\tfunction setValueT6(gl, v, textures) {\r\n\t\tconst cache = this.cache;\r\n\t\tconst unit = textures.allocateTextureUnit();\r\n\r\n\t\tif (cache[0] !== unit) {\r\n\t\t\tgl.uniform1i(this.addr, unit);\r\n\t\t\tcache[0] = unit;\r\n\t\t}\r\n\r\n\t\ttextures.safeSetTextureCube(v || emptyCubeTexture, unit);\r\n\t}\r\n\r\n\tfunction setValueT2DArray1(gl, v, textures) {\r\n\t\tconst cache = this.cache;\r\n\t\tconst unit = textures.allocateTextureUnit();\r\n\r\n\t\tif (cache[0] !== unit) {\r\n\t\t\tgl.uniform1i(this.addr, unit);\r\n\t\t\tcache[0] = unit;\r\n\t\t}\r\n\r\n\t\ttextures.setTexture2DArray(v || emptyTexture2dArray, unit);\r\n\t} // Helper to pick the right setter for the singular case\r\n\r\n\r\n\tfunction getSingularSetter(type) {\r\n\t\tswitch (type) {\r\n\t\t\tcase 0x1406:\r\n\t\t\t\treturn setValueV1f;\r\n\t\t\t// FLOAT\r\n\r\n\t\t\tcase 0x8b50:\r\n\t\t\t\treturn setValueV2f;\r\n\t\t\t// _VEC2\r\n\r\n\t\t\tcase 0x8b51:\r\n\t\t\t\treturn setValueV3f;\r\n\t\t\t// _VEC3\r\n\r\n\t\t\tcase 0x8b52:\r\n\t\t\t\treturn setValueV4f;\r\n\t\t\t// _VEC4\r\n\r\n\t\t\tcase 0x8b5a:\r\n\t\t\t\treturn setValueM2;\r\n\t\t\t// _MAT2\r\n\r\n\t\t\tcase 0x8b5b:\r\n\t\t\t\treturn setValueM3;\r\n\t\t\t// _MAT3\r\n\r\n\t\t\tcase 0x8b5c:\r\n\t\t\t\treturn setValueM4;\r\n\t\t\t// _MAT4\r\n\r\n\t\t\tcase 0x1404:\r\n\t\t\tcase 0x8b56:\r\n\t\t\t\treturn setValueV1i;\r\n\t\t\t// INT, BOOL\r\n\r\n\t\t\tcase 0x8b53:\r\n\t\t\tcase 0x8b57:\r\n\t\t\t\treturn setValueV2i;\r\n\t\t\t// _VEC2\r\n\r\n\t\t\tcase 0x8b54:\r\n\t\t\tcase 0x8b58:\r\n\t\t\t\treturn setValueV3i;\r\n\t\t\t// _VEC3\r\n\r\n\t\t\tcase 0x8b55:\r\n\t\t\tcase 0x8b59:\r\n\t\t\t\treturn setValueV4i;\r\n\t\t\t// _VEC4\r\n\r\n\t\t\tcase 0x1405:\r\n\t\t\t\treturn setValueV1ui;\r\n\t\t\t// UINT\r\n\r\n\t\t\tcase 0x8dc6:\r\n\t\t\t\treturn setValueV2ui;\r\n\t\t\t// _VEC2\r\n\r\n\t\t\tcase 0x8dc7:\r\n\t\t\t\treturn setValueV3ui;\r\n\t\t\t// _VEC3\r\n\r\n\t\t\tcase 0x8dc8:\r\n\t\t\t\treturn setValueV4ui;\r\n\t\t\t// _VEC4\r\n\r\n\t\t\tcase 0x8b5e: // SAMPLER_2D\r\n\r\n\t\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\r\n\r\n\t\t\tcase 0x8dca: // INT_SAMPLER_2D\r\n\r\n\t\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\r\n\r\n\t\t\tcase 0x8b62:\r\n\t\t\t\t// SAMPLER_2D_SHADOW\r\n\t\t\t\treturn setValueT1;\r\n\r\n\t\t\tcase 0x8b5f: // SAMPLER_3D\r\n\r\n\t\t\tcase 0x8dcb: // INT_SAMPLER_3D\r\n\r\n\t\t\tcase 0x8dd3:\r\n\t\t\t\t// UNSIGNED_INT_SAMPLER_3D\r\n\t\t\t\treturn setValueT3D1;\r\n\r\n\t\t\tcase 0x8b60: // SAMPLER_CUBE\r\n\r\n\t\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\r\n\r\n\t\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\r\n\r\n\t\t\tcase 0x8dc5:\r\n\t\t\t\t// SAMPLER_CUBE_SHADOW\r\n\t\t\t\treturn setValueT6;\r\n\r\n\t\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\r\n\r\n\t\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\r\n\r\n\t\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\r\n\r\n\t\t\tcase 0x8dc4:\r\n\t\t\t\t// SAMPLER_2D_ARRAY_SHADOW\r\n\t\t\t\treturn setValueT2DArray1;\r\n\t\t}\r\n\t} // Array of scalars\r\n\r\n\r\n\tfunction setValueV1fArray(gl, v) {\r\n\t\tgl.uniform1fv(this.addr, v);\r\n\t} // Array of vectors (from flat array or array of THREE.VectorN)\r\n\r\n\r\n\tfunction setValueV2fArray(gl, v) {\r\n\t\tconst data = flatten(v, this.size, 2);\r\n\t\tgl.uniform2fv(this.addr, data);\r\n\t}\r\n\r\n\tfunction setValueV3fArray(gl, v) {\r\n\t\tconst data = flatten(v, this.size, 3);\r\n\t\tgl.uniform3fv(this.addr, data);\r\n\t}\r\n\r\n\tfunction setValueV4fArray(gl, v) {\r\n\t\tconst data = flatten(v, this.size, 4);\r\n\t\tgl.uniform4fv(this.addr, data);\r\n\t} // Array of matrices (from flat array or array of THREE.MatrixN)\r\n\r\n\r\n\tfunction setValueM2Array(gl, v) {\r\n\t\tconst data = flatten(v, this.size, 4);\r\n\t\tgl.uniformMatrix2fv(this.addr, false, data);\r\n\t}\r\n\r\n\tfunction setValueM3Array(gl, v) {\r\n\t\tconst data = flatten(v, this.size, 9);\r\n\t\tgl.uniformMatrix3fv(this.addr, false, data);\r\n\t}\r\n\r\n\tfunction setValueM4Array(gl, v) {\r\n\t\tconst data = flatten(v, this.size, 16);\r\n\t\tgl.uniformMatrix4fv(this.addr, false, data);\r\n\t} // Array of integer / boolean\r\n\r\n\r\n\tfunction setValueV1iArray(gl, v) {\r\n\t\tgl.uniform1iv(this.addr, v);\r\n\t} // Array of integer / boolean vectors (from flat array)\r\n\r\n\r\n\tfunction setValueV2iArray(gl, v) {\r\n\t\tgl.uniform2iv(this.addr, v);\r\n\t}\r\n\r\n\tfunction setValueV3iArray(gl, v) {\r\n\t\tgl.uniform3iv(this.addr, v);\r\n\t}\r\n\r\n\tfunction setValueV4iArray(gl, v) {\r\n\t\tgl.uniform4iv(this.addr, v);\r\n\t} // Array of unsigned integer\r\n\r\n\r\n\tfunction setValueV1uiArray(gl, v) {\r\n\t\tgl.uniform1uiv(this.addr, v);\r\n\t} // Array of unsigned integer vectors (from flat array)\r\n\r\n\r\n\tfunction setValueV2uiArray(gl, v) {\r\n\t\tgl.uniform2uiv(this.addr, v);\r\n\t}\r\n\r\n\tfunction setValueV3uiArray(gl, v) {\r\n\t\tgl.uniform3uiv(this.addr, v);\r\n\t}\r\n\r\n\tfunction setValueV4uiArray(gl, v) {\r\n\t\tgl.uniform4uiv(this.addr, v);\r\n\t} // Array of textures (2D / Cube)\r\n\r\n\r\n\tfunction setValueT1Array(gl, v, textures) {\r\n\t\tconst n = v.length;\r\n\t\tconst units = allocTexUnits(textures, n);\r\n\t\tgl.uniform1iv(this.addr, units);\r\n\r\n\t\tfor (let i = 0; i !== n; ++i) {\r\n\t\t\ttextures.safeSetTexture2D(v[i] || emptyTexture, units[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction setValueT6Array(gl, v, textures) {\r\n\t\tconst n = v.length;\r\n\t\tconst units = allocTexUnits(textures, n);\r\n\t\tgl.uniform1iv(this.addr, units);\r\n\r\n\t\tfor (let i = 0; i !== n; ++i) {\r\n\t\t\ttextures.safeSetTextureCube(v[i] || emptyCubeTexture, units[i]);\r\n\t\t}\r\n\t} // Helper to pick the right setter for a pure (bottom-level) array\r\n\r\n\r\n\tfunction getPureArraySetter(type) {\r\n\t\tswitch (type) {\r\n\t\t\tcase 0x1406:\r\n\t\t\t\treturn setValueV1fArray;\r\n\t\t\t// FLOAT\r\n\r\n\t\t\tcase 0x8b50:\r\n\t\t\t\treturn setValueV2fArray;\r\n\t\t\t// _VEC2\r\n\r\n\t\t\tcase 0x8b51:\r\n\t\t\t\treturn setValueV3fArray;\r\n\t\t\t// _VEC3\r\n\r\n\t\t\tcase 0x8b52:\r\n\t\t\t\treturn setValueV4fArray;\r\n\t\t\t// _VEC4\r\n\r\n\t\t\tcase 0x8b5a:\r\n\t\t\t\treturn setValueM2Array;\r\n\t\t\t// _MAT2\r\n\r\n\t\t\tcase 0x8b5b:\r\n\t\t\t\treturn setValueM3Array;\r\n\t\t\t// _MAT3\r\n\r\n\t\t\tcase 0x8b5c:\r\n\t\t\t\treturn setValueM4Array;\r\n\t\t\t// _MAT4\r\n\r\n\t\t\tcase 0x1404:\r\n\t\t\tcase 0x8b56:\r\n\t\t\t\treturn setValueV1iArray;\r\n\t\t\t// INT, BOOL\r\n\r\n\t\t\tcase 0x8b53:\r\n\t\t\tcase 0x8b57:\r\n\t\t\t\treturn setValueV2iArray;\r\n\t\t\t// _VEC2\r\n\r\n\t\t\tcase 0x8b54:\r\n\t\t\tcase 0x8b58:\r\n\t\t\t\treturn setValueV3iArray;\r\n\t\t\t// _VEC3\r\n\r\n\t\t\tcase 0x8b55:\r\n\t\t\tcase 0x8b59:\r\n\t\t\t\treturn setValueV4iArray;\r\n\t\t\t// _VEC4\r\n\r\n\t\t\tcase 0x1405:\r\n\t\t\t\treturn setValueV1uiArray;\r\n\t\t\t// UINT\r\n\r\n\t\t\tcase 0x8dc6:\r\n\t\t\t\treturn setValueV2uiArray;\r\n\t\t\t// _VEC2\r\n\r\n\t\t\tcase 0x8dc7:\r\n\t\t\t\treturn setValueV3uiArray;\r\n\t\t\t// _VEC3\r\n\r\n\t\t\tcase 0x8dc8:\r\n\t\t\t\treturn setValueV4uiArray;\r\n\t\t\t// _VEC4\r\n\r\n\t\t\tcase 0x8b5e: // SAMPLER_2D\r\n\r\n\t\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\r\n\r\n\t\t\tcase 0x8dca: // INT_SAMPLER_2D\r\n\r\n\t\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\r\n\r\n\t\t\tcase 0x8b62:\r\n\t\t\t\t// SAMPLER_2D_SHADOW\r\n\t\t\t\treturn setValueT1Array;\r\n\r\n\t\t\tcase 0x8b60: // SAMPLER_CUBE\r\n\r\n\t\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\r\n\r\n\t\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\r\n\r\n\t\t\tcase 0x8dc5:\r\n\t\t\t\t// SAMPLER_CUBE_SHADOW\r\n\t\t\t\treturn setValueT6Array;\r\n\t\t}\r\n\t} // --- Uniform Classes ---\r\n\r\n\r\n\tfunction SingleUniform(id, activeInfo, addr) {\r\n\t\tthis.id = id;\r\n\t\tthis.addr = addr;\r\n\t\tthis.cache = [];\r\n\t\tthis.setValue = getSingularSetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\r\n\t}\r\n\r\n\tfunction PureArrayUniform(id, activeInfo, addr) {\r\n\t\tthis.id = id;\r\n\t\tthis.addr = addr;\r\n\t\tthis.cache = [];\r\n\t\tthis.size = activeInfo.size;\r\n\t\tthis.setValue = getPureArraySetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\r\n\t}\r\n\r\n\tPureArrayUniform.prototype.updateCache = function (data) {\r\n\t\tconst cache = this.cache;\r\n\r\n\t\tif (data instanceof Float32Array && cache.length !== data.length) {\r\n\t\t\tthis.cache = new Float32Array(data.length);\r\n\t\t}\r\n\r\n\t\tcopyArray(cache, data);\r\n\t};\r\n\r\n\tfunction StructuredUniform(id) {\r\n\t\tthis.id = id;\r\n\t\tthis.seq = [];\r\n\t\tthis.map = {};\r\n\t}\r\n\r\n\tStructuredUniform.prototype.setValue = function (gl, value, textures) {\r\n\t\tconst seq = this.seq;\r\n\r\n\t\tfor (let i = 0, n = seq.length; i !== n; ++i) {\r\n\t\t\tconst u = seq[i];\r\n\t\t\tu.setValue(gl, value[u.id], textures);\r\n\t\t}\r\n\t}; // --- Top-level ---\r\n\t// Parser - builds up the property tree from the path strings\r\n\r\n\r\n\tconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g; // extracts\r\n\t// \t- the identifier (member name or array index)\r\n\t//\t- followed by an optional right bracket (found when array index)\r\n\t//\t- followed by an optional left bracket or dot (type of subscript)\r\n\t//\r\n\t// Note: These portions can be read in a non-overlapping fashion and\r\n\t// allow straightforward parsing of the hierarchy that WebGL encodes\r\n\t// in the uniform names.\r\n\r\n\tfunction addUniform(container, uniformObject) {\r\n\t\tcontainer.seq.push(uniformObject);\r\n\t\tcontainer.map[uniformObject.id] = uniformObject;\r\n\t}\r\n\r\n\tfunction parseUniform(activeInfo, addr, container) {\r\n\t\tconst path = activeInfo.name,\r\n\t\t\t\t\tpathLength = path.length; // reset RegExp object, because of the early exit of a previous run\r\n\r\n\t\tRePathPart.lastIndex = 0;\r\n\r\n\t\twhile (true) {\r\n\t\t\tconst match = RePathPart.exec(path),\r\n\t\t\t\t\t\tmatchEnd = RePathPart.lastIndex;\r\n\t\t\tlet id = match[1];\r\n\t\t\tconst idIsIndex = match[2] === ']',\r\n\t\t\t\t\t\tsubscript = match[3];\r\n\t\t\tif (idIsIndex) id = id | 0; // convert to integer\r\n\r\n\t\t\tif (subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength) {\r\n\t\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\r\n\t\t\t\taddUniform(container, subscript === undefined ? new SingleUniform(id, activeInfo, addr) : new PureArrayUniform(id, activeInfo, addr));\r\n\t\t\t\tbreak;\r\n\t\t\t} else {\r\n\t\t\t\t// step into inner node / create it in case it doesn't exist\r\n\t\t\t\tconst map = container.map;\r\n\t\t\t\tlet next = map[id];\r\n\r\n\t\t\t\tif (next === undefined) {\r\n\t\t\t\t\tnext = new StructuredUniform(id);\r\n\t\t\t\t\taddUniform(container, next);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcontainer = next;\r\n\t\t\t}\r\n\t\t}\r\n\t} // Root Container\r\n\r\n\r\n\tfunction WebGLUniforms(gl, program) {\r\n\t\tthis.seq = [];\r\n\t\tthis.map = {};\r\n\t\tconst n = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\r\n\r\n\t\tfor (let i = 0; i < n; ++i) {\r\n\t\t\tconst info = gl.getActiveUniform(program, i),\r\n\t\t\t\t\t\taddr = gl.getUniformLocation(program, info.name);\r\n\t\t\tparseUniform(info, addr, this);\r\n\t\t}\r\n\t}\r\n\r\n\tWebGLUniforms.prototype.setValue = function (gl, name, value, textures) {\r\n\t\tconst u = this.map[name];\r\n\t\tif (u !== undefined) u.setValue(gl, value, textures);\r\n\t};\r\n\r\n\tWebGLUniforms.prototype.setOptional = function (gl, object, name) {\r\n\t\tconst v = object[name];\r\n\t\tif (v !== undefined) this.setValue(gl, name, v);\r\n\t}; // Static interface\r\n\r\n\r\n\tWebGLUniforms.upload = function (gl, seq, values, textures) {\r\n\t\tfor (let i = 0, n = seq.length; i !== n; ++i) {\r\n\t\t\tconst u = seq[i],\r\n\t\t\t\t\t\tv = values[u.id];\r\n\r\n\t\t\tif (v.needsUpdate !== false) {\r\n\t\t\t\t// note: always updating when .needsUpdate is undefined\r\n\t\t\t\tu.setValue(gl, v.value, textures);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tWebGLUniforms.seqWithValue = function (seq, values) {\r\n\t\tconst r = [];\r\n\r\n\t\tfor (let i = 0, n = seq.length; i !== n; ++i) {\r\n\t\t\tconst u = seq[i];\r\n\t\t\tif (u.id in values) r.push(u);\r\n\t\t}\r\n\r\n\t\treturn r;\r\n\t};\r\n\r\n\tfunction WebGLShader(gl, type, string) {\r\n\t\tconst shader = gl.createShader(type);\r\n\t\tgl.shaderSource(shader, string);\r\n\t\tgl.compileShader(shader);\r\n\t\treturn shader;\r\n\t}\r\n\r\n\tlet programIdCount = 0;\r\n\r\n\tfunction addLineNumbers(string) {\r\n\t\tconst lines = string.split('\\n');\r\n\r\n\t\tfor (let i = 0; i < lines.length; i++) {\r\n\t\t\tlines[i] = i + 1 + ': ' + lines[i];\r\n\t\t}\r\n\r\n\t\treturn lines.join('\\n');\r\n\t}\r\n\r\n\tfunction getEncodingComponents(encoding) {\r\n\t\tswitch (encoding) {\r\n\t\t\tcase LinearEncoding:\r\n\t\t\t\treturn ['Linear', '( value )'];\r\n\r\n\t\t\tcase sRGBEncoding:\r\n\t\t\t\treturn ['sRGB', '( value )'];\r\n\r\n\t\t\tcase RGBEEncoding:\r\n\t\t\t\treturn ['RGBE', '( value )'];\r\n\r\n\t\t\tcase RGBM7Encoding:\r\n\t\t\t\treturn ['RGBM', '( value, 7.0 )'];\r\n\r\n\t\t\tcase RGBM16Encoding:\r\n\t\t\t\treturn ['RGBM', '( value, 16.0 )'];\r\n\r\n\t\t\tcase RGBDEncoding:\r\n\t\t\t\treturn ['RGBD', '( value, 256.0 )'];\r\n\r\n\t\t\tcase GammaEncoding:\r\n\t\t\t\treturn ['Gamma', '( value, float( GAMMA_FACTOR ) )'];\r\n\r\n\t\t\tcase LogLuvEncoding:\r\n\t\t\t\treturn ['LogLuv', '( value )'];\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.warn('THREE.WebGLProgram: Unsupported encoding:', encoding);\r\n\t\t\t\treturn ['Linear', '( value )'];\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getShaderErrors(gl, shader, type) {\r\n\t\tconst status = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n\t\tconst log = gl.getShaderInfoLog(shader).trim();\r\n\t\tif (status && log === '') return ''; // --enable-privileged-webgl-extension\r\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\r\n\r\n\t\tconst source = gl.getShaderSource(shader);\r\n\t\treturn 'THREE.WebGLShader: gl.getShaderInfoLog() ' + type + '\\n' + log + addLineNumbers(source);\r\n\t}\r\n\r\n\tfunction getTexelDecodingFunction(functionName, encoding) {\r\n\t\tconst components = getEncodingComponents(encoding);\r\n\t\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[0] + 'ToLinear' + components[1] + '; }';\r\n\t}\r\n\r\n\tfunction getTexelEncodingFunction(functionName, encoding) {\r\n\t\tconst components = getEncodingComponents(encoding);\r\n\t\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[0] + components[1] + '; }';\r\n\t}\r\n\r\n\tfunction getToneMappingFunction(functionName, toneMapping) {\r\n\t\tlet toneMappingName;\r\n\r\n\t\tswitch (toneMapping) {\r\n\t\t\tcase LinearToneMapping:\r\n\t\t\t\ttoneMappingName = 'Linear';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ReinhardToneMapping:\r\n\t\t\t\ttoneMappingName = 'Reinhard';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase CineonToneMapping:\r\n\t\t\t\ttoneMappingName = 'OptimizedCineon';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ACESFilmicToneMapping:\r\n\t\t\t\ttoneMappingName = 'ACESFilmic';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase CustomToneMapping:\r\n\t\t\t\ttoneMappingName = 'Custom';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.warn('THREE.WebGLProgram: Unsupported toneMapping:', toneMapping);\r\n\t\t\t\ttoneMappingName = 'Linear';\r\n\t\t}\r\n\r\n\t\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\r\n\t}\r\n\r\n\tfunction generateExtensions(parameters) {\r\n\t\tconst chunks = [parameters.extensionDerivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ? '#extension GL_OES_standard_derivatives : enable' : '', (parameters.extensionFragDepth || parameters.logarithmicDepthBuffer) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '', parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ? '#extension GL_EXT_draw_buffers : require' : '', (parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission > 0.0) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''];\r\n\t\treturn chunks.filter(filterEmptyLine).join('\\n');\r\n\t}\r\n\r\n\tfunction generateDefines(defines) {\r\n\t\tconst chunks = [];\r\n\r\n\t\tfor (const name in defines) {\r\n\t\t\tconst value = defines[name];\r\n\t\t\tif (value === false) continue;\r\n\t\t\tchunks.push('#define ' + name + ' ' + value);\r\n\t\t}\r\n\r\n\t\treturn chunks.join('\\n');\r\n\t}\r\n\r\n\tfunction fetchAttributeLocations(gl, program) {\r\n\t\tconst attributes = {};\r\n\t\tconst n = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\r\n\r\n\t\tfor (let i = 0; i < n; i++) {\r\n\t\t\tconst info = gl.getActiveAttrib(program, i);\r\n\t\t\tconst name = info.name; // console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\r\n\r\n\t\t\tattributes[name] = gl.getAttribLocation(program, name);\r\n\t\t}\r\n\r\n\t\treturn attributes;\r\n\t}\r\n\r\n\tfunction filterEmptyLine(string) {\r\n\t\treturn string !== '';\r\n\t}\r\n\r\n\tfunction replaceLightNums(string, parameters) {\r\n\t\treturn string.replace(/NUM_DIR_LIGHTS/g, parameters.numDirLights).replace(/NUM_SPOT_LIGHTS/g, parameters.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, parameters.numPointLights).replace(/NUM_HEMI_LIGHTS/g, parameters.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows);\r\n\t}\r\n\r\n\tfunction replaceClippingPlaneNums(string, parameters) {\r\n\t\treturn string.replace(/NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, parameters.numClippingPlanes - parameters.numClipIntersection);\r\n\t} // Resolve Includes\r\n\r\n\r\n\tconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\r\n\r\n\tfunction resolveIncludes(string) {\r\n\t\treturn string.replace(includePattern, includeReplacer);\r\n\t}\r\n\r\n\tfunction includeReplacer(match, include) {\r\n\t\tconst string = ShaderChunk[include];\r\n\r\n\t\tif (string === undefined) {\r\n\t\t\tthrow new Error('Can not resolve #include <' + include + '>');\r\n\t\t}\r\n\r\n\t\treturn resolveIncludes(string);\r\n\t} // Unroll Loops\r\n\r\n\r\n\tconst deprecatedUnrollLoopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\r\n\tconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\r\n\r\n\tfunction unrollLoops(string) {\r\n\t\treturn string.replace(unrollLoopPattern, loopReplacer).replace(deprecatedUnrollLoopPattern, deprecatedLoopReplacer);\r\n\t}\r\n\r\n\tfunction deprecatedLoopReplacer(match, start, end, snippet) {\r\n\t\tconsole.warn('WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.');\r\n\t\treturn loopReplacer(match, start, end, snippet);\r\n\t}\r\n\r\n\tfunction loopReplacer(match, start, end, snippet) {\r\n\t\tlet string = '';\r\n\r\n\t\tfor (let i = parseInt(start); i < parseInt(end); i++) {\r\n\t\t\tstring += snippet.replace(/\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]').replace(/UNROLLED_LOOP_INDEX/g, i);\r\n\t\t}\r\n\r\n\t\treturn string;\r\n\t} //\r\n\r\n\r\n\tfunction generatePrecision(parameters) {\r\n\t\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\r\n\r\n\t\tif (parameters.precision === 'highp') {\r\n\t\t\tprecisionstring += '\\n#define HIGH_PRECISION';\r\n\t\t} else if (parameters.precision === 'mediump') {\r\n\t\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\r\n\t\t} else if (parameters.precision === 'lowp') {\r\n\t\t\tprecisionstring += '\\n#define LOW_PRECISION';\r\n\t\t}\r\n\r\n\t\treturn precisionstring;\r\n\t}\r\n\r\n\tfunction generateShadowMapTypeDefine(parameters) {\r\n\t\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\r\n\r\n\t\tif (parameters.shadowMapType === PCFShadowMap) {\r\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\r\n\t\t} else if (parameters.shadowMapType === PCFSoftShadowMap) {\r\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\r\n\t\t} else if (parameters.shadowMapType === VSMShadowMap) {\r\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\r\n\t\t}\r\n\r\n\t\treturn shadowMapTypeDefine;\r\n\t}\r\n\r\n\tfunction generateEnvMapTypeDefine(parameters) {\r\n\t\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\r\n\t\tif (parameters.envMap) {\r\n\t\t\tswitch (parameters.envMapMode) {\r\n\t\t\t\tcase CubeReflectionMapping:\r\n\t\t\t\tcase CubeRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase CubeUVReflectionMapping:\r\n\t\t\t\tcase CubeUVRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn envMapTypeDefine;\r\n\t}\r\n\r\n\tfunction generateEnvMapModeDefine(parameters) {\r\n\t\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\r\n\r\n\t\tif (parameters.envMap) {\r\n\t\t\tswitch (parameters.envMapMode) {\r\n\t\t\t\tcase CubeRefractionMapping:\r\n\t\t\t\tcase CubeUVRefractionMapping:\r\n\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn envMapModeDefine;\r\n\t}\r\n\r\n\tfunction generateEnvMapBlendingDefine(parameters) {\r\n\t\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\r\n\r\n\t\tif (parameters.envMap) {\r\n\t\t\tswitch (parameters.combine) {\r\n\t\t\t\tcase MultiplyOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase MixOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase AddOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn envMapBlendingDefine;\r\n\t}\r\n\r\n\tfunction WebGLProgram(renderer, cacheKey, parameters, bindingStates) {\r\n\t\tconst gl = renderer.getContext();\r\n\t\tconst defines = parameters.defines;\r\n\t\tlet vertexShader = parameters.vertexShader;\r\n\t\tlet fragmentShader = parameters.fragmentShader;\r\n\t\tconst shadowMapTypeDefine = generateShadowMapTypeDefine(parameters);\r\n\t\tconst envMapTypeDefine = generateEnvMapTypeDefine(parameters);\r\n\t\tconst envMapModeDefine = generateEnvMapModeDefine(parameters);\r\n\t\tconst envMapBlendingDefine = generateEnvMapBlendingDefine(parameters);\r\n\t\tconst gammaFactorDefine = renderer.gammaFactor > 0 ? renderer.gammaFactor : 1.0;\r\n\t\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions(parameters);\r\n\t\tconst customDefines = generateDefines(defines);\r\n\t\tconst program = gl.createProgram();\r\n\t\tlet prefixVertex, prefixFragment;\r\n\t\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\r\n\r\n\t\tif (parameters.isRawShaderMaterial) {\r\n\t\t\tprefixVertex = [customDefines].filter(filterEmptyLine).join('\\n');\r\n\r\n\t\t\tif (prefixVertex.length > 0) {\r\n\t\t\t\tprefixVertex += '\\n';\r\n\t\t\t}\r\n\r\n\t\t\tprefixFragment = [customExtensions, customDefines].filter(filterEmptyLine).join('\\n');\r\n\r\n\t\t\tif (prefixFragment.length > 0) {\r\n\t\t\t\tprefixFragment += '\\n';\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tprefixVertex = [generatePrecision(parameters), '#define SHADER_NAME ' + parameters.shaderName, customDefines, parameters.instancing ? '#define USE_INSTANCING' : '', parameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '', parameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '', '#define GAMMA_FACTOR ' + gammaFactorDefine, '#define MAX_BONES ' + parameters.maxBones, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.normalMap && parameters.objectSpaceNormalMap ? '#define OBJECTSPACE_NORMALMAP' : '', parameters.normalMap && parameters.tangentSpaceNormalMap ? '#define TANGENTSPACE_NORMALMAP' : '', parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '', parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '', parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '', parameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '', parameters.specularTintMap ? '#define USE_SPECULARTINTMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.transmission ? '#define USE_TRANSMISSION' : '', parameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '', parameters.thicknessMap ? '#define USE_THICKNESSMAP' : '', parameters.vertexTangents ? '#define USE_TANGENT' : '', parameters.vertexColors ? '#define USE_COLOR' : '', parameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '', parameters.vertexUvs ? '#define USE_UV' : '', parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.skinning ? '#define USE_SKINNING' : '', parameters.useVertexTexture ? '#define BONE_TEXTURE' : '', parameters.morphTargets ? '#define USE_MORPHTARGETS' : '', parameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ? '#define USE_LOGDEPTHBUF_EXT' : '', 'uniform mat4 modelMatrix;', 'uniform mat4 modelViewMatrix;', 'uniform mat4 projectionMatrix;', 'uniform mat4 viewMatrix;', 'uniform mat3 normalMatrix;', 'uniform vec3 cameraPosition;', 'uniform bool isOrthographic;', '#ifdef USE_INSTANCING', '\tattribute mat4 instanceMatrix;', '#endif', '#ifdef USE_INSTANCING_COLOR', '\tattribute vec3 instanceColor;', '#endif', 'attribute vec3 position;', 'attribute vec3 normal;', 'attribute vec2 uv;', '#ifdef USE_TANGENT', '\tattribute vec4 tangent;', '#endif', '#if defined( USE_COLOR_ALPHA )', '\tattribute vec4 color;', '#elif defined( USE_COLOR )', '\tattribute vec3 color;', '#endif', '#ifdef USE_MORPHTARGETS', '\tattribute vec3 morphTarget0;', '\tattribute vec3 morphTarget1;', '\tattribute vec3 morphTarget2;', '\tattribute vec3 morphTarget3;', '\t#ifdef USE_MORPHNORMALS', '\t\tattribute vec3 morphNormal0;', '\t\tattribute vec3 morphNormal1;', '\t\tattribute vec3 morphNormal2;', '\t\tattribute vec3 morphNormal3;', '\t#else', '\t\tattribute vec3 morphTarget4;', '\t\tattribute vec3 morphTarget5;', '\t\tattribute vec3 morphTarget6;', '\t\tattribute vec3 morphTarget7;', '\t#endif', '#endif', '#ifdef USE_SKINNING', '\tattribute vec4 skinIndex;', '\tattribute vec4 skinWeight;', '#endif', '\\n'].filter(filterEmptyLine).join('\\n');\r\n\t\t\tprefixFragment = [customExtensions, generatePrecision(parameters), '#define SHADER_NAME ' + parameters.shaderName, customDefines, parameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + (parameters.alphaTest % 1 ? '' : '.0') : '', // add '.0' if integer\r\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.matcap ? '#define USE_MATCAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapTypeDefine : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.envMap ? '#define ' + envMapBlendingDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.normalMap && parameters.objectSpaceNormalMap ? '#define OBJECTSPACE_NORMALMAP' : '', parameters.normalMap && parameters.tangentSpaceNormalMap ? '#define TANGENTSPACE_NORMALMAP' : '', parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '', parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '', parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '', parameters.specularTintMap ? '#define USE_SPECULARTINTMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.sheen ? '#define USE_SHEEN' : '', parameters.transmission ? '#define USE_TRANSMISSION' : '', parameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '', parameters.thicknessMap ? '#define USE_THICKNESSMAP' : '', parameters.vertexTangents ? '#define USE_TANGENT' : '', parameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '', parameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '', parameters.vertexUvs ? '#define USE_UV' : '', parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '', parameters.gradientMap ? '#define USE_GRADIENTMAP' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '', parameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ? '#define USE_LOGDEPTHBUF_EXT' : '', (parameters.extensionShaderTextureLOD || parameters.envMap) && parameters.rendererExtensionShaderTextureLod ? '#define TEXTURE_LOD_EXT' : '', 'uniform mat4 viewMatrix;', 'uniform vec3 cameraPosition;', 'uniform bool isOrthographic;', parameters.toneMapping !== NoToneMapping ? '#define TONE_MAPPING' : '', parameters.toneMapping !== NoToneMapping ? ShaderChunk['tonemapping_pars_fragment'] : '', // this code is required here because it is used by the toneMapping() function defined below\r\n\t\t\tparameters.toneMapping !== NoToneMapping ? getToneMappingFunction('toneMapping', parameters.toneMapping) : '', parameters.dithering ? '#define DITHERING' : '', ShaderChunk['encodings_pars_fragment'], // this code is required here because it is used by the various encoding/decoding function defined below\r\n\t\t\tparameters.map ? getTexelDecodingFunction('mapTexelToLinear', parameters.mapEncoding) : '', parameters.matcap ? getTexelDecodingFunction('matcapTexelToLinear', parameters.matcapEncoding) : '', parameters.envMap ? getTexelDecodingFunction('envMapTexelToLinear', parameters.envMapEncoding) : '', parameters.emissiveMap ? getTexelDecodingFunction('emissiveMapTexelToLinear', parameters.emissiveMapEncoding) : '', parameters.specularTintMap ? getTexelDecodingFunction('specularTintMapTexelToLinear', parameters.specularTintMapEncoding) : '', parameters.lightMap ? getTexelDecodingFunction('lightMapTexelToLinear', parameters.lightMapEncoding) : '', getTexelEncodingFunction('linearToOutputTexel', parameters.outputEncoding), parameters.depthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '', '\\n'].filter(filterEmptyLine).join('\\n');\r\n\t\t}\r\n\r\n\t\tvertexShader = resolveIncludes(vertexShader);\r\n\t\tvertexShader = replaceLightNums(vertexShader, parameters);\r\n\t\tvertexShader = replaceClippingPlaneNums(vertexShader, parameters);\r\n\t\tfragmentShader = resolveIncludes(fragmentShader);\r\n\t\tfragmentShader = replaceLightNums(fragmentShader, parameters);\r\n\t\tfragmentShader = replaceClippingPlaneNums(fragmentShader, parameters);\r\n\t\tvertexShader = unrollLoops(vertexShader);\r\n\t\tfragmentShader = unrollLoops(fragmentShader);\r\n\r\n\t\tif (parameters.isWebGL2 && parameters.isRawShaderMaterial !== true) {\r\n\t\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\r\n\t\t\tversionString = '#version 300 es\\n';\r\n\t\t\tprefixVertex = ['#define attribute in', '#define varying out', '#define texture2D texture'].join('\\n') + '\\n' + prefixVertex;\r\n\t\t\tprefixFragment = ['#define varying in', parameters.glslVersion === GLSL3 ? '' : 'out highp vec4 pc_fragColor;', parameters.glslVersion === GLSL3 ? '' : '#define gl_FragColor pc_fragColor', '#define gl_FragDepthEXT gl_FragDepth', '#define texture2D texture', '#define textureCube texture', '#define texture2DProj textureProj', '#define texture2DLodEXT textureLod', '#define texture2DProjLodEXT textureProjLod', '#define textureCubeLodEXT textureLod', '#define texture2DGradEXT textureGrad', '#define texture2DProjGradEXT textureProjGrad', '#define textureCubeGradEXT textureGrad'].join('\\n') + '\\n' + prefixFragment;\r\n\t\t}\r\n\r\n\t\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\r\n\t\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader; // console.log( '*VERTEX*', vertexGlsl );\r\n\t\t// console.log( '*FRAGMENT*', fragmentGlsl );\r\n\r\n\t\tconst glVertexShader = WebGLShader(gl, gl.VERTEX_SHADER, vertexGlsl);\r\n\t\tconst glFragmentShader = WebGLShader(gl, gl.FRAGMENT_SHADER, fragmentGlsl);\r\n\t\tgl.attachShader(program, glVertexShader);\r\n\t\tgl.attachShader(program, glFragmentShader); // Force a particular attribute to index 0.\r\n\r\n\t\tif (parameters.index0AttributeName !== undefined) {\r\n\t\t\tgl.bindAttribLocation(program, 0, parameters.index0AttributeName);\r\n\t\t} else if (parameters.morphTargets === true) {\r\n\t\t\t// programs with morphTargets displace position out of attribute 0\r\n\t\t\tgl.bindAttribLocation(program, 0, 'position');\r\n\t\t}\r\n\r\n\t\tgl.linkProgram(program); // check for link errors\r\n\r\n\t\tif (renderer.debug.checkShaderErrors) {\r\n\t\t\tconst programLog = gl.getProgramInfoLog(program).trim();\r\n\t\t\tconst vertexLog = gl.getShaderInfoLog(glVertexShader).trim();\r\n\t\t\tconst fragmentLog = gl.getShaderInfoLog(glFragmentShader).trim();\r\n\t\t\tlet runnable = true;\r\n\t\t\tlet haveDiagnostics = true;\r\n\r\n\t\t\tif (gl.getProgramParameter(program, gl.LINK_STATUS) === false) {\r\n\t\t\t\trunnable = false;\r\n\t\t\t\tconst vertexErrors = getShaderErrors(gl, glVertexShader, 'vertex');\r\n\t\t\t\tconst fragmentErrors = getShaderErrors(gl, glFragmentShader, 'fragment');\r\n\t\t\t\tconsole.error('THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter(program, gl.VALIDATE_STATUS), 'gl.getProgramInfoLog', programLog, vertexErrors, fragmentErrors);\r\n\t\t\t} else if (programLog !== '') {\r\n\t\t\t\tconsole.warn('THREE.WebGLProgram: gl.getProgramInfoLog()', programLog);\r\n\t\t\t} else if (vertexLog === '' || fragmentLog === '') {\r\n\t\t\t\thaveDiagnostics = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (haveDiagnostics) {\r\n\t\t\t\tthis.diagnostics = {\r\n\t\t\t\t\trunnable: runnable,\r\n\t\t\t\t\tprogramLog: programLog,\r\n\t\t\t\t\tvertexShader: {\r\n\t\t\t\t\t\tlog: vertexLog,\r\n\t\t\t\t\t\tprefix: prefixVertex\r\n\t\t\t\t\t},\r\n\t\t\t\t\tfragmentShader: {\r\n\t\t\t\t\t\tlog: fragmentLog,\r\n\t\t\t\t\t\tprefix: prefixFragment\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t} // Clean up\r\n\t\t// Crashes in iOS9 and iOS10. #18402\r\n\t\t// gl.detachShader( program, glVertexShader );\r\n\t\t// gl.detachShader( program, glFragmentShader );\r\n\r\n\r\n\t\tgl.deleteShader(glVertexShader);\r\n\t\tgl.deleteShader(glFragmentShader); // set up caching for uniform locations\r\n\r\n\t\tlet cachedUniforms;\r\n\r\n\t\tthis.getUniforms = function () {\r\n\t\t\tif (cachedUniforms === undefined) {\r\n\t\t\t\tcachedUniforms = new WebGLUniforms(gl, program);\r\n\t\t\t}\r\n\r\n\t\t\treturn cachedUniforms;\r\n\t\t}; // set up caching for attribute locations\r\n\r\n\r\n\t\tlet cachedAttributes;\r\n\r\n\t\tthis.getAttributes = function () {\r\n\t\t\tif (cachedAttributes === undefined) {\r\n\t\t\t\tcachedAttributes = fetchAttributeLocations(gl, program);\r\n\t\t\t}\r\n\r\n\t\t\treturn cachedAttributes;\r\n\t\t}; // free resource\r\n\r\n\r\n\t\tthis.destroy = function () {\r\n\t\t\tbindingStates.releaseStatesOfProgram(this);\r\n\t\t\tgl.deleteProgram(program);\r\n\t\t\tthis.program = undefined;\r\n\t\t}; //\r\n\r\n\r\n\t\tthis.name = parameters.shaderName;\r\n\t\tthis.id = programIdCount++;\r\n\t\tthis.cacheKey = cacheKey;\r\n\t\tthis.usedTimes = 1;\r\n\t\tthis.program = program;\r\n\t\tthis.vertexShader = glVertexShader;\r\n\t\tthis.fragmentShader = glFragmentShader;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tfunction WebGLPrograms(renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping) {\r\n\t\tconst programs = [];\r\n\t\tconst isWebGL2 = capabilities.isWebGL2;\r\n\t\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\r\n\t\tconst floatVertexTextures = capabilities.floatVertexTextures;\r\n\t\tconst maxVertexUniforms = capabilities.maxVertexUniforms;\r\n\t\tconst vertexTextures = capabilities.vertexTextures;\r\n\t\tlet precision = capabilities.precision;\r\n\t\tconst shaderIDs = {\r\n\t\t\tMeshDepthMaterial: 'depth',\r\n\t\t\tMeshDistanceMaterial: 'distanceRGBA',\r\n\t\t\tMeshNormalMaterial: 'normal',\r\n\t\t\tMeshBasicMaterial: 'basic',\r\n\t\t\tMeshLambertMaterial: 'lambert',\r\n\t\t\tMeshPhongMaterial: 'phong',\r\n\t\t\tMeshToonMaterial: 'toon',\r\n\t\t\tMeshStandardMaterial: 'physical',\r\n\t\t\tMeshPhysicalMaterial: 'physical',\r\n\t\t\tMeshMatcapMaterial: 'matcap',\r\n\t\t\tLineBasicMaterial: 'basic',\r\n\t\t\tLineDashedMaterial: 'dashed',\r\n\t\t\tPointsMaterial: 'points',\r\n\t\t\tShadowMaterial: 'shadow',\r\n\t\t\tSpriteMaterial: 'sprite'\r\n\t\t};\r\n\t\tconst parameterNames = ['precision', 'isWebGL2', 'supportsVertexTextures', 'outputEncoding', 'instancing', 'instancingColor', 'map', 'mapEncoding', 'matcap', 'matcapEncoding', 'envMap', 'envMapMode', 'envMapEncoding', 'envMapCubeUV', 'lightMap', 'lightMapEncoding', 'aoMap', 'emissiveMap', 'emissiveMapEncoding', 'bumpMap', 'normalMap', 'objectSpaceNormalMap', 'tangentSpaceNormalMap', 'clearcoatMap', 'clearcoatRoughnessMap', 'clearcoatNormalMap', 'displacementMap', 'specularMap', 'specularIntensityMap', 'specularTintMap', 'specularTintMapEncoding', 'roughnessMap', 'metalnessMap', 'gradientMap', 'alphaMap', 'combine', 'vertexColors', 'vertexAlphas', 'vertexTangents', 'vertexUvs', 'uvsVertexOnly', 'fog', 'useFog', 'fogExp2', 'flatShading', 'sizeAttenuation', 'logarithmicDepthBuffer', 'skinning', 'maxBones', 'useVertexTexture', 'morphTargets', 'morphNormals', 'premultipliedAlpha', 'numDirLights', 'numPointLights', 'numSpotLights', 'numHemiLights', 'numRectAreaLights', 'numDirLightShadows', 'numPointLightShadows', 'numSpotLightShadows', 'shadowMapEnabled', 'shadowMapType', 'toneMapping', 'physicallyCorrectLights', 'alphaTest', 'doubleSided', 'flipSided', 'numClippingPlanes', 'numClipIntersection', 'depthPacking', 'dithering', 'sheen', 'transmission', 'transmissionMap', 'thicknessMap'];\r\n\r\n\t\tfunction getMaxBones(object) {\r\n\t\t\tconst skeleton = object.skeleton;\r\n\t\t\tconst bones = skeleton.bones;\r\n\r\n\t\t\tif (floatVertexTextures) {\r\n\t\t\t\treturn 1024;\r\n\t\t\t} else {\r\n\t\t\t\t// default for when object is not specified\r\n\t\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\r\n\t\t\t\t//\r\n\t\t\t\t//\t- leave some extra space for other uniforms\r\n\t\t\t\t//\t- limit here is ANGLE's 254 max uniform vectors\r\n\t\t\t\t//\t\t(up to 54 should be safe)\r\n\t\t\t\tconst nVertexUniforms = maxVertexUniforms;\r\n\t\t\t\tconst nVertexMatrices = Math.floor((nVertexUniforms - 20) / 4);\r\n\t\t\t\tconst maxBones = Math.min(nVertexMatrices, bones.length);\r\n\r\n\t\t\t\tif (maxBones < bones.length) {\r\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.');\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn maxBones;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction getTextureEncodingFromMap(map) {\r\n\t\t\tlet encoding;\r\n\r\n\t\t\tif (map && map.isTexture) {\r\n\t\t\t\tencoding = map.encoding;\r\n\t\t\t} else if (map && map.isWebGLRenderTarget) {\r\n\t\t\t\tconsole.warn('THREE.WebGLPrograms.getTextureEncodingFromMap: don\\'t use render targets as textures. Use their .texture property instead.');\r\n\t\t\t\tencoding = map.texture.encoding;\r\n\t\t\t} else {\r\n\t\t\t\tencoding = LinearEncoding;\r\n\t\t\t}\r\n\r\n\t\t\treturn encoding;\r\n\t\t}\r\n\r\n\t\tfunction getParameters(material, lights, shadows, scene, object) {\r\n\t\t\tconst fog = scene.fog;\r\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\r\n\t\t\tconst envMap = (material.isMeshStandardMaterial ? cubeuvmaps : cubemaps).get(material.envMap || environment);\r\n\t\t\tconst shaderID = shaderIDs[material.type]; // heuristics to create shader parameters according to lights in the scene\r\n\t\t\t// (not to blow over maxLights budget)\r\n\r\n\t\t\tconst maxBones = object.isSkinnedMesh ? getMaxBones(object) : 0;\r\n\r\n\t\t\tif (material.precision !== null) {\r\n\t\t\t\tprecision = capabilities.getMaxPrecision(material.precision);\r\n\r\n\t\t\t\tif (precision !== material.precision) {\r\n\t\t\t\t\tconsole.warn('THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet vertexShader, fragmentShader;\r\n\r\n\t\t\tif (shaderID) {\r\n\t\t\t\tconst shader = ShaderLib[shaderID];\r\n\t\t\t\tvertexShader = shader.vertexShader;\r\n\t\t\t\tfragmentShader = shader.fragmentShader;\r\n\t\t\t} else {\r\n\t\t\t\tvertexShader = material.vertexShader;\r\n\t\t\t\tfragmentShader = material.fragmentShader;\r\n\t\t\t}\r\n\r\n\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\r\n\t\t\tconst parameters = {\r\n\t\t\t\tisWebGL2: isWebGL2,\r\n\t\t\t\tshaderID: shaderID,\r\n\t\t\t\tshaderName: material.type,\r\n\t\t\t\tvertexShader: vertexShader,\r\n\t\t\t\tfragmentShader: fragmentShader,\r\n\t\t\t\tdefines: material.defines,\r\n\t\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\r\n\t\t\t\tglslVersion: material.glslVersion,\r\n\t\t\t\tprecision: precision,\r\n\t\t\t\tinstancing: object.isInstancedMesh === true,\r\n\t\t\t\tinstancingColor: object.isInstancedMesh === true && object.instanceColor !== null,\r\n\t\t\t\tsupportsVertexTextures: vertexTextures,\r\n\t\t\t\toutputEncoding: currentRenderTarget !== null ? getTextureEncodingFromMap(currentRenderTarget.texture) : renderer.outputEncoding,\r\n\t\t\t\tmap: !!material.map,\r\n\t\t\t\tmapEncoding: getTextureEncodingFromMap(material.map),\r\n\t\t\t\tmatcap: !!material.matcap,\r\n\t\t\t\tmatcapEncoding: getTextureEncodingFromMap(material.matcap),\r\n\t\t\t\tenvMap: !!envMap,\r\n\t\t\t\tenvMapMode: envMap && envMap.mapping,\r\n\t\t\t\tenvMapEncoding: getTextureEncodingFromMap(envMap),\r\n\t\t\t\tenvMapCubeUV: !!envMap && (envMap.mapping === CubeUVReflectionMapping || envMap.mapping === CubeUVRefractionMapping),\r\n\t\t\t\tlightMap: !!material.lightMap,\r\n\t\t\t\tlightMapEncoding: getTextureEncodingFromMap(material.lightMap),\r\n\t\t\t\taoMap: !!material.aoMap,\r\n\t\t\t\temissiveMap: !!material.emissiveMap,\r\n\t\t\t\temissiveMapEncoding: getTextureEncodingFromMap(material.emissiveMap),\r\n\t\t\t\tbumpMap: !!material.bumpMap,\r\n\t\t\t\tnormalMap: !!material.normalMap,\r\n\t\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\r\n\t\t\t\ttangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\r\n\t\t\t\tclearcoatMap: !!material.clearcoatMap,\r\n\t\t\t\tclearcoatRoughnessMap: !!material.clearcoatRoughnessMap,\r\n\t\t\t\tclearcoatNormalMap: !!material.clearcoatNormalMap,\r\n\t\t\t\tdisplacementMap: !!material.displacementMap,\r\n\t\t\t\troughnessMap: !!material.roughnessMap,\r\n\t\t\t\tmetalnessMap: !!material.metalnessMap,\r\n\t\t\t\tspecularMap: !!material.specularMap,\r\n\t\t\t\tspecularIntensityMap: !!material.specularIntensityMap,\r\n\t\t\t\tspecularTintMap: !!material.specularTintMap,\r\n\t\t\t\tspecularTintMapEncoding: getTextureEncodingFromMap(material.specularTintMap),\r\n\t\t\t\talphaMap: !!material.alphaMap,\r\n\t\t\t\tgradientMap: !!material.gradientMap,\r\n\t\t\t\tsheen: !!material.sheen,\r\n\t\t\t\ttransmission: !!material.transmission,\r\n\t\t\t\ttransmissionMap: !!material.transmissionMap,\r\n\t\t\t\tthicknessMap: !!material.thicknessMap,\r\n\t\t\t\tcombine: material.combine,\r\n\t\t\t\tvertexTangents: !!material.normalMap && !!object.geometry && !!object.geometry.attributes.tangent,\r\n\t\t\t\tvertexColors: material.vertexColors,\r\n\t\t\t\tvertexAlphas: material.vertexColors === true && !!object.geometry && !!object.geometry.attributes.color && object.geometry.attributes.color.itemSize === 4,\r\n\t\t\t\tvertexUvs: !!material.map || !!material.bumpMap || !!material.normalMap || !!material.specularMap || !!material.alphaMap || !!material.emissiveMap || !!material.roughnessMap || !!material.metalnessMap || !!material.clearcoatMap || !!material.clearcoatRoughnessMap || !!material.clearcoatNormalMap || !!material.displacementMap || !!material.transmissionMap || !!material.thicknessMap || !!material.specularIntensityMap || !!material.specularTintMap,\r\n\t\t\t\tuvsVertexOnly: !(!!material.map || !!material.bumpMap || !!material.normalMap || !!material.specularMap || !!material.alphaMap || !!material.emissiveMap || !!material.roughnessMap || !!material.metalnessMap || !!material.clearcoatNormalMap || !!material.transmission || !!material.transmissionMap || !!material.thicknessMap || !!material.specularIntensityMap || !!material.specularTintMap) && !!material.displacementMap,\r\n\t\t\t\tfog: !!fog,\r\n\t\t\t\tuseFog: material.fog,\r\n\t\t\t\tfogExp2: fog && fog.isFogExp2,\r\n\t\t\t\tflatShading: !!material.flatShading,\r\n\t\t\t\tsizeAttenuation: material.sizeAttenuation,\r\n\t\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\r\n\t\t\t\tskinning: object.isSkinnedMesh === true && maxBones > 0,\r\n\t\t\t\tmaxBones: maxBones,\r\n\t\t\t\tuseVertexTexture: floatVertexTextures,\r\n\t\t\t\tmorphTargets: !!object.geometry && !!object.geometry.morphAttributes.position,\r\n\t\t\t\tmorphNormals: !!object.geometry && !!object.geometry.morphAttributes.normal,\r\n\t\t\t\tnumDirLights: lights.directional.length,\r\n\t\t\t\tnumPointLights: lights.point.length,\r\n\t\t\t\tnumSpotLights: lights.spot.length,\r\n\t\t\t\tnumRectAreaLights: lights.rectArea.length,\r\n\t\t\t\tnumHemiLights: lights.hemi.length,\r\n\t\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\r\n\t\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\r\n\t\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\r\n\t\t\t\tnumClippingPlanes: clipping.numPlanes,\r\n\t\t\t\tnumClipIntersection: clipping.numIntersection,\r\n\t\t\t\tdithering: material.dithering,\r\n\t\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\r\n\t\t\t\tshadowMapType: renderer.shadowMap.type,\r\n\t\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\r\n\t\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\r\n\t\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\r\n\t\t\t\talphaTest: material.alphaTest,\r\n\t\t\t\tdoubleSided: material.side === DoubleSide,\r\n\t\t\t\tflipSided: material.side === BackSide,\r\n\t\t\t\tdepthPacking: material.depthPacking !== undefined ? material.depthPacking : false,\r\n\t\t\t\tindex0AttributeName: material.index0AttributeName,\r\n\t\t\t\textensionDerivatives: material.extensions && material.extensions.derivatives,\r\n\t\t\t\textensionFragDepth: material.extensions && material.extensions.fragDepth,\r\n\t\t\t\textensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\r\n\t\t\t\textensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\r\n\t\t\t\trendererExtensionFragDepth: isWebGL2 || extensions.has('EXT_frag_depth'),\r\n\t\t\t\trendererExtensionDrawBuffers: isWebGL2 || extensions.has('WEBGL_draw_buffers'),\r\n\t\t\t\trendererExtensionShaderTextureLod: isWebGL2 || extensions.has('EXT_shader_texture_lod'),\r\n\t\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\r\n\t\t\t};\r\n\t\t\treturn parameters;\r\n\t\t}\r\n\r\n\t\tfunction getProgramCacheKey(parameters) {\r\n\t\t\tconst array = [];\r\n\r\n\t\t\tif (parameters.shaderID) {\r\n\t\t\t\tarray.push(parameters.shaderID);\r\n\t\t\t} else {\r\n\t\t\t\tarray.push(parameters.fragmentShader);\r\n\t\t\t\tarray.push(parameters.vertexShader);\r\n\t\t\t}\r\n\r\n\t\t\tif (parameters.defines !== undefined) {\r\n\t\t\t\tfor (const name in parameters.defines) {\r\n\t\t\t\t\tarray.push(name);\r\n\t\t\t\t\tarray.push(parameters.defines[name]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (parameters.isRawShaderMaterial === false) {\r\n\t\t\t\tfor (let i = 0; i < parameterNames.length; i++) {\r\n\t\t\t\t\tarray.push(parameters[parameterNames[i]]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tarray.push(renderer.outputEncoding);\r\n\t\t\t\tarray.push(renderer.gammaFactor);\r\n\t\t\t}\r\n\r\n\t\t\tarray.push(parameters.customProgramCacheKey);\r\n\t\t\treturn array.join();\r\n\t\t}\r\n\r\n\t\tfunction getUniforms(material) {\r\n\t\t\tconst shaderID = shaderIDs[material.type];\r\n\t\t\tlet uniforms;\r\n\r\n\t\t\tif (shaderID) {\r\n\t\t\t\tconst shader = ShaderLib[shaderID];\r\n\t\t\t\tuniforms = UniformsUtils.clone(shader.uniforms);\r\n\t\t\t} else {\r\n\t\t\t\tuniforms = material.uniforms;\r\n\t\t\t}\r\n\r\n\t\t\treturn uniforms;\r\n\t\t}\r\n\r\n\t\tfunction acquireProgram(parameters, cacheKey) {\r\n\t\t\tlet program; // Check if code has been already compiled\r\n\r\n\t\t\tfor (let p = 0, pl = programs.length; p < pl; p++) {\r\n\t\t\t\tconst preexistingProgram = programs[p];\r\n\r\n\t\t\t\tif (preexistingProgram.cacheKey === cacheKey) {\r\n\t\t\t\t\tprogram = preexistingProgram;\r\n\t\t\t\t\t++program.usedTimes;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (program === undefined) {\r\n\t\t\t\tprogram = new WebGLProgram(renderer, cacheKey, parameters, bindingStates);\r\n\t\t\t\tprograms.push(program);\r\n\t\t\t}\r\n\r\n\t\t\treturn program;\r\n\t\t}\r\n\r\n\t\tfunction releaseProgram(program) {\r\n\t\t\tif (--program.usedTimes === 0) {\r\n\t\t\t\t// Remove from unordered set\r\n\t\t\t\tconst i = programs.indexOf(program);\r\n\t\t\t\tprograms[i] = programs[programs.length - 1];\r\n\t\t\t\tprograms.pop(); // Free WebGL resources\r\n\r\n\t\t\t\tprogram.destroy();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tgetParameters: getParameters,\r\n\t\t\tgetProgramCacheKey: getProgramCacheKey,\r\n\t\t\tgetUniforms: getUniforms,\r\n\t\t\tacquireProgram: acquireProgram,\r\n\t\t\treleaseProgram: releaseProgram,\r\n\t\t\t// Exposed for resource monitoring & error feedback via renderer.info:\r\n\t\t\tprograms: programs\r\n\t\t};\r\n\t}\r\n\r\n\tfunction WebGLProperties() {\r\n\t\tlet properties = new WeakMap();\r\n\r\n\t\tfunction get(object) {\r\n\t\t\tlet map = properties.get(object);\r\n\r\n\t\t\tif (map === undefined) {\r\n\t\t\t\tmap = {};\r\n\t\t\t\tproperties.set(object, map);\r\n\t\t\t}\r\n\r\n\t\t\treturn map;\r\n\t\t}\r\n\r\n\t\tfunction remove(object) {\r\n\t\t\tproperties.delete(object);\r\n\t\t}\r\n\r\n\t\tfunction update(object, key, value) {\r\n\t\t\tproperties.get(object)[key] = value;\r\n\t\t}\r\n\r\n\t\tfunction dispose() {\r\n\t\t\tproperties = new WeakMap();\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tget: get,\r\n\t\t\tremove: remove,\r\n\t\t\tupdate: update,\r\n\t\t\tdispose: dispose\r\n\t\t};\r\n\t}\r\n\r\n\tfunction painterSortStable(a, b) {\r\n\t\tif (a.groupOrder !== b.groupOrder) {\r\n\t\t\treturn a.groupOrder - b.groupOrder;\r\n\t\t} else if (a.renderOrder !== b.renderOrder) {\r\n\t\t\treturn a.renderOrder - b.renderOrder;\r\n\t\t} else if (a.program !== b.program) {\r\n\t\t\treturn a.program.id - b.program.id;\r\n\t\t} else if (a.material.id !== b.material.id) {\r\n\t\t\treturn a.material.id - b.material.id;\r\n\t\t} else if (a.z !== b.z) {\r\n\t\t\treturn a.z - b.z;\r\n\t\t} else {\r\n\t\t\treturn a.id - b.id;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction reversePainterSortStable(a, b) {\r\n\t\tif (a.groupOrder !== b.groupOrder) {\r\n\t\t\treturn a.groupOrder - b.groupOrder;\r\n\t\t} else if (a.renderOrder !== b.renderOrder) {\r\n\t\t\treturn a.renderOrder - b.renderOrder;\r\n\t\t} else if (a.z !== b.z) {\r\n\t\t\treturn b.z - a.z;\r\n\t\t} else {\r\n\t\t\treturn a.id - b.id;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction WebGLRenderList(properties) {\r\n\t\tconst renderItems = [];\r\n\t\tlet renderItemsIndex = 0;\r\n\t\tconst opaque = [];\r\n\t\tconst transmissive = [];\r\n\t\tconst transparent = [];\r\n\t\tconst defaultProgram = {\r\n\t\t\tid: -1\r\n\t\t};\r\n\r\n\t\tfunction init() {\r\n\t\t\trenderItemsIndex = 0;\r\n\t\t\topaque.length = 0;\r\n\t\t\ttransmissive.length = 0;\r\n\t\t\ttransparent.length = 0;\r\n\t\t}\r\n\r\n\t\tfunction getNextRenderItem(object, geometry, material, groupOrder, z, group) {\r\n\t\t\tlet renderItem = renderItems[renderItemsIndex];\r\n\t\t\tconst materialProperties = properties.get(material);\r\n\r\n\t\t\tif (renderItem === undefined) {\r\n\t\t\t\trenderItem = {\r\n\t\t\t\t\tid: object.id,\r\n\t\t\t\t\tobject: object,\r\n\t\t\t\t\tgeometry: geometry,\r\n\t\t\t\t\tmaterial: material,\r\n\t\t\t\t\tprogram: materialProperties.program || defaultProgram,\r\n\t\t\t\t\tgroupOrder: groupOrder,\r\n\t\t\t\t\trenderOrder: object.renderOrder,\r\n\t\t\t\t\tz: z,\r\n\t\t\t\t\tgroup: group\r\n\t\t\t\t};\r\n\t\t\t\trenderItems[renderItemsIndex] = renderItem;\r\n\t\t\t} else {\r\n\t\t\t\trenderItem.id = object.id;\r\n\t\t\t\trenderItem.object = object;\r\n\t\t\t\trenderItem.geometry = geometry;\r\n\t\t\t\trenderItem.material = material;\r\n\t\t\t\trenderItem.program = materialProperties.program || defaultProgram;\r\n\t\t\t\trenderItem.groupOrder = groupOrder;\r\n\t\t\t\trenderItem.renderOrder = object.renderOrder;\r\n\t\t\t\trenderItem.z = z;\r\n\t\t\t\trenderItem.group = group;\r\n\t\t\t}\r\n\r\n\t\t\trenderItemsIndex++;\r\n\t\t\treturn renderItem;\r\n\t\t}\r\n\r\n\t\tfunction push(object, geometry, material, groupOrder, z, group) {\r\n\t\t\tconst renderItem = getNextRenderItem(object, geometry, material, groupOrder, z, group);\r\n\r\n\t\t\tif (material.transmission > 0.0) {\r\n\t\t\t\ttransmissive.push(renderItem);\r\n\t\t\t} else if (material.transparent === true) {\r\n\t\t\t\ttransparent.push(renderItem);\r\n\t\t\t} else {\r\n\t\t\t\topaque.push(renderItem);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction unshift(object, geometry, material, groupOrder, z, group) {\r\n\t\t\tconst renderItem = getNextRenderItem(object, geometry, material, groupOrder, z, group);\r\n\r\n\t\t\tif (material.transmission > 0.0) {\r\n\t\t\t\ttransmissive.unshift(renderItem);\r\n\t\t\t} else if (material.transparent === true) {\r\n\t\t\t\ttransparent.unshift(renderItem);\r\n\t\t\t} else {\r\n\t\t\t\topaque.unshift(renderItem);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction sort(customOpaqueSort, customTransparentSort) {\r\n\t\t\tif (opaque.length > 1) opaque.sort(customOpaqueSort || painterSortStable);\r\n\t\t\tif (transmissive.length > 1) transmissive.sort(customTransparentSort || reversePainterSortStable);\r\n\t\t\tif (transparent.length > 1) transparent.sort(customTransparentSort || reversePainterSortStable);\r\n\t\t}\r\n\r\n\t\tfunction finish() {\r\n\t\t\t// Clear references from inactive renderItems in the list\r\n\t\t\tfor (let i = renderItemsIndex, il = renderItems.length; i < il; i++) {\r\n\t\t\t\tconst renderItem = renderItems[i];\r\n\t\t\t\tif (renderItem.id === null) break;\r\n\t\t\t\trenderItem.id = null;\r\n\t\t\t\trenderItem.object = null;\r\n\t\t\t\trenderItem.geometry = null;\r\n\t\t\t\trenderItem.material = null;\r\n\t\t\t\trenderItem.program = null;\r\n\t\t\t\trenderItem.group = null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\topaque: opaque,\r\n\t\t\ttransmissive: transmissive,\r\n\t\t\ttransparent: transparent,\r\n\t\t\tinit: init,\r\n\t\t\tpush: push,\r\n\t\t\tunshift: unshift,\r\n\t\t\tfinish: finish,\r\n\t\t\tsort: sort\r\n\t\t};\r\n\t}\r\n\r\n\tfunction WebGLRenderLists(properties) {\r\n\t\tlet lists = new WeakMap();\r\n\r\n\t\tfunction get(scene, renderCallDepth) {\r\n\t\t\tlet list;\r\n\r\n\t\t\tif (lists.has(scene) === false) {\r\n\t\t\t\tlist = new WebGLRenderList(properties);\r\n\t\t\t\tlists.set(scene, [list]);\r\n\t\t\t} else {\r\n\t\t\t\tif (renderCallDepth >= lists.get(scene).length) {\r\n\t\t\t\t\tlist = new WebGLRenderList(properties);\r\n\t\t\t\t\tlists.get(scene).push(list);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlist = lists.get(scene)[renderCallDepth];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn list;\r\n\t\t}\r\n\r\n\t\tfunction dispose() {\r\n\t\t\tlists = new WeakMap();\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tget: get,\r\n\t\t\tdispose: dispose\r\n\t\t};\r\n\t}\r\n\r\n\tfunction UniformsCache() {\r\n\t\tconst lights = {};\r\n\t\treturn {\r\n\t\t\tget: function (light) {\r\n\t\t\t\tif (lights[light.id] !== undefined) {\r\n\t\t\t\t\treturn lights[light.id];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet uniforms;\r\n\r\n\t\t\t\tswitch (light.type) {\r\n\t\t\t\t\tcase 'DirectionalLight':\r\n\t\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\t\tdirection: new Vector3(),\r\n\t\t\t\t\t\t\tcolor: new Color()\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'SpotLight':\r\n\t\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\t\tposition: new Vector3(),\r\n\t\t\t\t\t\t\tdirection: new Vector3(),\r\n\t\t\t\t\t\t\tcolor: new Color(),\r\n\t\t\t\t\t\t\tdistance: 0,\r\n\t\t\t\t\t\t\tconeCos: 0,\r\n\t\t\t\t\t\t\tpenumbraCos: 0,\r\n\t\t\t\t\t\t\tdecay: 0\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'PointLight':\r\n\t\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\t\tposition: new Vector3(),\r\n\t\t\t\t\t\t\tcolor: new Color(),\r\n\t\t\t\t\t\t\tdistance: 0,\r\n\t\t\t\t\t\t\tdecay: 0\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'HemisphereLight':\r\n\t\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\t\tdirection: new Vector3(),\r\n\t\t\t\t\t\t\tskyColor: new Color(),\r\n\t\t\t\t\t\t\tgroundColor: new Color()\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'RectAreaLight':\r\n\t\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\t\tcolor: new Color(),\r\n\t\t\t\t\t\t\tposition: new Vector3(),\r\n\t\t\t\t\t\t\thalfWidth: new Vector3(),\r\n\t\t\t\t\t\t\thalfHeight: new Vector3()\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlights[light.id] = uniforms;\r\n\t\t\t\treturn uniforms;\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tfunction ShadowUniformsCache() {\r\n\t\tconst lights = {};\r\n\t\treturn {\r\n\t\t\tget: function (light) {\r\n\t\t\t\tif (lights[light.id] !== undefined) {\r\n\t\t\t\t\treturn lights[light.id];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet uniforms;\r\n\r\n\t\t\t\tswitch (light.type) {\r\n\t\t\t\t\tcase 'DirectionalLight':\r\n\t\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\t\tshadowBias: 0,\r\n\t\t\t\t\t\t\tshadowNormalBias: 0,\r\n\t\t\t\t\t\t\tshadowRadius: 1,\r\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'SpotLight':\r\n\t\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\t\tshadowBias: 0,\r\n\t\t\t\t\t\t\tshadowNormalBias: 0,\r\n\t\t\t\t\t\t\tshadowRadius: 1,\r\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'PointLight':\r\n\t\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\t\tshadowBias: 0,\r\n\t\t\t\t\t\t\tshadowNormalBias: 0,\r\n\t\t\t\t\t\t\tshadowRadius: 1,\r\n\t\t\t\t\t\t\tshadowMapSize: new Vector2(),\r\n\t\t\t\t\t\t\tshadowCameraNear: 1,\r\n\t\t\t\t\t\t\tshadowCameraFar: 1000\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlights[light.id] = uniforms;\r\n\t\t\t\treturn uniforms;\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tlet nextVersion = 0;\r\n\r\n\tfunction shadowCastingLightsFirst(lightA, lightB) {\r\n\t\treturn (lightB.castShadow ? 1 : 0) - (lightA.castShadow ? 1 : 0);\r\n\t}\r\n\r\n\tfunction WebGLLights(extensions, capabilities) {\r\n\t\tconst cache = new UniformsCache();\r\n\t\tconst shadowCache = ShadowUniformsCache();\r\n\t\tconst state = {\r\n\t\t\tversion: 0,\r\n\t\t\thash: {\r\n\t\t\t\tdirectionalLength: -1,\r\n\t\t\t\tpointLength: -1,\r\n\t\t\t\tspotLength: -1,\r\n\t\t\t\trectAreaLength: -1,\r\n\t\t\t\themiLength: -1,\r\n\t\t\t\tnumDirectionalShadows: -1,\r\n\t\t\t\tnumPointShadows: -1,\r\n\t\t\t\tnumSpotShadows: -1\r\n\t\t\t},\r\n\t\t\tambient: [0, 0, 0],\r\n\t\t\tprobe: [],\r\n\t\t\tdirectional: [],\r\n\t\t\tdirectionalShadow: [],\r\n\t\t\tdirectionalShadowMap: [],\r\n\t\t\tdirectionalShadowMatrix: [],\r\n\t\t\tspot: [],\r\n\t\t\tspotShadow: [],\r\n\t\t\tspotShadowMap: [],\r\n\t\t\tspotShadowMatrix: [],\r\n\t\t\trectArea: [],\r\n\t\t\trectAreaLTC1: null,\r\n\t\t\trectAreaLTC2: null,\r\n\t\t\tpoint: [],\r\n\t\t\tpointShadow: [],\r\n\t\t\tpointShadowMap: [],\r\n\t\t\tpointShadowMatrix: [],\r\n\t\t\themi: []\r\n\t\t};\r\n\r\n\t\tfor (let i = 0; i < 9; i++) state.probe.push(new Vector3());\r\n\r\n\t\tconst vector3 = new Vector3();\r\n\t\tconst matrix4 = new Matrix4();\r\n\t\tconst matrix42 = new Matrix4();\r\n\r\n\t\tfunction setup(lights) {\r\n\t\t\tlet r = 0,\r\n\t\t\t\t\tg = 0,\r\n\t\t\t\t\tb = 0;\r\n\r\n\t\t\tfor (let i = 0; i < 9; i++) state.probe[i].set(0, 0, 0);\r\n\r\n\t\t\tlet directionalLength = 0;\r\n\t\t\tlet pointLength = 0;\r\n\t\t\tlet spotLength = 0;\r\n\t\t\tlet rectAreaLength = 0;\r\n\t\t\tlet hemiLength = 0;\r\n\t\t\tlet numDirectionalShadows = 0;\r\n\t\t\tlet numPointShadows = 0;\r\n\t\t\tlet numSpotShadows = 0;\r\n\t\t\tlights.sort(shadowCastingLightsFirst);\r\n\r\n\t\t\tfor (let i = 0, l = lights.length; i < l; i++) {\r\n\t\t\t\tconst light = lights[i];\r\n\t\t\t\tconst color = light.color;\r\n\t\t\t\tconst intensity = light.intensity;\r\n\t\t\t\tconst distance = light.distance;\r\n\t\t\t\tconst shadowMap = light.shadow && light.shadow.map ? light.shadow.map.texture : null;\r\n\r\n\t\t\t\tif (light.isAmbientLight) {\r\n\t\t\t\t\tr += color.r * intensity;\r\n\t\t\t\t\tg += color.g * intensity;\r\n\t\t\t\t\tb += color.b * intensity;\r\n\t\t\t\t} else if (light.isLightProbe) {\r\n\t\t\t\t\tfor (let j = 0; j < 9; j++) {\r\n\t\t\t\t\t\tstate.probe[j].addScaledVector(light.sh.coefficients[j], intensity);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (light.isDirectionalLight) {\r\n\t\t\t\t\tconst uniforms = cache.get(light);\r\n\t\t\t\t\tuniforms.color.copy(light.color).multiplyScalar(light.intensity);\r\n\r\n\t\t\t\t\tif (light.castShadow) {\r\n\t\t\t\t\t\tconst shadow = light.shadow;\r\n\t\t\t\t\t\tconst shadowUniforms = shadowCache.get(light);\r\n\t\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\r\n\t\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\r\n\t\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\r\n\t\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\r\n\t\t\t\t\t\tstate.directionalShadow[directionalLength] = shadowUniforms;\r\n\t\t\t\t\t\tstate.directionalShadowMap[directionalLength] = shadowMap;\r\n\t\t\t\t\t\tstate.directionalShadowMatrix[directionalLength] = light.shadow.matrix;\r\n\t\t\t\t\t\tnumDirectionalShadows++;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tstate.directional[directionalLength] = uniforms;\r\n\t\t\t\t\tdirectionalLength++;\r\n\t\t\t\t} else if (light.isSpotLight) {\r\n\t\t\t\t\tconst uniforms = cache.get(light);\r\n\t\t\t\t\tuniforms.position.setFromMatrixPosition(light.matrixWorld);\r\n\t\t\t\t\tuniforms.color.copy(color).multiplyScalar(intensity);\r\n\t\t\t\t\tuniforms.distance = distance;\r\n\t\t\t\t\tuniforms.coneCos = Math.cos(light.angle);\r\n\t\t\t\t\tuniforms.penumbraCos = Math.cos(light.angle * (1 - light.penumbra));\r\n\t\t\t\t\tuniforms.decay = light.decay;\r\n\r\n\t\t\t\t\tif (light.castShadow) {\r\n\t\t\t\t\t\tconst shadow = light.shadow;\r\n\t\t\t\t\t\tconst shadowUniforms = shadowCache.get(light);\r\n\t\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\r\n\t\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\r\n\t\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\r\n\t\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\r\n\t\t\t\t\t\tstate.spotShadow[spotLength] = shadowUniforms;\r\n\t\t\t\t\t\tstate.spotShadowMap[spotLength] = shadowMap;\r\n\t\t\t\t\t\tstate.spotShadowMatrix[spotLength] = light.shadow.matrix;\r\n\t\t\t\t\t\tnumSpotShadows++;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tstate.spot[spotLength] = uniforms;\r\n\t\t\t\t\tspotLength++;\r\n\t\t\t\t} else if (light.isRectAreaLight) {\r\n\t\t\t\t\tconst uniforms = cache.get(light); // (a) intensity is the total visible light emitted\r\n\t\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\r\n\t\t\t\t\t// (b) intensity is the brightness of the light\r\n\r\n\t\t\t\t\tuniforms.color.copy(color).multiplyScalar(intensity);\r\n\t\t\t\t\tuniforms.halfWidth.set(light.width * 0.5, 0.0, 0.0);\r\n\t\t\t\t\tuniforms.halfHeight.set(0.0, light.height * 0.5, 0.0);\r\n\t\t\t\t\tstate.rectArea[rectAreaLength] = uniforms;\r\n\t\t\t\t\trectAreaLength++;\r\n\t\t\t\t} else if (light.isPointLight) {\r\n\t\t\t\t\tconst uniforms = cache.get(light);\r\n\t\t\t\t\tuniforms.color.copy(light.color).multiplyScalar(light.intensity);\r\n\t\t\t\t\tuniforms.distance = light.distance;\r\n\t\t\t\t\tuniforms.decay = light.decay;\r\n\r\n\t\t\t\t\tif (light.castShadow) {\r\n\t\t\t\t\t\tconst shadow = light.shadow;\r\n\t\t\t\t\t\tconst shadowUniforms = shadowCache.get(light);\r\n\t\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\r\n\t\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\r\n\t\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\r\n\t\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\r\n\t\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\r\n\t\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\r\n\t\t\t\t\t\tstate.pointShadow[pointLength] = shadowUniforms;\r\n\t\t\t\t\t\tstate.pointShadowMap[pointLength] = shadowMap;\r\n\t\t\t\t\t\tstate.pointShadowMatrix[pointLength] = light.shadow.matrix;\r\n\t\t\t\t\t\tnumPointShadows++;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tstate.point[pointLength] = uniforms;\r\n\t\t\t\t\tpointLength++;\r\n\t\t\t\t} else if (light.isHemisphereLight) {\r\n\t\t\t\t\tconst uniforms = cache.get(light);\r\n\t\t\t\t\tuniforms.skyColor.copy(light.color).multiplyScalar(intensity);\r\n\t\t\t\t\tuniforms.groundColor.copy(light.groundColor).multiplyScalar(intensity);\r\n\t\t\t\t\tstate.hemi[hemiLength] = uniforms;\r\n\t\t\t\t\themiLength++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (rectAreaLength > 0) {\r\n\t\t\t\tif (capabilities.isWebGL2) {\r\n\t\t\t\t\t// WebGL 2\r\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\r\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// WebGL 1\r\n\t\t\t\t\tif (extensions.has('OES_texture_float_linear') === true) {\r\n\t\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\r\n\t\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\r\n\t\t\t\t\t} else if (extensions.has('OES_texture_half_float_linear') === true) {\r\n\t\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\r\n\t\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.error('THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tstate.ambient[0] = r;\r\n\t\t\tstate.ambient[1] = g;\r\n\t\t\tstate.ambient[2] = b;\r\n\t\t\tconst hash = state.hash;\r\n\r\n\t\t\tif (hash.directionalLength !== directionalLength || hash.pointLength !== pointLength || hash.spotLength !== spotLength || hash.rectAreaLength !== rectAreaLength || hash.hemiLength !== hemiLength || hash.numDirectionalShadows !== numDirectionalShadows || hash.numPointShadows !== numPointShadows || hash.numSpotShadows !== numSpotShadows) {\r\n\t\t\t\tstate.directional.length = directionalLength;\r\n\t\t\t\tstate.spot.length = spotLength;\r\n\t\t\t\tstate.rectArea.length = rectAreaLength;\r\n\t\t\t\tstate.point.length = pointLength;\r\n\t\t\t\tstate.hemi.length = hemiLength;\r\n\t\t\t\tstate.directionalShadow.length = numDirectionalShadows;\r\n\t\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\r\n\t\t\t\tstate.pointShadow.length = numPointShadows;\r\n\t\t\t\tstate.pointShadowMap.length = numPointShadows;\r\n\t\t\t\tstate.spotShadow.length = numSpotShadows;\r\n\t\t\t\tstate.spotShadowMap.length = numSpotShadows;\r\n\t\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\r\n\t\t\t\tstate.pointShadowMatrix.length = numPointShadows;\r\n\t\t\t\tstate.spotShadowMatrix.length = numSpotShadows;\r\n\t\t\t\thash.directionalLength = directionalLength;\r\n\t\t\t\thash.pointLength = pointLength;\r\n\t\t\t\thash.spotLength = spotLength;\r\n\t\t\t\thash.rectAreaLength = rectAreaLength;\r\n\t\t\t\thash.hemiLength = hemiLength;\r\n\t\t\t\thash.numDirectionalShadows = numDirectionalShadows;\r\n\t\t\t\thash.numPointShadows = numPointShadows;\r\n\t\t\t\thash.numSpotShadows = numSpotShadows;\r\n\t\t\t\tstate.version = nextVersion++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction setupView(lights, camera) {\r\n\t\t\tlet directionalLength = 0;\r\n\t\t\tlet pointLength = 0;\r\n\t\t\tlet spotLength = 0;\r\n\t\t\tlet rectAreaLength = 0;\r\n\t\t\tlet hemiLength = 0;\r\n\t\t\tconst viewMatrix = camera.matrixWorldInverse;\r\n\r\n\t\t\tfor (let i = 0, l = lights.length; i < l; i++) {\r\n\t\t\t\tconst light = lights[i];\r\n\r\n\t\t\t\tif (light.isDirectionalLight) {\r\n\t\t\t\t\tconst uniforms = state.directional[directionalLength];\r\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition(light.matrixWorld);\r\n\t\t\t\t\tvector3.setFromMatrixPosition(light.target.matrixWorld);\r\n\t\t\t\t\tuniforms.direction.sub(vector3);\r\n\t\t\t\t\tuniforms.direction.transformDirection(viewMatrix);\r\n\t\t\t\t\tdirectionalLength++;\r\n\t\t\t\t} else if (light.isSpotLight) {\r\n\t\t\t\t\tconst uniforms = state.spot[spotLength];\r\n\t\t\t\t\tuniforms.position.setFromMatrixPosition(light.matrixWorld);\r\n\t\t\t\t\tuniforms.position.applyMatrix4(viewMatrix);\r\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition(light.matrixWorld);\r\n\t\t\t\t\tvector3.setFromMatrixPosition(light.target.matrixWorld);\r\n\t\t\t\t\tuniforms.direction.sub(vector3);\r\n\t\t\t\t\tuniforms.direction.transformDirection(viewMatrix);\r\n\t\t\t\t\tspotLength++;\r\n\t\t\t\t} else if (light.isRectAreaLight) {\r\n\t\t\t\t\tconst uniforms = state.rectArea[rectAreaLength];\r\n\t\t\t\t\tuniforms.position.setFromMatrixPosition(light.matrixWorld);\r\n\t\t\t\t\tuniforms.position.applyMatrix4(viewMatrix); // extract local rotation of light to derive width/height half vectors\r\n\r\n\t\t\t\t\tmatrix42.identity();\r\n\t\t\t\t\tmatrix4.copy(light.matrixWorld);\r\n\t\t\t\t\tmatrix4.premultiply(viewMatrix);\r\n\t\t\t\t\tmatrix42.extractRotation(matrix4);\r\n\t\t\t\t\tuniforms.halfWidth.set(light.width * 0.5, 0.0, 0.0);\r\n\t\t\t\t\tuniforms.halfHeight.set(0.0, light.height * 0.5, 0.0);\r\n\t\t\t\t\tuniforms.halfWidth.applyMatrix4(matrix42);\r\n\t\t\t\t\tuniforms.halfHeight.applyMatrix4(matrix42);\r\n\t\t\t\t\trectAreaLength++;\r\n\t\t\t\t} else if (light.isPointLight) {\r\n\t\t\t\t\tconst uniforms = state.point[pointLength];\r\n\t\t\t\t\tuniforms.position.setFromMatrixPosition(light.matrixWorld);\r\n\t\t\t\t\tuniforms.position.applyMatrix4(viewMatrix);\r\n\t\t\t\t\tpointLength++;\r\n\t\t\t\t} else if (light.isHemisphereLight) {\r\n\t\t\t\t\tconst uniforms = state.hemi[hemiLength];\r\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition(light.matrixWorld);\r\n\t\t\t\t\tuniforms.direction.transformDirection(viewMatrix);\r\n\t\t\t\t\tuniforms.direction.normalize();\r\n\t\t\t\t\themiLength++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tsetup: setup,\r\n\t\t\tsetupView: setupView,\r\n\t\t\tstate: state\r\n\t\t};\r\n\t}\r\n\r\n\tfunction WebGLRenderState(extensions, capabilities) {\r\n\t\tconst lights = new WebGLLights(extensions, capabilities);\r\n\t\tconst lightsArray = [];\r\n\t\tconst shadowsArray = [];\r\n\r\n\t\tfunction init() {\r\n\t\t\tlightsArray.length = 0;\r\n\t\t\tshadowsArray.length = 0;\r\n\t\t}\r\n\r\n\t\tfunction pushLight(light) {\r\n\t\t\tlightsArray.push(light);\r\n\t\t}\r\n\r\n\t\tfunction pushShadow(shadowLight) {\r\n\t\t\tshadowsArray.push(shadowLight);\r\n\t\t}\r\n\r\n\t\tfunction setupLights() {\r\n\t\t\tlights.setup(lightsArray);\r\n\t\t}\r\n\r\n\t\tfunction setupLightsView(camera) {\r\n\t\t\tlights.setupView(lightsArray, camera);\r\n\t\t}\r\n\r\n\t\tconst state = {\r\n\t\t\tlightsArray: lightsArray,\r\n\t\t\tshadowsArray: shadowsArray,\r\n\t\t\tlights: lights\r\n\t\t};\r\n\t\treturn {\r\n\t\t\tinit: init,\r\n\t\t\tstate: state,\r\n\t\t\tsetupLights: setupLights,\r\n\t\t\tsetupLightsView: setupLightsView,\r\n\t\t\tpushLight: pushLight,\r\n\t\t\tpushShadow: pushShadow\r\n\t\t};\r\n\t}\r\n\r\n\tfunction WebGLRenderStates(extensions, capabilities) {\r\n\t\tlet renderStates = new WeakMap();\r\n\r\n\t\tfunction get(scene, renderCallDepth = 0) {\r\n\t\t\tlet renderState;\r\n\r\n\t\t\tif (renderStates.has(scene) === false) {\r\n\t\t\t\trenderState = new WebGLRenderState(extensions, capabilities);\r\n\t\t\t\trenderStates.set(scene, [renderState]);\r\n\t\t\t} else {\r\n\t\t\t\tif (renderCallDepth >= renderStates.get(scene).length) {\r\n\t\t\t\t\trenderState = new WebGLRenderState(extensions, capabilities);\r\n\t\t\t\t\trenderStates.get(scene).push(renderState);\r\n\t\t\t\t} else {\r\n\t\t\t\t\trenderState = renderStates.get(scene)[renderCallDepth];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn renderState;\r\n\t\t}\r\n\r\n\t\tfunction dispose() {\r\n\t\t\trenderStates = new WeakMap();\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tget: get,\r\n\t\t\tdispose: dispose\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * parameters = {\r\n\t *\r\n\t *\topacity: <float>,\r\n\t *\r\n\t *\tmap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\talphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\r\n\t *\tdisplacementScale: <float>,\r\n\t *\tdisplacementBias: <float>,\r\n\t *\r\n\t *\twireframe: <boolean>,\r\n\t *\twireframeLinewidth: <float>\r\n\t * }\r\n\t */\r\n\r\n\tclass MeshDepthMaterial extends Material {\r\n\t\tconstructor(parameters) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'MeshDepthMaterial';\r\n\t\t\tthis.depthPacking = BasicDepthPacking;\r\n\t\t\tthis.map = null;\r\n\t\t\tthis.alphaMap = null;\r\n\t\t\tthis.displacementMap = null;\r\n\t\t\tthis.displacementScale = 1;\r\n\t\t\tthis.displacementBias = 0;\r\n\t\t\tthis.wireframe = false;\r\n\t\t\tthis.wireframeLinewidth = 1;\r\n\t\t\tthis.fog = false;\r\n\t\t\tthis.setValues(parameters);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.depthPacking = source.depthPacking;\r\n\t\t\tthis.map = source.map;\r\n\t\t\tthis.alphaMap = source.alphaMap;\r\n\t\t\tthis.displacementMap = source.displacementMap;\r\n\t\t\tthis.displacementScale = source.displacementScale;\r\n\t\t\tthis.displacementBias = source.displacementBias;\r\n\t\t\tthis.wireframe = source.wireframe;\r\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\r\n\r\n\t/**\r\n\t * parameters = {\r\n\t *\r\n\t *\treferencePosition: <float>,\r\n\t *\tnearDistance: <float>,\r\n\t *\tfarDistance: <float>,\r\n\t *\r\n\t *\tmap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\talphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\r\n\t *\tdisplacementScale: <float>,\r\n\t *\tdisplacementBias: <float>\r\n\t *\r\n\t * }\r\n\t */\r\n\r\n\tclass MeshDistanceMaterial extends Material {\r\n\t\tconstructor(parameters) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'MeshDistanceMaterial';\r\n\t\t\tthis.referencePosition = new Vector3();\r\n\t\t\tthis.nearDistance = 1;\r\n\t\t\tthis.farDistance = 1000;\r\n\t\t\tthis.map = null;\r\n\t\t\tthis.alphaMap = null;\r\n\t\t\tthis.displacementMap = null;\r\n\t\t\tthis.displacementScale = 1;\r\n\t\t\tthis.displacementBias = 0;\r\n\t\t\tthis.fog = false;\r\n\t\t\tthis.setValues(parameters);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.referencePosition.copy(source.referencePosition);\r\n\t\t\tthis.nearDistance = source.nearDistance;\r\n\t\t\tthis.farDistance = source.farDistance;\r\n\t\t\tthis.map = source.map;\r\n\t\t\tthis.alphaMap = source.alphaMap;\r\n\t\t\tthis.displacementMap = source.displacementMap;\r\n\t\t\tthis.displacementScale = source.displacementScale;\r\n\t\t\tthis.displacementBias = source.displacementBias;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\r\n\r\n\tvar vsm_frag = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\\n\\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean * HALF_SAMPLE_RATE;\\n\\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\r\n\r\n\tvar vsm_vert = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\r\n\r\n\tfunction WebGLShadowMap(_renderer, _objects, _capabilities) {\r\n\t\tlet _frustum = new Frustum();\r\n\r\n\t\tconst _shadowMapSize = new Vector2(),\r\n\t\t\t\t\t_viewportSize = new Vector2(),\r\n\t\t\t\t\t_viewport = new Vector4(),\r\n\t\t\t\t\t_depthMaterial = new MeshDepthMaterial({\r\n\t\t\tdepthPacking: RGBADepthPacking\r\n\t\t}),\r\n\t\t\t\t\t_distanceMaterial = new MeshDistanceMaterial(),\r\n\t\t\t\t\t_materialCache = {},\r\n\t\t\t\t\t_maxTextureSize = _capabilities.maxTextureSize;\r\n\r\n\t\tconst shadowSide = {\r\n\t\t\t0: BackSide,\r\n\t\t\t1: FrontSide,\r\n\t\t\t2: DoubleSide\r\n\t\t};\r\n\t\tconst shadowMaterialVertical = new ShaderMaterial({\r\n\t\t\tdefines: {\r\n\t\t\t\tSAMPLE_RATE: 2.0 / 8.0,\r\n\t\t\t\tHALF_SAMPLE_RATE: 1.0 / 8.0\r\n\t\t\t},\r\n\t\t\tuniforms: {\r\n\t\t\t\tshadow_pass: {\r\n\t\t\t\t\tvalue: null\r\n\t\t\t\t},\r\n\t\t\t\tresolution: {\r\n\t\t\t\t\tvalue: new Vector2()\r\n\t\t\t\t},\r\n\t\t\t\tradius: {\r\n\t\t\t\t\tvalue: 4.0\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tvertexShader: vsm_vert,\r\n\t\t\tfragmentShader: vsm_frag\r\n\t\t});\r\n\t\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\r\n\t\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\r\n\t\tconst fullScreenTri = new BufferGeometry();\r\n\t\tfullScreenTri.setAttribute('position', new BufferAttribute(new Float32Array([-1, -1, 0.5, 3, -1, 0.5, -1, 3, 0.5]), 3));\r\n\t\tconst fullScreenMesh = new Mesh(fullScreenTri, shadowMaterialVertical);\r\n\t\tconst scope = this;\r\n\t\tthis.enabled = false;\r\n\t\tthis.autoUpdate = true;\r\n\t\tthis.needsUpdate = false;\r\n\t\tthis.type = PCFShadowMap;\r\n\r\n\t\tthis.render = function (lights, scene, camera) {\r\n\t\t\tif (scope.enabled === false) return;\r\n\t\t\tif (scope.autoUpdate === false && scope.needsUpdate === false) return;\r\n\t\t\tif (lights.length === 0) return;\r\n\r\n\t\t\tconst currentRenderTarget = _renderer.getRenderTarget();\r\n\r\n\t\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\r\n\r\n\t\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\r\n\r\n\t\t\tconst _state = _renderer.state; // Set GL state for depth map.\r\n\r\n\t\t\t_state.setBlending(NoBlending);\r\n\r\n\t\t\t_state.buffers.color.setClear(1, 1, 1, 1);\r\n\r\n\t\t\t_state.buffers.depth.setTest(true);\r\n\r\n\t\t\t_state.setScissorTest(false); // render depth map\r\n\r\n\r\n\t\t\tfor (let i = 0, il = lights.length; i < il; i++) {\r\n\t\t\t\tconst light = lights[i];\r\n\t\t\t\tconst shadow = light.shadow;\r\n\r\n\t\t\t\tif (shadow === undefined) {\r\n\t\t\t\t\tconsole.warn('THREE.WebGLShadowMap:', light, 'has no shadow.');\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (shadow.autoUpdate === false && shadow.needsUpdate === false) continue;\r\n\r\n\t\t\t\t_shadowMapSize.copy(shadow.mapSize);\r\n\r\n\t\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\r\n\r\n\t\t\t\t_shadowMapSize.multiply(shadowFrameExtents);\r\n\r\n\t\t\t\t_viewportSize.copy(shadow.mapSize);\r\n\r\n\t\t\t\tif (_shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize) {\r\n\t\t\t\t\tif (_shadowMapSize.x > _maxTextureSize) {\r\n\t\t\t\t\t\t_viewportSize.x = Math.floor(_maxTextureSize / shadowFrameExtents.x);\r\n\t\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\r\n\t\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (_shadowMapSize.y > _maxTextureSize) {\r\n\t\t\t\t\t\t_viewportSize.y = Math.floor(_maxTextureSize / shadowFrameExtents.y);\r\n\t\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\r\n\t\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (shadow.map === null && !shadow.isPointLightShadow && this.type === VSMShadowMap) {\r\n\t\t\t\t\tconst pars = {\r\n\t\t\t\t\t\tminFilter: LinearFilter,\r\n\t\t\t\t\t\tmagFilter: LinearFilter,\r\n\t\t\t\t\t\tformat: RGBAFormat\r\n\t\t\t\t\t};\r\n\t\t\t\t\tshadow.map = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\r\n\t\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\r\n\t\t\t\t\tshadow.mapPass = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\r\n\t\t\t\t\tshadow.camera.updateProjectionMatrix();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (shadow.map === null) {\r\n\t\t\t\t\tconst pars = {\r\n\t\t\t\t\t\tminFilter: NearestFilter,\r\n\t\t\t\t\t\tmagFilter: NearestFilter,\r\n\t\t\t\t\t\tformat: RGBAFormat\r\n\t\t\t\t\t};\r\n\t\t\t\t\tshadow.map = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\r\n\t\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\r\n\t\t\t\t\tshadow.camera.updateProjectionMatrix();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_renderer.setRenderTarget(shadow.map);\r\n\r\n\t\t\t\t_renderer.clear();\r\n\r\n\t\t\t\tconst viewportCount = shadow.getViewportCount();\r\n\r\n\t\t\t\tfor (let vp = 0; vp < viewportCount; vp++) {\r\n\t\t\t\t\tconst viewport = shadow.getViewport(vp);\r\n\r\n\t\t\t\t\t_viewport.set(_viewportSize.x * viewport.x, _viewportSize.y * viewport.y, _viewportSize.x * viewport.z, _viewportSize.y * viewport.w);\r\n\r\n\t\t\t\t\t_state.viewport(_viewport);\r\n\r\n\t\t\t\t\tshadow.updateMatrices(light, vp);\r\n\t\t\t\t\t_frustum = shadow.getFrustum();\r\n\t\t\t\t\trenderObject(scene, camera, shadow.camera, light, this.type);\r\n\t\t\t\t} // do blur pass for VSM\r\n\r\n\r\n\t\t\t\tif (!shadow.isPointLightShadow && this.type === VSMShadowMap) {\r\n\t\t\t\t\tVSMPass(shadow, camera);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tshadow.needsUpdate = false;\r\n\t\t\t}\r\n\r\n\t\t\tscope.needsUpdate = false;\r\n\r\n\t\t\t_renderer.setRenderTarget(currentRenderTarget, activeCubeFace, activeMipmapLevel);\r\n\t\t};\r\n\r\n\t\tfunction VSMPass(shadow, camera) {\r\n\t\t\tconst geometry = _objects.update(fullScreenMesh); // vertical pass\r\n\r\n\r\n\t\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\r\n\t\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\r\n\t\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\r\n\r\n\t\t\t_renderer.setRenderTarget(shadow.mapPass);\r\n\r\n\t\t\t_renderer.clear();\r\n\r\n\t\t\t_renderer.renderBufferDirect(camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null); // horizontal pass\r\n\r\n\r\n\t\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\r\n\t\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\r\n\t\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\r\n\r\n\t\t\t_renderer.setRenderTarget(shadow.map);\r\n\r\n\t\t\t_renderer.clear();\r\n\r\n\t\t\t_renderer.renderBufferDirect(camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null);\r\n\t\t}\r\n\r\n\t\tfunction getDepthMaterial(object, geometry, material, light, shadowCameraNear, shadowCameraFar, type) {\r\n\t\t\tlet result = null;\r\n\t\t\tconst customMaterial = light.isPointLight === true ? object.customDistanceMaterial : object.customDepthMaterial;\r\n\r\n\t\t\tif (customMaterial !== undefined) {\r\n\t\t\t\tresult = customMaterial;\r\n\t\t\t} else {\r\n\t\t\t\tresult = light.isPointLight === true ? _distanceMaterial : _depthMaterial;\r\n\t\t\t}\r\n\r\n\t\t\tif (_renderer.localClippingEnabled && material.clipShadows === true && material.clippingPlanes.length !== 0) {\r\n\t\t\t\t// in this case we need a unique material instance reflecting the\r\n\t\t\t\t// appropriate state\r\n\t\t\t\tconst keyA = result.uuid,\r\n\t\t\t\t\t\t\tkeyB = material.uuid;\r\n\t\t\t\tlet materialsForVariant = _materialCache[keyA];\r\n\r\n\t\t\t\tif (materialsForVariant === undefined) {\r\n\t\t\t\t\tmaterialsForVariant = {};\r\n\t\t\t\t\t_materialCache[keyA] = materialsForVariant;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet cachedMaterial = materialsForVariant[keyB];\r\n\r\n\t\t\t\tif (cachedMaterial === undefined) {\r\n\t\t\t\t\tcachedMaterial = result.clone();\r\n\t\t\t\t\tmaterialsForVariant[keyB] = cachedMaterial;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tresult = cachedMaterial;\r\n\t\t\t}\r\n\r\n\t\t\tresult.visible = material.visible;\r\n\t\t\tresult.wireframe = material.wireframe;\r\n\r\n\t\t\tif (type === VSMShadowMap) {\r\n\t\t\t\tresult.side = material.shadowSide !== null ? material.shadowSide : material.side;\r\n\t\t\t} else {\r\n\t\t\t\tresult.side = material.shadowSide !== null ? material.shadowSide : shadowSide[material.side];\r\n\t\t\t}\r\n\r\n\t\t\tresult.clipShadows = material.clipShadows;\r\n\t\t\tresult.clippingPlanes = material.clippingPlanes;\r\n\t\t\tresult.clipIntersection = material.clipIntersection;\r\n\t\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\r\n\t\t\tresult.linewidth = material.linewidth;\r\n\r\n\t\t\tif (light.isPointLight === true && result.isMeshDistanceMaterial === true) {\r\n\t\t\t\tresult.referencePosition.setFromMatrixPosition(light.matrixWorld);\r\n\t\t\t\tresult.nearDistance = shadowCameraNear;\r\n\t\t\t\tresult.farDistance = shadowCameraFar;\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tfunction renderObject(object, camera, shadowCamera, light, type) {\r\n\t\t\tif (object.visible === false) return;\r\n\t\t\tconst visible = object.layers.test(camera.layers);\r\n\r\n\t\t\tif (visible && (object.isMesh || object.isLine || object.isPoints)) {\r\n\t\t\t\tif ((object.castShadow || object.receiveShadow && type === VSMShadowMap) && (!object.frustumCulled || _frustum.intersectsObject(object))) {\r\n\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse, object.matrixWorld);\r\n\r\n\t\t\t\t\tconst geometry = _objects.update(object);\r\n\r\n\t\t\t\t\tconst material = object.material;\r\n\r\n\t\t\t\t\tif (Array.isArray(material)) {\r\n\t\t\t\t\t\tconst groups = geometry.groups;\r\n\r\n\t\t\t\t\t\tfor (let k = 0, kl = groups.length; k < kl; k++) {\r\n\t\t\t\t\t\t\tconst group = groups[k];\r\n\t\t\t\t\t\t\tconst groupMaterial = material[group.materialIndex];\r\n\r\n\t\t\t\t\t\t\tif (groupMaterial && groupMaterial.visible) {\r\n\t\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial(object, geometry, groupMaterial, light, shadowCamera.near, shadowCamera.far, type);\r\n\r\n\t\t\t\t\t\t\t\t_renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, group);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (material.visible) {\r\n\t\t\t\t\t\tconst depthMaterial = getDepthMaterial(object, geometry, material, light, shadowCamera.near, shadowCamera.far, type);\r\n\r\n\t\t\t\t\t\t_renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, null);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst children = object.children;\r\n\r\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\r\n\t\t\t\trenderObject(children[i], camera, shadowCamera, light, type);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction WebGLState(gl, extensions, capabilities) {\r\n\t\tconst isWebGL2 = capabilities.isWebGL2;\r\n\r\n\t\tfunction ColorBuffer() {\r\n\t\t\tlet locked = false;\r\n\t\t\tconst color = new Vector4();\r\n\t\t\tlet currentColorMask = null;\r\n\t\t\tconst currentColorClear = new Vector4(0, 0, 0, 0);\r\n\t\t\treturn {\r\n\t\t\t\tsetMask: function (colorMask) {\r\n\t\t\t\t\tif (currentColorMask !== colorMask && !locked) {\r\n\t\t\t\t\t\tgl.colorMask(colorMask, colorMask, colorMask, colorMask);\r\n\t\t\t\t\t\tcurrentColorMask = colorMask;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsetLocked: function (lock) {\r\n\t\t\t\t\tlocked = lock;\r\n\t\t\t\t},\r\n\t\t\t\tsetClear: function (r, g, b, a, premultipliedAlpha) {\r\n\t\t\t\t\tif (premultipliedAlpha === true) {\r\n\t\t\t\t\t\tr *= a;\r\n\t\t\t\t\t\tg *= a;\r\n\t\t\t\t\t\tb *= a;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcolor.set(r, g, b, a);\r\n\r\n\t\t\t\t\tif (currentColorClear.equals(color) === false) {\r\n\t\t\t\t\t\tgl.clearColor(r, g, b, a);\r\n\t\t\t\t\t\tcurrentColorClear.copy(color);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\treset: function () {\r\n\t\t\t\t\tlocked = false;\r\n\t\t\t\t\tcurrentColorMask = null;\r\n\t\t\t\t\tcurrentColorClear.set(-1, 0, 0, 0); // set to invalid state\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tfunction DepthBuffer() {\r\n\t\t\tlet locked = false;\r\n\t\t\tlet currentDepthMask = null;\r\n\t\t\tlet currentDepthFunc = null;\r\n\t\t\tlet currentDepthClear = null;\r\n\t\t\treturn {\r\n\t\t\t\tsetTest: function (depthTest) {\r\n\t\t\t\t\tif (depthTest) {\r\n\t\t\t\t\t\tenable(gl.DEPTH_TEST);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdisable(gl.DEPTH_TEST);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsetMask: function (depthMask) {\r\n\t\t\t\t\tif (currentDepthMask !== depthMask && !locked) {\r\n\t\t\t\t\t\tgl.depthMask(depthMask);\r\n\t\t\t\t\t\tcurrentDepthMask = depthMask;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsetFunc: function (depthFunc) {\r\n\t\t\t\t\tif (currentDepthFunc !== depthFunc) {\r\n\t\t\t\t\t\tif (depthFunc) {\r\n\t\t\t\t\t\t\tswitch (depthFunc) {\r\n\t\t\t\t\t\t\t\tcase NeverDepth:\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.NEVER);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase AlwaysDepth:\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.ALWAYS);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase LessDepth:\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.LESS);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase LessEqualDepth:\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.LEQUAL);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase EqualDepth:\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.EQUAL);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase GreaterEqualDepth:\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.GEQUAL);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase GreaterDepth:\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.GREATER);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase NotEqualDepth:\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.NOTEQUAL);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.LEQUAL);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tgl.depthFunc(gl.LEQUAL);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tcurrentDepthFunc = depthFunc;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsetLocked: function (lock) {\r\n\t\t\t\t\tlocked = lock;\r\n\t\t\t\t},\r\n\t\t\t\tsetClear: function (depth) {\r\n\t\t\t\t\tif (currentDepthClear !== depth) {\r\n\t\t\t\t\t\tgl.clearDepth(depth);\r\n\t\t\t\t\t\tcurrentDepthClear = depth;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\treset: function () {\r\n\t\t\t\t\tlocked = false;\r\n\t\t\t\t\tcurrentDepthMask = null;\r\n\t\t\t\t\tcurrentDepthFunc = null;\r\n\t\t\t\t\tcurrentDepthClear = null;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tfunction StencilBuffer() {\r\n\t\t\tlet locked = false;\r\n\t\t\tlet currentStencilMask = null;\r\n\t\t\tlet currentStencilFunc = null;\r\n\t\t\tlet currentStencilRef = null;\r\n\t\t\tlet currentStencilFuncMask = null;\r\n\t\t\tlet currentStencilFail = null;\r\n\t\t\tlet currentStencilZFail = null;\r\n\t\t\tlet currentStencilZPass = null;\r\n\t\t\tlet currentStencilClear = null;\r\n\t\t\treturn {\r\n\t\t\t\tsetTest: function (stencilTest) {\r\n\t\t\t\t\tif (!locked) {\r\n\t\t\t\t\t\tif (stencilTest) {\r\n\t\t\t\t\t\t\tenable(gl.STENCIL_TEST);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tdisable(gl.STENCIL_TEST);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsetMask: function (stencilMask) {\r\n\t\t\t\t\tif (currentStencilMask !== stencilMask && !locked) {\r\n\t\t\t\t\t\tgl.stencilMask(stencilMask);\r\n\t\t\t\t\t\tcurrentStencilMask = stencilMask;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsetFunc: function (stencilFunc, stencilRef, stencilMask) {\r\n\t\t\t\t\tif (currentStencilFunc !== stencilFunc || currentStencilRef !== stencilRef || currentStencilFuncMask !== stencilMask) {\r\n\t\t\t\t\t\tgl.stencilFunc(stencilFunc, stencilRef, stencilMask);\r\n\t\t\t\t\t\tcurrentStencilFunc = stencilFunc;\r\n\t\t\t\t\t\tcurrentStencilRef = stencilRef;\r\n\t\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsetOp: function (stencilFail, stencilZFail, stencilZPass) {\r\n\t\t\t\t\tif (currentStencilFail !== stencilFail || currentStencilZFail !== stencilZFail || currentStencilZPass !== stencilZPass) {\r\n\t\t\t\t\t\tgl.stencilOp(stencilFail, stencilZFail, stencilZPass);\r\n\t\t\t\t\t\tcurrentStencilFail = stencilFail;\r\n\t\t\t\t\t\tcurrentStencilZFail = stencilZFail;\r\n\t\t\t\t\t\tcurrentStencilZPass = stencilZPass;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsetLocked: function (lock) {\r\n\t\t\t\t\tlocked = lock;\r\n\t\t\t\t},\r\n\t\t\t\tsetClear: function (stencil) {\r\n\t\t\t\t\tif (currentStencilClear !== stencil) {\r\n\t\t\t\t\t\tgl.clearStencil(stencil);\r\n\t\t\t\t\t\tcurrentStencilClear = stencil;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\treset: function () {\r\n\t\t\t\t\tlocked = false;\r\n\t\t\t\t\tcurrentStencilMask = null;\r\n\t\t\t\t\tcurrentStencilFunc = null;\r\n\t\t\t\t\tcurrentStencilRef = null;\r\n\t\t\t\t\tcurrentStencilFuncMask = null;\r\n\t\t\t\t\tcurrentStencilFail = null;\r\n\t\t\t\t\tcurrentStencilZFail = null;\r\n\t\t\t\t\tcurrentStencilZPass = null;\r\n\t\t\t\t\tcurrentStencilClear = null;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t} //\r\n\r\n\r\n\t\tconst colorBuffer = new ColorBuffer();\r\n\t\tconst depthBuffer = new DepthBuffer();\r\n\t\tconst stencilBuffer = new StencilBuffer();\r\n\t\tlet enabledCapabilities = {};\r\n\t\tlet xrFramebuffer = null;\r\n\t\tlet currentBoundFramebuffers = {};\r\n\t\tlet currentProgram = null;\r\n\t\tlet currentBlendingEnabled = false;\r\n\t\tlet currentBlending = null;\r\n\t\tlet currentBlendEquation = null;\r\n\t\tlet currentBlendSrc = null;\r\n\t\tlet currentBlendDst = null;\r\n\t\tlet currentBlendEquationAlpha = null;\r\n\t\tlet currentBlendSrcAlpha = null;\r\n\t\tlet currentBlendDstAlpha = null;\r\n\t\tlet currentPremultipledAlpha = false;\r\n\t\tlet currentFlipSided = null;\r\n\t\tlet currentCullFace = null;\r\n\t\tlet currentLineWidth = null;\r\n\t\tlet currentPolygonOffsetFactor = null;\r\n\t\tlet currentPolygonOffsetUnits = null;\r\n\t\tconst maxTextures = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\r\n\t\tlet lineWidthAvailable = false;\r\n\t\tlet version = 0;\r\n\t\tconst glVersion = gl.getParameter(gl.VERSION);\r\n\r\n\t\tif (glVersion.indexOf('WebGL') !== -1) {\r\n\t\t\tversion = parseFloat(/^WebGL (\\d)/.exec(glVersion)[1]);\r\n\t\t\tlineWidthAvailable = version >= 1.0;\r\n\t\t} else if (glVersion.indexOf('OpenGL ES') !== -1) {\r\n\t\t\tversion = parseFloat(/^OpenGL ES (\\d)/.exec(glVersion)[1]);\r\n\t\t\tlineWidthAvailable = version >= 2.0;\r\n\t\t}\r\n\r\n\t\tlet currentTextureSlot = null;\r\n\t\tlet currentBoundTextures = {};\r\n\t\tconst scissorParam = gl.getParameter(gl.SCISSOR_BOX);\r\n\t\tconst viewportParam = gl.getParameter(gl.VIEWPORT);\r\n\t\tconst currentScissor = new Vector4().fromArray(scissorParam);\r\n\t\tconst currentViewport = new Vector4().fromArray(viewportParam);\r\n\r\n\t\tfunction createTexture(type, target, count) {\r\n\t\t\tconst data = new Uint8Array(4); // 4 is required to match default unpack alignment of 4.\r\n\r\n\t\t\tconst texture = gl.createTexture();\r\n\t\t\tgl.bindTexture(type, texture);\r\n\t\t\tgl.texParameteri(type, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n\t\t\tgl.texParameteri(type, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n\r\n\t\t\tfor (let i = 0; i < count; i++) {\r\n\t\t\t\tgl.texImage2D(target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data);\r\n\t\t\t}\r\n\r\n\t\t\treturn texture;\r\n\t\t}\r\n\r\n\t\tconst emptyTextures = {};\r\n\t\temptyTextures[gl.TEXTURE_2D] = createTexture(gl.TEXTURE_2D, gl.TEXTURE_2D, 1);\r\n\t\temptyTextures[gl.TEXTURE_CUBE_MAP] = createTexture(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6); // init\r\n\r\n\t\tcolorBuffer.setClear(0, 0, 0, 1);\r\n\t\tdepthBuffer.setClear(1);\r\n\t\tstencilBuffer.setClear(0);\r\n\t\tenable(gl.DEPTH_TEST);\r\n\t\tdepthBuffer.setFunc(LessEqualDepth);\r\n\t\tsetFlipSided(false);\r\n\t\tsetCullFace(CullFaceBack);\r\n\t\tenable(gl.CULL_FACE);\r\n\t\tsetBlending(NoBlending); //\r\n\r\n\t\tfunction enable(id) {\r\n\t\t\tif (enabledCapabilities[id] !== true) {\r\n\t\t\t\tgl.enable(id);\r\n\t\t\t\tenabledCapabilities[id] = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction disable(id) {\r\n\t\t\tif (enabledCapabilities[id] !== false) {\r\n\t\t\t\tgl.disable(id);\r\n\t\t\t\tenabledCapabilities[id] = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction bindXRFramebuffer(framebuffer) {\r\n\t\t\tif (framebuffer !== xrFramebuffer) {\r\n\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n\t\t\t\txrFramebuffer = framebuffer;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction bindFramebuffer(target, framebuffer) {\r\n\t\t\tif (framebuffer === null && xrFramebuffer !== null) framebuffer = xrFramebuffer; // use active XR framebuffer if available\r\n\r\n\t\t\tif (currentBoundFramebuffers[target] !== framebuffer) {\r\n\t\t\t\tgl.bindFramebuffer(target, framebuffer);\r\n\t\t\t\tcurrentBoundFramebuffers[target] = framebuffer;\r\n\r\n\t\t\t\tif (isWebGL2) {\r\n\t\t\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\r\n\t\t\t\t\tif (target === gl.DRAW_FRAMEBUFFER) {\r\n\t\t\t\t\t\tcurrentBoundFramebuffers[gl.FRAMEBUFFER] = framebuffer;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (target === gl.FRAMEBUFFER) {\r\n\t\t\t\t\t\tcurrentBoundFramebuffers[gl.DRAW_FRAMEBUFFER] = framebuffer;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tfunction useProgram(program) {\r\n\t\t\tif (currentProgram !== program) {\r\n\t\t\t\tgl.useProgram(program);\r\n\t\t\t\tcurrentProgram = program;\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst equationToGL = {\r\n\t\t\t[AddEquation]: gl.FUNC_ADD,\r\n\t\t\t[SubtractEquation]: gl.FUNC_SUBTRACT,\r\n\t\t\t[ReverseSubtractEquation]: gl.FUNC_REVERSE_SUBTRACT\r\n\t\t};\r\n\r\n\t\tif (isWebGL2) {\r\n\t\t\tequationToGL[MinEquation] = gl.MIN;\r\n\t\t\tequationToGL[MaxEquation] = gl.MAX;\r\n\t\t} else {\r\n\t\t\tconst extension = extensions.get('EXT_blend_minmax');\r\n\r\n\t\t\tif (extension !== null) {\r\n\t\t\t\tequationToGL[MinEquation] = extension.MIN_EXT;\r\n\t\t\t\tequationToGL[MaxEquation] = extension.MAX_EXT;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst factorToGL = {\r\n\t\t\t[ZeroFactor]: gl.ZERO,\r\n\t\t\t[OneFactor]: gl.ONE,\r\n\t\t\t[SrcColorFactor]: gl.SRC_COLOR,\r\n\t\t\t[SrcAlphaFactor]: gl.SRC_ALPHA,\r\n\t\t\t[SrcAlphaSaturateFactor]: gl.SRC_ALPHA_SATURATE,\r\n\t\t\t[DstColorFactor]: gl.DST_COLOR,\r\n\t\t\t[DstAlphaFactor]: gl.DST_ALPHA,\r\n\t\t\t[OneMinusSrcColorFactor]: gl.ONE_MINUS_SRC_COLOR,\r\n\t\t\t[OneMinusSrcAlphaFactor]: gl.ONE_MINUS_SRC_ALPHA,\r\n\t\t\t[OneMinusDstColorFactor]: gl.ONE_MINUS_DST_COLOR,\r\n\t\t\t[OneMinusDstAlphaFactor]: gl.ONE_MINUS_DST_ALPHA\r\n\t\t};\r\n\r\n\t\tfunction setBlending(blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha) {\r\n\t\t\tif (blending === NoBlending) {\r\n\t\t\t\tif (currentBlendingEnabled === true) {\r\n\t\t\t\t\tdisable(gl.BLEND);\r\n\t\t\t\t\tcurrentBlendingEnabled = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (currentBlendingEnabled === false) {\r\n\t\t\t\tenable(gl.BLEND);\r\n\t\t\t\tcurrentBlendingEnabled = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (blending !== CustomBlending) {\r\n\t\t\t\tif (blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha) {\r\n\t\t\t\t\tif (currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation) {\r\n\t\t\t\t\t\tgl.blendEquation(gl.FUNC_ADD);\r\n\t\t\t\t\t\tcurrentBlendEquation = AddEquation;\r\n\t\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (premultipliedAlpha) {\r\n\t\t\t\t\t\tswitch (blending) {\r\n\t\t\t\t\t\t\tcase NormalBlending:\r\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate(gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase AdditiveBlending:\r\n\t\t\t\t\t\t\t\tgl.blendFunc(gl.ONE, gl.ONE);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase SubtractiveBlending:\r\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate(gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase MultiplyBlending:\r\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate(gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tconsole.error('THREE.WebGLState: Invalid blending: ', blending);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tswitch (blending) {\r\n\t\t\t\t\t\t\tcase NormalBlending:\r\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase AdditiveBlending:\r\n\t\t\t\t\t\t\t\tgl.blendFunc(gl.SRC_ALPHA, gl.ONE);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase SubtractiveBlending:\r\n\t\t\t\t\t\t\t\tgl.blendFunc(gl.ZERO, gl.ONE_MINUS_SRC_COLOR);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase MultiplyBlending:\r\n\t\t\t\t\t\t\t\tgl.blendFunc(gl.ZERO, gl.SRC_COLOR);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tconsole.error('THREE.WebGLState: Invalid blending: ', blending);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcurrentBlendSrc = null;\r\n\t\t\t\t\tcurrentBlendDst = null;\r\n\t\t\t\t\tcurrentBlendSrcAlpha = null;\r\n\t\t\t\t\tcurrentBlendDstAlpha = null;\r\n\t\t\t\t\tcurrentBlending = blending;\r\n\t\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn;\r\n\t\t\t} // custom blending\r\n\r\n\r\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\r\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\r\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\r\n\r\n\t\t\tif (blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha) {\r\n\t\t\t\tgl.blendEquationSeparate(equationToGL[blendEquation], equationToGL[blendEquationAlpha]);\r\n\t\t\t\tcurrentBlendEquation = blendEquation;\r\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\r\n\t\t\t}\r\n\r\n\t\t\tif (blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha) {\r\n\t\t\t\tgl.blendFuncSeparate(factorToGL[blendSrc], factorToGL[blendDst], factorToGL[blendSrcAlpha], factorToGL[blendDstAlpha]);\r\n\t\t\t\tcurrentBlendSrc = blendSrc;\r\n\t\t\t\tcurrentBlendDst = blendDst;\r\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\r\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\r\n\t\t\t}\r\n\r\n\t\t\tcurrentBlending = blending;\r\n\t\t\tcurrentPremultipledAlpha = null;\r\n\t\t}\r\n\r\n\t\tfunction setMaterial(material, frontFaceCW) {\r\n\t\t\tmaterial.side === DoubleSide ? disable(gl.CULL_FACE) : enable(gl.CULL_FACE);\r\n\t\t\tlet flipSided = material.side === BackSide;\r\n\t\t\tif (frontFaceCW) flipSided = !flipSided;\r\n\t\t\tsetFlipSided(flipSided);\r\n\t\t\tmaterial.blending === NormalBlending && material.transparent === false ? setBlending(NoBlending) : setBlending(material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha);\r\n\t\t\tdepthBuffer.setFunc(material.depthFunc);\r\n\t\t\tdepthBuffer.setTest(material.depthTest);\r\n\t\t\tdepthBuffer.setMask(material.depthWrite);\r\n\t\t\tcolorBuffer.setMask(material.colorWrite);\r\n\t\t\tconst stencilWrite = material.stencilWrite;\r\n\t\t\tstencilBuffer.setTest(stencilWrite);\r\n\r\n\t\t\tif (stencilWrite) {\r\n\t\t\t\tstencilBuffer.setMask(material.stencilWriteMask);\r\n\t\t\t\tstencilBuffer.setFunc(material.stencilFunc, material.stencilRef, material.stencilFuncMask);\r\n\t\t\t\tstencilBuffer.setOp(material.stencilFail, material.stencilZFail, material.stencilZPass);\r\n\t\t\t}\r\n\r\n\t\t\tsetPolygonOffset(material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits);\r\n\t\t\tmaterial.alphaToCoverage === true ? enable(gl.SAMPLE_ALPHA_TO_COVERAGE) : disable(gl.SAMPLE_ALPHA_TO_COVERAGE);\r\n\t\t} //\r\n\r\n\r\n\t\tfunction setFlipSided(flipSided) {\r\n\t\t\tif (currentFlipSided !== flipSided) {\r\n\t\t\t\tif (flipSided) {\r\n\t\t\t\t\tgl.frontFace(gl.CW);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tgl.frontFace(gl.CCW);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcurrentFlipSided = flipSided;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction setCullFace(cullFace) {\r\n\t\t\tif (cullFace !== CullFaceNone) {\r\n\t\t\t\tenable(gl.CULL_FACE);\r\n\r\n\t\t\t\tif (cullFace !== currentCullFace) {\r\n\t\t\t\t\tif (cullFace === CullFaceBack) {\r\n\t\t\t\t\t\tgl.cullFace(gl.BACK);\r\n\t\t\t\t\t} else if (cullFace === CullFaceFront) {\r\n\t\t\t\t\t\tgl.cullFace(gl.FRONT);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tgl.cullFace(gl.FRONT_AND_BACK);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tdisable(gl.CULL_FACE);\r\n\t\t\t}\r\n\r\n\t\t\tcurrentCullFace = cullFace;\r\n\t\t}\r\n\r\n\t\tfunction setLineWidth(width) {\r\n\t\t\tif (width !== currentLineWidth) {\r\n\t\t\t\tif (lineWidthAvailable) gl.lineWidth(width);\r\n\t\t\t\tcurrentLineWidth = width;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction setPolygonOffset(polygonOffset, factor, units) {\r\n\t\t\tif (polygonOffset) {\r\n\t\t\t\tenable(gl.POLYGON_OFFSET_FILL);\r\n\r\n\t\t\t\tif (currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units) {\r\n\t\t\t\t\tgl.polygonOffset(factor, units);\r\n\t\t\t\t\tcurrentPolygonOffsetFactor = factor;\r\n\t\t\t\t\tcurrentPolygonOffsetUnits = units;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tdisable(gl.POLYGON_OFFSET_FILL);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction setScissorTest(scissorTest) {\r\n\t\t\tif (scissorTest) {\r\n\t\t\t\tenable(gl.SCISSOR_TEST);\r\n\t\t\t} else {\r\n\t\t\t\tdisable(gl.SCISSOR_TEST);\r\n\t\t\t}\r\n\t\t} // texture\r\n\r\n\r\n\t\tfunction activeTexture(webglSlot) {\r\n\t\t\tif (webglSlot === undefined) webglSlot = gl.TEXTURE0 + maxTextures - 1;\r\n\r\n\t\t\tif (currentTextureSlot !== webglSlot) {\r\n\t\t\t\tgl.activeTexture(webglSlot);\r\n\t\t\t\tcurrentTextureSlot = webglSlot;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction bindTexture(webglType, webglTexture) {\r\n\t\t\tif (currentTextureSlot === null) {\r\n\t\t\t\tactiveTexture();\r\n\t\t\t}\r\n\r\n\t\t\tlet boundTexture = currentBoundTextures[currentTextureSlot];\r\n\r\n\t\t\tif (boundTexture === undefined) {\r\n\t\t\t\tboundTexture = {\r\n\t\t\t\t\ttype: undefined,\r\n\t\t\t\t\ttexture: undefined\r\n\t\t\t\t};\r\n\t\t\t\tcurrentBoundTextures[currentTextureSlot] = boundTexture;\r\n\t\t\t}\r\n\r\n\t\t\tif (boundTexture.type !== webglType || boundTexture.texture !== webglTexture) {\r\n\t\t\t\tgl.bindTexture(webglType, webglTexture || emptyTextures[webglType]);\r\n\t\t\t\tboundTexture.type = webglType;\r\n\t\t\t\tboundTexture.texture = webglTexture;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction unbindTexture() {\r\n\t\t\tconst boundTexture = currentBoundTextures[currentTextureSlot];\r\n\r\n\t\t\tif (boundTexture !== undefined && boundTexture.type !== undefined) {\r\n\t\t\t\tgl.bindTexture(boundTexture.type, null);\r\n\t\t\t\tboundTexture.type = undefined;\r\n\t\t\t\tboundTexture.texture = undefined;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction compressedTexImage2D() {\r\n\t\t\ttry {\r\n\t\t\t\tgl.compressedTexImage2D.apply(gl, arguments);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error('THREE.WebGLState:', error);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction texImage2D() {\r\n\t\t\ttry {\r\n\t\t\t\tgl.texImage2D.apply(gl, arguments);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error('THREE.WebGLState:', error);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction texImage3D() {\r\n\t\t\ttry {\r\n\t\t\t\tgl.texImage3D.apply(gl, arguments);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error('THREE.WebGLState:', error);\r\n\t\t\t}\r\n\t\t} //\r\n\r\n\r\n\t\tfunction scissor(scissor) {\r\n\t\t\tif (currentScissor.equals(scissor) === false) {\r\n\t\t\t\tgl.scissor(scissor.x, scissor.y, scissor.z, scissor.w);\r\n\t\t\t\tcurrentScissor.copy(scissor);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction viewport(viewport) {\r\n\t\t\tif (currentViewport.equals(viewport) === false) {\r\n\t\t\t\tgl.viewport(viewport.x, viewport.y, viewport.z, viewport.w);\r\n\t\t\t\tcurrentViewport.copy(viewport);\r\n\t\t\t}\r\n\t\t} //\r\n\r\n\r\n\t\tfunction reset() {\r\n\t\t\t// reset state\r\n\t\t\tgl.disable(gl.BLEND);\r\n\t\t\tgl.disable(gl.CULL_FACE);\r\n\t\t\tgl.disable(gl.DEPTH_TEST);\r\n\t\t\tgl.disable(gl.POLYGON_OFFSET_FILL);\r\n\t\t\tgl.disable(gl.SCISSOR_TEST);\r\n\t\t\tgl.disable(gl.STENCIL_TEST);\r\n\t\t\tgl.disable(gl.SAMPLE_ALPHA_TO_COVERAGE);\r\n\t\t\tgl.blendEquation(gl.FUNC_ADD);\r\n\t\t\tgl.blendFunc(gl.ONE, gl.ZERO);\r\n\t\t\tgl.blendFuncSeparate(gl.ONE, gl.ZERO, gl.ONE, gl.ZERO);\r\n\t\t\tgl.colorMask(true, true, true, true);\r\n\t\t\tgl.clearColor(0, 0, 0, 0);\r\n\t\t\tgl.depthMask(true);\r\n\t\t\tgl.depthFunc(gl.LESS);\r\n\t\t\tgl.clearDepth(1);\r\n\t\t\tgl.stencilMask(0xffffffff);\r\n\t\t\tgl.stencilFunc(gl.ALWAYS, 0, 0xffffffff);\r\n\t\t\tgl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\r\n\t\t\tgl.clearStencil(0);\r\n\t\t\tgl.cullFace(gl.BACK);\r\n\t\t\tgl.frontFace(gl.CCW);\r\n\t\t\tgl.polygonOffset(0, 0);\r\n\t\t\tgl.activeTexture(gl.TEXTURE0);\r\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\r\n\t\t\tif (isWebGL2 === true) {\r\n\t\t\t\tgl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null);\r\n\t\t\t\tgl.bindFramebuffer(gl.READ_FRAMEBUFFER, null);\r\n\t\t\t}\r\n\r\n\t\t\tgl.useProgram(null);\r\n\t\t\tgl.lineWidth(1);\r\n\t\t\tgl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\r\n\t\t\tgl.viewport(0, 0, gl.canvas.width, gl.canvas.height); // reset internals\r\n\r\n\t\t\tenabledCapabilities = {};\r\n\t\t\tcurrentTextureSlot = null;\r\n\t\t\tcurrentBoundTextures = {};\r\n\t\t\txrFramebuffer = null;\r\n\t\t\tcurrentBoundFramebuffers = {};\r\n\t\t\tcurrentProgram = null;\r\n\t\t\tcurrentBlendingEnabled = false;\r\n\t\t\tcurrentBlending = null;\r\n\t\t\tcurrentBlendEquation = null;\r\n\t\t\tcurrentBlendSrc = null;\r\n\t\t\tcurrentBlendDst = null;\r\n\t\t\tcurrentBlendEquationAlpha = null;\r\n\t\t\tcurrentBlendSrcAlpha = null;\r\n\t\t\tcurrentBlendDstAlpha = null;\r\n\t\t\tcurrentPremultipledAlpha = false;\r\n\t\t\tcurrentFlipSided = null;\r\n\t\t\tcurrentCullFace = null;\r\n\t\t\tcurrentLineWidth = null;\r\n\t\t\tcurrentPolygonOffsetFactor = null;\r\n\t\t\tcurrentPolygonOffsetUnits = null;\r\n\t\t\tcurrentScissor.set(0, 0, gl.canvas.width, gl.canvas.height);\r\n\t\t\tcurrentViewport.set(0, 0, gl.canvas.width, gl.canvas.height);\r\n\t\t\tcolorBuffer.reset();\r\n\t\t\tdepthBuffer.reset();\r\n\t\t\tstencilBuffer.reset();\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tbuffers: {\r\n\t\t\t\tcolor: colorBuffer,\r\n\t\t\t\tdepth: depthBuffer,\r\n\t\t\t\tstencil: stencilBuffer\r\n\t\t\t},\r\n\t\t\tenable: enable,\r\n\t\t\tdisable: disable,\r\n\t\t\tbindFramebuffer: bindFramebuffer,\r\n\t\t\tbindXRFramebuffer: bindXRFramebuffer,\r\n\t\t\tuseProgram: useProgram,\r\n\t\t\tsetBlending: setBlending,\r\n\t\t\tsetMaterial: setMaterial,\r\n\t\t\tsetFlipSided: setFlipSided,\r\n\t\t\tsetCullFace: setCullFace,\r\n\t\t\tsetLineWidth: setLineWidth,\r\n\t\t\tsetPolygonOffset: setPolygonOffset,\r\n\t\t\tsetScissorTest: setScissorTest,\r\n\t\t\tactiveTexture: activeTexture,\r\n\t\t\tbindTexture: bindTexture,\r\n\t\t\tunbindTexture: unbindTexture,\r\n\t\t\tcompressedTexImage2D: compressedTexImage2D,\r\n\t\t\ttexImage2D: texImage2D,\r\n\t\t\ttexImage3D: texImage3D,\r\n\t\t\tscissor: scissor,\r\n\t\t\tviewport: viewport,\r\n\t\t\treset: reset\r\n\t\t};\r\n\t}\r\n\r\n\tfunction WebGLTextures(_gl, extensions, state, properties, capabilities, utils, info) {\r\n\t\tconst isWebGL2 = capabilities.isWebGL2;\r\n\t\tconst maxTextures = capabilities.maxTextures;\r\n\t\tconst maxCubemapSize = capabilities.maxCubemapSize;\r\n\t\tconst maxTextureSize = capabilities.maxTextureSize;\r\n\t\tconst maxSamples = capabilities.maxSamples;\r\n\r\n\t\tconst _videoTextures = new WeakMap();\r\n\r\n\t\tlet _canvas; // cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\r\n\t\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\r\n\t\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\r\n\r\n\r\n\t\tlet useOffscreenCanvas = false;\r\n\r\n\t\ttry {\r\n\t\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined' && new OffscreenCanvas(1, 1).getContext('2d') !== null;\r\n\t\t} catch (err) {// Ignore any errors\r\n\t\t}\r\n\r\n\t\tfunction createCanvas(width, height) {\r\n\t\t\t// Use OffscreenCanvas when available. Specially needed in web workers\r\n\t\t\treturn useOffscreenCanvas ? new OffscreenCanvas(width, height) : document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\r\n\t\t}\r\n\r\n\t\tfunction resizeImage(image, needsPowerOfTwo, needsNewCanvas, maxSize) {\r\n\t\t\tlet scale = 1; // handle case if texture exceeds max size\r\n\r\n\t\t\tif (image.width > maxSize || image.height > maxSize) {\r\n\t\t\t\tscale = maxSize / Math.max(image.width, image.height);\r\n\t\t\t} // only perform resize if necessary\r\n\r\n\r\n\t\t\tif (scale < 1 || needsPowerOfTwo === true) {\r\n\t\t\t\t// only perform resize for certain image types\r\n\t\t\t\tif (typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement || typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement || typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\r\n\t\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\r\n\t\t\t\t\tconst width = floor(scale * image.width);\r\n\t\t\t\t\tconst height = floor(scale * image.height);\r\n\t\t\t\t\tif (_canvas === undefined) _canvas = createCanvas(width, height); // cube textures can't reuse the same canvas\r\n\r\n\t\t\t\t\tconst canvas = needsNewCanvas ? createCanvas(width, height) : _canvas;\r\n\t\t\t\t\tcanvas.width = width;\r\n\t\t\t\t\tcanvas.height = height;\r\n\t\t\t\t\tconst context = canvas.getContext('2d');\r\n\t\t\t\t\tcontext.drawImage(image, 0, 0, width, height);\r\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').');\r\n\t\t\t\t\treturn canvas;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif ('data' in image) {\r\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn image;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn image;\r\n\t\t}\r\n\r\n\t\tfunction isPowerOfTwo$1(image) {\r\n\t\t\treturn isPowerOfTwo(image.width) && isPowerOfTwo(image.height);\r\n\t\t}\r\n\r\n\t\tfunction textureNeedsPowerOfTwo(texture) {\r\n\t\t\tif (isWebGL2) return false;\r\n\t\t\treturn texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping || texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\r\n\t\t}\r\n\r\n\t\tfunction textureNeedsGenerateMipmaps(texture, supportsMips) {\r\n\t\t\treturn texture.generateMipmaps && supportsMips && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\r\n\t\t}\r\n\r\n\t\tfunction generateMipmap(target, texture, width, height, depth = 1) {\r\n\t\t\t_gl.generateMipmap(target);\r\n\r\n\t\t\tconst textureProperties = properties.get(texture);\r\n\t\t\ttextureProperties.__maxMipLevel = Math.log2(Math.max(width, height, depth));\r\n\t\t}\r\n\r\n\t\tfunction getInternalFormat(internalFormatName, glFormat, glType) {\r\n\t\t\tif (isWebGL2 === false) return glFormat;\r\n\r\n\t\t\tif (internalFormatName !== null) {\r\n\t\t\t\tif (_gl[internalFormatName] !== undefined) return _gl[internalFormatName];\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'');\r\n\t\t\t}\r\n\r\n\t\t\tlet internalFormat = glFormat;\r\n\r\n\t\t\tif (glFormat === _gl.RED) {\r\n\t\t\t\tif (glType === _gl.FLOAT) internalFormat = _gl.R32F;\r\n\t\t\t\tif (glType === _gl.HALF_FLOAT) internalFormat = _gl.R16F;\r\n\t\t\t\tif (glType === _gl.UNSIGNED_BYTE) internalFormat = _gl.R8;\r\n\t\t\t}\r\n\r\n\t\t\tif (glFormat === _gl.RGB) {\r\n\t\t\t\tif (glType === _gl.FLOAT) internalFormat = _gl.RGB32F;\r\n\t\t\t\tif (glType === _gl.HALF_FLOAT) internalFormat = _gl.RGB16F;\r\n\t\t\t\tif (glType === _gl.UNSIGNED_BYTE) internalFormat = _gl.RGB8;\r\n\t\t\t}\r\n\r\n\t\t\tif (glFormat === _gl.RGBA) {\r\n\t\t\t\tif (glType === _gl.FLOAT) internalFormat = _gl.RGBA32F;\r\n\t\t\t\tif (glType === _gl.HALF_FLOAT) internalFormat = _gl.RGBA16F;\r\n\t\t\t\tif (glType === _gl.UNSIGNED_BYTE) internalFormat = _gl.RGBA8;\r\n\t\t\t}\r\n\r\n\t\t\tif (internalFormat === _gl.R16F || internalFormat === _gl.R32F || internalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F) {\r\n\t\t\t\textensions.get('EXT_color_buffer_float');\r\n\t\t\t}\r\n\r\n\t\t\treturn internalFormat;\r\n\t\t} // Fallback filters for non-power-of-2 textures\r\n\r\n\r\n\t\tfunction filterFallback(f) {\r\n\t\t\tif (f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter) {\r\n\t\t\t\treturn _gl.NEAREST;\r\n\t\t\t}\r\n\r\n\t\t\treturn _gl.LINEAR;\r\n\t\t} //\r\n\r\n\r\n\t\tfunction onTextureDispose(event) {\r\n\t\t\tconst texture = event.target;\r\n\t\t\ttexture.removeEventListener('dispose', onTextureDispose);\r\n\t\t\tdeallocateTexture(texture);\r\n\r\n\t\t\tif (texture.isVideoTexture) {\r\n\t\t\t\t_videoTextures.delete(texture);\r\n\t\t\t}\r\n\r\n\t\t\tinfo.memory.textures--;\r\n\t\t}\r\n\r\n\t\tfunction onRenderTargetDispose(event) {\r\n\t\t\tconst renderTarget = event.target;\r\n\t\t\trenderTarget.removeEventListener('dispose', onRenderTargetDispose);\r\n\t\t\tdeallocateRenderTarget(renderTarget);\r\n\t\t} //\r\n\r\n\r\n\t\tfunction deallocateTexture(texture) {\r\n\t\t\tconst textureProperties = properties.get(texture);\r\n\t\t\tif (textureProperties.__webglInit === undefined) return;\r\n\r\n\t\t\t_gl.deleteTexture(textureProperties.__webglTexture);\r\n\r\n\t\t\tproperties.remove(texture);\r\n\t\t}\r\n\r\n\t\tfunction deallocateRenderTarget(renderTarget) {\r\n\t\t\tconst texture = renderTarget.texture;\r\n\t\t\tconst renderTargetProperties = properties.get(renderTarget);\r\n\t\t\tconst textureProperties = properties.get(texture);\r\n\t\t\tif (!renderTarget) return;\r\n\r\n\t\t\tif (textureProperties.__webglTexture !== undefined) {\r\n\t\t\t\t_gl.deleteTexture(textureProperties.__webglTexture);\r\n\r\n\t\t\t\tinfo.memory.textures--;\r\n\t\t\t}\r\n\r\n\t\t\tif (renderTarget.depthTexture) {\r\n\t\t\t\trenderTarget.depthTexture.dispose();\r\n\t\t\t}\r\n\r\n\t\t\tif (renderTarget.isWebGLCubeRenderTarget) {\r\n\t\t\t\tfor (let i = 0; i < 6; i++) {\r\n\t\t\t\t\t_gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer[i]);\r\n\r\n\t\t\t\t\tif (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer[i]);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t_gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer);\r\n\r\n\t\t\t\tif (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer);\r\n\t\t\t\tif (renderTargetProperties.__webglMultisampledFramebuffer) _gl.deleteFramebuffer(renderTargetProperties.__webglMultisampledFramebuffer);\r\n\t\t\t\tif (renderTargetProperties.__webglColorRenderbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglColorRenderbuffer);\r\n\t\t\t\tif (renderTargetProperties.__webglDepthRenderbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthRenderbuffer);\r\n\t\t\t}\r\n\r\n\t\t\tif (renderTarget.isWebGLMultipleRenderTargets) {\r\n\t\t\t\tfor (let i = 0, il = texture.length; i < il; i++) {\r\n\t\t\t\t\tconst attachmentProperties = properties.get(texture[i]);\r\n\r\n\t\t\t\t\tif (attachmentProperties.__webglTexture) {\r\n\t\t\t\t\t\t_gl.deleteTexture(attachmentProperties.__webglTexture);\r\n\r\n\t\t\t\t\t\tinfo.memory.textures--;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tproperties.remove(texture[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tproperties.remove(texture);\r\n\t\t\tproperties.remove(renderTarget);\r\n\t\t} //\r\n\r\n\r\n\t\tlet textureUnits = 0;\r\n\r\n\t\tfunction resetTextureUnits() {\r\n\t\t\ttextureUnits = 0;\r\n\t\t}\r\n\r\n\t\tfunction allocateTextureUnit() {\r\n\t\t\tconst textureUnit = textureUnits;\r\n\r\n\t\t\tif (textureUnit >= maxTextures) {\r\n\t\t\t\tconsole.warn('THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures);\r\n\t\t\t}\r\n\r\n\t\t\ttextureUnits += 1;\r\n\t\t\treturn textureUnit;\r\n\t\t} //\r\n\r\n\r\n\t\tfunction setTexture2D(texture, slot) {\r\n\t\t\tconst textureProperties = properties.get(texture);\r\n\t\t\tif (texture.isVideoTexture) updateVideoTexture(texture);\r\n\r\n\t\t\tif (texture.version > 0 && textureProperties.__version !== texture.version) {\r\n\t\t\t\tconst image = texture.image;\r\n\r\n\t\t\t\tif (image === undefined) {\r\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture marked for update but image is undefined');\r\n\t\t\t\t} else if (image.complete === false) {\r\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture marked for update but image is incomplete');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tuploadTexture(textureProperties, texture, slot);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\r\n\t\t\tstate.bindTexture(_gl.TEXTURE_2D, textureProperties.__webglTexture);\r\n\t\t}\r\n\r\n\t\tfunction setTexture2DArray(texture, slot) {\r\n\t\t\tconst textureProperties = properties.get(texture);\r\n\r\n\t\t\tif (texture.version > 0 && textureProperties.__version !== texture.version) {\r\n\t\t\t\tuploadTexture(textureProperties, texture, slot);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\r\n\t\t\tstate.bindTexture(_gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture);\r\n\t\t}\r\n\r\n\t\tfunction setTexture3D(texture, slot) {\r\n\t\t\tconst textureProperties = properties.get(texture);\r\n\r\n\t\t\tif (texture.version > 0 && textureProperties.__version !== texture.version) {\r\n\t\t\t\tuploadTexture(textureProperties, texture, slot);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\r\n\t\t\tstate.bindTexture(_gl.TEXTURE_3D, textureProperties.__webglTexture);\r\n\t\t}\r\n\r\n\t\tfunction setTextureCube(texture, slot) {\r\n\t\t\tconst textureProperties = properties.get(texture);\r\n\r\n\t\t\tif (texture.version > 0 && textureProperties.__version !== texture.version) {\r\n\t\t\t\tuploadCubeTexture(textureProperties, texture, slot);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\r\n\t\t\tstate.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture);\r\n\t\t}\r\n\r\n\t\tconst wrappingToGL = {\r\n\t\t\t[RepeatWrapping]: _gl.REPEAT,\r\n\t\t\t[ClampToEdgeWrapping]: _gl.CLAMP_TO_EDGE,\r\n\t\t\t[MirroredRepeatWrapping]: _gl.MIRRORED_REPEAT\r\n\t\t};\r\n\t\tconst filterToGL = {\r\n\t\t\t[NearestFilter]: _gl.NEAREST,\r\n\t\t\t[NearestMipmapNearestFilter]: _gl.NEAREST_MIPMAP_NEAREST,\r\n\t\t\t[NearestMipmapLinearFilter]: _gl.NEAREST_MIPMAP_LINEAR,\r\n\t\t\t[LinearFilter]: _gl.LINEAR,\r\n\t\t\t[LinearMipmapNearestFilter]: _gl.LINEAR_MIPMAP_NEAREST,\r\n\t\t\t[LinearMipmapLinearFilter]: _gl.LINEAR_MIPMAP_LINEAR\r\n\t\t};\r\n\r\n\t\tfunction setTextureParameters(textureType, texture, supportsMips) {\r\n\t\t\tif (supportsMips) {\r\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[texture.wrapS]);\r\n\r\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[texture.wrapT]);\r\n\r\n\t\t\t\tif (textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY) {\r\n\t\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[texture.wrapR]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[texture.magFilter]);\r\n\r\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[texture.minFilter]);\r\n\t\t\t} else {\r\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE);\r\n\r\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE);\r\n\r\n\t\t\t\tif (textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY) {\r\n\t\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_R, _gl.CLAMP_TO_EDGE);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping) {\r\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, filterFallback(texture.magFilter));\r\n\r\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, filterFallback(texture.minFilter));\r\n\r\n\t\t\t\tif (texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter) {\r\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (extensions.has('EXT_texture_filter_anisotropic') === true) {\r\n\t\t\t\tconst extension = extensions.get('EXT_texture_filter_anisotropic');\r\n\t\t\t\tif (texture.type === FloatType && extensions.has('OES_texture_float_linear') === false) return; // verify extension for WebGL 1 and WebGL 2\r\n\r\n\t\t\t\tif (isWebGL2 === false && texture.type === HalfFloatType && extensions.has('OES_texture_half_float_linear') === false) return; // verify extension for WebGL 1 only\r\n\r\n\t\t\t\tif (texture.anisotropy > 1 || properties.get(texture).__currentAnisotropy) {\r\n\t\t\t\t\t_gl.texParameterf(textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(texture.anisotropy, capabilities.getMaxAnisotropy()));\r\n\r\n\t\t\t\t\tproperties.get(texture).__currentAnisotropy = texture.anisotropy;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction initTexture(textureProperties, texture) {\r\n\t\t\tif (textureProperties.__webglInit === undefined) {\r\n\t\t\t\ttextureProperties.__webglInit = true;\r\n\t\t\t\ttexture.addEventListener('dispose', onTextureDispose);\r\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\r\n\t\t\t\tinfo.memory.textures++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction uploadTexture(textureProperties, texture, slot) {\r\n\t\t\tlet textureType = _gl.TEXTURE_2D;\r\n\t\t\tif (texture.isDataTexture2DArray) textureType = _gl.TEXTURE_2D_ARRAY;\r\n\t\t\tif (texture.isDataTexture3D) textureType = _gl.TEXTURE_3D;\r\n\t\t\tinitTexture(textureProperties, texture);\r\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\r\n\t\t\tstate.bindTexture(textureType, textureProperties.__webglTexture);\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha);\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ALIGNMENT, texture.unpackAlignment);\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, _gl.NONE);\r\n\r\n\t\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo(texture) && isPowerOfTwo$1(texture.image) === false;\r\n\t\t\tconst image = resizeImage(texture.image, needsPowerOfTwo, false, maxTextureSize);\r\n\t\t\tconst supportsMips = isPowerOfTwo$1(image) || isWebGL2,\r\n\t\t\t\t\t\tglFormat = utils.convert(texture.format);\r\n\t\t\tlet glType = utils.convert(texture.type),\r\n\t\t\t\t\tglInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType);\r\n\t\t\tsetTextureParameters(textureType, texture, supportsMips);\r\n\t\t\tlet mipmap;\r\n\t\t\tconst mipmaps = texture.mipmaps;\r\n\r\n\t\t\tif (texture.isDepthTexture) {\r\n\t\t\t\t// populate depth texture with dummy data\r\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT;\r\n\r\n\t\t\t\tif (isWebGL2) {\r\n\t\t\t\t\tif (texture.type === FloatType) {\r\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\r\n\t\t\t\t\t} else if (texture.type === UnsignedIntType) {\r\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\r\n\t\t\t\t\t} else if (texture.type === UnsignedInt248Type) {\r\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16; // WebGL2 requires sized internalformat for glTexImage2D\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (texture.type === FloatType) {\r\n\t\t\t\t\t\tconsole.error('WebGLRenderer: Floating point depth texture requires WebGL2.');\r\n\t\t\t\t\t}\r\n\t\t\t\t} // validation checks for WebGL 1\r\n\r\n\r\n\t\t\t\tif (texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT) {\r\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\r\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\r\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\r\n\t\t\t\t\tif (texture.type !== UnsignedShortType && texture.type !== UnsignedIntType) {\r\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.');\r\n\t\t\t\t\t\ttexture.type = UnsignedShortType;\r\n\t\t\t\t\t\tglType = utils.convert(texture.type);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (texture.format === DepthStencilFormat && glInternalFormat === _gl.DEPTH_COMPONENT) {\r\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\r\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\r\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_STENCIL; // The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\r\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\r\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\r\n\r\n\t\t\t\t\tif (texture.type !== UnsignedInt248Type) {\r\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.');\r\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\r\n\t\t\t\t\t\tglType = utils.convert(texture.type);\r\n\t\t\t\t\t}\r\n\t\t\t\t} //\r\n\r\n\r\n\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null);\r\n\t\t\t} else if (texture.isDataTexture) {\r\n\t\t\t\t// use manually created mipmaps if available\r\n\t\t\t\t// if there are no manual mipmaps\r\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\t\t\t\tif (mipmaps.length > 0 && supportsMips) {\r\n\t\t\t\t\tfor (let i = 0, il = mipmaps.length; i < il; i++) {\r\n\t\t\t\t\t\tmipmap = mipmaps[i];\r\n\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttexture.generateMipmaps = false;\r\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data);\r\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\r\n\t\t\t\t}\r\n\t\t\t} else if (texture.isCompressedTexture) {\r\n\t\t\t\tfor (let i = 0, il = mipmaps.length; i < il; i++) {\r\n\t\t\t\t\tmipmap = mipmaps[i];\r\n\r\n\t\t\t\t\tif (texture.format !== RGBAFormat && texture.format !== RGBFormat) {\r\n\t\t\t\t\t\tif (glFormat !== null) {\r\n\t\t\t\t\t\t\tstate.compressedTexImage2D(_gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\r\n\t\t\t} else if (texture.isDataTexture2DArray) {\r\n\t\t\t\tstate.texImage3D(_gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data);\r\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\r\n\t\t\t} else if (texture.isDataTexture3D) {\r\n\t\t\t\tstate.texImage3D(_gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data);\r\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\r\n\t\t\t} else {\r\n\t\t\t\t// regular Texture (image, video, canvas)\r\n\t\t\t\t// use manually created mipmaps if available\r\n\t\t\t\t// if there are no manual mipmaps\r\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\t\t\t\tif (mipmaps.length > 0 && supportsMips) {\r\n\t\t\t\t\tfor (let i = 0, il = mipmaps.length; i < il; i++) {\r\n\t\t\t\t\t\tmipmap = mipmaps[i];\r\n\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttexture.generateMipmaps = false;\r\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image);\r\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips)) {\r\n\t\t\t\tgenerateMipmap(textureType, texture, image.width, image.height);\r\n\t\t\t}\r\n\r\n\t\t\ttextureProperties.__version = texture.version;\r\n\t\t\tif (texture.onUpdate) texture.onUpdate(texture);\r\n\t\t}\r\n\r\n\t\tfunction uploadCubeTexture(textureProperties, texture, slot) {\r\n\t\t\tif (texture.image.length !== 6) return;\r\n\t\t\tinitTexture(textureProperties, texture);\r\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\r\n\t\t\tstate.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture);\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha);\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ALIGNMENT, texture.unpackAlignment);\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, _gl.NONE);\r\n\r\n\t\t\tconst isCompressed = texture && (texture.isCompressedTexture || texture.image[0].isCompressedTexture);\r\n\t\t\tconst isDataTexture = texture.image[0] && texture.image[0].isDataTexture;\r\n\t\t\tconst cubeImage = [];\r\n\r\n\t\t\tfor (let i = 0; i < 6; i++) {\r\n\t\t\t\tif (!isCompressed && !isDataTexture) {\r\n\t\t\t\t\tcubeImage[i] = resizeImage(texture.image[i], false, true, maxCubemapSize);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcubeImage[i] = isDataTexture ? texture.image[i].image : texture.image[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst image = cubeImage[0],\r\n\t\t\t\t\t\tsupportsMips = isPowerOfTwo$1(image) || isWebGL2,\r\n\t\t\t\t\t\tglFormat = utils.convert(texture.format),\r\n\t\t\t\t\t\tglType = utils.convert(texture.type),\r\n\t\t\t\t\t\tglInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType);\r\n\t\t\tsetTextureParameters(_gl.TEXTURE_CUBE_MAP, texture, supportsMips);\r\n\t\t\tlet mipmaps;\r\n\r\n\t\t\tif (isCompressed) {\r\n\t\t\t\tfor (let i = 0; i < 6; i++) {\r\n\t\t\t\t\tmipmaps = cubeImage[i].mipmaps;\r\n\r\n\t\t\t\t\tfor (let j = 0; j < mipmaps.length; j++) {\r\n\t\t\t\t\t\tconst mipmap = mipmaps[j];\r\n\r\n\t\t\t\t\t\tif (texture.format !== RGBAFormat && texture.format !== RGBFormat) {\r\n\t\t\t\t\t\t\tif (glFormat !== null) {\r\n\t\t\t\t\t\t\t\tstate.compressedTexImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\r\n\t\t\t} else {\r\n\t\t\t\tmipmaps = texture.mipmaps;\r\n\r\n\t\t\t\tfor (let i = 0; i < 6; i++) {\r\n\t\t\t\t\tif (isDataTexture) {\r\n\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[i].width, cubeImage[i].height, 0, glFormat, glType, cubeImage[i].data);\r\n\r\n\t\t\t\t\t\tfor (let j = 0; j < mipmaps.length; j++) {\r\n\t\t\t\t\t\t\tconst mipmap = mipmaps[j];\r\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[i].image;\r\n\t\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[i]);\r\n\r\n\t\t\t\t\t\tfor (let j = 0; j < mipmaps.length; j++) {\r\n\t\t\t\t\t\t\tconst mipmap = mipmaps[j];\r\n\t\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[i]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length;\r\n\t\t\t}\r\n\r\n\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips)) {\r\n\t\t\t\t// We assume images for cube map have the same size.\r\n\t\t\t\tgenerateMipmap(_gl.TEXTURE_CUBE_MAP, texture, image.width, image.height);\r\n\t\t\t}\r\n\r\n\t\t\ttextureProperties.__version = texture.version;\r\n\t\t\tif (texture.onUpdate) texture.onUpdate(texture);\r\n\t\t} // Render targets\r\n\t\t// Setup storage for target texture and bind it to correct framebuffer\r\n\r\n\r\n\t\tfunction setupFrameBufferTexture(framebuffer, renderTarget, texture, attachment, textureTarget) {\r\n\t\t\tconst glFormat = utils.convert(texture.format);\r\n\t\t\tconst glType = utils.convert(texture.type);\r\n\t\t\tconst glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType);\r\n\r\n\t\t\tif (textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY) {\r\n\t\t\t\tstate.texImage3D(textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, renderTarget.depth, 0, glFormat, glType, null);\r\n\t\t\t} else {\r\n\t\t\t\tstate.texImage2D(textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null);\r\n\t\t\t}\r\n\r\n\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\r\n\r\n\t\t\t_gl.framebufferTexture2D(_gl.FRAMEBUFFER, attachment, textureTarget, properties.get(texture).__webglTexture, 0);\r\n\r\n\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, null);\r\n\t\t} // Setup storage for internal depth/stencil buffers and bind to correct framebuffer\r\n\r\n\r\n\t\tfunction setupRenderBufferStorage(renderbuffer, renderTarget, isMultisample) {\r\n\t\t\t_gl.bindRenderbuffer(_gl.RENDERBUFFER, renderbuffer);\r\n\r\n\t\t\tif (renderTarget.depthBuffer && !renderTarget.stencilBuffer) {\r\n\t\t\t\tlet glInternalFormat = _gl.DEPTH_COMPONENT16;\r\n\r\n\t\t\t\tif (isMultisample) {\r\n\t\t\t\t\tconst depthTexture = renderTarget.depthTexture;\r\n\r\n\t\t\t\t\tif (depthTexture && depthTexture.isDepthTexture) {\r\n\t\t\t\t\t\tif (depthTexture.type === FloatType) {\r\n\t\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\r\n\t\t\t\t\t\t} else if (depthTexture.type === UnsignedIntType) {\r\n\t\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst samples = getRenderTargetSamples(renderTarget);\r\n\r\n\t\t\t\t\t_gl.renderbufferStorageMultisample(_gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t_gl.renderbufferStorage(_gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer);\r\n\t\t\t} else if (renderTarget.depthBuffer && renderTarget.stencilBuffer) {\r\n\t\t\t\tif (isMultisample) {\r\n\t\t\t\t\tconst samples = getRenderTargetSamples(renderTarget);\r\n\r\n\t\t\t\t\t_gl.renderbufferStorageMultisample(_gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t_gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer);\r\n\t\t\t} else {\r\n\t\t\t\t// Use the first texture for MRT so far\r\n\t\t\t\tconst texture = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture[0] : renderTarget.texture;\r\n\t\t\t\tconst glFormat = utils.convert(texture.format);\r\n\t\t\t\tconst glType = utils.convert(texture.type);\r\n\t\t\t\tconst glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType);\r\n\r\n\t\t\t\tif (isMultisample) {\r\n\t\t\t\t\tconst samples = getRenderTargetSamples(renderTarget);\r\n\r\n\t\t\t\t\t_gl.renderbufferStorageMultisample(_gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t_gl.renderbufferStorage(_gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindRenderbuffer(_gl.RENDERBUFFER, null);\r\n\t\t} // Setup resources for a Depth Texture for a FBO (needs an extension)\r\n\r\n\r\n\t\tfunction setupDepthTexture(framebuffer, renderTarget) {\r\n\t\t\tconst isCube = renderTarget && renderTarget.isWebGLCubeRenderTarget;\r\n\t\t\tif (isCube) throw new Error('Depth Texture with cube render targets is not supported');\r\n\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\r\n\r\n\t\t\tif (!(renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture)) {\r\n\t\t\t\tthrow new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');\r\n\t\t\t} // upload an empty depth texture with framebuffer size\r\n\r\n\r\n\t\t\tif (!properties.get(renderTarget.depthTexture).__webglTexture || renderTarget.depthTexture.image.width !== renderTarget.width || renderTarget.depthTexture.image.height !== renderTarget.height) {\r\n\t\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\r\n\t\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\r\n\t\t\t\trenderTarget.depthTexture.needsUpdate = true;\r\n\t\t\t}\r\n\r\n\t\t\tsetTexture2D(renderTarget.depthTexture, 0);\r\n\r\n\t\t\tconst webglDepthTexture = properties.get(renderTarget.depthTexture).__webglTexture;\r\n\r\n\t\t\tif (renderTarget.depthTexture.format === DepthFormat) {\r\n\t\t\t\t_gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0);\r\n\t\t\t} else if (renderTarget.depthTexture.format === DepthStencilFormat) {\r\n\t\t\t\t_gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0);\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error('Unknown depthTexture format');\r\n\t\t\t}\r\n\t\t} // Setup GL resources for a non-texture depth buffer\r\n\r\n\r\n\t\tfunction setupDepthRenderbuffer(renderTarget) {\r\n\t\t\tconst renderTargetProperties = properties.get(renderTarget);\r\n\t\t\tconst isCube = renderTarget.isWebGLCubeRenderTarget === true;\r\n\r\n\t\t\tif (renderTarget.depthTexture) {\r\n\t\t\t\tif (isCube) throw new Error('target.depthTexture not supported in Cube render targets');\r\n\t\t\t\tsetupDepthTexture(renderTargetProperties.__webglFramebuffer, renderTarget);\r\n\t\t\t} else {\r\n\t\t\t\tif (isCube) {\r\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\r\n\r\n\t\t\t\t\tfor (let i = 0; i < 6; i++) {\r\n\t\t\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[i]);\r\n\t\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[i] = _gl.createRenderbuffer();\r\n\t\t\t\t\t\tsetupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer[i], renderTarget, false);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer);\r\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\r\n\t\t\t\t\tsetupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer, renderTarget, false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, null);\r\n\t\t} // Set up GL resources for the render target\r\n\r\n\r\n\t\tfunction setupRenderTarget(renderTarget) {\r\n\t\t\tconst texture = renderTarget.texture;\r\n\t\t\tconst renderTargetProperties = properties.get(renderTarget);\r\n\t\t\tconst textureProperties = properties.get(texture);\r\n\t\t\trenderTarget.addEventListener('dispose', onRenderTargetDispose);\r\n\r\n\t\t\tif (renderTarget.isWebGLMultipleRenderTargets !== true) {\r\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\r\n\t\t\t\ttextureProperties.__version = texture.version;\r\n\t\t\t\tinfo.memory.textures++;\r\n\t\t\t}\r\n\r\n\t\t\tconst isCube = renderTarget.isWebGLCubeRenderTarget === true;\r\n\t\t\tconst isMultipleRenderTargets = renderTarget.isWebGLMultipleRenderTargets === true;\r\n\t\t\tconst isMultisample = renderTarget.isWebGLMultisampleRenderTarget === true;\r\n\t\t\tconst isRenderTarget3D = texture.isDataTexture3D || texture.isDataTexture2DArray;\r\n\t\t\tconst supportsMips = isPowerOfTwo$1(renderTarget) || isWebGL2; // Handles WebGL2 RGBFormat fallback - #18858\r\n\r\n\t\t\tif (isWebGL2 && texture.format === RGBFormat && (texture.type === FloatType || texture.type === HalfFloatType)) {\r\n\t\t\t\ttexture.format = RGBAFormat;\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.');\r\n\t\t\t} // Setup framebuffer\r\n\r\n\r\n\t\t\tif (isCube) {\r\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\r\n\r\n\t\t\t\tfor (let i = 0; i < 6; i++) {\r\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[i] = _gl.createFramebuffer();\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\r\n\r\n\t\t\t\tif (isMultipleRenderTargets) {\r\n\t\t\t\t\tif (capabilities.drawBuffers) {\r\n\t\t\t\t\t\tconst textures = renderTarget.texture;\r\n\r\n\t\t\t\t\t\tfor (let i = 0, il = textures.length; i < il; i++) {\r\n\t\t\t\t\t\t\tconst attachmentProperties = properties.get(textures[i]);\r\n\r\n\t\t\t\t\t\t\tif (attachmentProperties.__webglTexture === undefined) {\r\n\t\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\r\n\t\t\t\t\t\t\t\tinfo.memory.textures++;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.');\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (isMultisample) {\r\n\t\t\t\t\tif (isWebGL2) {\r\n\t\t\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\r\n\t\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\r\n\r\n\t\t\t\t\t\t_gl.bindRenderbuffer(_gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer);\r\n\r\n\t\t\t\t\t\tconst glFormat = utils.convert(texture.format);\r\n\t\t\t\t\t\tconst glType = utils.convert(texture.type);\r\n\t\t\t\t\t\tconst glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType);\r\n\t\t\t\t\t\tconst samples = getRenderTargetSamples(renderTarget);\r\n\r\n\t\t\t\t\t\t_gl.renderbufferStorageMultisample(_gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height);\r\n\r\n\t\t\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer);\r\n\r\n\t\t\t\t\t\t_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer);\r\n\r\n\t\t\t\t\t\t_gl.bindRenderbuffer(_gl.RENDERBUFFER, null);\r\n\r\n\t\t\t\t\t\tif (renderTarget.depthBuffer) {\r\n\t\t\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\r\n\t\t\t\t\t\t\tsetupRenderBufferStorage(renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, null);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} // Setup color buffer\r\n\r\n\r\n\t\t\tif (isCube) {\r\n\t\t\t\tstate.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture);\r\n\t\t\t\tsetTextureParameters(_gl.TEXTURE_CUBE_MAP, texture, supportsMips);\r\n\r\n\t\t\t\tfor (let i = 0; i < 6; i++) {\r\n\t\t\t\t\tsetupFrameBufferTexture(renderTargetProperties.__webglFramebuffer[i], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips)) {\r\n\t\t\t\t\tgenerateMipmap(_gl.TEXTURE_CUBE_MAP, texture, renderTarget.width, renderTarget.height);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.bindTexture(_gl.TEXTURE_CUBE_MAP, null);\r\n\t\t\t} else if (isMultipleRenderTargets) {\r\n\t\t\t\tconst textures = renderTarget.texture;\r\n\r\n\t\t\t\tfor (let i = 0, il = textures.length; i < il; i++) {\r\n\t\t\t\t\tconst attachment = textures[i];\r\n\t\t\t\t\tconst attachmentProperties = properties.get(attachment);\r\n\t\t\t\t\tstate.bindTexture(_gl.TEXTURE_2D, attachmentProperties.__webglTexture);\r\n\t\t\t\t\tsetTextureParameters(_gl.TEXTURE_2D, attachment, supportsMips);\r\n\t\t\t\t\tsetupFrameBufferTexture(renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D);\r\n\r\n\t\t\t\t\tif (textureNeedsGenerateMipmaps(attachment, supportsMips)) {\r\n\t\t\t\t\t\tgenerateMipmap(_gl.TEXTURE_2D, attachment, renderTarget.width, renderTarget.height);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.bindTexture(_gl.TEXTURE_2D, null);\r\n\t\t\t} else {\r\n\t\t\t\tlet glTextureType = _gl.TEXTURE_2D;\r\n\r\n\t\t\t\tif (isRenderTarget3D) {\r\n\t\t\t\t\t// Render targets containing layers, i.e: Texture 3D and 2d arrays\r\n\t\t\t\t\tif (isWebGL2) {\r\n\t\t\t\t\t\tconst isTexture3D = texture.isDataTexture3D;\r\n\t\t\t\t\t\tglTextureType = isTexture3D ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.warn('THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.bindTexture(glTextureType, textureProperties.__webglTexture);\r\n\t\t\t\tsetTextureParameters(glTextureType, texture, supportsMips);\r\n\t\t\t\tsetupFrameBufferTexture(renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType);\r\n\r\n\t\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips)) {\r\n\t\t\t\t\tgenerateMipmap(glTextureType, texture, renderTarget.width, renderTarget.height, renderTarget.depth);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.bindTexture(glTextureType, null);\r\n\t\t\t} // Setup depth and stencil buffers\r\n\r\n\r\n\t\t\tif (renderTarget.depthBuffer) {\r\n\t\t\t\tsetupDepthRenderbuffer(renderTarget);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction updateRenderTargetMipmap(renderTarget) {\r\n\t\t\tconst supportsMips = isPowerOfTwo$1(renderTarget) || isWebGL2;\r\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [renderTarget.texture];\r\n\r\n\t\t\tfor (let i = 0, il = textures.length; i < il; i++) {\r\n\t\t\t\tconst texture = textures[i];\r\n\r\n\t\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips)) {\r\n\t\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\r\n\r\n\t\t\t\t\tconst webglTexture = properties.get(texture).__webglTexture;\r\n\r\n\t\t\t\t\tstate.bindTexture(target, webglTexture);\r\n\t\t\t\t\tgenerateMipmap(target, texture, renderTarget.width, renderTarget.height);\r\n\t\t\t\t\tstate.bindTexture(target, null);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction updateMultisampleRenderTarget(renderTarget) {\r\n\t\t\tif (renderTarget.isWebGLMultisampleRenderTarget) {\r\n\t\t\t\tif (isWebGL2) {\r\n\t\t\t\t\tconst width = renderTarget.width;\r\n\t\t\t\t\tconst height = renderTarget.height;\r\n\t\t\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\r\n\t\t\t\t\tif (renderTarget.depthBuffer) mask |= _gl.DEPTH_BUFFER_BIT;\r\n\t\t\t\t\tif (renderTarget.stencilBuffer) mask |= _gl.STENCIL_BUFFER_BIT;\r\n\t\t\t\t\tconst renderTargetProperties = properties.get(renderTarget);\r\n\t\t\t\t\tstate.bindFramebuffer(_gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer);\r\n\t\t\t\t\tstate.bindFramebuffer(_gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer);\r\n\r\n\t\t\t\t\t_gl.blitFramebuffer(0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST);\r\n\r\n\t\t\t\t\tstate.bindFramebuffer(_gl.READ_FRAMEBUFFER, null);\r\n\t\t\t\t\tstate.bindFramebuffer(_gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction getRenderTargetSamples(renderTarget) {\r\n\t\t\treturn isWebGL2 && renderTarget.isWebGLMultisampleRenderTarget ? Math.min(maxSamples, renderTarget.samples) : 0;\r\n\t\t}\r\n\r\n\t\tfunction updateVideoTexture(texture) {\r\n\t\t\tconst frame = info.render.frame; // Check the last frame we updated the VideoTexture\r\n\r\n\t\t\tif (_videoTextures.get(texture) !== frame) {\r\n\t\t\t\t_videoTextures.set(texture, frame);\r\n\r\n\t\t\t\ttexture.update();\r\n\t\t\t}\r\n\t\t} // backwards compatibility\r\n\r\n\r\n\t\tlet warnedTexture2D = false;\r\n\t\tlet warnedTextureCube = false;\r\n\r\n\t\tfunction safeSetTexture2D(texture, slot) {\r\n\t\t\tif (texture && texture.isWebGLRenderTarget) {\r\n\t\t\t\tif (warnedTexture2D === false) {\r\n\t\t\t\t\tconsole.warn('THREE.WebGLTextures.safeSetTexture2D: don\\'t use render targets as textures. Use their .texture property instead.');\r\n\t\t\t\t\twarnedTexture2D = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture = texture.texture;\r\n\t\t\t}\r\n\r\n\t\t\tsetTexture2D(texture, slot);\r\n\t\t}\r\n\r\n\t\tfunction safeSetTextureCube(texture, slot) {\r\n\t\t\tif (texture && texture.isWebGLCubeRenderTarget) {\r\n\t\t\t\tif (warnedTextureCube === false) {\r\n\t\t\t\t\tconsole.warn('THREE.WebGLTextures.safeSetTextureCube: don\\'t use cube render targets as textures. Use their .texture property instead.');\r\n\t\t\t\t\twarnedTextureCube = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture = texture.texture;\r\n\t\t\t}\r\n\r\n\t\t\tsetTextureCube(texture, slot);\r\n\t\t} //\r\n\r\n\r\n\t\tthis.allocateTextureUnit = allocateTextureUnit;\r\n\t\tthis.resetTextureUnits = resetTextureUnits;\r\n\t\tthis.setTexture2D = setTexture2D;\r\n\t\tthis.setTexture2DArray = setTexture2DArray;\r\n\t\tthis.setTexture3D = setTexture3D;\r\n\t\tthis.setTextureCube = setTextureCube;\r\n\t\tthis.setupRenderTarget = setupRenderTarget;\r\n\t\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\r\n\t\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\r\n\t\tthis.safeSetTexture2D = safeSetTexture2D;\r\n\t\tthis.safeSetTextureCube = safeSetTextureCube;\r\n\t}\r\n\r\n\tfunction WebGLUtils(gl, extensions, capabilities) {\r\n\t\tconst isWebGL2 = capabilities.isWebGL2;\r\n\r\n\t\tfunction convert(p) {\r\n\t\t\tlet extension;\r\n\t\t\tif (p === UnsignedByteType) return gl.UNSIGNED_BYTE;\r\n\t\t\tif (p === UnsignedShort4444Type) return gl.UNSIGNED_SHORT_4_4_4_4;\r\n\t\t\tif (p === UnsignedShort5551Type) return gl.UNSIGNED_SHORT_5_5_5_1;\r\n\t\t\tif (p === UnsignedShort565Type) return gl.UNSIGNED_SHORT_5_6_5;\r\n\t\t\tif (p === ByteType) return gl.BYTE;\r\n\t\t\tif (p === ShortType) return gl.SHORT;\r\n\t\t\tif (p === UnsignedShortType) return gl.UNSIGNED_SHORT;\r\n\t\t\tif (p === IntType) return gl.INT;\r\n\t\t\tif (p === UnsignedIntType) return gl.UNSIGNED_INT;\r\n\t\t\tif (p === FloatType) return gl.FLOAT;\r\n\r\n\t\t\tif (p === HalfFloatType) {\r\n\t\t\t\tif (isWebGL2) return gl.HALF_FLOAT;\r\n\t\t\t\textension = extensions.get('OES_texture_half_float');\r\n\r\n\t\t\t\tif (extension !== null) {\r\n\t\t\t\t\treturn extension.HALF_FLOAT_OES;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (p === AlphaFormat) return gl.ALPHA;\r\n\t\t\tif (p === RGBFormat) return gl.RGB;\r\n\t\t\tif (p === RGBAFormat) return gl.RGBA;\r\n\t\t\tif (p === LuminanceFormat) return gl.LUMINANCE;\r\n\t\t\tif (p === LuminanceAlphaFormat) return gl.LUMINANCE_ALPHA;\r\n\t\t\tif (p === DepthFormat) return gl.DEPTH_COMPONENT;\r\n\t\t\tif (p === DepthStencilFormat) return gl.DEPTH_STENCIL;\r\n\t\t\tif (p === RedFormat) return gl.RED; // WebGL2 formats.\r\n\r\n\t\t\tif (p === RedIntegerFormat) return gl.RED_INTEGER;\r\n\t\t\tif (p === RGFormat) return gl.RG;\r\n\t\t\tif (p === RGIntegerFormat) return gl.RG_INTEGER;\r\n\t\t\tif (p === RGBIntegerFormat) return gl.RGB_INTEGER;\r\n\t\t\tif (p === RGBAIntegerFormat) return gl.RGBA_INTEGER;\r\n\r\n\t\t\tif (p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format) {\r\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_s3tc');\r\n\r\n\t\t\t\tif (extension !== null) {\r\n\t\t\t\t\tif (p === RGB_S3TC_DXT1_Format) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\r\n\t\t\t\t\tif (p === RGBA_S3TC_DXT1_Format) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n\t\t\t\t\tif (p === RGBA_S3TC_DXT3_Format) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n\t\t\t\t\tif (p === RGBA_S3TC_DXT5_Format) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format) {\r\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_pvrtc');\r\n\r\n\t\t\t\tif (extension !== null) {\r\n\t\t\t\t\tif (p === RGB_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\r\n\t\t\t\t\tif (p === RGB_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\r\n\t\t\t\t\tif (p === RGBA_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\r\n\t\t\t\t\tif (p === RGBA_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (p === RGB_ETC1_Format) {\r\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_etc1');\r\n\r\n\t\t\t\tif (extension !== null) {\r\n\t\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format) {\r\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_etc');\r\n\r\n\t\t\t\tif (extension !== null) {\r\n\t\t\t\t\tif (p === RGB_ETC2_Format) return extension.COMPRESSED_RGB8_ETC2;\r\n\t\t\t\t\tif (p === RGBA_ETC2_EAC_Format) return extension.COMPRESSED_RGBA8_ETC2_EAC;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format || p === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format || p === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format || p === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format || p === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format || p === SRGB8_ALPHA8_ASTC_4x4_Format || p === SRGB8_ALPHA8_ASTC_5x4_Format || p === SRGB8_ALPHA8_ASTC_5x5_Format || p === SRGB8_ALPHA8_ASTC_6x5_Format || p === SRGB8_ALPHA8_ASTC_6x6_Format || p === SRGB8_ALPHA8_ASTC_8x5_Format || p === SRGB8_ALPHA8_ASTC_8x6_Format || p === SRGB8_ALPHA8_ASTC_8x8_Format || p === SRGB8_ALPHA8_ASTC_10x5_Format || p === SRGB8_ALPHA8_ASTC_10x6_Format || p === SRGB8_ALPHA8_ASTC_10x8_Format || p === SRGB8_ALPHA8_ASTC_10x10_Format || p === SRGB8_ALPHA8_ASTC_12x10_Format || p === SRGB8_ALPHA8_ASTC_12x12_Format) {\r\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_astc');\r\n\r\n\t\t\t\tif (extension !== null) {\r\n\t\t\t\t\t// TODO Complete?\r\n\t\t\t\t\treturn p;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (p === RGBA_BPTC_Format) {\r\n\t\t\t\textension = extensions.get('EXT_texture_compression_bptc');\r\n\r\n\t\t\t\tif (extension !== null) {\r\n\t\t\t\t\t// TODO Complete?\r\n\t\t\t\t\treturn p;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (p === UnsignedInt248Type) {\r\n\t\t\t\tif (isWebGL2) return gl.UNSIGNED_INT_24_8;\r\n\t\t\t\textension = extensions.get('WEBGL_depth_texture');\r\n\r\n\t\t\t\tif (extension !== null) {\r\n\t\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tconvert: convert\r\n\t\t};\r\n\t}\r\n\r\n\tclass ArrayCamera extends PerspectiveCamera {\r\n\t\tconstructor(array = []) {\r\n\t\t\tsuper();\r\n\t\t\tthis.cameras = array;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tArrayCamera.prototype.isArrayCamera = true;\r\n\r\n\tclass Group extends Object3D {\r\n\t\tconstructor() {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'Group';\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tGroup.prototype.isGroup = true;\r\n\r\n\tconst _moveEvent = {\r\n\t\ttype: 'move'\r\n\t};\r\n\r\n\tclass WebXRController {\r\n\t\tconstructor() {\r\n\t\t\tthis._targetRay = null;\r\n\t\t\tthis._grip = null;\r\n\t\t\tthis._hand = null;\r\n\t\t}\r\n\r\n\t\tgetHandSpace() {\r\n\t\t\tif (this._hand === null) {\r\n\t\t\t\tthis._hand = new Group();\r\n\t\t\t\tthis._hand.matrixAutoUpdate = false;\r\n\t\t\t\tthis._hand.visible = false;\r\n\t\t\t\tthis._hand.joints = {};\r\n\t\t\t\tthis._hand.inputState = {\r\n\t\t\t\t\tpinching: false\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn this._hand;\r\n\t\t}\r\n\r\n\t\tgetTargetRaySpace() {\r\n\t\t\tif (this._targetRay === null) {\r\n\t\t\t\tthis._targetRay = new Group();\r\n\t\t\t\tthis._targetRay.matrixAutoUpdate = false;\r\n\t\t\t\tthis._targetRay.visible = false;\r\n\t\t\t\tthis._targetRay.hasLinearVelocity = false;\r\n\t\t\t\tthis._targetRay.linearVelocity = new Vector3();\r\n\t\t\t\tthis._targetRay.hasAngularVelocity = false;\r\n\t\t\t\tthis._targetRay.angularVelocity = new Vector3();\r\n\t\t\t}\r\n\r\n\t\t\treturn this._targetRay;\r\n\t\t}\r\n\r\n\t\tgetGripSpace() {\r\n\t\t\tif (this._grip === null) {\r\n\t\t\t\tthis._grip = new Group();\r\n\t\t\t\tthis._grip.matrixAutoUpdate = false;\r\n\t\t\t\tthis._grip.visible = false;\r\n\t\t\t\tthis._grip.hasLinearVelocity = false;\r\n\t\t\t\tthis._grip.linearVelocity = new Vector3();\r\n\t\t\t\tthis._grip.hasAngularVelocity = false;\r\n\t\t\t\tthis._grip.angularVelocity = new Vector3();\r\n\t\t\t}\r\n\r\n\t\t\treturn this._grip;\r\n\t\t}\r\n\r\n\t\tdispatchEvent(event) {\r\n\t\t\tif (this._targetRay !== null) {\r\n\t\t\t\tthis._targetRay.dispatchEvent(event);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._grip !== null) {\r\n\t\t\t\tthis._grip.dispatchEvent(event);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._hand !== null) {\r\n\t\t\t\tthis._hand.dispatchEvent(event);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tdisconnect(inputSource) {\r\n\t\t\tthis.dispatchEvent({\r\n\t\t\t\ttype: 'disconnected',\r\n\t\t\t\tdata: inputSource\r\n\t\t\t});\r\n\r\n\t\t\tif (this._targetRay !== null) {\r\n\t\t\t\tthis._targetRay.visible = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._grip !== null) {\r\n\t\t\t\tthis._grip.visible = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._hand !== null) {\r\n\t\t\t\tthis._hand.visible = false;\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tupdate(inputSource, frame, referenceSpace) {\r\n\t\t\tlet inputPose = null;\r\n\t\t\tlet gripPose = null;\r\n\t\t\tlet handPose = null;\r\n\t\t\tconst targetRay = this._targetRay;\r\n\t\t\tconst grip = this._grip;\r\n\t\t\tconst hand = this._hand;\r\n\r\n\t\t\tif (inputSource && frame.session.visibilityState !== 'visible-blurred') {\r\n\t\t\t\tif (targetRay !== null) {\r\n\t\t\t\t\tinputPose = frame.getPose(inputSource.targetRaySpace, referenceSpace);\r\n\r\n\t\t\t\t\tif (inputPose !== null) {\r\n\t\t\t\t\t\ttargetRay.matrix.fromArray(inputPose.transform.matrix);\r\n\t\t\t\t\t\ttargetRay.matrix.decompose(targetRay.position, targetRay.rotation, targetRay.scale);\r\n\r\n\t\t\t\t\t\tif (inputPose.linearVelocity) {\r\n\t\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\r\n\t\t\t\t\t\t\ttargetRay.linearVelocity.copy(inputPose.linearVelocity);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (inputPose.angularVelocity) {\r\n\t\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\r\n\t\t\t\t\t\t\ttargetRay.angularVelocity.copy(inputPose.angularVelocity);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis.dispatchEvent(_moveEvent);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (hand && inputSource.hand) {\r\n\t\t\t\t\thandPose = true;\r\n\r\n\t\t\t\t\tfor (const inputjoint of inputSource.hand.values()) {\r\n\t\t\t\t\t\t// Update the joints groups with the XRJoint poses\r\n\t\t\t\t\t\tconst jointPose = frame.getJointPose(inputjoint, referenceSpace);\r\n\r\n\t\t\t\t\t\tif (hand.joints[inputjoint.jointName] === undefined) {\r\n\t\t\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\r\n\t\t\t\t\t\t\tconst joint = new Group();\r\n\t\t\t\t\t\t\tjoint.matrixAutoUpdate = false;\r\n\t\t\t\t\t\t\tjoint.visible = false;\r\n\t\t\t\t\t\t\thand.joints[inputjoint.jointName] = joint; // ??\r\n\r\n\t\t\t\t\t\t\thand.add(joint);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst joint = hand.joints[inputjoint.jointName];\r\n\r\n\t\t\t\t\t\tif (jointPose !== null) {\r\n\t\t\t\t\t\t\tjoint.matrix.fromArray(jointPose.transform.matrix);\r\n\t\t\t\t\t\t\tjoint.matrix.decompose(joint.position, joint.rotation, joint.scale);\r\n\t\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tjoint.visible = jointPose !== null;\r\n\t\t\t\t\t} // Custom events\r\n\t\t\t\t\t// Check pinchz\r\n\r\n\r\n\t\t\t\t\tconst indexTip = hand.joints['index-finger-tip'];\r\n\t\t\t\t\tconst thumbTip = hand.joints['thumb-tip'];\r\n\t\t\t\t\tconst distance = indexTip.position.distanceTo(thumbTip.position);\r\n\t\t\t\t\tconst distanceToPinch = 0.02;\r\n\t\t\t\t\tconst threshold = 0.005;\r\n\r\n\t\t\t\t\tif (hand.inputState.pinching && distance > distanceToPinch + threshold) {\r\n\t\t\t\t\t\thand.inputState.pinching = false;\r\n\t\t\t\t\t\tthis.dispatchEvent({\r\n\t\t\t\t\t\t\ttype: 'pinchend',\r\n\t\t\t\t\t\t\thandedness: inputSource.handedness,\r\n\t\t\t\t\t\t\ttarget: this\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else if (!hand.inputState.pinching && distance <= distanceToPinch - threshold) {\r\n\t\t\t\t\t\thand.inputState.pinching = true;\r\n\t\t\t\t\t\tthis.dispatchEvent({\r\n\t\t\t\t\t\t\ttype: 'pinchstart',\r\n\t\t\t\t\t\t\thandedness: inputSource.handedness,\r\n\t\t\t\t\t\t\ttarget: this\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (grip !== null && inputSource.gripSpace) {\r\n\t\t\t\t\t\tgripPose = frame.getPose(inputSource.gripSpace, referenceSpace);\r\n\r\n\t\t\t\t\t\tif (gripPose !== null) {\r\n\t\t\t\t\t\t\tgrip.matrix.fromArray(gripPose.transform.matrix);\r\n\t\t\t\t\t\t\tgrip.matrix.decompose(grip.position, grip.rotation, grip.scale);\r\n\r\n\t\t\t\t\t\t\tif (gripPose.linearVelocity) {\r\n\t\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\r\n\t\t\t\t\t\t\t\tgrip.linearVelocity.copy(gripPose.linearVelocity);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (gripPose.angularVelocity) {\r\n\t\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\r\n\t\t\t\t\t\t\t\tgrip.angularVelocity.copy(gripPose.angularVelocity);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (targetRay !== null) {\r\n\t\t\t\ttargetRay.visible = inputPose !== null;\r\n\t\t\t}\r\n\r\n\t\t\tif (grip !== null) {\r\n\t\t\t\tgrip.visible = gripPose !== null;\r\n\t\t\t}\r\n\r\n\t\t\tif (hand !== null) {\r\n\t\t\t\thand.visible = handPose !== null;\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass WebXRManager extends EventDispatcher {\r\n\t\tconstructor(renderer, gl) {\r\n\t\t\tsuper();\r\n\t\t\tconst scope = this;\r\n\t\t\tconst state = renderer.state;\r\n\t\t\tlet session = null;\r\n\t\t\tlet framebufferScaleFactor = 1.0;\r\n\t\t\tlet referenceSpace = null;\r\n\t\t\tlet referenceSpaceType = 'local-floor';\r\n\t\t\tlet pose = null;\r\n\t\t\tlet glBinding = null;\r\n\t\t\tlet glFramebuffer = null;\r\n\t\t\tlet glProjLayer = null;\r\n\t\t\tlet glBaseLayer = null;\r\n\t\t\tconst controllers = [];\r\n\t\t\tconst inputSourcesMap = new Map(); //\r\n\r\n\t\t\tconst cameraL = new PerspectiveCamera();\r\n\t\t\tcameraL.layers.enable(1);\r\n\t\t\tcameraL.viewport = new Vector4();\r\n\t\t\tconst cameraR = new PerspectiveCamera();\r\n\t\t\tcameraR.layers.enable(2);\r\n\t\t\tcameraR.viewport = new Vector4();\r\n\t\t\tconst cameras = [cameraL, cameraR];\r\n\t\t\tconst cameraVR = new ArrayCamera();\r\n\t\t\tcameraVR.layers.enable(1);\r\n\t\t\tcameraVR.layers.enable(2);\r\n\t\t\tlet _currentDepthNear = null;\r\n\t\t\tlet _currentDepthFar = null; //\r\n\r\n\t\t\tthis.cameraAutoUpdate = true;\r\n\t\t\tthis.enabled = false;\r\n\t\t\tthis.isPresenting = false;\r\n\r\n\t\t\tthis.getController = function (index) {\r\n\t\t\t\tlet controller = controllers[index];\r\n\r\n\t\t\t\tif (controller === undefined) {\r\n\t\t\t\t\tcontroller = new WebXRController();\r\n\t\t\t\t\tcontrollers[index] = controller;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn controller.getTargetRaySpace();\r\n\t\t\t};\r\n\r\n\t\t\tthis.getControllerGrip = function (index) {\r\n\t\t\t\tlet controller = controllers[index];\r\n\r\n\t\t\t\tif (controller === undefined) {\r\n\t\t\t\t\tcontroller = new WebXRController();\r\n\t\t\t\t\tcontrollers[index] = controller;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn controller.getGripSpace();\r\n\t\t\t};\r\n\r\n\t\t\tthis.getHand = function (index) {\r\n\t\t\t\tlet controller = controllers[index];\r\n\r\n\t\t\t\tif (controller === undefined) {\r\n\t\t\t\t\tcontroller = new WebXRController();\r\n\t\t\t\t\tcontrollers[index] = controller;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn controller.getHandSpace();\r\n\t\t\t}; //\r\n\r\n\r\n\t\t\tfunction onSessionEvent(event) {\r\n\t\t\t\tconst controller = inputSourcesMap.get(event.inputSource);\r\n\r\n\t\t\t\tif (controller) {\r\n\t\t\t\t\tcontroller.dispatchEvent({\r\n\t\t\t\t\t\ttype: event.type,\r\n\t\t\t\t\t\tdata: event.inputSource\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfunction onSessionEnd() {\r\n\t\t\t\tinputSourcesMap.forEach(function (controller, inputSource) {\r\n\t\t\t\t\tcontroller.disconnect(inputSource);\r\n\t\t\t\t});\r\n\t\t\t\tinputSourcesMap.clear();\r\n\t\t\t\t_currentDepthNear = null;\r\n\t\t\t\t_currentDepthFar = null; // restore framebuffer/rendering state\r\n\r\n\t\t\t\tstate.bindXRFramebuffer(null);\r\n\t\t\t\trenderer.setRenderTarget(renderer.getRenderTarget()); //\r\n\r\n\t\t\t\tanimation.stop();\r\n\t\t\t\tscope.isPresenting = false;\r\n\t\t\t\tscope.dispatchEvent({\r\n\t\t\t\t\ttype: 'sessionend'\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.setFramebufferScaleFactor = function (value) {\r\n\t\t\t\tframebufferScaleFactor = value;\r\n\r\n\t\t\t\tif (scope.isPresenting === true) {\r\n\t\t\t\t\tconsole.warn('THREE.WebXRManager: Cannot change framebuffer scale while presenting.');\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tthis.setReferenceSpaceType = function (value) {\r\n\t\t\t\treferenceSpaceType = value;\r\n\r\n\t\t\t\tif (scope.isPresenting === true) {\r\n\t\t\t\t\tconsole.warn('THREE.WebXRManager: Cannot change reference space type while presenting.');\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tthis.getReferenceSpace = function () {\r\n\t\t\t\treturn referenceSpace;\r\n\t\t\t};\r\n\r\n\t\t\tthis.getSession = function () {\r\n\t\t\t\treturn session;\r\n\t\t\t};\r\n\r\n\t\t\tthis.setSession = async function (value) {\r\n\t\t\t\tsession = value;\r\n\r\n\t\t\t\tif (session !== null) {\r\n\t\t\t\t\tsession.addEventListener('select', onSessionEvent);\r\n\t\t\t\t\tsession.addEventListener('selectstart', onSessionEvent);\r\n\t\t\t\t\tsession.addEventListener('selectend', onSessionEvent);\r\n\t\t\t\t\tsession.addEventListener('squeeze', onSessionEvent);\r\n\t\t\t\t\tsession.addEventListener('squeezestart', onSessionEvent);\r\n\t\t\t\t\tsession.addEventListener('squeezeend', onSessionEvent);\r\n\t\t\t\t\tsession.addEventListener('end', onSessionEnd);\r\n\t\t\t\t\tsession.addEventListener('inputsourceschange', onInputSourcesChange);\r\n\t\t\t\t\tconst attributes = gl.getContextAttributes();\r\n\r\n\t\t\t\t\tif (attributes.xrCompatible !== true) {\r\n\t\t\t\t\t\tawait gl.makeXRCompatible();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (session.renderState.layers === undefined) {\r\n\t\t\t\t\t\tconst layerInit = {\r\n\t\t\t\t\t\t\tantialias: attributes.antialias,\r\n\t\t\t\t\t\t\talpha: attributes.alpha,\r\n\t\t\t\t\t\t\tdepth: attributes.depth,\r\n\t\t\t\t\t\t\tstencil: attributes.stencil,\r\n\t\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tglBaseLayer = new XRWebGLLayer(session, gl, layerInit);\r\n\t\t\t\t\t\tsession.updateRenderState({\r\n\t\t\t\t\t\t\tbaseLayer: glBaseLayer\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet depthFormat = 0; // for anti-aliased output, use classic webgllayer for now\r\n\r\n\t\t\t\t\t\tif (attributes.antialias) {\r\n\t\t\t\t\t\t\tconst layerInit = {\r\n\t\t\t\t\t\t\t\tantialias: true,\r\n\t\t\t\t\t\t\t\talpha: attributes.alpha,\r\n\t\t\t\t\t\t\t\tdepth: attributes.depth,\r\n\t\t\t\t\t\t\t\tstencil: attributes.stencil,\r\n\t\t\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tglBaseLayer = new XRWebGLLayer(session, gl, layerInit);\r\n\t\t\t\t\t\t\tsession.updateRenderState({\r\n\t\t\t\t\t\t\t\tlayers: [glBaseLayer]\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (attributes.depth) {\r\n\t\t\t\t\t\t\t\tdepthFormat = attributes.stencil ? gl.DEPTH_STENCIL : gl.DEPTH_COMPONENT;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tconst projectionlayerInit = {\r\n\t\t\t\t\t\t\t\tcolorFormat: attributes.alpha ? gl.RGBA : gl.RGB,\r\n\t\t\t\t\t\t\t\tdepthFormat: depthFormat,\r\n\t\t\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tglBinding = new XRWebGLBinding(session, gl);\r\n\t\t\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer(projectionlayerInit);\r\n\t\t\t\t\t\t\tglFramebuffer = gl.createFramebuffer();\r\n\t\t\t\t\t\t\tsession.updateRenderState({\r\n\t\t\t\t\t\t\t\tlayers: [glProjLayer]\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treferenceSpace = await session.requestReferenceSpace(referenceSpaceType);\r\n\t\t\t\t\tanimation.setContext(session);\r\n\t\t\t\t\tanimation.start();\r\n\t\t\t\t\tscope.isPresenting = true;\r\n\t\t\t\t\tscope.dispatchEvent({\r\n\t\t\t\t\t\ttype: 'sessionstart'\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tfunction onInputSourcesChange(event) {\r\n\t\t\t\tconst inputSources = session.inputSources; // Assign inputSources to available controllers\r\n\r\n\t\t\t\tfor (let i = 0; i < controllers.length; i++) {\r\n\t\t\t\t\tinputSourcesMap.set(inputSources[i], controllers[i]);\r\n\t\t\t\t} // Notify disconnected\r\n\r\n\r\n\t\t\t\tfor (let i = 0; i < event.removed.length; i++) {\r\n\t\t\t\t\tconst inputSource = event.removed[i];\r\n\t\t\t\t\tconst controller = inputSourcesMap.get(inputSource);\r\n\r\n\t\t\t\t\tif (controller) {\r\n\t\t\t\t\t\tcontroller.dispatchEvent({\r\n\t\t\t\t\t\t\ttype: 'disconnected',\r\n\t\t\t\t\t\t\tdata: inputSource\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tinputSourcesMap.delete(inputSource);\r\n\t\t\t\t\t}\r\n\t\t\t\t} // Notify connected\r\n\r\n\r\n\t\t\t\tfor (let i = 0; i < event.added.length; i++) {\r\n\t\t\t\t\tconst inputSource = event.added[i];\r\n\t\t\t\t\tconst controller = inputSourcesMap.get(inputSource);\r\n\r\n\t\t\t\t\tif (controller) {\r\n\t\t\t\t\t\tcontroller.dispatchEvent({\r\n\t\t\t\t\t\t\ttype: 'connected',\r\n\t\t\t\t\t\t\tdata: inputSource\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} //\r\n\r\n\r\n\t\t\tconst cameraLPos = new Vector3();\r\n\t\t\tconst cameraRPos = new Vector3();\r\n\t\t\t/**\r\n\t\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\r\n\t\t\t * the cameras' projection and world matrices have already been set.\r\n\t\t\t * And that near and far planes are identical for both cameras.\r\n\t\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\r\n\t\t\t */\r\n\r\n\t\t\tfunction setProjectionFromUnion(camera, cameraL, cameraR) {\r\n\t\t\t\tcameraLPos.setFromMatrixPosition(cameraL.matrixWorld);\r\n\t\t\t\tcameraRPos.setFromMatrixPosition(cameraR.matrixWorld);\r\n\t\t\t\tconst ipd = cameraLPos.distanceTo(cameraRPos);\r\n\t\t\t\tconst projL = cameraL.projectionMatrix.elements;\r\n\t\t\t\tconst projR = cameraR.projectionMatrix.elements; // VR systems will have identical far and near planes, and\r\n\t\t\t\t// most likely identical top and bottom frustum extents.\r\n\t\t\t\t// Use the left camera for these values.\r\n\r\n\t\t\t\tconst near = projL[14] / (projL[10] - 1);\r\n\t\t\t\tconst far = projL[14] / (projL[10] + 1);\r\n\t\t\t\tconst topFov = (projL[9] + 1) / projL[5];\r\n\t\t\t\tconst bottomFov = (projL[9] - 1) / projL[5];\r\n\t\t\t\tconst leftFov = (projL[8] - 1) / projL[0];\r\n\t\t\t\tconst rightFov = (projR[8] + 1) / projR[0];\r\n\t\t\t\tconst left = near * leftFov;\r\n\t\t\t\tconst right = near * rightFov; // Calculate the new camera's position offset from the\r\n\t\t\t\t// left camera. xOffset should be roughly half `ipd`.\r\n\r\n\t\t\t\tconst zOffset = ipd / (-leftFov + rightFov);\r\n\t\t\t\tconst xOffset = zOffset * -leftFov; // TODO: Better way to apply this offset?\r\n\r\n\t\t\t\tcameraL.matrixWorld.decompose(camera.position, camera.quaternion, camera.scale);\r\n\t\t\t\tcamera.translateX(xOffset);\r\n\t\t\t\tcamera.translateZ(zOffset);\r\n\t\t\t\tcamera.matrixWorld.compose(camera.position, camera.quaternion, camera.scale);\r\n\t\t\t\tcamera.matrixWorldInverse.copy(camera.matrixWorld).invert(); // Find the union of the frustum values of the cameras and scale\r\n\t\t\t\t// the values so that the near plane's position does not change in world space,\r\n\t\t\t\t// although must now be relative to the new union camera.\r\n\r\n\t\t\t\tconst near2 = near + zOffset;\r\n\t\t\t\tconst far2 = far + zOffset;\r\n\t\t\t\tconst left2 = left - xOffset;\r\n\t\t\t\tconst right2 = right + (ipd - xOffset);\r\n\t\t\t\tconst top2 = topFov * far / far2 * near2;\r\n\t\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\r\n\t\t\t\tcamera.projectionMatrix.makePerspective(left2, right2, top2, bottom2, near2, far2);\r\n\t\t\t}\r\n\r\n\t\t\tfunction updateCamera(camera, parent) {\r\n\t\t\t\tif (parent === null) {\r\n\t\t\t\t\tcamera.matrixWorld.copy(camera.matrix);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcamera.matrixWorld.multiplyMatrices(parent.matrixWorld, camera.matrix);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcamera.matrixWorldInverse.copy(camera.matrixWorld).invert();\r\n\t\t\t}\r\n\r\n\t\t\tthis.updateCamera = function (camera) {\r\n\t\t\t\tif (session === null) return;\r\n\t\t\t\tcameraVR.near = cameraR.near = cameraL.near = camera.near;\r\n\t\t\t\tcameraVR.far = cameraR.far = cameraL.far = camera.far;\r\n\r\n\t\t\t\tif (_currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far) {\r\n\t\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\r\n\t\t\t\t\tsession.updateRenderState({\r\n\t\t\t\t\t\tdepthNear: cameraVR.near,\r\n\t\t\t\t\t\tdepthFar: cameraVR.far\r\n\t\t\t\t\t});\r\n\t\t\t\t\t_currentDepthNear = cameraVR.near;\r\n\t\t\t\t\t_currentDepthFar = cameraVR.far;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst parent = camera.parent;\r\n\t\t\t\tconst cameras = cameraVR.cameras;\r\n\t\t\t\tupdateCamera(cameraVR, parent);\r\n\r\n\t\t\t\tfor (let i = 0; i < cameras.length; i++) {\r\n\t\t\t\t\tupdateCamera(cameras[i], parent);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcameraVR.matrixWorld.decompose(cameraVR.position, cameraVR.quaternion, cameraVR.scale); // update user camera and its children\r\n\r\n\t\t\t\tcamera.position.copy(cameraVR.position);\r\n\t\t\t\tcamera.quaternion.copy(cameraVR.quaternion);\r\n\t\t\t\tcamera.scale.copy(cameraVR.scale);\r\n\t\t\t\tcamera.matrix.copy(cameraVR.matrix);\r\n\t\t\t\tcamera.matrixWorld.copy(cameraVR.matrixWorld);\r\n\t\t\t\tconst children = camera.children;\r\n\r\n\t\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\r\n\t\t\t\t\tchildren[i].updateMatrixWorld(true);\r\n\t\t\t\t} // update projection matrix for proper view frustum culling\r\n\r\n\r\n\t\t\t\tif (cameras.length === 2) {\r\n\t\t\t\t\tsetProjectionFromUnion(cameraVR, cameraL, cameraR);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// assume single camera setup (AR)\r\n\t\t\t\t\tcameraVR.projectionMatrix.copy(cameraL.projectionMatrix);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tthis.getCamera = function () {\r\n\t\t\t\treturn cameraVR;\r\n\t\t\t};\r\n\r\n\t\t\tthis.getFoveation = function () {\r\n\t\t\t\tif (glProjLayer !== null) {\r\n\t\t\t\t\treturn glProjLayer.fixedFoveation;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (glBaseLayer !== null) {\r\n\t\t\t\t\treturn glBaseLayer.fixedFoveation;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn undefined;\r\n\t\t\t};\r\n\r\n\t\t\tthis.setFoveation = function (foveation) {\r\n\t\t\t\t// 0 = no foveation = full resolution\r\n\t\t\t\t// 1 = maximum foveation = the edges render at lower resolution\r\n\t\t\t\tif (glProjLayer !== null) {\r\n\t\t\t\t\tglProjLayer.fixedFoveation = foveation;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined) {\r\n\t\t\t\t\tglBaseLayer.fixedFoveation = foveation;\r\n\t\t\t\t}\r\n\t\t\t}; // Animation Loop\r\n\r\n\r\n\t\t\tlet onAnimationFrameCallback = null;\r\n\r\n\t\t\tfunction onAnimationFrame(time, frame) {\r\n\t\t\t\tpose = frame.getViewerPose(referenceSpace);\r\n\r\n\t\t\t\tif (pose !== null) {\r\n\t\t\t\t\tconst views = pose.views;\r\n\r\n\t\t\t\t\tif (glBaseLayer !== null) {\r\n\t\t\t\t\t\tstate.bindXRFramebuffer(glBaseLayer.framebuffer);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet cameraVRNeedsUpdate = false; // check if it's necessary to rebuild cameraVR's camera list\r\n\r\n\t\t\t\t\tif (views.length !== cameraVR.cameras.length) {\r\n\t\t\t\t\t\tcameraVR.cameras.length = 0;\r\n\t\t\t\t\t\tcameraVRNeedsUpdate = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor (let i = 0; i < views.length; i++) {\r\n\t\t\t\t\t\tconst view = views[i];\r\n\t\t\t\t\t\tlet viewport = null;\r\n\r\n\t\t\t\t\t\tif (glBaseLayer !== null) {\r\n\t\t\t\t\t\t\tviewport = glBaseLayer.getViewport(view);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage(glProjLayer, view);\r\n\t\t\t\t\t\t\tstate.bindXRFramebuffer(glFramebuffer);\r\n\r\n\t\t\t\t\t\t\tif (glSubImage.depthStencilTexture !== undefined) {\r\n\t\t\t\t\t\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, glSubImage.depthStencilTexture, 0);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, glSubImage.colorTexture, 0);\r\n\t\t\t\t\t\t\tviewport = glSubImage.viewport;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst camera = cameras[i];\r\n\t\t\t\t\t\tcamera.matrix.fromArray(view.transform.matrix);\r\n\t\t\t\t\t\tcamera.projectionMatrix.fromArray(view.projectionMatrix);\r\n\t\t\t\t\t\tcamera.viewport.set(viewport.x, viewport.y, viewport.width, viewport.height);\r\n\r\n\t\t\t\t\t\tif (i === 0) {\r\n\t\t\t\t\t\t\tcameraVR.matrix.copy(camera.matrix);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (cameraVRNeedsUpdate === true) {\r\n\t\t\t\t\t\t\tcameraVR.cameras.push(camera);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} //\r\n\r\n\r\n\t\t\t\tconst inputSources = session.inputSources;\r\n\r\n\t\t\t\tfor (let i = 0; i < controllers.length; i++) {\r\n\t\t\t\t\tconst controller = controllers[i];\r\n\t\t\t\t\tconst inputSource = inputSources[i];\r\n\t\t\t\t\tcontroller.update(inputSource, frame, referenceSpace);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (onAnimationFrameCallback) onAnimationFrameCallback(time, frame);\r\n\t\t\t}\r\n\r\n\t\t\tconst animation = new WebGLAnimation();\r\n\t\t\tanimation.setAnimationLoop(onAnimationFrame);\r\n\r\n\t\t\tthis.setAnimationLoop = function (callback) {\r\n\t\t\t\tonAnimationFrameCallback = callback;\r\n\t\t\t};\r\n\r\n\t\t\tthis.dispose = function () {};\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction WebGLMaterials(properties) {\r\n\t\tfunction refreshFogUniforms(uniforms, fog) {\r\n\t\t\tuniforms.fogColor.value.copy(fog.color);\r\n\r\n\t\t\tif (fog.isFog) {\r\n\t\t\t\tuniforms.fogNear.value = fog.near;\r\n\t\t\t\tuniforms.fogFar.value = fog.far;\r\n\t\t\t} else if (fog.isFogExp2) {\r\n\t\t\t\tuniforms.fogDensity.value = fog.density;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction refreshMaterialUniforms(uniforms, material, pixelRatio, height, transmissionRenderTarget) {\r\n\t\t\tif (material.isMeshBasicMaterial) {\r\n\t\t\t\trefreshUniformsCommon(uniforms, material);\r\n\t\t\t} else if (material.isMeshLambertMaterial) {\r\n\t\t\t\trefreshUniformsCommon(uniforms, material);\r\n\t\t\t\trefreshUniformsLambert(uniforms, material);\r\n\t\t\t} else if (material.isMeshToonMaterial) {\r\n\t\t\t\trefreshUniformsCommon(uniforms, material);\r\n\t\t\t\trefreshUniformsToon(uniforms, material);\r\n\t\t\t} else if (material.isMeshPhongMaterial) {\r\n\t\t\t\trefreshUniformsCommon(uniforms, material);\r\n\t\t\t\trefreshUniformsPhong(uniforms, material);\r\n\t\t\t} else if (material.isMeshStandardMaterial) {\r\n\t\t\t\trefreshUniformsCommon(uniforms, material);\r\n\r\n\t\t\t\tif (material.isMeshPhysicalMaterial) {\r\n\t\t\t\t\trefreshUniformsPhysical(uniforms, material, transmissionRenderTarget);\r\n\t\t\t\t} else {\r\n\t\t\t\t\trefreshUniformsStandard(uniforms, material);\r\n\t\t\t\t}\r\n\t\t\t} else if (material.isMeshMatcapMaterial) {\r\n\t\t\t\trefreshUniformsCommon(uniforms, material);\r\n\t\t\t\trefreshUniformsMatcap(uniforms, material);\r\n\t\t\t} else if (material.isMeshDepthMaterial) {\r\n\t\t\t\trefreshUniformsCommon(uniforms, material);\r\n\t\t\t\trefreshUniformsDepth(uniforms, material);\r\n\t\t\t} else if (material.isMeshDistanceMaterial) {\r\n\t\t\t\trefreshUniformsCommon(uniforms, material);\r\n\t\t\t\trefreshUniformsDistance(uniforms, material);\r\n\t\t\t} else if (material.isMeshNormalMaterial) {\r\n\t\t\t\trefreshUniformsCommon(uniforms, material);\r\n\t\t\t\trefreshUniformsNormal(uniforms, material);\r\n\t\t\t} else if (material.isLineBasicMaterial) {\r\n\t\t\t\trefreshUniformsLine(uniforms, material);\r\n\r\n\t\t\t\tif (material.isLineDashedMaterial) {\r\n\t\t\t\t\trefreshUniformsDash(uniforms, material);\r\n\t\t\t\t}\r\n\t\t\t} else if (material.isPointsMaterial) {\r\n\t\t\t\trefreshUniformsPoints(uniforms, material, pixelRatio, height);\r\n\t\t\t} else if (material.isSpriteMaterial) {\r\n\t\t\t\trefreshUniformsSprites(uniforms, material);\r\n\t\t\t} else if (material.isShadowMaterial) {\r\n\t\t\t\tuniforms.color.value.copy(material.color);\r\n\t\t\t\tuniforms.opacity.value = material.opacity;\r\n\t\t\t} else if (material.isShaderMaterial) {\r\n\t\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsCommon(uniforms, material) {\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t\t\tif (material.color) {\r\n\t\t\t\tuniforms.diffuse.value.copy(material.color);\r\n\t\t\t}\r\n\r\n\t\t\tif (material.emissive) {\r\n\t\t\t\tuniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity);\r\n\t\t\t}\r\n\r\n\t\t\tif (material.map) {\r\n\t\t\t\tuniforms.map.value = material.map;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.alphaMap) {\r\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.specularMap) {\r\n\t\t\t\tuniforms.specularMap.value = material.specularMap;\r\n\t\t\t}\r\n\r\n\t\t\tconst envMap = properties.get(material).envMap;\r\n\r\n\t\t\tif (envMap) {\r\n\t\t\t\tuniforms.envMap.value = envMap;\r\n\t\t\t\tuniforms.flipEnvMap.value = envMap.isCubeTexture && envMap.isRenderTargetTexture === false ? -1 : 1;\r\n\t\t\t\tuniforms.reflectivity.value = material.reflectivity;\r\n\t\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\r\n\r\n\t\t\t\tconst maxMipLevel = properties.get(envMap).__maxMipLevel;\r\n\r\n\t\t\t\tif (maxMipLevel !== undefined) {\r\n\t\t\t\t\tuniforms.maxMipLevel.value = maxMipLevel;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (material.lightMap) {\r\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\r\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.aoMap) {\r\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\r\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\r\n\t\t\t} // uv repeat and offset setting priorities\r\n\t\t\t// 1. color map\r\n\t\t\t// 2. specular map\r\n\t\t\t// 3. displacementMap map\r\n\t\t\t// 4. normal map\r\n\t\t\t// 5. bump map\r\n\t\t\t// 6. roughnessMap map\r\n\t\t\t// 7. metalnessMap map\r\n\t\t\t// 8. alphaMap map\r\n\t\t\t// 9. emissiveMap map\r\n\t\t\t// 10. clearcoat map\r\n\t\t\t// 11. clearcoat normal map\r\n\t\t\t// 12. clearcoat roughnessMap map\r\n\t\t\t// 13. specular intensity map\r\n\t\t\t// 14. specular tint map\r\n\r\n\r\n\t\t\tlet uvScaleMap;\r\n\r\n\t\t\tif (material.map) {\r\n\t\t\t\tuvScaleMap = material.map;\r\n\t\t\t} else if (material.specularMap) {\r\n\t\t\t\tuvScaleMap = material.specularMap;\r\n\t\t\t} else if (material.displacementMap) {\r\n\t\t\t\tuvScaleMap = material.displacementMap;\r\n\t\t\t} else if (material.normalMap) {\r\n\t\t\t\tuvScaleMap = material.normalMap;\r\n\t\t\t} else if (material.bumpMap) {\r\n\t\t\t\tuvScaleMap = material.bumpMap;\r\n\t\t\t} else if (material.roughnessMap) {\r\n\t\t\t\tuvScaleMap = material.roughnessMap;\r\n\t\t\t} else if (material.metalnessMap) {\r\n\t\t\t\tuvScaleMap = material.metalnessMap;\r\n\t\t\t} else if (material.alphaMap) {\r\n\t\t\t\tuvScaleMap = material.alphaMap;\r\n\t\t\t} else if (material.emissiveMap) {\r\n\t\t\t\tuvScaleMap = material.emissiveMap;\r\n\t\t\t} else if (material.clearcoatMap) {\r\n\t\t\t\tuvScaleMap = material.clearcoatMap;\r\n\t\t\t} else if (material.clearcoatNormalMap) {\r\n\t\t\t\tuvScaleMap = material.clearcoatNormalMap;\r\n\t\t\t} else if (material.clearcoatRoughnessMap) {\r\n\t\t\t\tuvScaleMap = material.clearcoatRoughnessMap;\r\n\t\t\t} else if (material.specularIntensityMap) {\r\n\t\t\t\tuvScaleMap = material.specularIntensityMap;\r\n\t\t\t} else if (material.specularTintMap) {\r\n\t\t\t\tuvScaleMap = material.specularTintMap;\r\n\t\t\t}\r\n\r\n\t\t\tif (uvScaleMap !== undefined) {\r\n\t\t\t\t// backwards compatibility\r\n\t\t\t\tif (uvScaleMap.isWebGLRenderTarget) {\r\n\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (uvScaleMap.matrixAutoUpdate === true) {\r\n\t\t\t\t\tuvScaleMap.updateMatrix();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tuniforms.uvTransform.value.copy(uvScaleMap.matrix);\r\n\t\t\t} // uv repeat and offset setting priorities for uv2\r\n\t\t\t// 1. ao map\r\n\t\t\t// 2. light map\r\n\r\n\r\n\t\t\tlet uv2ScaleMap;\r\n\r\n\t\t\tif (material.aoMap) {\r\n\t\t\t\tuv2ScaleMap = material.aoMap;\r\n\t\t\t} else if (material.lightMap) {\r\n\t\t\t\tuv2ScaleMap = material.lightMap;\r\n\t\t\t}\r\n\r\n\t\t\tif (uv2ScaleMap !== undefined) {\r\n\t\t\t\t// backwards compatibility\r\n\t\t\t\tif (uv2ScaleMap.isWebGLRenderTarget) {\r\n\t\t\t\t\tuv2ScaleMap = uv2ScaleMap.texture;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (uv2ScaleMap.matrixAutoUpdate === true) {\r\n\t\t\t\t\tuv2ScaleMap.updateMatrix();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tuniforms.uv2Transform.value.copy(uv2ScaleMap.matrix);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsLine(uniforms, material) {\r\n\t\t\tuniforms.diffuse.value.copy(material.color);\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsDash(uniforms, material) {\r\n\t\t\tuniforms.dashSize.value = material.dashSize;\r\n\t\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\r\n\t\t\tuniforms.scale.value = material.scale;\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsPoints(uniforms, material, pixelRatio, height) {\r\n\t\t\tuniforms.diffuse.value.copy(material.color);\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\t\t\tuniforms.size.value = material.size * pixelRatio;\r\n\t\t\tuniforms.scale.value = height * 0.5;\r\n\r\n\t\t\tif (material.map) {\r\n\t\t\t\tuniforms.map.value = material.map;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.alphaMap) {\r\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\r\n\t\t\t} // uv repeat and offset setting priorities\r\n\t\t\t// 1. color map\r\n\t\t\t// 2. alpha map\r\n\r\n\r\n\t\t\tlet uvScaleMap;\r\n\r\n\t\t\tif (material.map) {\r\n\t\t\t\tuvScaleMap = material.map;\r\n\t\t\t} else if (material.alphaMap) {\r\n\t\t\t\tuvScaleMap = material.alphaMap;\r\n\t\t\t}\r\n\r\n\t\t\tif (uvScaleMap !== undefined) {\r\n\t\t\t\tif (uvScaleMap.matrixAutoUpdate === true) {\r\n\t\t\t\t\tuvScaleMap.updateMatrix();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tuniforms.uvTransform.value.copy(uvScaleMap.matrix);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsSprites(uniforms, material) {\r\n\t\t\tuniforms.diffuse.value.copy(material.color);\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\t\t\tuniforms.rotation.value = material.rotation;\r\n\r\n\t\t\tif (material.map) {\r\n\t\t\t\tuniforms.map.value = material.map;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.alphaMap) {\r\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\r\n\t\t\t} // uv repeat and offset setting priorities\r\n\t\t\t// 1. color map\r\n\t\t\t// 2. alpha map\r\n\r\n\r\n\t\t\tlet uvScaleMap;\r\n\r\n\t\t\tif (material.map) {\r\n\t\t\t\tuvScaleMap = material.map;\r\n\t\t\t} else if (material.alphaMap) {\r\n\t\t\t\tuvScaleMap = material.alphaMap;\r\n\t\t\t}\r\n\r\n\t\t\tif (uvScaleMap !== undefined) {\r\n\t\t\t\tif (uvScaleMap.matrixAutoUpdate === true) {\r\n\t\t\t\t\tuvScaleMap.updateMatrix();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tuniforms.uvTransform.value.copy(uvScaleMap.matrix);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsLambert(uniforms, material) {\r\n\t\t\tif (material.emissiveMap) {\r\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsPhong(uniforms, material) {\r\n\t\t\tuniforms.specular.value.copy(material.specular);\r\n\t\t\tuniforms.shininess.value = Math.max(material.shininess, 1e-4); // to prevent pow( 0.0, 0.0 )\r\n\r\n\t\t\tif (material.emissiveMap) {\r\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.bumpMap) {\r\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.normalMap) {\r\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\r\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\r\n\t\t\t}\r\n\r\n\t\t\tif (material.displacementMap) {\r\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsToon(uniforms, material) {\r\n\t\t\tif (material.gradientMap) {\r\n\t\t\t\tuniforms.gradientMap.value = material.gradientMap;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.emissiveMap) {\r\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.bumpMap) {\r\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.normalMap) {\r\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\r\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\r\n\t\t\t}\r\n\r\n\t\t\tif (material.displacementMap) {\r\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsStandard(uniforms, material) {\r\n\t\t\tuniforms.roughness.value = material.roughness;\r\n\t\t\tuniforms.metalness.value = material.metalness;\r\n\r\n\t\t\tif (material.roughnessMap) {\r\n\t\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.metalnessMap) {\r\n\t\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.emissiveMap) {\r\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.bumpMap) {\r\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.normalMap) {\r\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\r\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\r\n\t\t\t}\r\n\r\n\t\t\tif (material.displacementMap) {\r\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\t\t\t}\r\n\r\n\t\t\tconst envMap = properties.get(material).envMap;\r\n\r\n\t\t\tif (envMap) {\r\n\t\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\r\n\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsPhysical(uniforms, material, transmissionRenderTarget) {\r\n\t\t\trefreshUniformsStandard(uniforms, material);\r\n\t\t\tuniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\r\n\r\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\r\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\r\n\t\t\tif (material.sheen) uniforms.sheen.value.copy(material.sheen);\r\n\r\n\t\t\tif (material.clearcoatMap) {\r\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.clearcoatRoughnessMap) {\r\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.clearcoatNormalMap) {\r\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy(material.clearcoatNormalScale);\r\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\r\n\r\n\t\t\t\tif (material.side === BackSide) {\r\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tuniforms.transmission.value = material.transmission;\r\n\r\n\t\t\tif (material.transmissionMap) {\r\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.transmission > 0.0) {\r\n\t\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\r\n\t\t\t\tuniforms.transmissionSamplerSize.value.set(transmissionRenderTarget.width, transmissionRenderTarget.height);\r\n\t\t\t}\r\n\r\n\t\t\tuniforms.thickness.value = material.thickness;\r\n\r\n\t\t\tif (material.thicknessMap) {\r\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\r\n\t\t\t}\r\n\r\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\r\n\t\t\tuniforms.attenuationTint.value.copy(material.attenuationTint);\r\n\t\t\tuniforms.specularIntensity.value = material.specularIntensity;\r\n\t\t\tuniforms.specularTint.value.copy(material.specularTint);\r\n\r\n\t\t\tif (material.specularIntensityMap) {\r\n\t\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.specularTintMap) {\r\n\t\t\t\tuniforms.specularTintMap.value = material.specularTintMap;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsMatcap(uniforms, material) {\r\n\t\t\tif (material.matcap) {\r\n\t\t\t\tuniforms.matcap.value = material.matcap;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.bumpMap) {\r\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.normalMap) {\r\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\r\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\r\n\t\t\t}\r\n\r\n\t\t\tif (material.displacementMap) {\r\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsDepth(uniforms, material) {\r\n\t\t\tif (material.displacementMap) {\r\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsDistance(uniforms, material) {\r\n\t\t\tif (material.displacementMap) {\r\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\t\t\t}\r\n\r\n\t\t\tuniforms.referencePosition.value.copy(material.referencePosition);\r\n\t\t\tuniforms.nearDistance.value = material.nearDistance;\r\n\t\t\tuniforms.farDistance.value = material.farDistance;\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsNormal(uniforms, material) {\r\n\t\t\tif (material.bumpMap) {\r\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.normalMap) {\r\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\r\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\r\n\t\t\t}\r\n\r\n\t\t\tif (material.displacementMap) {\r\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\trefreshFogUniforms: refreshFogUniforms,\r\n\t\t\trefreshMaterialUniforms: refreshMaterialUniforms\r\n\t\t};\r\n\t}\r\n\r\n\tfunction createCanvasElement() {\r\n\t\tconst canvas = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\r\n\t\tcanvas.style.display = 'block';\r\n\t\treturn canvas;\r\n\t}\r\n\r\n\tfunction WebGLRenderer(parameters = {}) {\r\n\t\tconst _canvas = parameters.canvas !== undefined ? parameters.canvas : createCanvasElement(),\r\n\t\t\t\t\t_context = parameters.context !== undefined ? parameters.context : null,\r\n\t\t\t\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\r\n\t\t\t\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\r\n\t\t\t\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\r\n\t\t\t\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\r\n\t\t\t\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\r\n\t\t\t\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\r\n\t\t\t\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\r\n\t\t\t\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\r\n\r\n\t\tlet currentRenderList = null;\r\n\t\tlet currentRenderState = null; // render() can be called from within a callback triggered by another render.\r\n\t\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\r\n\r\n\t\tconst renderListStack = [];\r\n\t\tconst renderStateStack = []; // public properties\r\n\r\n\t\tthis.domElement = _canvas; // Debug configuration container\r\n\r\n\t\tthis.debug = {\r\n\t\t\t/**\r\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\r\n\t\t\t * @type {boolean}\r\n\t\t\t */\r\n\t\t\tcheckShaderErrors: true\r\n\t\t}; // clearing\r\n\r\n\t\tthis.autoClear = true;\r\n\t\tthis.autoClearColor = true;\r\n\t\tthis.autoClearDepth = true;\r\n\t\tthis.autoClearStencil = true; // scene graph\r\n\r\n\t\tthis.sortObjects = true; // user-defined clipping\r\n\r\n\t\tthis.clippingPlanes = [];\r\n\t\tthis.localClippingEnabled = false; // physically based shading\r\n\r\n\t\tthis.gammaFactor = 2.0; // for backwards compatibility\r\n\r\n\t\tthis.outputEncoding = LinearEncoding; // physical lights\r\n\r\n\t\tthis.physicallyCorrectLights = false; // tone mapping\r\n\r\n\t\tthis.toneMapping = NoToneMapping;\r\n\t\tthis.toneMappingExposure = 1.0; // internal properties\r\n\r\n\t\tconst _this = this;\r\n\r\n\t\tlet _isContextLost = false; // internal state cache\r\n\r\n\t\tlet _currentActiveCubeFace = 0;\r\n\t\tlet _currentActiveMipmapLevel = 0;\r\n\t\tlet _currentRenderTarget = null;\r\n\r\n\t\tlet _currentMaterialId = -1;\r\n\r\n\t\tlet _currentCamera = null;\r\n\r\n\t\tconst _currentViewport = new Vector4();\r\n\r\n\t\tconst _currentScissor = new Vector4();\r\n\r\n\t\tlet _currentScissorTest = null; //\r\n\r\n\t\tlet _width = _canvas.width;\r\n\t\tlet _height = _canvas.height;\r\n\t\tlet _pixelRatio = 1;\r\n\t\tlet _opaqueSort = null;\r\n\t\tlet _transparentSort = null;\r\n\r\n\t\tconst _viewport = new Vector4(0, 0, _width, _height);\r\n\r\n\t\tconst _scissor = new Vector4(0, 0, _width, _height);\r\n\r\n\t\tlet _scissorTest = false; //\r\n\r\n\t\tconst _currentDrawBuffers = []; // frustum\r\n\r\n\t\tconst _frustum = new Frustum(); // clipping\r\n\r\n\r\n\t\tlet _clippingEnabled = false;\r\n\t\tlet _localClippingEnabled = false; // transmission\r\n\r\n\t\tlet _transmissionRenderTarget = null; // camera matrices cache\r\n\r\n\t\tconst _projScreenMatrix = new Matrix4();\r\n\r\n\t\tconst _vector3 = new Vector3();\r\n\r\n\t\tconst _emptyScene = {\r\n\t\t\tbackground: null,\r\n\t\t\tfog: null,\r\n\t\t\tenvironment: null,\r\n\t\t\toverrideMaterial: null,\r\n\t\t\tisScene: true\r\n\t\t};\r\n\r\n\t\tfunction getTargetPixelRatio() {\r\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\r\n\t\t} // initialize\r\n\r\n\r\n\t\tlet _gl = _context;\r\n\r\n\t\tfunction getContext(contextNames, contextAttributes) {\r\n\t\t\tfor (let i = 0; i < contextNames.length; i++) {\r\n\t\t\t\tconst contextName = contextNames[i];\r\n\r\n\t\t\t\tconst context = _canvas.getContext(contextName, contextAttributes);\r\n\r\n\t\t\t\tif (context !== null) return context;\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tconst contextAttributes = {\r\n\t\t\t\talpha: _alpha,\r\n\t\t\t\tdepth: _depth,\r\n\t\t\t\tstencil: _stencil,\r\n\t\t\t\tantialias: _antialias,\r\n\t\t\t\tpremultipliedAlpha: _premultipliedAlpha,\r\n\t\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\r\n\t\t\t\tpowerPreference: _powerPreference,\r\n\t\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\r\n\t\t\t}; // event listeners must be registered before WebGL context is created, see #12753\r\n\r\n\t\t\t_canvas.addEventListener('webglcontextlost', onContextLost, false);\r\n\r\n\t\t\t_canvas.addEventListener('webglcontextrestored', onContextRestore, false);\r\n\r\n\t\t\tif (_gl === null) {\r\n\t\t\t\tconst contextNames = ['webgl2', 'webgl', 'experimental-webgl'];\r\n\r\n\t\t\t\tif (_this.isWebGL1Renderer === true) {\r\n\t\t\t\t\tcontextNames.shift();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_gl = getContext(contextNames, contextAttributes);\r\n\r\n\t\t\t\tif (_gl === null) {\r\n\t\t\t\t\tif (getContext(contextNames)) {\r\n\t\t\t\t\t\tthrow new Error('Error creating WebGL context with your selected attributes.');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthrow new Error('Error creating WebGL context.');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} // Some experimental-webgl implementations do not have getShaderPrecisionFormat\r\n\r\n\r\n\t\t\tif (_gl.getShaderPrecisionFormat === undefined) {\r\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t'rangeMin': 1,\r\n\t\t\t\t\t\t'rangeMax': 1,\r\n\t\t\t\t\t\t'precision': 1\r\n\t\t\t\t\t};\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('THREE.WebGLRenderer: ' + error.message);\r\n\t\t\tthrow error;\r\n\t\t}\r\n\r\n\t\tlet extensions, capabilities, state, info;\r\n\t\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\r\n\t\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\r\n\t\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\r\n\t\tlet utils, bindingStates;\r\n\r\n\t\tfunction initGLContext() {\r\n\t\t\textensions = new WebGLExtensions(_gl);\r\n\t\t\tcapabilities = new WebGLCapabilities(_gl, extensions, parameters);\r\n\t\t\textensions.init(capabilities);\r\n\t\t\tutils = new WebGLUtils(_gl, extensions, capabilities);\r\n\t\t\tstate = new WebGLState(_gl, extensions, capabilities);\r\n\t\t\t_currentDrawBuffers[0] = _gl.BACK;\r\n\t\t\tinfo = new WebGLInfo(_gl);\r\n\t\t\tproperties = new WebGLProperties();\r\n\t\t\ttextures = new WebGLTextures(_gl, extensions, state, properties, capabilities, utils, info);\r\n\t\t\tcubemaps = new WebGLCubeMaps(_this);\r\n\t\t\tcubeuvmaps = new WebGLCubeUVMaps(_this);\r\n\t\t\tattributes = new WebGLAttributes(_gl, capabilities);\r\n\t\t\tbindingStates = new WebGLBindingStates(_gl, extensions, attributes, capabilities);\r\n\t\t\tgeometries = new WebGLGeometries(_gl, attributes, info, bindingStates);\r\n\t\t\tobjects = new WebGLObjects(_gl, geometries, attributes, info);\r\n\t\t\tmorphtargets = new WebGLMorphtargets(_gl);\r\n\t\t\tclipping = new WebGLClipping(properties);\r\n\t\t\tprogramCache = new WebGLPrograms(_this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping);\r\n\t\t\tmaterials = new WebGLMaterials(properties);\r\n\t\t\trenderLists = new WebGLRenderLists(properties);\r\n\t\t\trenderStates = new WebGLRenderStates(extensions, capabilities);\r\n\t\t\tbackground = new WebGLBackground(_this, cubemaps, state, objects, _premultipliedAlpha);\r\n\t\t\tshadowMap = new WebGLShadowMap(_this, objects, capabilities);\r\n\t\t\tbufferRenderer = new WebGLBufferRenderer(_gl, extensions, info, capabilities);\r\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer(_gl, extensions, info, capabilities);\r\n\t\t\tinfo.programs = programCache.programs;\r\n\t\t\t_this.capabilities = capabilities;\r\n\t\t\t_this.extensions = extensions;\r\n\t\t\t_this.properties = properties;\r\n\t\t\t_this.renderLists = renderLists;\r\n\t\t\t_this.shadowMap = shadowMap;\r\n\t\t\t_this.state = state;\r\n\t\t\t_this.info = info;\r\n\t\t}\r\n\r\n\t\tinitGLContext(); // xr\r\n\r\n\t\tconst xr = new WebXRManager(_this, _gl);\r\n\t\tthis.xr = xr; // API\r\n\r\n\t\tthis.getContext = function () {\r\n\t\t\treturn _gl;\r\n\t\t};\r\n\r\n\t\tthis.getContextAttributes = function () {\r\n\t\t\treturn _gl.getContextAttributes();\r\n\t\t};\r\n\r\n\t\tthis.forceContextLoss = function () {\r\n\t\t\tconst extension = extensions.get('WEBGL_lose_context');\r\n\t\t\tif (extension) extension.loseContext();\r\n\t\t};\r\n\r\n\t\tthis.forceContextRestore = function () {\r\n\t\t\tconst extension = extensions.get('WEBGL_lose_context');\r\n\t\t\tif (extension) extension.restoreContext();\r\n\t\t};\r\n\r\n\t\tthis.getPixelRatio = function () {\r\n\t\t\treturn _pixelRatio;\r\n\t\t};\r\n\r\n\t\tthis.setPixelRatio = function (value) {\r\n\t\t\tif (value === undefined) return;\r\n\t\t\t_pixelRatio = value;\r\n\t\t\tthis.setSize(_width, _height, false);\r\n\t\t};\r\n\r\n\t\tthis.getSize = function (target) {\r\n\t\t\treturn target.set(_width, _height);\r\n\t\t};\r\n\r\n\t\tthis.setSize = function (width, height, updateStyle) {\r\n\t\t\tif (xr.isPresenting) {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t_width = width;\r\n\t\t\t_height = height;\r\n\t\t\t_canvas.width = Math.floor(width * _pixelRatio);\r\n\t\t\t_canvas.height = Math.floor(height * _pixelRatio);\r\n\r\n\t\t\tif (updateStyle !== false) {\r\n\t\t\t\t_canvas.style.width = width + 'px';\r\n\t\t\t\t_canvas.style.height = height + 'px';\r\n\t\t\t}\r\n\r\n\t\t\tthis.setViewport(0, 0, width, height);\r\n\t\t};\r\n\r\n\t\tthis.getDrawingBufferSize = function (target) {\r\n\t\t\treturn target.set(_width * _pixelRatio, _height * _pixelRatio).floor();\r\n\t\t};\r\n\r\n\t\tthis.setDrawingBufferSize = function (width, height, pixelRatio) {\r\n\t\t\t_width = width;\r\n\t\t\t_height = height;\r\n\t\t\t_pixelRatio = pixelRatio;\r\n\t\t\t_canvas.width = Math.floor(width * pixelRatio);\r\n\t\t\t_canvas.height = Math.floor(height * pixelRatio);\r\n\t\t\tthis.setViewport(0, 0, width, height);\r\n\t\t};\r\n\r\n\t\tthis.getCurrentViewport = function (target) {\r\n\t\t\treturn target.copy(_currentViewport);\r\n\t\t};\r\n\r\n\t\tthis.getViewport = function (target) {\r\n\t\t\treturn target.copy(_viewport);\r\n\t\t};\r\n\r\n\t\tthis.setViewport = function (x, y, width, height) {\r\n\t\t\tif (x.isVector4) {\r\n\t\t\t\t_viewport.set(x.x, x.y, x.z, x.w);\r\n\t\t\t} else {\r\n\t\t\t\t_viewport.set(x, y, width, height);\r\n\t\t\t}\r\n\r\n\t\t\tstate.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor());\r\n\t\t};\r\n\r\n\t\tthis.getScissor = function (target) {\r\n\t\t\treturn target.copy(_scissor);\r\n\t\t};\r\n\r\n\t\tthis.setScissor = function (x, y, width, height) {\r\n\t\t\tif (x.isVector4) {\r\n\t\t\t\t_scissor.set(x.x, x.y, x.z, x.w);\r\n\t\t\t} else {\r\n\t\t\t\t_scissor.set(x, y, width, height);\r\n\t\t\t}\r\n\r\n\t\t\tstate.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor());\r\n\t\t};\r\n\r\n\t\tthis.getScissorTest = function () {\r\n\t\t\treturn _scissorTest;\r\n\t\t};\r\n\r\n\t\tthis.setScissorTest = function (boolean) {\r\n\t\t\tstate.setScissorTest(_scissorTest = boolean);\r\n\t\t};\r\n\r\n\t\tthis.setOpaqueSort = function (method) {\r\n\t\t\t_opaqueSort = method;\r\n\t\t};\r\n\r\n\t\tthis.setTransparentSort = function (method) {\r\n\t\t\t_transparentSort = method;\r\n\t\t}; // Clearing\r\n\r\n\r\n\t\tthis.getClearColor = function (target) {\r\n\t\t\treturn target.copy(background.getClearColor());\r\n\t\t};\r\n\r\n\t\tthis.setClearColor = function () {\r\n\t\t\tbackground.setClearColor.apply(background, arguments);\r\n\t\t};\r\n\r\n\t\tthis.getClearAlpha = function () {\r\n\t\t\treturn background.getClearAlpha();\r\n\t\t};\r\n\r\n\t\tthis.setClearAlpha = function () {\r\n\t\t\tbackground.setClearAlpha.apply(background, arguments);\r\n\t\t};\r\n\r\n\t\tthis.clear = function (color, depth, stencil) {\r\n\t\t\tlet bits = 0;\r\n\t\t\tif (color === undefined || color) bits |= _gl.COLOR_BUFFER_BIT;\r\n\t\t\tif (depth === undefined || depth) bits |= _gl.DEPTH_BUFFER_BIT;\r\n\t\t\tif (stencil === undefined || stencil) bits |= _gl.STENCIL_BUFFER_BIT;\r\n\r\n\t\t\t_gl.clear(bits);\r\n\t\t};\r\n\r\n\t\tthis.clearColor = function () {\r\n\t\t\tthis.clear(true, false, false);\r\n\t\t};\r\n\r\n\t\tthis.clearDepth = function () {\r\n\t\t\tthis.clear(false, true, false);\r\n\t\t};\r\n\r\n\t\tthis.clearStencil = function () {\r\n\t\t\tthis.clear(false, false, true);\r\n\t\t}; //\r\n\r\n\r\n\t\tthis.dispose = function () {\r\n\t\t\t_canvas.removeEventListener('webglcontextlost', onContextLost, false);\r\n\r\n\t\t\t_canvas.removeEventListener('webglcontextrestored', onContextRestore, false);\r\n\r\n\t\t\trenderLists.dispose();\r\n\t\t\trenderStates.dispose();\r\n\t\t\tproperties.dispose();\r\n\t\t\tcubemaps.dispose();\r\n\t\t\tcubeuvmaps.dispose();\r\n\t\t\tobjects.dispose();\r\n\t\t\tbindingStates.dispose();\r\n\t\t\txr.dispose();\r\n\t\t\txr.removeEventListener('sessionstart', onXRSessionStart);\r\n\t\t\txr.removeEventListener('sessionend', onXRSessionEnd);\r\n\r\n\t\t\tif (_transmissionRenderTarget) {\r\n\t\t\t\t_transmissionRenderTarget.dispose();\r\n\r\n\t\t\t\t_transmissionRenderTarget = null;\r\n\t\t\t}\r\n\r\n\t\t\tanimation.stop();\r\n\t\t}; // Events\r\n\r\n\r\n\t\tfunction onContextLost(event) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tconsole.log('THREE.WebGLRenderer: Context Lost.');\r\n\t\t\t_isContextLost = true;\r\n\t\t}\r\n\r\n\t\tfunction onContextRestore()\r\n\t\t/* event */\r\n\t\t{\r\n\t\t\tconsole.log('THREE.WebGLRenderer: Context Restored.');\r\n\t\t\t_isContextLost = false;\r\n\t\t\tconst infoAutoReset = info.autoReset;\r\n\t\t\tconst shadowMapEnabled = shadowMap.enabled;\r\n\t\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\r\n\t\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\r\n\t\t\tconst shadowMapType = shadowMap.type;\r\n\t\t\tinitGLContext();\r\n\t\t\tinfo.autoReset = infoAutoReset;\r\n\t\t\tshadowMap.enabled = shadowMapEnabled;\r\n\t\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\r\n\t\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\r\n\t\t\tshadowMap.type = shadowMapType;\r\n\t\t}\r\n\r\n\t\tfunction onMaterialDispose(event) {\r\n\t\t\tconst material = event.target;\r\n\t\t\tmaterial.removeEventListener('dispose', onMaterialDispose);\r\n\t\t\tdeallocateMaterial(material);\r\n\t\t} // Buffer deallocation\r\n\r\n\r\n\t\tfunction deallocateMaterial(material) {\r\n\t\t\treleaseMaterialProgramReferences(material);\r\n\t\t\tproperties.remove(material);\r\n\t\t}\r\n\r\n\t\tfunction releaseMaterialProgramReferences(material) {\r\n\t\t\tconst programs = properties.get(material).programs;\r\n\r\n\t\t\tif (programs !== undefined) {\r\n\t\t\t\tprograms.forEach(function (program) {\r\n\t\t\t\t\tprogramCache.releaseProgram(program);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} // Buffer rendering\r\n\r\n\r\n\t\tfunction renderObjectImmediate(object, program) {\r\n\t\t\tobject.render(function (object) {\r\n\t\t\t\t_this.renderBufferImmediate(object, program);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.renderBufferImmediate = function (object, program) {\r\n\t\t\tbindingStates.initAttributes();\r\n\t\t\tconst buffers = properties.get(object);\r\n\t\t\tif (object.hasPositions && !buffers.position) buffers.position = _gl.createBuffer();\r\n\t\t\tif (object.hasNormals && !buffers.normal) buffers.normal = _gl.createBuffer();\r\n\t\t\tif (object.hasUvs && !buffers.uv) buffers.uv = _gl.createBuffer();\r\n\t\t\tif (object.hasColors && !buffers.color) buffers.color = _gl.createBuffer();\r\n\t\t\tconst programAttributes = program.getAttributes();\r\n\r\n\t\t\tif (object.hasPositions) {\r\n\t\t\t\t_gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.position);\r\n\r\n\t\t\t\t_gl.bufferData(_gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW);\r\n\r\n\t\t\t\tbindingStates.enableAttribute(programAttributes.position);\r\n\r\n\t\t\t\t_gl.vertexAttribPointer(programAttributes.position, 3, _gl.FLOAT, false, 0, 0);\r\n\t\t\t}\r\n\r\n\t\t\tif (object.hasNormals) {\r\n\t\t\t\t_gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.normal);\r\n\r\n\t\t\t\t_gl.bufferData(_gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW);\r\n\r\n\t\t\t\tbindingStates.enableAttribute(programAttributes.normal);\r\n\r\n\t\t\t\t_gl.vertexAttribPointer(programAttributes.normal, 3, _gl.FLOAT, false, 0, 0);\r\n\t\t\t}\r\n\r\n\t\t\tif (object.hasUvs) {\r\n\t\t\t\t_gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.uv);\r\n\r\n\t\t\t\t_gl.bufferData(_gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW);\r\n\r\n\t\t\t\tbindingStates.enableAttribute(programAttributes.uv);\r\n\r\n\t\t\t\t_gl.vertexAttribPointer(programAttributes.uv, 2, _gl.FLOAT, false, 0, 0);\r\n\t\t\t}\r\n\r\n\t\t\tif (object.hasColors) {\r\n\t\t\t\t_gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.color);\r\n\r\n\t\t\t\t_gl.bufferData(_gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW);\r\n\r\n\t\t\t\tbindingStates.enableAttribute(programAttributes.color);\r\n\r\n\t\t\t\t_gl.vertexAttribPointer(programAttributes.color, 3, _gl.FLOAT, false, 0, 0);\r\n\t\t\t}\r\n\r\n\t\t\tbindingStates.disableUnusedAttributes();\r\n\r\n\t\t\t_gl.drawArrays(_gl.TRIANGLES, 0, object.count);\r\n\r\n\t\t\tobject.count = 0;\r\n\t\t};\r\n\r\n\t\tthis.renderBufferDirect = function (camera, scene, geometry, material, object, group) {\r\n\t\t\tif (scene === null) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\r\n\r\n\t\t\tconst frontFaceCW = object.isMesh && object.matrixWorld.determinant() < 0;\r\n\t\t\tconst program = setProgram(camera, scene, material, object);\r\n\t\t\tstate.setMaterial(material, frontFaceCW); //\r\n\r\n\t\t\tlet index = geometry.index;\r\n\t\t\tconst position = geometry.attributes.position; //\r\n\r\n\t\t\tif (index === null) {\r\n\t\t\t\tif (position === undefined || position.count === 0) return;\r\n\t\t\t} else if (index.count === 0) {\r\n\t\t\t\treturn;\r\n\t\t\t} //\r\n\r\n\r\n\t\t\tlet rangeFactor = 1;\r\n\r\n\t\t\tif (material.wireframe === true) {\r\n\t\t\t\tindex = geometries.getWireframeAttribute(geometry);\r\n\t\t\t\trangeFactor = 2;\r\n\t\t\t}\r\n\r\n\t\t\tif (geometry.morphAttributes.position !== undefined || geometry.morphAttributes.normal !== undefined) {\r\n\t\t\t\tmorphtargets.update(object, geometry, material, program);\r\n\t\t\t}\r\n\r\n\t\t\tbindingStates.setup(object, material, program, geometry, index);\r\n\t\t\tlet attribute;\r\n\t\t\tlet renderer = bufferRenderer;\r\n\r\n\t\t\tif (index !== null) {\r\n\t\t\t\tattribute = attributes.get(index);\r\n\t\t\t\trenderer = indexedBufferRenderer;\r\n\t\t\t\trenderer.setIndex(attribute);\r\n\t\t\t} //\r\n\r\n\r\n\t\t\tconst dataCount = index !== null ? index.count : position.count;\r\n\t\t\tconst rangeStart = geometry.drawRange.start * rangeFactor;\r\n\t\t\tconst rangeCount = geometry.drawRange.count * rangeFactor;\r\n\t\t\tconst groupStart = group !== null ? group.start * rangeFactor : 0;\r\n\t\t\tconst groupCount = group !== null ? group.count * rangeFactor : Infinity;\r\n\t\t\tconst drawStart = Math.max(rangeStart, groupStart);\r\n\t\t\tconst drawEnd = Math.min(dataCount, rangeStart + rangeCount, groupStart + groupCount) - 1;\r\n\t\t\tconst drawCount = Math.max(0, drawEnd - drawStart + 1);\r\n\t\t\tif (drawCount === 0) return; //\r\n\r\n\t\t\tif (object.isMesh) {\r\n\t\t\t\tif (material.wireframe === true) {\r\n\t\t\t\t\tstate.setLineWidth(material.wireframeLinewidth * getTargetPixelRatio());\r\n\t\t\t\t\trenderer.setMode(_gl.LINES);\r\n\t\t\t\t} else {\r\n\t\t\t\t\trenderer.setMode(_gl.TRIANGLES);\r\n\t\t\t\t}\r\n\t\t\t} else if (object.isLine) {\r\n\t\t\t\tlet lineWidth = material.linewidth;\r\n\t\t\t\tif (lineWidth === undefined) lineWidth = 1; // Not using Line*Material\r\n\r\n\t\t\t\tstate.setLineWidth(lineWidth * getTargetPixelRatio());\r\n\r\n\t\t\t\tif (object.isLineSegments) {\r\n\t\t\t\t\trenderer.setMode(_gl.LINES);\r\n\t\t\t\t} else if (object.isLineLoop) {\r\n\t\t\t\t\trenderer.setMode(_gl.LINE_LOOP);\r\n\t\t\t\t} else {\r\n\t\t\t\t\trenderer.setMode(_gl.LINE_STRIP);\r\n\t\t\t\t}\r\n\t\t\t} else if (object.isPoints) {\r\n\t\t\t\trenderer.setMode(_gl.POINTS);\r\n\t\t\t} else if (object.isSprite) {\r\n\t\t\t\trenderer.setMode(_gl.TRIANGLES);\r\n\t\t\t}\r\n\r\n\t\t\tif (object.isInstancedMesh) {\r\n\t\t\t\trenderer.renderInstances(drawStart, drawCount, object.count);\r\n\t\t\t} else if (geometry.isInstancedBufferGeometry) {\r\n\t\t\t\tconst instanceCount = Math.min(geometry.instanceCount, geometry._maxInstanceCount);\r\n\t\t\t\trenderer.renderInstances(drawStart, drawCount, instanceCount);\r\n\t\t\t} else {\r\n\t\t\t\trenderer.render(drawStart, drawCount);\r\n\t\t\t}\r\n\t\t}; // Compile\r\n\r\n\r\n\t\tthis.compile = function (scene, camera) {\r\n\t\t\tcurrentRenderState = renderStates.get(scene);\r\n\t\t\tcurrentRenderState.init();\r\n\t\t\trenderStateStack.push(currentRenderState);\r\n\t\t\tscene.traverseVisible(function (object) {\r\n\t\t\t\tif (object.isLight && object.layers.test(camera.layers)) {\r\n\t\t\t\t\tcurrentRenderState.pushLight(object);\r\n\r\n\t\t\t\t\tif (object.castShadow) {\r\n\t\t\t\t\t\tcurrentRenderState.pushShadow(object);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tcurrentRenderState.setupLights();\r\n\t\t\tscene.traverse(function (object) {\r\n\t\t\t\tconst material = object.material;\r\n\r\n\t\t\t\tif (material) {\r\n\t\t\t\t\tif (Array.isArray(material)) {\r\n\t\t\t\t\t\tfor (let i = 0; i < material.length; i++) {\r\n\t\t\t\t\t\t\tconst material2 = material[i];\r\n\t\t\t\t\t\t\tgetProgram(material2, scene, object);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tgetProgram(material, scene, object);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\trenderStateStack.pop();\r\n\t\t\tcurrentRenderState = null;\r\n\t\t}; // Animation Loop\r\n\r\n\r\n\t\tlet onAnimationFrameCallback = null;\r\n\r\n\t\tfunction onAnimationFrame(time) {\r\n\t\t\tif (onAnimationFrameCallback) onAnimationFrameCallback(time);\r\n\t\t}\r\n\r\n\t\tfunction onXRSessionStart() {\r\n\t\t\tanimation.stop();\r\n\t\t}\r\n\r\n\t\tfunction onXRSessionEnd() {\r\n\t\t\tanimation.start();\r\n\t\t}\r\n\r\n\t\tconst animation = new WebGLAnimation();\r\n\t\tanimation.setAnimationLoop(onAnimationFrame);\r\n\t\tif (typeof window !== 'undefined') animation.setContext(window);\r\n\r\n\t\tthis.setAnimationLoop = function (callback) {\r\n\t\t\tonAnimationFrameCallback = callback;\r\n\t\t\txr.setAnimationLoop(callback);\r\n\t\t\tcallback === null ? animation.stop() : animation.start();\r\n\t\t};\r\n\r\n\t\txr.addEventListener('sessionstart', onXRSessionStart);\r\n\t\txr.addEventListener('sessionend', onXRSessionEnd); // Rendering\r\n\r\n\t\tthis.render = function (scene, camera) {\r\n\t\t\tif (camera !== undefined && camera.isCamera !== true) {\r\n\t\t\t\tconsole.error('THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (_isContextLost === true) return; // update scene graph\r\n\r\n\t\t\tif (scene.autoUpdate === true) scene.updateMatrixWorld(); // update camera matrices and frustum\r\n\r\n\t\t\tif (camera.parent === null) camera.updateMatrixWorld();\r\n\r\n\t\t\tif (xr.enabled === true && xr.isPresenting === true) {\r\n\t\t\t\tif (xr.cameraAutoUpdate === true) xr.updateCamera(camera);\r\n\t\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\r\n\t\t\t} //\r\n\r\n\r\n\t\t\tif (scene.isScene === true) scene.onBeforeRender(_this, scene, camera, _currentRenderTarget);\r\n\t\t\tcurrentRenderState = renderStates.get(scene, renderStateStack.length);\r\n\t\t\tcurrentRenderState.init();\r\n\t\t\trenderStateStack.push(currentRenderState);\r\n\r\n\t\t\t_projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\r\n\r\n\t\t\t_frustum.setFromProjectionMatrix(_projScreenMatrix);\r\n\r\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\r\n\t\t\t_clippingEnabled = clipping.init(this.clippingPlanes, _localClippingEnabled, camera);\r\n\t\t\tcurrentRenderList = renderLists.get(scene, renderListStack.length);\r\n\t\t\tcurrentRenderList.init();\r\n\t\t\trenderListStack.push(currentRenderList);\r\n\t\t\tprojectObject(scene, camera, 0, _this.sortObjects);\r\n\t\t\tcurrentRenderList.finish();\r\n\r\n\t\t\tif (_this.sortObjects === true) {\r\n\t\t\t\tcurrentRenderList.sort(_opaqueSort, _transparentSort);\r\n\t\t\t} //\r\n\r\n\r\n\t\t\tif (_clippingEnabled === true) clipping.beginShadows();\r\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\r\n\t\t\tshadowMap.render(shadowsArray, scene, camera);\r\n\t\t\tcurrentRenderState.setupLights();\r\n\t\t\tcurrentRenderState.setupLightsView(camera);\r\n\t\t\tif (_clippingEnabled === true) clipping.endShadows(); //\r\n\r\n\t\t\tif (this.info.autoReset === true) this.info.reset(); //\r\n\r\n\t\t\tbackground.render(currentRenderList, scene); // render scene\r\n\r\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\r\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\r\n\t\t\tconst transparentObjects = currentRenderList.transparent;\r\n\t\t\tif (opaqueObjects.length > 0) renderObjects(opaqueObjects, scene, camera);\r\n\t\t\tif (transmissiveObjects.length > 0) renderTransmissiveObjects(opaqueObjects, transmissiveObjects, scene, camera);\r\n\t\t\tif (transparentObjects.length > 0) renderObjects(transparentObjects, scene, camera); //\r\n\r\n\t\t\tif (_currentRenderTarget !== null) {\r\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\r\n\t\t\t\ttextures.updateMultisampleRenderTarget(_currentRenderTarget); // Generate mipmap if we're using any kind of mipmap filtering\r\n\r\n\t\t\t\ttextures.updateRenderTargetMipmap(_currentRenderTarget);\r\n\t\t\t} //\r\n\r\n\r\n\t\t\tif (scene.isScene === true) scene.onAfterRender(_this, scene, camera); // Ensure depth buffer writing is enabled so it can be cleared on next render\r\n\r\n\t\t\tstate.buffers.depth.setTest(true);\r\n\t\t\tstate.buffers.depth.setMask(true);\r\n\t\t\tstate.buffers.color.setMask(true);\r\n\t\t\tstate.setPolygonOffset(false); // _gl.finish();\r\n\r\n\t\t\tbindingStates.resetDefaultState();\r\n\t\t\t_currentMaterialId = -1;\r\n\t\t\t_currentCamera = null;\r\n\t\t\trenderStateStack.pop();\r\n\r\n\t\t\tif (renderStateStack.length > 0) {\r\n\t\t\t\tcurrentRenderState = renderStateStack[renderStateStack.length - 1];\r\n\t\t\t} else {\r\n\t\t\t\tcurrentRenderState = null;\r\n\t\t\t}\r\n\r\n\t\t\trenderListStack.pop();\r\n\r\n\t\t\tif (renderListStack.length > 0) {\r\n\t\t\t\tcurrentRenderList = renderListStack[renderListStack.length - 1];\r\n\t\t\t} else {\r\n\t\t\t\tcurrentRenderList = null;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfunction projectObject(object, camera, groupOrder, sortObjects) {\r\n\t\t\tif (object.visible === false) return;\r\n\t\t\tconst visible = object.layers.test(camera.layers);\r\n\r\n\t\t\tif (visible) {\r\n\t\t\t\tif (object.isGroup) {\r\n\t\t\t\t\tgroupOrder = object.renderOrder;\r\n\t\t\t\t} else if (object.isLOD) {\r\n\t\t\t\t\tif (object.autoUpdate === true) object.update(camera);\r\n\t\t\t\t} else if (object.isLight) {\r\n\t\t\t\t\tcurrentRenderState.pushLight(object);\r\n\r\n\t\t\t\t\tif (object.castShadow) {\r\n\t\t\t\t\t\tcurrentRenderState.pushShadow(object);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (object.isSprite) {\r\n\t\t\t\t\tif (!object.frustumCulled || _frustum.intersectsSprite(object)) {\r\n\t\t\t\t\t\tif (sortObjects) {\r\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst geometry = objects.update(object);\r\n\t\t\t\t\t\tconst material = object.material;\r\n\r\n\t\t\t\t\t\tif (material.visible) {\r\n\t\t\t\t\t\t\tcurrentRenderList.push(object, geometry, material, groupOrder, _vector3.z, null);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (object.isImmediateRenderObject) {\r\n\t\t\t\t\tif (sortObjects) {\r\n\t\t\t\t\t\t_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcurrentRenderList.push(object, null, object.material, groupOrder, _vector3.z, null);\r\n\t\t\t\t} else if (object.isMesh || object.isLine || object.isPoints) {\r\n\t\t\t\t\tif (object.isSkinnedMesh) {\r\n\t\t\t\t\t\t// update skeleton only once in a frame\r\n\t\t\t\t\t\tif (object.skeleton.frame !== info.render.frame) {\r\n\t\t\t\t\t\t\tobject.skeleton.update();\r\n\t\t\t\t\t\t\tobject.skeleton.frame = info.render.frame;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!object.frustumCulled || _frustum.intersectsObject(object)) {\r\n\t\t\t\t\t\tif (sortObjects) {\r\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst geometry = objects.update(object);\r\n\t\t\t\t\t\tconst material = object.material;\r\n\r\n\t\t\t\t\t\tif (Array.isArray(material)) {\r\n\t\t\t\t\t\t\tconst groups = geometry.groups;\r\n\r\n\t\t\t\t\t\t\tfor (let i = 0, l = groups.length; i < l; i++) {\r\n\t\t\t\t\t\t\t\tconst group = groups[i];\r\n\t\t\t\t\t\t\t\tconst groupMaterial = material[group.materialIndex];\r\n\r\n\t\t\t\t\t\t\t\tif (groupMaterial && groupMaterial.visible) {\r\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push(object, geometry, groupMaterial, groupOrder, _vector3.z, group);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if (material.visible) {\r\n\t\t\t\t\t\t\tcurrentRenderList.push(object, geometry, material, groupOrder, _vector3.z, null);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst children = object.children;\r\n\r\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\r\n\t\t\t\tprojectObject(children[i], camera, groupOrder, sortObjects);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction renderTransmissiveObjects(opaqueObjects, transmissiveObjects, scene, camera) {\r\n\t\t\tif (_transmissionRenderTarget === null) {\r\n\t\t\t\tconst needsAntialias = _antialias === true && capabilities.isWebGL2 === true;\r\n\t\t\t\tconst renderTargetType = needsAntialias ? WebGLMultisampleRenderTarget : WebGLRenderTarget;\r\n\t\t\t\t_transmissionRenderTarget = new renderTargetType(1024, 1024, {\r\n\t\t\t\t\tgenerateMipmaps: true,\r\n\t\t\t\t\ttype: utils.convert(HalfFloatType) !== null ? HalfFloatType : UnsignedByteType,\r\n\t\t\t\t\tminFilter: LinearMipmapLinearFilter,\r\n\t\t\t\t\tmagFilter: NearestFilter,\r\n\t\t\t\t\twrapS: ClampToEdgeWrapping,\r\n\t\t\t\t\twrapT: ClampToEdgeWrapping\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tconst currentRenderTarget = _this.getRenderTarget();\r\n\r\n\t\t\t_this.setRenderTarget(_transmissionRenderTarget);\r\n\r\n\t\t\t_this.clear(); // Turn off the features which can affect the frag color for opaque objects pass.\r\n\t\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\r\n\r\n\r\n\t\t\tconst currentToneMapping = _this.toneMapping;\r\n\t\t\t_this.toneMapping = NoToneMapping;\r\n\t\t\trenderObjects(opaqueObjects, scene, camera);\r\n\t\t\t_this.toneMapping = currentToneMapping;\r\n\t\t\ttextures.updateMultisampleRenderTarget(_transmissionRenderTarget);\r\n\t\t\ttextures.updateRenderTargetMipmap(_transmissionRenderTarget);\r\n\r\n\t\t\t_this.setRenderTarget(currentRenderTarget);\r\n\r\n\t\t\trenderObjects(transmissiveObjects, scene, camera);\r\n\t\t}\r\n\r\n\t\tfunction renderObjects(renderList, scene, camera) {\r\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\r\n\r\n\t\t\tif (camera.isArrayCamera) {\r\n\t\t\t\tconst cameras = camera.cameras;\r\n\r\n\t\t\t\tfor (let i = 0, l = cameras.length; i < l; i++) {\r\n\t\t\t\t\tconst camera2 = cameras[i];\r\n\t\t\t\t\tstate.viewport(_currentViewport.copy(camera2.viewport));\r\n\t\t\t\t\tcurrentRenderState.setupLightsView(camera2);\r\n\r\n\t\t\t\t\tfor (let j = 0, jl = renderList.length; j < jl; j++) {\r\n\t\t\t\t\t\tconst renderItem = renderList[j];\r\n\t\t\t\t\t\tconst object = renderItem.object;\r\n\t\t\t\t\t\tconst geometry = renderItem.geometry;\r\n\t\t\t\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\r\n\t\t\t\t\t\tconst group = renderItem.group;\r\n\r\n\t\t\t\t\t\tif (object.layers.test(camera2.layers)) {\r\n\t\t\t\t\t\t\trenderObject(object, scene, camera2, geometry, material, group);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor (let j = 0, jl = renderList.length; j < jl; j++) {\r\n\t\t\t\t\tconst renderItem = renderList[j];\r\n\t\t\t\t\tconst object = renderItem.object;\r\n\t\t\t\t\tconst geometry = renderItem.geometry;\r\n\t\t\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\r\n\t\t\t\t\tconst group = renderItem.group;\r\n\t\t\t\t\trenderObject(object, scene, camera, geometry, material, group);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction renderObject(object, scene, camera, geometry, material, group) {\r\n\t\t\tobject.onBeforeRender(_this, scene, camera, geometry, material, group);\r\n\t\t\tobject.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, object.matrixWorld);\r\n\t\t\tobject.normalMatrix.getNormalMatrix(object.modelViewMatrix);\r\n\r\n\t\t\tif (object.isImmediateRenderObject) {\r\n\t\t\t\tconst program = setProgram(camera, scene, material, object);\r\n\t\t\t\tstate.setMaterial(material);\r\n\t\t\t\tbindingStates.reset();\r\n\t\t\t\trenderObjectImmediate(object, program);\r\n\t\t\t} else {\r\n\t\t\t\tif (material.transparent === true && material.side === DoubleSide) {\r\n\t\t\t\t\tmaterial.side = BackSide;\r\n\t\t\t\t\tmaterial.needsUpdate = true;\r\n\r\n\t\t\t\t\t_this.renderBufferDirect(camera, scene, geometry, material, object, group);\r\n\r\n\t\t\t\t\tmaterial.side = FrontSide;\r\n\t\t\t\t\tmaterial.needsUpdate = true;\r\n\r\n\t\t\t\t\t_this.renderBufferDirect(camera, scene, geometry, material, object, group);\r\n\r\n\t\t\t\t\tmaterial.side = DoubleSide;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t_this.renderBufferDirect(camera, scene, geometry, material, object, group);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tobject.onAfterRender(_this, scene, camera, geometry, material, group);\r\n\t\t}\r\n\r\n\t\tfunction getProgram(material, scene, object) {\r\n\t\t\tif (scene.isScene !== true) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\r\n\r\n\t\t\tconst materialProperties = properties.get(material);\r\n\t\t\tconst lights = currentRenderState.state.lights;\r\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\r\n\t\t\tconst lightsStateVersion = lights.state.version;\r\n\t\t\tconst parameters = programCache.getParameters(material, lights.state, shadowsArray, scene, object);\r\n\t\t\tconst programCacheKey = programCache.getProgramCacheKey(parameters);\r\n\t\t\tlet programs = materialProperties.programs; // always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\r\n\r\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\r\n\t\t\tmaterialProperties.fog = scene.fog;\r\n\t\t\tmaterialProperties.envMap = (material.isMeshStandardMaterial ? cubeuvmaps : cubemaps).get(material.envMap || materialProperties.environment);\r\n\r\n\t\t\tif (programs === undefined) {\r\n\t\t\t\t// new material\r\n\t\t\t\tmaterial.addEventListener('dispose', onMaterialDispose);\r\n\t\t\t\tprograms = new Map();\r\n\t\t\t\tmaterialProperties.programs = programs;\r\n\t\t\t}\r\n\r\n\t\t\tlet program = programs.get(programCacheKey);\r\n\r\n\t\t\tif (program !== undefined) {\r\n\t\t\t\t// early out if program and light state is identical\r\n\t\t\t\tif (materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion) {\r\n\t\t\t\t\tupdateCommonMaterialProperties(material, parameters);\r\n\t\t\t\t\treturn program;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tparameters.uniforms = programCache.getUniforms(material);\r\n\t\t\t\tmaterial.onBuild(parameters, _this);\r\n\t\t\t\tmaterial.onBeforeCompile(parameters, _this);\r\n\t\t\t\tprogram = programCache.acquireProgram(parameters, programCacheKey);\r\n\t\t\t\tprograms.set(programCacheKey, program);\r\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\r\n\t\t\t}\r\n\r\n\t\t\tconst uniforms = materialProperties.uniforms;\r\n\r\n\t\t\tif (!material.isShaderMaterial && !material.isRawShaderMaterial || material.clipping === true) {\r\n\t\t\t\tuniforms.clippingPlanes = clipping.uniform;\r\n\t\t\t}\r\n\r\n\t\t\tupdateCommonMaterialProperties(material, parameters); // store the light setup it was created for\r\n\r\n\t\t\tmaterialProperties.needsLights = materialNeedsLights(material);\r\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\r\n\r\n\t\t\tif (materialProperties.needsLights) {\r\n\t\t\t\t// wire up the material to this renderer's lighting state\r\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\r\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\r\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\r\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\r\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\r\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\r\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\r\n\t\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\r\n\t\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\r\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\r\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\r\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\r\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\r\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\r\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\r\n\t\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\r\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\r\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix; // TODO (abelnation): add area lights shadow info to uniforms\r\n\t\t\t}\r\n\r\n\t\t\tconst progUniforms = program.getUniforms();\r\n\t\t\tconst uniformsList = WebGLUniforms.seqWithValue(progUniforms.seq, uniforms);\r\n\t\t\tmaterialProperties.currentProgram = program;\r\n\t\t\tmaterialProperties.uniformsList = uniformsList;\r\n\t\t\treturn program;\r\n\t\t}\r\n\r\n\t\tfunction updateCommonMaterialProperties(material, parameters) {\r\n\t\t\tconst materialProperties = properties.get(material);\r\n\t\t\tmaterialProperties.outputEncoding = parameters.outputEncoding;\r\n\t\t\tmaterialProperties.instancing = parameters.instancing;\r\n\t\t\tmaterialProperties.skinning = parameters.skinning;\r\n\t\t\tmaterialProperties.morphTargets = parameters.morphTargets;\r\n\t\t\tmaterialProperties.morphNormals = parameters.morphNormals;\r\n\t\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\r\n\t\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\r\n\t\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\r\n\t\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\r\n\t\t}\r\n\r\n\t\tfunction setProgram(camera, scene, material, object) {\r\n\t\t\tif (scene.isScene !== true) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\r\n\r\n\t\t\ttextures.resetTextureUnits();\r\n\t\t\tconst fog = scene.fog;\r\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\r\n\t\t\tconst encoding = _currentRenderTarget === null ? _this.outputEncoding : _currentRenderTarget.texture.encoding;\r\n\t\t\tconst envMap = (material.isMeshStandardMaterial ? cubeuvmaps : cubemaps).get(material.envMap || environment);\r\n\t\t\tconst vertexAlphas = material.vertexColors === true && !!object.geometry && !!object.geometry.attributes.color && object.geometry.attributes.color.itemSize === 4;\r\n\t\t\tconst vertexTangents = !!object.geometry && !!object.geometry.attributes.tangent;\r\n\t\t\tconst morphTargets = !!object.geometry && !!object.geometry.morphAttributes.position;\r\n\t\t\tconst morphNormals = !!object.geometry && !!object.geometry.morphAttributes.normal;\r\n\t\t\tconst materialProperties = properties.get(material);\r\n\t\t\tconst lights = currentRenderState.state.lights;\r\n\r\n\t\t\tif (_clippingEnabled === true) {\r\n\t\t\t\tif (_localClippingEnabled === true || camera !== _currentCamera) {\r\n\t\t\t\t\tconst useCache = camera === _currentCamera && material.id === _currentMaterialId; // we might want to call this function with some ClippingGroup\r\n\t\t\t\t\t// object instead of the material, once it becomes feasible\r\n\t\t\t\t\t// (#8465, #8379)\r\n\r\n\t\t\t\t\tclipping.setState(material, camera, useCache);\r\n\t\t\t\t}\r\n\t\t\t} //\r\n\r\n\r\n\t\t\tlet needsProgramChange = false;\r\n\r\n\t\t\tif (material.version === materialProperties.__version) {\r\n\t\t\t\tif (materialProperties.needsLights && materialProperties.lightsStateVersion !== lights.state.version) {\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\t\t\t\t} else if (materialProperties.outputEncoding !== encoding) {\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\t\t\t\t} else if (object.isInstancedMesh && materialProperties.instancing === false) {\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\t\t\t\t} else if (!object.isInstancedMesh && materialProperties.instancing === true) {\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\t\t\t\t} else if (object.isSkinnedMesh && materialProperties.skinning === false) {\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\t\t\t\t} else if (!object.isSkinnedMesh && materialProperties.skinning === true) {\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\t\t\t\t} else if (materialProperties.envMap !== envMap) {\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\t\t\t\t} else if (material.fog && materialProperties.fog !== fog) {\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\t\t\t\t} else if (materialProperties.numClippingPlanes !== undefined && (materialProperties.numClippingPlanes !== clipping.numPlanes || materialProperties.numIntersection !== clipping.numIntersection)) {\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\t\t\t\t} else if (materialProperties.vertexAlphas !== vertexAlphas) {\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\t\t\t\t} else if (materialProperties.vertexTangents !== vertexTangents) {\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\t\t\t\t} else if (materialProperties.morphTargets !== morphTargets) {\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\t\t\t\t} else if (materialProperties.morphNormals !== morphNormals) {\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tneedsProgramChange = true;\r\n\t\t\t\tmaterialProperties.__version = material.version;\r\n\t\t\t} //\r\n\r\n\r\n\t\t\tlet program = materialProperties.currentProgram;\r\n\r\n\t\t\tif (needsProgramChange === true) {\r\n\t\t\t\tprogram = getProgram(material, scene, object);\r\n\t\t\t}\r\n\r\n\t\t\tlet refreshProgram = false;\r\n\t\t\tlet refreshMaterial = false;\r\n\t\t\tlet refreshLights = false;\r\n\t\t\tconst p_uniforms = program.getUniforms(),\r\n\t\t\t\t\t\tm_uniforms = materialProperties.uniforms;\r\n\r\n\t\t\tif (state.useProgram(program.program)) {\r\n\t\t\t\trefreshProgram = true;\r\n\t\t\t\trefreshMaterial = true;\r\n\t\t\t\trefreshLights = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.id !== _currentMaterialId) {\r\n\t\t\t\t_currentMaterialId = material.id;\r\n\t\t\t\trefreshMaterial = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (refreshProgram || _currentCamera !== camera) {\r\n\t\t\t\tp_uniforms.setValue(_gl, 'projectionMatrix', camera.projectionMatrix);\r\n\r\n\t\t\t\tif (capabilities.logarithmicDepthBuffer) {\r\n\t\t\t\t\tp_uniforms.setValue(_gl, 'logDepthBufFC', 2.0 / (Math.log(camera.far + 1.0) / Math.LN2));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (_currentCamera !== camera) {\r\n\t\t\t\t\t_currentCamera = camera; // lighting uniforms depend on the camera so enforce an update\r\n\t\t\t\t\t// now, in case this material supports lights - or later, when\r\n\t\t\t\t\t// the next material that does gets activated:\r\n\r\n\t\t\t\t\trefreshMaterial = true; // set to true on material change\r\n\r\n\t\t\t\t\trefreshLights = true; // remains set until update done\r\n\t\t\t\t} // load material specific uniforms\r\n\t\t\t\t// (shader material also gets them for the sake of genericity)\r\n\r\n\r\n\t\t\t\tif (material.isShaderMaterial || material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshStandardMaterial || material.envMap) {\r\n\t\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\r\n\r\n\t\t\t\t\tif (uCamPos !== undefined) {\r\n\t\t\t\t\t\tuCamPos.setValue(_gl, _vector3.setFromMatrixPosition(camera.matrixWorld));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshLambertMaterial || material.isMeshBasicMaterial || material.isMeshStandardMaterial || material.isShaderMaterial) {\r\n\t\t\t\t\tp_uniforms.setValue(_gl, 'isOrthographic', camera.isOrthographicCamera === true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshLambertMaterial || material.isMeshBasicMaterial || material.isMeshStandardMaterial || material.isShaderMaterial || material.isShadowMaterial || object.isSkinnedMesh) {\r\n\t\t\t\t\tp_uniforms.setValue(_gl, 'viewMatrix', camera.matrixWorldInverse);\r\n\t\t\t\t}\r\n\t\t\t} // skinning uniforms must be set even if material didn't change\r\n\t\t\t// auto-setting of texture unit for bone texture must go before other textures\r\n\t\t\t// otherwise textures used for skinning can take over texture units reserved for other material textures\r\n\r\n\r\n\t\t\tif (object.isSkinnedMesh) {\r\n\t\t\t\tp_uniforms.setOptional(_gl, object, 'bindMatrix');\r\n\t\t\t\tp_uniforms.setOptional(_gl, object, 'bindMatrixInverse');\r\n\t\t\t\tconst skeleton = object.skeleton;\r\n\r\n\t\t\t\tif (skeleton) {\r\n\t\t\t\t\tif (capabilities.floatVertexTextures) {\r\n\t\t\t\t\t\tif (skeleton.boneTexture === null) skeleton.computeBoneTexture();\r\n\t\t\t\t\t\tp_uniforms.setValue(_gl, 'boneTexture', skeleton.boneTexture, textures);\r\n\t\t\t\t\t\tp_uniforms.setValue(_gl, 'boneTextureSize', skeleton.boneTextureSize);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tp_uniforms.setOptional(_gl, skeleton, 'boneMatrices');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow) {\r\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\r\n\t\t\t\tp_uniforms.setValue(_gl, 'receiveShadow', object.receiveShadow);\r\n\t\t\t}\r\n\r\n\t\t\tif (refreshMaterial) {\r\n\t\t\t\tp_uniforms.setValue(_gl, 'toneMappingExposure', _this.toneMappingExposure);\r\n\r\n\t\t\t\tif (materialProperties.needsLights) {\r\n\t\t\t\t\t// the current material requires lighting info\r\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\r\n\t\t\t\t\t// they simply reference the renderer's state for their\r\n\t\t\t\t\t// values\r\n\t\t\t\t\t//\r\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\r\n\t\t\t\t\t// the GL state when required\r\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate(m_uniforms, refreshLights);\r\n\t\t\t\t} // refresh uniforms common to several materials\r\n\r\n\r\n\t\t\t\tif (fog && material.fog) {\r\n\t\t\t\t\tmaterials.refreshFogUniforms(m_uniforms, fog);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmaterials.refreshMaterialUniforms(m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget);\r\n\t\t\t\tWebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, textures);\r\n\t\t\t}\r\n\r\n\t\t\tif (material.isShaderMaterial && material.uniformsNeedUpdate === true) {\r\n\t\t\t\tWebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, textures);\r\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (material.isSpriteMaterial) {\r\n\t\t\t\tp_uniforms.setValue(_gl, 'center', object.center);\r\n\t\t\t} // common matrices\r\n\r\n\r\n\t\t\tp_uniforms.setValue(_gl, 'modelViewMatrix', object.modelViewMatrix);\r\n\t\t\tp_uniforms.setValue(_gl, 'normalMatrix', object.normalMatrix);\r\n\t\t\tp_uniforms.setValue(_gl, 'modelMatrix', object.matrixWorld);\r\n\t\t\treturn program;\r\n\t\t} // If uniforms are marked as clean, they don't need to be loaded to the GPU.\r\n\r\n\r\n\t\tfunction markUniformsLightsNeedsUpdate(uniforms, value) {\r\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\r\n\t\t\tuniforms.lightProbe.needsUpdate = value;\r\n\t\t\tuniforms.directionalLights.needsUpdate = value;\r\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\r\n\t\t\tuniforms.pointLights.needsUpdate = value;\r\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\r\n\t\t\tuniforms.spotLights.needsUpdate = value;\r\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\r\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\r\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\r\n\t\t}\r\n\r\n\t\tfunction materialNeedsLights(material) {\r\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial || material.isMeshStandardMaterial || material.isShadowMaterial || material.isShaderMaterial && material.lights === true;\r\n\t\t}\r\n\r\n\t\tthis.getActiveCubeFace = function () {\r\n\t\t\treturn _currentActiveCubeFace;\r\n\t\t};\r\n\r\n\t\tthis.getActiveMipmapLevel = function () {\r\n\t\t\treturn _currentActiveMipmapLevel;\r\n\t\t};\r\n\r\n\t\tthis.getRenderTarget = function () {\r\n\t\t\treturn _currentRenderTarget;\r\n\t\t};\r\n\r\n\t\tthis.setRenderTarget = function (renderTarget, activeCubeFace = 0, activeMipmapLevel = 0) {\r\n\t\t\t_currentRenderTarget = renderTarget;\r\n\t\t\t_currentActiveCubeFace = activeCubeFace;\r\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\r\n\r\n\t\t\tif (renderTarget && properties.get(renderTarget).__webglFramebuffer === undefined) {\r\n\t\t\t\ttextures.setupRenderTarget(renderTarget);\r\n\t\t\t}\r\n\r\n\t\t\tlet framebuffer = null;\r\n\t\t\tlet isCube = false;\r\n\t\t\tlet isRenderTarget3D = false;\r\n\r\n\t\t\tif (renderTarget) {\r\n\t\t\t\tconst texture = renderTarget.texture;\r\n\r\n\t\t\t\tif (texture.isDataTexture3D || texture.isDataTexture2DArray) {\r\n\t\t\t\t\tisRenderTarget3D = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst __webglFramebuffer = properties.get(renderTarget).__webglFramebuffer;\r\n\r\n\t\t\t\tif (renderTarget.isWebGLCubeRenderTarget) {\r\n\t\t\t\t\tframebuffer = __webglFramebuffer[activeCubeFace];\r\n\t\t\t\t\tisCube = true;\r\n\t\t\t\t} else if (renderTarget.isWebGLMultisampleRenderTarget) {\r\n\t\t\t\t\tframebuffer = properties.get(renderTarget).__webglMultisampledFramebuffer;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tframebuffer = __webglFramebuffer;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_currentViewport.copy(renderTarget.viewport);\r\n\r\n\t\t\t\t_currentScissor.copy(renderTarget.scissor);\r\n\r\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\r\n\t\t\t} else {\r\n\t\t\t\t_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor();\r\n\r\n\t\t\t\t_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor();\r\n\r\n\t\t\t\t_currentScissorTest = _scissorTest;\r\n\t\t\t}\r\n\r\n\t\t\tconst framebufferBound = state.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\r\n\r\n\t\t\tif (framebufferBound && capabilities.drawBuffers) {\r\n\t\t\t\tlet needsUpdate = false;\r\n\r\n\t\t\t\tif (renderTarget) {\r\n\t\t\t\t\tif (renderTarget.isWebGLMultipleRenderTargets) {\r\n\t\t\t\t\t\tconst textures = renderTarget.texture;\r\n\r\n\t\t\t\t\t\tif (_currentDrawBuffers.length !== textures.length || _currentDrawBuffers[0] !== _gl.COLOR_ATTACHMENT0) {\r\n\t\t\t\t\t\t\tfor (let i = 0, il = textures.length; i < il; i++) {\r\n\t\t\t\t\t\t\t\t_currentDrawBuffers[i] = _gl.COLOR_ATTACHMENT0 + i;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t_currentDrawBuffers.length = textures.length;\r\n\t\t\t\t\t\t\tneedsUpdate = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (_currentDrawBuffers.length !== 1 || _currentDrawBuffers[0] !== _gl.COLOR_ATTACHMENT0) {\r\n\t\t\t\t\t\t\t_currentDrawBuffers[0] = _gl.COLOR_ATTACHMENT0;\r\n\t\t\t\t\t\t\t_currentDrawBuffers.length = 1;\r\n\t\t\t\t\t\t\tneedsUpdate = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (_currentDrawBuffers.length !== 1 || _currentDrawBuffers[0] !== _gl.BACK) {\r\n\t\t\t\t\t\t_currentDrawBuffers[0] = _gl.BACK;\r\n\t\t\t\t\t\t_currentDrawBuffers.length = 1;\r\n\t\t\t\t\t\tneedsUpdate = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (needsUpdate) {\r\n\t\t\t\t\tif (capabilities.isWebGL2) {\r\n\t\t\t\t\t\t_gl.drawBuffers(_currentDrawBuffers);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\textensions.get('WEBGL_draw_buffers').drawBuffersWEBGL(_currentDrawBuffers);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tstate.viewport(_currentViewport);\r\n\t\t\tstate.scissor(_currentScissor);\r\n\t\t\tstate.setScissorTest(_currentScissorTest);\r\n\r\n\t\t\tif (isCube) {\r\n\t\t\t\tconst textureProperties = properties.get(renderTarget.texture);\r\n\r\n\t\t\t\t_gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel);\r\n\t\t\t} else if (isRenderTarget3D) {\r\n\t\t\t\tconst textureProperties = properties.get(renderTarget.texture);\r\n\t\t\t\tconst layer = activeCubeFace || 0;\r\n\r\n\t\t\t\t_gl.framebufferTextureLayer(_gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel || 0, layer);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.readRenderTargetPixels = function (renderTarget, x, y, width, height, buffer, activeCubeFaceIndex) {\r\n\t\t\tif (!(renderTarget && renderTarget.isWebGLRenderTarget)) {\r\n\t\t\t\tconsole.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet framebuffer = properties.get(renderTarget).__webglFramebuffer;\r\n\r\n\t\t\tif (renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined) {\r\n\t\t\t\tframebuffer = framebuffer[activeCubeFaceIndex];\r\n\t\t\t}\r\n\r\n\t\t\tif (framebuffer) {\r\n\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst texture = renderTarget.texture;\r\n\t\t\t\t\tconst textureFormat = texture.format;\r\n\t\t\t\t\tconst textureType = texture.type;\r\n\r\n\t\t\t\t\tif (textureFormat !== RGBAFormat && utils.convert(textureFormat) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_FORMAT)) {\r\n\t\t\t\t\t\tconsole.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst halfFloatSupportedByExt = textureType === HalfFloatType && (extensions.has('EXT_color_buffer_half_float') || capabilities.isWebGL2 && extensions.has('EXT_color_buffer_float'));\r\n\r\n\t\t\t\t\tif (textureType !== UnsignedByteType && utils.convert(textureType) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_TYPE) && // Edge and Chrome Mac < 52 (#9513)\r\n\t\t\t\t\t!(textureType === FloatType && (capabilities.isWebGL2 || extensions.has('OES_texture_float') || extensions.has('WEBGL_color_buffer_float'))) && // Chrome Mac >= 52 and Firefox\r\n\t\t\t\t\t!halfFloatSupportedByExt) {\r\n\t\t\t\t\t\tconsole.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (_gl.checkFramebufferStatus(_gl.FRAMEBUFFER) === _gl.FRAMEBUFFER_COMPLETE) {\r\n\t\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\r\n\t\t\t\t\t\tif (x >= 0 && x <= renderTarget.width - width && y >= 0 && y <= renderTarget.height - height) {\r\n\t\t\t\t\t\t\t_gl.readPixels(x, y, width, height, utils.convert(textureFormat), utils.convert(textureType), buffer);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.error('THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.');\r\n\t\t\t\t\t}\r\n\t\t\t\t} finally {\r\n\t\t\t\t\t// restore framebuffer of current render target if necessary\r\n\t\t\t\t\tconst framebuffer = _currentRenderTarget !== null ? properties.get(_currentRenderTarget).__webglFramebuffer : null;\r\n\t\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.copyFramebufferToTexture = function (position, texture, level = 0) {\r\n\t\t\tconst levelScale = Math.pow(2, -level);\r\n\t\t\tconst width = Math.floor(texture.image.width * levelScale);\r\n\t\t\tconst height = Math.floor(texture.image.height * levelScale);\r\n\t\t\tlet glFormat = utils.convert(texture.format);\r\n\r\n\t\t\tif (capabilities.isWebGL2) {\r\n\t\t\t\t// Workaround for https://bugs.chromium.org/p/chromium/issues/detail?id=1120100\r\n\t\t\t\t// Not needed in Chrome 93+\r\n\t\t\t\tif (glFormat === _gl.RGB) glFormat = _gl.RGB8;\r\n\t\t\t\tif (glFormat === _gl.RGBA) glFormat = _gl.RGBA8;\r\n\t\t\t}\r\n\r\n\t\t\ttextures.setTexture2D(texture, 0);\r\n\r\n\t\t\t_gl.copyTexImage2D(_gl.TEXTURE_2D, level, glFormat, position.x, position.y, width, height, 0);\r\n\r\n\t\t\tstate.unbindTexture();\r\n\t\t};\r\n\r\n\t\tthis.copyTextureToTexture = function (position, srcTexture, dstTexture, level = 0) {\r\n\t\t\tconst width = srcTexture.image.width;\r\n\t\t\tconst height = srcTexture.image.height;\r\n\t\t\tconst glFormat = utils.convert(dstTexture.format);\r\n\t\t\tconst glType = utils.convert(dstTexture.type);\r\n\t\t\ttextures.setTexture2D(dstTexture, 0); // As another texture upload may have changed pixelStorei\r\n\t\t\t// parameters, make sure they are correct for the dstTexture\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY);\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha);\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment);\r\n\r\n\t\t\tif (srcTexture.isDataTexture) {\r\n\t\t\t\t_gl.texSubImage2D(_gl.TEXTURE_2D, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data);\r\n\t\t\t} else {\r\n\t\t\t\tif (srcTexture.isCompressedTexture) {\r\n\t\t\t\t\t_gl.compressedTexSubImage2D(_gl.TEXTURE_2D, level, position.x, position.y, srcTexture.mipmaps[0].width, srcTexture.mipmaps[0].height, glFormat, srcTexture.mipmaps[0].data);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t_gl.texSubImage2D(_gl.TEXTURE_2D, level, position.x, position.y, glFormat, glType, srcTexture.image);\r\n\t\t\t\t}\r\n\t\t\t} // Generate mipmaps only when copying level 0\r\n\r\n\r\n\t\t\tif (level === 0 && dstTexture.generateMipmaps) _gl.generateMipmap(_gl.TEXTURE_2D);\r\n\t\t\tstate.unbindTexture();\r\n\t\t};\r\n\r\n\t\tthis.copyTextureToTexture3D = function (sourceBox, position, srcTexture, dstTexture, level = 0) {\r\n\t\t\tif (_this.isWebGL1Renderer) {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst width = sourceBox.max.x - sourceBox.min.x + 1;\r\n\t\t\tconst height = sourceBox.max.y - sourceBox.min.y + 1;\r\n\t\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\r\n\t\t\tconst glFormat = utils.convert(dstTexture.format);\r\n\t\t\tconst glType = utils.convert(dstTexture.type);\r\n\t\t\tlet glTarget;\r\n\r\n\t\t\tif (dstTexture.isDataTexture3D) {\r\n\t\t\t\ttextures.setTexture3D(dstTexture, 0);\r\n\t\t\t\tglTarget = _gl.TEXTURE_3D;\r\n\t\t\t} else if (dstTexture.isDataTexture2DArray) {\r\n\t\t\t\ttextures.setTexture2DArray(dstTexture, 0);\r\n\t\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\r\n\t\t\t} else {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY);\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha);\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment);\r\n\r\n\t\t\tconst unpackRowLen = _gl.getParameter(_gl.UNPACK_ROW_LENGTH);\r\n\r\n\t\t\tconst unpackImageHeight = _gl.getParameter(_gl.UNPACK_IMAGE_HEIGHT);\r\n\r\n\t\t\tconst unpackSkipPixels = _gl.getParameter(_gl.UNPACK_SKIP_PIXELS);\r\n\r\n\t\t\tconst unpackSkipRows = _gl.getParameter(_gl.UNPACK_SKIP_ROWS);\r\n\r\n\t\t\tconst unpackSkipImages = _gl.getParameter(_gl.UNPACK_SKIP_IMAGES);\r\n\r\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[0] : srcTexture.image;\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ROW_LENGTH, image.width);\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_IMAGE_HEIGHT, image.height);\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_PIXELS, sourceBox.min.x);\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_ROWS, sourceBox.min.y);\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_IMAGES, sourceBox.min.z);\r\n\r\n\t\t\tif (srcTexture.isDataTexture || srcTexture.isDataTexture3D) {\r\n\t\t\t\t_gl.texSubImage3D(glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data);\r\n\t\t\t} else {\r\n\t\t\t\tif (srcTexture.isCompressedTexture) {\r\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.');\r\n\r\n\t\t\t\t\t_gl.compressedTexSubImage3D(glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t_gl.texSubImage3D(glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ROW_LENGTH, unpackRowLen);\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_IMAGE_HEIGHT, unpackImageHeight);\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_PIXELS, unpackSkipPixels);\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_ROWS, unpackSkipRows);\r\n\r\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_IMAGES, unpackSkipImages); // Generate mipmaps only when copying level 0\r\n\r\n\r\n\t\t\tif (level === 0 && dstTexture.generateMipmaps) _gl.generateMipmap(glTarget);\r\n\t\t\tstate.unbindTexture();\r\n\t\t};\r\n\r\n\t\tthis.initTexture = function (texture) {\r\n\t\t\ttextures.setTexture2D(texture, 0);\r\n\t\t\tstate.unbindTexture();\r\n\t\t};\r\n\r\n\t\tthis.resetState = function () {\r\n\t\t\t_currentActiveCubeFace = 0;\r\n\t\t\t_currentActiveMipmapLevel = 0;\r\n\t\t\t_currentRenderTarget = null;\r\n\t\t\tstate.reset();\r\n\t\t\tbindingStates.reset();\r\n\t\t};\r\n\r\n\t\tif (typeof __THREE_DEVTOOLS__ !== 'undefined') {\r\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe', {\r\n\t\t\t\tdetail: this\r\n\t\t\t})); // eslint-disable-line no-undef\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tclass WebGL1Renderer extends WebGLRenderer {}\r\n\r\n\tWebGL1Renderer.prototype.isWebGL1Renderer = true;\r\n\r\n\tclass FogExp2 {\r\n\t\tconstructor(color, density = 0.00025) {\r\n\t\t\tthis.name = '';\r\n\t\t\tthis.color = new Color(color);\r\n\t\t\tthis.density = density;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new FogExp2(this.color, this.density);\r\n\t\t}\r\n\r\n\t\ttoJSON()\r\n\t\t/* meta */\r\n\t\t{\r\n\t\t\treturn {\r\n\t\t\t\ttype: 'FogExp2',\r\n\t\t\t\tcolor: this.color.getHex(),\r\n\t\t\t\tdensity: this.density\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tFogExp2.prototype.isFogExp2 = true;\r\n\r\n\tclass Fog {\r\n\t\tconstructor(color, near = 1, far = 1000) {\r\n\t\t\tthis.name = '';\r\n\t\t\tthis.color = new Color(color);\r\n\t\t\tthis.near = near;\r\n\t\t\tthis.far = far;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new Fog(this.color, this.near, this.far);\r\n\t\t}\r\n\r\n\t\ttoJSON()\r\n\t\t/* meta */\r\n\t\t{\r\n\t\t\treturn {\r\n\t\t\t\ttype: 'Fog',\r\n\t\t\t\tcolor: this.color.getHex(),\r\n\t\t\t\tnear: this.near,\r\n\t\t\t\tfar: this.far\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tFog.prototype.isFog = true;\r\n\r\n\tclass Scene extends Object3D {\r\n\t\tconstructor() {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'Scene';\r\n\t\t\tthis.background = null;\r\n\t\t\tthis.environment = null;\r\n\t\t\tthis.fog = null;\r\n\t\t\tthis.overrideMaterial = null;\r\n\t\t\tthis.autoUpdate = true; // checked by the renderer\r\n\r\n\t\t\tif (typeof __THREE_DEVTOOLS__ !== 'undefined') {\r\n\t\t\t\t__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe', {\r\n\t\t\t\t\tdetail: this\r\n\t\t\t\t})); // eslint-disable-line no-undef\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcopy(source, recursive) {\r\n\t\t\tsuper.copy(source, recursive);\r\n\t\t\tif (source.background !== null) this.background = source.background.clone();\r\n\t\t\tif (source.environment !== null) this.environment = source.environment.clone();\r\n\t\t\tif (source.fog !== null) this.fog = source.fog.clone();\r\n\t\t\tif (source.overrideMaterial !== null) this.overrideMaterial = source.overrideMaterial.clone();\r\n\t\t\tthis.autoUpdate = source.autoUpdate;\r\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON(meta) {\r\n\t\t\tconst data = super.toJSON(meta);\r\n\t\t\tif (this.fog !== null) data.object.fog = this.fog.toJSON();\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tScene.prototype.isScene = true;\r\n\r\n\tclass InterleavedBuffer {\r\n\t\tconstructor(array, stride) {\r\n\t\t\tthis.array = array;\r\n\t\t\tthis.stride = stride;\r\n\t\t\tthis.count = array !== undefined ? array.length / stride : 0;\r\n\t\t\tthis.usage = StaticDrawUsage;\r\n\t\t\tthis.updateRange = {\r\n\t\t\t\toffset: 0,\r\n\t\t\t\tcount: -1\r\n\t\t\t};\r\n\t\t\tthis.version = 0;\r\n\t\t\tthis.uuid = generateUUID();\r\n\t\t}\r\n\r\n\t\tonUploadCallback() {}\r\n\r\n\t\tset needsUpdate(value) {\r\n\t\t\tif (value === true) this.version++;\r\n\t\t}\r\n\r\n\t\tsetUsage(value) {\r\n\t\t\tthis.usage = value;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tthis.array = new source.array.constructor(source.array);\r\n\t\t\tthis.count = source.count;\r\n\t\t\tthis.stride = source.stride;\r\n\t\t\tthis.usage = source.usage;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopyAt(index1, attribute, index2) {\r\n\t\t\tindex1 *= this.stride;\r\n\t\t\tindex2 *= attribute.stride;\r\n\r\n\t\t\tfor (let i = 0, l = this.stride; i < l; i++) {\r\n\t\t\t\tthis.array[index1 + i] = attribute.array[index2 + i];\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tset(value, offset = 0) {\r\n\t\t\tthis.array.set(value, offset);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclone(data) {\r\n\t\t\tif (data.arrayBuffers === undefined) {\r\n\t\t\t\tdata.arrayBuffers = {};\r\n\t\t\t}\r\n\r\n\t\t\tif (this.array.buffer._uuid === undefined) {\r\n\t\t\t\tthis.array.buffer._uuid = generateUUID();\r\n\t\t\t}\r\n\r\n\t\t\tif (data.arrayBuffers[this.array.buffer._uuid] === undefined) {\r\n\t\t\t\tdata.arrayBuffers[this.array.buffer._uuid] = this.array.slice(0).buffer;\r\n\t\t\t}\r\n\r\n\t\t\tconst array = new this.array.constructor(data.arrayBuffers[this.array.buffer._uuid]);\r\n\t\t\tconst ib = new this.constructor(array, this.stride);\r\n\t\t\tib.setUsage(this.usage);\r\n\t\t\treturn ib;\r\n\t\t}\r\n\r\n\t\tonUpload(callback) {\r\n\t\t\tthis.onUploadCallback = callback;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON(data) {\r\n\t\t\tif (data.arrayBuffers === undefined) {\r\n\t\t\t\tdata.arrayBuffers = {};\r\n\t\t\t} // generate UUID for array buffer if necessary\r\n\r\n\r\n\t\t\tif (this.array.buffer._uuid === undefined) {\r\n\t\t\t\tthis.array.buffer._uuid = generateUUID();\r\n\t\t\t}\r\n\r\n\t\t\tif (data.arrayBuffers[this.array.buffer._uuid] === undefined) {\r\n\t\t\t\tdata.arrayBuffers[this.array.buffer._uuid] = Array.prototype.slice.call(new Uint32Array(this.array.buffer));\r\n\t\t\t} //\r\n\r\n\r\n\t\t\treturn {\r\n\t\t\t\tuuid: this.uuid,\r\n\t\t\t\tbuffer: this.array.buffer._uuid,\r\n\t\t\t\ttype: this.array.constructor.name,\r\n\t\t\t\tstride: this.stride\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tInterleavedBuffer.prototype.isInterleavedBuffer = true;\r\n\r\n\tconst _vector$6 = /*@__PURE__*/new Vector3();\r\n\r\n\tclass InterleavedBufferAttribute {\r\n\t\tconstructor(interleavedBuffer, itemSize, offset, normalized = false) {\r\n\t\t\tthis.name = '';\r\n\t\t\tthis.data = interleavedBuffer;\r\n\t\t\tthis.itemSize = itemSize;\r\n\t\t\tthis.offset = offset;\r\n\t\t\tthis.normalized = normalized === true;\r\n\t\t}\r\n\r\n\t\tget count() {\r\n\t\t\treturn this.data.count;\r\n\t\t}\r\n\r\n\t\tget array() {\r\n\t\t\treturn this.data.array;\r\n\t\t}\r\n\r\n\t\tset needsUpdate(value) {\r\n\t\t\tthis.data.needsUpdate = value;\r\n\t\t}\r\n\r\n\t\tapplyMatrix4(m) {\r\n\t\t\tfor (let i = 0, l = this.data.count; i < l; i++) {\r\n\t\t\t\t_vector$6.x = this.getX(i);\r\n\t\t\t\t_vector$6.y = this.getY(i);\r\n\t\t\t\t_vector$6.z = this.getZ(i);\r\n\r\n\t\t\t\t_vector$6.applyMatrix4(m);\r\n\r\n\t\t\t\tthis.setXYZ(i, _vector$6.x, _vector$6.y, _vector$6.z);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tapplyNormalMatrix(m) {\r\n\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\r\n\t\t\t\t_vector$6.x = this.getX(i);\r\n\t\t\t\t_vector$6.y = this.getY(i);\r\n\t\t\t\t_vector$6.z = this.getZ(i);\r\n\r\n\t\t\t\t_vector$6.applyNormalMatrix(m);\r\n\r\n\t\t\t\tthis.setXYZ(i, _vector$6.x, _vector$6.y, _vector$6.z);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttransformDirection(m) {\r\n\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\r\n\t\t\t\t_vector$6.x = this.getX(i);\r\n\t\t\t\t_vector$6.y = this.getY(i);\r\n\t\t\t\t_vector$6.z = this.getZ(i);\r\n\r\n\t\t\t\t_vector$6.transformDirection(m);\r\n\r\n\t\t\t\tthis.setXYZ(i, _vector$6.x, _vector$6.y, _vector$6.z);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetX(index, x) {\r\n\t\t\tthis.data.array[index * this.data.stride + this.offset] = x;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetY(index, y) {\r\n\t\t\tthis.data.array[index * this.data.stride + this.offset + 1] = y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetZ(index, z) {\r\n\t\t\tthis.data.array[index * this.data.stride + this.offset + 2] = z;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetW(index, w) {\r\n\t\t\tthis.data.array[index * this.data.stride + this.offset + 3] = w;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetX(index) {\r\n\t\t\treturn this.data.array[index * this.data.stride + this.offset];\r\n\t\t}\r\n\r\n\t\tgetY(index) {\r\n\t\t\treturn this.data.array[index * this.data.stride + this.offset + 1];\r\n\t\t}\r\n\r\n\t\tgetZ(index) {\r\n\t\t\treturn this.data.array[index * this.data.stride + this.offset + 2];\r\n\t\t}\r\n\r\n\t\tgetW(index) {\r\n\t\t\treturn this.data.array[index * this.data.stride + this.offset + 3];\r\n\t\t}\r\n\r\n\t\tsetXY(index, x, y) {\r\n\t\t\tindex = index * this.data.stride + this.offset;\r\n\t\t\tthis.data.array[index + 0] = x;\r\n\t\t\tthis.data.array[index + 1] = y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetXYZ(index, x, y, z) {\r\n\t\t\tindex = index * this.data.stride + this.offset;\r\n\t\t\tthis.data.array[index + 0] = x;\r\n\t\t\tthis.data.array[index + 1] = y;\r\n\t\t\tthis.data.array[index + 2] = z;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetXYZW(index, x, y, z, w) {\r\n\t\t\tindex = index * this.data.stride + this.offset;\r\n\t\t\tthis.data.array[index + 0] = x;\r\n\t\t\tthis.data.array[index + 1] = y;\r\n\t\t\tthis.data.array[index + 2] = z;\r\n\t\t\tthis.data.array[index + 3] = w;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclone(data) {\r\n\t\t\tif (data === undefined) {\r\n\t\t\t\tconsole.log('THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.');\r\n\t\t\t\tconst array = [];\r\n\r\n\t\t\t\tfor (let i = 0; i < this.count; i++) {\r\n\t\t\t\t\tconst index = i * this.data.stride + this.offset;\r\n\r\n\t\t\t\t\tfor (let j = 0; j < this.itemSize; j++) {\r\n\t\t\t\t\t\tarray.push(this.data.array[index + j]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn new BufferAttribute(new this.array.constructor(array), this.itemSize, this.normalized);\r\n\t\t\t} else {\r\n\t\t\t\tif (data.interleavedBuffers === undefined) {\r\n\t\t\t\t\tdata.interleavedBuffers = {};\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (data.interleavedBuffers[this.data.uuid] === undefined) {\r\n\t\t\t\t\tdata.interleavedBuffers[this.data.uuid] = this.data.clone(data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn new InterleavedBufferAttribute(data.interleavedBuffers[this.data.uuid], this.itemSize, this.offset, this.normalized);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttoJSON(data) {\r\n\t\t\tif (data === undefined) {\r\n\t\t\t\tconsole.log('THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.');\r\n\t\t\t\tconst array = [];\r\n\r\n\t\t\t\tfor (let i = 0; i < this.count; i++) {\r\n\t\t\t\t\tconst index = i * this.data.stride + this.offset;\r\n\r\n\t\t\t\t\tfor (let j = 0; j < this.itemSize; j++) {\r\n\t\t\t\t\t\tarray.push(this.data.array[index + j]);\r\n\t\t\t\t\t}\r\n\t\t\t\t} // deinterleave data and save it as an ordinary buffer attribute for now\r\n\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\titemSize: this.itemSize,\r\n\t\t\t\t\ttype: this.array.constructor.name,\r\n\t\t\t\t\tarray: array,\r\n\t\t\t\t\tnormalized: this.normalized\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\t// save as true interlaved attribtue\r\n\t\t\t\tif (data.interleavedBuffers === undefined) {\r\n\t\t\t\t\tdata.interleavedBuffers = {};\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (data.interleavedBuffers[this.data.uuid] === undefined) {\r\n\t\t\t\t\tdata.interleavedBuffers[this.data.uuid] = this.data.toJSON(data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tisInterleavedBufferAttribute: true,\r\n\t\t\t\t\titemSize: this.itemSize,\r\n\t\t\t\t\tdata: this.data.uuid,\r\n\t\t\t\t\toffset: this.offset,\r\n\t\t\t\t\tnormalized: this.normalized\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tInterleavedBufferAttribute.prototype.isInterleavedBufferAttribute = true;\r\n\r\n\t/**\r\n\t * parameters = {\r\n\t *\tcolor: <hex>,\r\n\t *\tmap: new THREE.Texture( <Image> ),\r\n\t *\talphaMap: new THREE.Texture( <Image> ),\r\n\t *\trotation: <float>,\r\n\t *\tsizeAttenuation: <bool>\r\n\t * }\r\n\t */\r\n\r\n\tclass SpriteMaterial extends Material {\r\n\t\tconstructor(parameters) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'SpriteMaterial';\r\n\t\t\tthis.color = new Color(0xffffff);\r\n\t\t\tthis.map = null;\r\n\t\t\tthis.alphaMap = null;\r\n\t\t\tthis.rotation = 0;\r\n\t\t\tthis.sizeAttenuation = true;\r\n\t\t\tthis.transparent = true;\r\n\t\t\tthis.setValues(parameters);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.color.copy(source.color);\r\n\t\t\tthis.map = source.map;\r\n\t\t\tthis.alphaMap = source.alphaMap;\r\n\t\t\tthis.rotation = source.rotation;\r\n\t\t\tthis.sizeAttenuation = source.sizeAttenuation;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tSpriteMaterial.prototype.isSpriteMaterial = true;\r\n\r\n\tlet _geometry;\r\n\r\n\tconst _intersectPoint = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _worldScale = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _mvPosition = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _alignedPosition = /*@__PURE__*/new Vector2();\r\n\r\n\tconst _rotatedPosition = /*@__PURE__*/new Vector2();\r\n\r\n\tconst _viewWorldMatrix = /*@__PURE__*/new Matrix4();\r\n\r\n\tconst _vA = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _vB = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _vC = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _uvA = /*@__PURE__*/new Vector2();\r\n\r\n\tconst _uvB = /*@__PURE__*/new Vector2();\r\n\r\n\tconst _uvC = /*@__PURE__*/new Vector2();\r\n\r\n\tclass Sprite extends Object3D {\r\n\t\tconstructor(material) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'Sprite';\r\n\r\n\t\t\tif (_geometry === undefined) {\r\n\t\t\t\t_geometry = new BufferGeometry();\r\n\t\t\t\tconst float32Array = new Float32Array([-0.5, -0.5, 0, 0, 0, 0.5, -0.5, 0, 1, 0, 0.5, 0.5, 0, 1, 1, -0.5, 0.5, 0, 0, 1]);\r\n\t\t\t\tconst interleavedBuffer = new InterleavedBuffer(float32Array, 5);\r\n\r\n\t\t\t\t_geometry.setIndex([0, 1, 2, 0, 2, 3]);\r\n\r\n\t\t\t\t_geometry.setAttribute('position', new InterleavedBufferAttribute(interleavedBuffer, 3, 0, false));\r\n\r\n\t\t\t\t_geometry.setAttribute('uv', new InterleavedBufferAttribute(interleavedBuffer, 2, 3, false));\r\n\t\t\t}\r\n\r\n\t\t\tthis.geometry = _geometry;\r\n\t\t\tthis.material = material !== undefined ? material : new SpriteMaterial();\r\n\t\t\tthis.center = new Vector2(0.5, 0.5);\r\n\t\t}\r\n\r\n\t\traycast(raycaster, intersects) {\r\n\t\t\tif (raycaster.camera === null) {\r\n\t\t\t\tconsole.error('THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.');\r\n\t\t\t}\r\n\r\n\t\t\t_worldScale.setFromMatrixScale(this.matrixWorld);\r\n\r\n\t\t\t_viewWorldMatrix.copy(raycaster.camera.matrixWorld);\r\n\r\n\t\t\tthis.modelViewMatrix.multiplyMatrices(raycaster.camera.matrixWorldInverse, this.matrixWorld);\r\n\r\n\t\t\t_mvPosition.setFromMatrixPosition(this.modelViewMatrix);\r\n\r\n\t\t\tif (raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false) {\r\n\t\t\t\t_worldScale.multiplyScalar(-_mvPosition.z);\r\n\t\t\t}\r\n\r\n\t\t\tconst rotation = this.material.rotation;\r\n\t\t\tlet sin, cos;\r\n\r\n\t\t\tif (rotation !== 0) {\r\n\t\t\t\tcos = Math.cos(rotation);\r\n\t\t\t\tsin = Math.sin(rotation);\r\n\t\t\t}\r\n\r\n\t\t\tconst center = this.center;\r\n\t\t\ttransformVertex(_vA.set(-0.5, -0.5, 0), _mvPosition, center, _worldScale, sin, cos);\r\n\t\t\ttransformVertex(_vB.set(0.5, -0.5, 0), _mvPosition, center, _worldScale, sin, cos);\r\n\t\t\ttransformVertex(_vC.set(0.5, 0.5, 0), _mvPosition, center, _worldScale, sin, cos);\r\n\r\n\t\t\t_uvA.set(0, 0);\r\n\r\n\t\t\t_uvB.set(1, 0);\r\n\r\n\t\t\t_uvC.set(1, 1); // check first triangle\r\n\r\n\r\n\t\t\tlet intersect = raycaster.ray.intersectTriangle(_vA, _vB, _vC, false, _intersectPoint);\r\n\r\n\t\t\tif (intersect === null) {\r\n\t\t\t\t// check second triangle\r\n\t\t\t\ttransformVertex(_vB.set(-0.5, 0.5, 0), _mvPosition, center, _worldScale, sin, cos);\r\n\r\n\t\t\t\t_uvB.set(0, 1);\r\n\r\n\t\t\t\tintersect = raycaster.ray.intersectTriangle(_vA, _vC, _vB, false, _intersectPoint);\r\n\r\n\t\t\t\tif (intersect === null) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst distance = raycaster.ray.origin.distanceTo(_intersectPoint);\r\n\t\t\tif (distance < raycaster.near || distance > raycaster.far) return;\r\n\t\t\tintersects.push({\r\n\t\t\t\tdistance: distance,\r\n\t\t\t\tpoint: _intersectPoint.clone(),\r\n\t\t\t\tuv: Triangle.getUV(_intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2()),\r\n\t\t\t\tface: null,\r\n\t\t\t\tobject: this\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tif (source.center !== undefined) this.center.copy(source.center);\r\n\t\t\tthis.material = source.material;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tSprite.prototype.isSprite = true;\r\n\r\n\tfunction transformVertex(vertexPosition, mvPosition, center, scale, sin, cos) {\r\n\t\t// compute position in camera space\r\n\t\t_alignedPosition.subVectors(vertexPosition, center).addScalar(0.5).multiply(scale); // to check if rotation is not zero\r\n\r\n\r\n\t\tif (sin !== undefined) {\r\n\t\t\t_rotatedPosition.x = cos * _alignedPosition.x - sin * _alignedPosition.y;\r\n\t\t\t_rotatedPosition.y = sin * _alignedPosition.x + cos * _alignedPosition.y;\r\n\t\t} else {\r\n\t\t\t_rotatedPosition.copy(_alignedPosition);\r\n\t\t}\r\n\r\n\t\tvertexPosition.copy(mvPosition);\r\n\t\tvertexPosition.x += _rotatedPosition.x;\r\n\t\tvertexPosition.y += _rotatedPosition.y; // transform to world space\r\n\r\n\t\tvertexPosition.applyMatrix4(_viewWorldMatrix);\r\n\t}\r\n\r\n\tconst _v1$2 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _v2$1 = /*@__PURE__*/new Vector3();\r\n\r\n\tclass LOD extends Object3D {\r\n\t\tconstructor() {\r\n\t\t\tsuper();\r\n\t\t\tthis._currentLevel = 0;\r\n\t\t\tthis.type = 'LOD';\r\n\t\t\tObject.defineProperties(this, {\r\n\t\t\t\tlevels: {\r\n\t\t\t\t\tenumerable: true,\r\n\t\t\t\t\tvalue: []\r\n\t\t\t\t},\r\n\t\t\t\tisLOD: {\r\n\t\t\t\t\tvalue: true\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.autoUpdate = true;\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source, false);\r\n\t\t\tconst levels = source.levels;\r\n\r\n\t\t\tfor (let i = 0, l = levels.length; i < l; i++) {\r\n\t\t\t\tconst level = levels[i];\r\n\t\t\t\tthis.addLevel(level.object.clone(), level.distance);\r\n\t\t\t}\r\n\r\n\t\t\tthis.autoUpdate = source.autoUpdate;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\taddLevel(object, distance = 0) {\r\n\t\t\tdistance = Math.abs(distance);\r\n\t\t\tconst levels = this.levels;\r\n\t\t\tlet l;\r\n\r\n\t\t\tfor (l = 0; l < levels.length; l++) {\r\n\t\t\t\tif (distance < levels[l].distance) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlevels.splice(l, 0, {\r\n\t\t\t\tdistance: distance,\r\n\t\t\t\tobject: object\r\n\t\t\t});\r\n\t\t\tthis.add(object);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetCurrentLevel() {\r\n\t\t\treturn this._currentLevel;\r\n\t\t}\r\n\r\n\t\tgetObjectForDistance(distance) {\r\n\t\t\tconst levels = this.levels;\r\n\r\n\t\t\tif (levels.length > 0) {\r\n\t\t\t\tlet i, l;\r\n\r\n\t\t\t\tfor (i = 1, l = levels.length; i < l; i++) {\r\n\t\t\t\t\tif (distance < levels[i].distance) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn levels[i - 1].object;\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\traycast(raycaster, intersects) {\r\n\t\t\tconst levels = this.levels;\r\n\r\n\t\t\tif (levels.length > 0) {\r\n\t\t\t\t_v1$2.setFromMatrixPosition(this.matrixWorld);\r\n\r\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo(_v1$2);\r\n\t\t\t\tthis.getObjectForDistance(distance).raycast(raycaster, intersects);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tupdate(camera) {\r\n\t\t\tconst levels = this.levels;\r\n\r\n\t\t\tif (levels.length > 1) {\r\n\t\t\t\t_v1$2.setFromMatrixPosition(camera.matrixWorld);\r\n\r\n\t\t\t\t_v2$1.setFromMatrixPosition(this.matrixWorld);\r\n\r\n\t\t\t\tconst distance = _v1$2.distanceTo(_v2$1) / camera.zoom;\r\n\t\t\t\tlevels[0].object.visible = true;\r\n\t\t\t\tlet i, l;\r\n\r\n\t\t\t\tfor (i = 1, l = levels.length; i < l; i++) {\r\n\t\t\t\t\tif (distance >= levels[i].distance) {\r\n\t\t\t\t\t\tlevels[i - 1].object.visible = false;\r\n\t\t\t\t\t\tlevels[i].object.visible = true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._currentLevel = i - 1;\r\n\r\n\t\t\t\tfor (; i < l; i++) {\r\n\t\t\t\t\tlevels[i].object.visible = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttoJSON(meta) {\r\n\t\t\tconst data = super.toJSON(meta);\r\n\t\t\tif (this.autoUpdate === false) data.object.autoUpdate = false;\r\n\t\t\tdata.object.levels = [];\r\n\t\t\tconst levels = this.levels;\r\n\r\n\t\t\tfor (let i = 0, l = levels.length; i < l; i++) {\r\n\t\t\t\tconst level = levels[i];\r\n\t\t\t\tdata.object.levels.push({\r\n\t\t\t\t\tobject: level.object.uuid,\r\n\t\t\t\t\tdistance: level.distance\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst _basePosition = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _skinIndex = /*@__PURE__*/new Vector4();\r\n\r\n\tconst _skinWeight = /*@__PURE__*/new Vector4();\r\n\r\n\tconst _vector$5 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _matrix = /*@__PURE__*/new Matrix4();\r\n\r\n\tclass SkinnedMesh extends Mesh {\r\n\t\tconstructor(geometry, material) {\r\n\t\t\tsuper(geometry, material);\r\n\t\t\tthis.type = 'SkinnedMesh';\r\n\t\t\tthis.bindMode = 'attached';\r\n\t\t\tthis.bindMatrix = new Matrix4();\r\n\t\t\tthis.bindMatrixInverse = new Matrix4();\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.bindMode = source.bindMode;\r\n\t\t\tthis.bindMatrix.copy(source.bindMatrix);\r\n\t\t\tthis.bindMatrixInverse.copy(source.bindMatrixInverse);\r\n\t\t\tthis.skeleton = source.skeleton;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tbind(skeleton, bindMatrix) {\r\n\t\t\tthis.skeleton = skeleton;\r\n\r\n\t\t\tif (bindMatrix === undefined) {\r\n\t\t\t\tthis.updateMatrixWorld(true);\r\n\t\t\t\tthis.skeleton.calculateInverses();\r\n\t\t\t\tbindMatrix = this.matrixWorld;\r\n\t\t\t}\r\n\r\n\t\t\tthis.bindMatrix.copy(bindMatrix);\r\n\t\t\tthis.bindMatrixInverse.copy(bindMatrix).invert();\r\n\t\t}\r\n\r\n\t\tpose() {\r\n\t\t\tthis.skeleton.pose();\r\n\t\t}\r\n\r\n\t\tnormalizeSkinWeights() {\r\n\t\t\tconst vector = new Vector4();\r\n\t\t\tconst skinWeight = this.geometry.attributes.skinWeight;\r\n\r\n\t\t\tfor (let i = 0, l = skinWeight.count; i < l; i++) {\r\n\t\t\t\tvector.x = skinWeight.getX(i);\r\n\t\t\t\tvector.y = skinWeight.getY(i);\r\n\t\t\t\tvector.z = skinWeight.getZ(i);\r\n\t\t\t\tvector.w = skinWeight.getW(i);\r\n\t\t\t\tconst scale = 1.0 / vector.manhattanLength();\r\n\r\n\t\t\t\tif (scale !== Infinity) {\r\n\t\t\t\t\tvector.multiplyScalar(scale);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvector.set(1, 0, 0, 0); // do something reasonable\r\n\t\t\t\t}\r\n\r\n\t\t\t\tskinWeight.setXYZW(i, vector.x, vector.y, vector.z, vector.w);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tupdateMatrixWorld(force) {\r\n\t\t\tsuper.updateMatrixWorld(force);\r\n\r\n\t\t\tif (this.bindMode === 'attached') {\r\n\t\t\t\tthis.bindMatrixInverse.copy(this.matrixWorld).invert();\r\n\t\t\t} else if (this.bindMode === 'detached') {\r\n\t\t\t\tthis.bindMatrixInverse.copy(this.bindMatrix).invert();\r\n\t\t\t} else {\r\n\t\t\t\tconsole.warn('THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tboneTransform(index, target) {\r\n\t\t\tconst skeleton = this.skeleton;\r\n\t\t\tconst geometry = this.geometry;\r\n\r\n\t\t\t_skinIndex.fromBufferAttribute(geometry.attributes.skinIndex, index);\r\n\r\n\t\t\t_skinWeight.fromBufferAttribute(geometry.attributes.skinWeight, index);\r\n\r\n\t\t\t_basePosition.fromBufferAttribute(geometry.attributes.position, index).applyMatrix4(this.bindMatrix);\r\n\r\n\t\t\ttarget.set(0, 0, 0);\r\n\r\n\t\t\tfor (let i = 0; i < 4; i++) {\r\n\t\t\t\tconst weight = _skinWeight.getComponent(i);\r\n\r\n\t\t\t\tif (weight !== 0) {\r\n\t\t\t\t\tconst boneIndex = _skinIndex.getComponent(i);\r\n\r\n\t\t\t\t\t_matrix.multiplyMatrices(skeleton.bones[boneIndex].matrixWorld, skeleton.boneInverses[boneIndex]);\r\n\r\n\t\t\t\t\ttarget.addScaledVector(_vector$5.copy(_basePosition).applyMatrix4(_matrix), weight);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn target.applyMatrix4(this.bindMatrixInverse);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tSkinnedMesh.prototype.isSkinnedMesh = true;\r\n\r\n\tclass Bone extends Object3D {\r\n\t\tconstructor() {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'Bone';\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tBone.prototype.isBone = true;\r\n\r\n\tclass DataTexture extends Texture {\r\n\t\tconstructor(data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, encoding) {\r\n\t\t\tsuper(null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\r\n\t\t\tthis.image = {\r\n\t\t\t\tdata: data,\r\n\t\t\t\twidth: width,\r\n\t\t\t\theight: height\r\n\t\t\t};\r\n\t\t\tthis.magFilter = magFilter;\r\n\t\t\tthis.minFilter = minFilter;\r\n\t\t\tthis.generateMipmaps = false;\r\n\t\t\tthis.flipY = false;\r\n\t\t\tthis.unpackAlignment = 1;\r\n\t\t\tthis.needsUpdate = true;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tDataTexture.prototype.isDataTexture = true;\r\n\r\n\tconst _offsetMatrix = /*@__PURE__*/new Matrix4();\r\n\r\n\tconst _identityMatrix = /*@__PURE__*/new Matrix4();\r\n\r\n\tclass Skeleton {\r\n\t\tconstructor(bones = [], boneInverses = []) {\r\n\t\t\tthis.uuid = generateUUID();\r\n\t\t\tthis.bones = bones.slice(0);\r\n\t\t\tthis.boneInverses = boneInverses;\r\n\t\t\tthis.boneMatrices = null;\r\n\t\t\tthis.boneTexture = null;\r\n\t\t\tthis.boneTextureSize = 0;\r\n\t\t\tthis.frame = -1;\r\n\t\t\tthis.init();\r\n\t\t}\r\n\r\n\t\tinit() {\r\n\t\t\tconst bones = this.bones;\r\n\t\t\tconst boneInverses = this.boneInverses;\r\n\t\t\tthis.boneMatrices = new Float32Array(bones.length * 16); // calculate inverse bone matrices if necessary\r\n\r\n\t\t\tif (boneInverses.length === 0) {\r\n\t\t\t\tthis.calculateInverses();\r\n\t\t\t} else {\r\n\t\t\t\t// handle special case\r\n\t\t\t\tif (bones.length !== boneInverses.length) {\r\n\t\t\t\t\tconsole.warn('THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.');\r\n\t\t\t\t\tthis.boneInverses = [];\r\n\r\n\t\t\t\t\tfor (let i = 0, il = this.bones.length; i < il; i++) {\r\n\t\t\t\t\t\tthis.boneInverses.push(new Matrix4());\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcalculateInverses() {\r\n\t\t\tthis.boneInverses.length = 0;\r\n\r\n\t\t\tfor (let i = 0, il = this.bones.length; i < il; i++) {\r\n\t\t\t\tconst inverse = new Matrix4();\r\n\r\n\t\t\t\tif (this.bones[i]) {\r\n\t\t\t\t\tinverse.copy(this.bones[i].matrixWorld).invert();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.boneInverses.push(inverse);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpose() {\r\n\t\t\t// recover the bind-time world matrices\r\n\t\t\tfor (let i = 0, il = this.bones.length; i < il; i++) {\r\n\t\t\t\tconst bone = this.bones[i];\r\n\r\n\t\t\t\tif (bone) {\r\n\t\t\t\t\tbone.matrixWorld.copy(this.boneInverses[i]).invert();\r\n\t\t\t\t}\r\n\t\t\t} // compute the local matrices, positions, rotations and scales\r\n\r\n\r\n\t\t\tfor (let i = 0, il = this.bones.length; i < il; i++) {\r\n\t\t\t\tconst bone = this.bones[i];\r\n\r\n\t\t\t\tif (bone) {\r\n\t\t\t\t\tif (bone.parent && bone.parent.isBone) {\r\n\t\t\t\t\t\tbone.matrix.copy(bone.parent.matrixWorld).invert();\r\n\t\t\t\t\t\tbone.matrix.multiply(bone.matrixWorld);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbone.matrix.copy(bone.matrixWorld);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbone.matrix.decompose(bone.position, bone.quaternion, bone.scale);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tupdate() {\r\n\t\t\tconst bones = this.bones;\r\n\t\t\tconst boneInverses = this.boneInverses;\r\n\t\t\tconst boneMatrices = this.boneMatrices;\r\n\t\t\tconst boneTexture = this.boneTexture; // flatten bone matrices to array\r\n\r\n\t\t\tfor (let i = 0, il = bones.length; i < il; i++) {\r\n\t\t\t\t// compute the offset between the current and the original transform\r\n\t\t\t\tconst matrix = bones[i] ? bones[i].matrixWorld : _identityMatrix;\r\n\r\n\t\t\t\t_offsetMatrix.multiplyMatrices(matrix, boneInverses[i]);\r\n\r\n\t\t\t\t_offsetMatrix.toArray(boneMatrices, i * 16);\r\n\t\t\t}\r\n\r\n\t\t\tif (boneTexture !== null) {\r\n\t\t\t\tboneTexture.needsUpdate = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new Skeleton(this.bones, this.boneInverses);\r\n\t\t}\r\n\r\n\t\tcomputeBoneTexture() {\r\n\t\t\t// layout (1 matrix = 4 pixels)\r\n\t\t\t//\t\t\tRGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\r\n\t\t\t//\twith\t8x8\tpixel texture max\t 16 bones * 4 pixels =\t(8 * 8)\r\n\t\t\t//\t\t\t 16x16 pixel texture max\t 64 bones * 4 pixels = (16 * 16)\r\n\t\t\t//\t\t\t 32x32 pixel texture max\t256 bones * 4 pixels = (32 * 32)\r\n\t\t\t//\t\t\t 64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\r\n\t\t\tlet size = Math.sqrt(this.bones.length * 4); // 4 pixels needed for 1 matrix\r\n\r\n\t\t\tsize = ceilPowerOfTwo(size);\r\n\t\t\tsize = Math.max(size, 4);\r\n\t\t\tconst boneMatrices = new Float32Array(size * size * 4); // 4 floats per RGBA pixel\r\n\r\n\t\t\tboneMatrices.set(this.boneMatrices); // copy current values\r\n\r\n\t\t\tconst boneTexture = new DataTexture(boneMatrices, size, size, RGBAFormat, FloatType);\r\n\t\t\tthis.boneMatrices = boneMatrices;\r\n\t\t\tthis.boneTexture = boneTexture;\r\n\t\t\tthis.boneTextureSize = size;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetBoneByName(name) {\r\n\t\t\tfor (let i = 0, il = this.bones.length; i < il; i++) {\r\n\t\t\t\tconst bone = this.bones[i];\r\n\r\n\t\t\t\tif (bone.name === name) {\r\n\t\t\t\t\treturn bone;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t\tdispose() {\r\n\t\t\tif (this.boneTexture !== null) {\r\n\t\t\t\tthis.boneTexture.dispose();\r\n\t\t\t\tthis.boneTexture = null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfromJSON(json, bones) {\r\n\t\t\tthis.uuid = json.uuid;\r\n\r\n\t\t\tfor (let i = 0, l = json.bones.length; i < l; i++) {\r\n\t\t\t\tconst uuid = json.bones[i];\r\n\t\t\t\tlet bone = bones[uuid];\r\n\r\n\t\t\t\tif (bone === undefined) {\r\n\t\t\t\t\tconsole.warn('THREE.Skeleton: No bone found with UUID:', uuid);\r\n\t\t\t\t\tbone = new Bone();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.bones.push(bone);\r\n\t\t\t\tthis.boneInverses.push(new Matrix4().fromArray(json.boneInverses[i]));\r\n\t\t\t}\r\n\r\n\t\t\tthis.init();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.5,\r\n\t\t\t\t\ttype: 'Skeleton',\r\n\t\t\t\t\tgenerator: 'Skeleton.toJSON'\r\n\t\t\t\t},\r\n\t\t\t\tbones: [],\r\n\t\t\t\tboneInverses: []\r\n\t\t\t};\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tconst bones = this.bones;\r\n\t\t\tconst boneInverses = this.boneInverses;\r\n\r\n\t\t\tfor (let i = 0, l = bones.length; i < l; i++) {\r\n\t\t\t\tconst bone = bones[i];\r\n\t\t\t\tdata.bones.push(bone.uuid);\r\n\t\t\t\tconst boneInverse = boneInverses[i];\r\n\t\t\t\tdata.boneInverses.push(boneInverse.toArray());\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst _instanceLocalMatrix = /*@__PURE__*/new Matrix4();\r\n\r\n\tconst _instanceWorldMatrix = /*@__PURE__*/new Matrix4();\r\n\r\n\tconst _instanceIntersects = [];\r\n\r\n\tconst _mesh = /*@__PURE__*/new Mesh();\r\n\r\n\tclass InstancedMesh extends Mesh {\r\n\t\tconstructor(geometry, material, count) {\r\n\t\t\tsuper(geometry, material);\r\n\t\t\tthis.instanceMatrix = new BufferAttribute(new Float32Array(count * 16), 16);\r\n\t\t\tthis.instanceColor = null;\r\n\t\t\tthis.count = count;\r\n\t\t\tthis.frustumCulled = false;\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.instanceMatrix.copy(source.instanceMatrix);\r\n\t\t\tif (source.instanceColor !== null) this.instanceColor = source.instanceColor.clone();\r\n\t\t\tthis.count = source.count;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetColorAt(index, color) {\r\n\t\t\tcolor.fromArray(this.instanceColor.array, index * 3);\r\n\t\t}\r\n\r\n\t\tgetMatrixAt(index, matrix) {\r\n\t\t\tmatrix.fromArray(this.instanceMatrix.array, index * 16);\r\n\t\t}\r\n\r\n\t\traycast(raycaster, intersects) {\r\n\t\t\tconst matrixWorld = this.matrixWorld;\r\n\t\t\tconst raycastTimes = this.count;\r\n\t\t\t_mesh.geometry = this.geometry;\r\n\t\t\t_mesh.material = this.material;\r\n\t\t\tif (_mesh.material === undefined) return;\r\n\r\n\t\t\tfor (let instanceId = 0; instanceId < raycastTimes; instanceId++) {\r\n\t\t\t\t// calculate the world matrix for each instance\r\n\t\t\t\tthis.getMatrixAt(instanceId, _instanceLocalMatrix);\r\n\r\n\t\t\t\t_instanceWorldMatrix.multiplyMatrices(matrixWorld, _instanceLocalMatrix); // the mesh represents this single instance\r\n\r\n\r\n\t\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\r\n\r\n\t\t\t\t_mesh.raycast(raycaster, _instanceIntersects); // process the result of raycast\r\n\r\n\r\n\t\t\t\tfor (let i = 0, l = _instanceIntersects.length; i < l; i++) {\r\n\t\t\t\t\tconst intersect = _instanceIntersects[i];\r\n\t\t\t\t\tintersect.instanceId = instanceId;\r\n\t\t\t\t\tintersect.object = this;\r\n\t\t\t\t\tintersects.push(intersect);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_instanceIntersects.length = 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsetColorAt(index, color) {\r\n\t\t\tif (this.instanceColor === null) {\r\n\t\t\t\tthis.instanceColor = new BufferAttribute(new Float32Array(this.instanceMatrix.count * 3), 3);\r\n\t\t\t}\r\n\r\n\t\t\tcolor.toArray(this.instanceColor.array, index * 3);\r\n\t\t}\r\n\r\n\t\tsetMatrixAt(index, matrix) {\r\n\t\t\tmatrix.toArray(this.instanceMatrix.array, index * 16);\r\n\t\t}\r\n\r\n\t\tupdateMorphTargets() {}\r\n\r\n\t\tdispose() {\r\n\t\t\tthis.dispatchEvent({\r\n\t\t\t\ttype: 'dispose'\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tInstancedMesh.prototype.isInstancedMesh = true;\r\n\r\n\t/**\r\n\t * parameters = {\r\n\t *\tcolor: <hex>,\r\n\t *\topacity: <float>,\r\n\t *\r\n\t *\tlinewidth: <float>,\r\n\t *\tlinecap: \"round\",\r\n\t *\tlinejoin: \"round\"\r\n\t * }\r\n\t */\r\n\r\n\tclass LineBasicMaterial extends Material {\r\n\t\tconstructor(parameters) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'LineBasicMaterial';\r\n\t\t\tthis.color = new Color(0xffffff);\r\n\t\t\tthis.linewidth = 1;\r\n\t\t\tthis.linecap = 'round';\r\n\t\t\tthis.linejoin = 'round';\r\n\t\t\tthis.setValues(parameters);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.color.copy(source.color);\r\n\t\t\tthis.linewidth = source.linewidth;\r\n\t\t\tthis.linecap = source.linecap;\r\n\t\t\tthis.linejoin = source.linejoin;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tLineBasicMaterial.prototype.isLineBasicMaterial = true;\r\n\r\n\tconst _start$1 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _end$1 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _inverseMatrix$1 = /*@__PURE__*/new Matrix4();\r\n\r\n\tconst _ray$1 = /*@__PURE__*/new Ray();\r\n\r\n\tconst _sphere$1 = /*@__PURE__*/new Sphere();\r\n\r\n\tclass Line extends Object3D {\r\n\t\tconstructor(geometry = new BufferGeometry(), material = new LineBasicMaterial()) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'Line';\r\n\t\t\tthis.geometry = geometry;\r\n\t\t\tthis.material = material;\r\n\t\t\tthis.updateMorphTargets();\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.material = source.material;\r\n\t\t\tthis.geometry = source.geometry;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcomputeLineDistances() {\r\n\t\t\tconst geometry = this.geometry;\r\n\r\n\t\t\tif (geometry.isBufferGeometry) {\r\n\t\t\t\t// we assume non-indexed geometry\r\n\t\t\t\tif (geometry.index === null) {\r\n\t\t\t\t\tconst positionAttribute = geometry.attributes.position;\r\n\t\t\t\t\tconst lineDistances = [0];\r\n\r\n\t\t\t\t\tfor (let i = 1, l = positionAttribute.count; i < l; i++) {\r\n\t\t\t\t\t\t_start$1.fromBufferAttribute(positionAttribute, i - 1);\r\n\r\n\t\t\t\t\t\t_end$1.fromBufferAttribute(positionAttribute, i);\r\n\r\n\t\t\t\t\t\tlineDistances[i] = lineDistances[i - 1];\r\n\t\t\t\t\t\tlineDistances[i] += _start$1.distanceTo(_end$1);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgeometry.setAttribute('lineDistance', new Float32BufferAttribute(lineDistances, 1));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.warn('THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');\r\n\t\t\t\t}\r\n\t\t\t} else if (geometry.isGeometry) {\r\n\t\t\t\tconsole.error('THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\traycast(raycaster, intersects) {\r\n\t\t\tconst geometry = this.geometry;\r\n\t\t\tconst matrixWorld = this.matrixWorld;\r\n\t\t\tconst threshold = raycaster.params.Line.threshold;\r\n\t\t\tconst drawRange = geometry.drawRange; // Checking boundingSphere distance to ray\r\n\r\n\t\t\tif (geometry.boundingSphere === null) geometry.computeBoundingSphere();\r\n\r\n\t\t\t_sphere$1.copy(geometry.boundingSphere);\r\n\r\n\t\t\t_sphere$1.applyMatrix4(matrixWorld);\r\n\r\n\t\t\t_sphere$1.radius += threshold;\r\n\t\t\tif (raycaster.ray.intersectsSphere(_sphere$1) === false) return; //\r\n\r\n\t\t\t_inverseMatrix$1.copy(matrixWorld).invert();\r\n\r\n\t\t\t_ray$1.copy(raycaster.ray).applyMatrix4(_inverseMatrix$1);\r\n\r\n\t\t\tconst localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\r\n\t\t\tconst localThresholdSq = localThreshold * localThreshold;\r\n\t\t\tconst vStart = new Vector3();\r\n\t\t\tconst vEnd = new Vector3();\r\n\t\t\tconst interSegment = new Vector3();\r\n\t\t\tconst interRay = new Vector3();\r\n\t\t\tconst step = this.isLineSegments ? 2 : 1;\r\n\r\n\t\t\tif (geometry.isBufferGeometry) {\r\n\t\t\t\tconst index = geometry.index;\r\n\t\t\t\tconst attributes = geometry.attributes;\r\n\t\t\t\tconst positionAttribute = attributes.position;\r\n\r\n\t\t\t\tif (index !== null) {\r\n\t\t\t\t\tconst start = Math.max(0, drawRange.start);\r\n\t\t\t\t\tconst end = Math.min(index.count, drawRange.start + drawRange.count);\r\n\r\n\t\t\t\t\tfor (let i = start, l = end - 1; i < l; i += step) {\r\n\t\t\t\t\t\tconst a = index.getX(i);\r\n\t\t\t\t\t\tconst b = index.getX(i + 1);\r\n\t\t\t\t\t\tvStart.fromBufferAttribute(positionAttribute, a);\r\n\t\t\t\t\t\tvEnd.fromBufferAttribute(positionAttribute, b);\r\n\r\n\t\t\t\t\t\tconst distSq = _ray$1.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\r\n\r\n\t\t\t\t\t\tif (distSq > localThresholdSq) continue;\r\n\t\t\t\t\t\tinterRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\r\n\r\n\t\t\t\t\t\tconst distance = raycaster.ray.origin.distanceTo(interRay);\r\n\t\t\t\t\t\tif (distance < raycaster.near || distance > raycaster.far) continue;\r\n\t\t\t\t\t\tintersects.push({\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4(this.matrixWorld),\r\n\t\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\t\tobject: this\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst start = Math.max(0, drawRange.start);\r\n\t\t\t\t\tconst end = Math.min(positionAttribute.count, drawRange.start + drawRange.count);\r\n\r\n\t\t\t\t\tfor (let i = start, l = end - 1; i < l; i += step) {\r\n\t\t\t\t\t\tvStart.fromBufferAttribute(positionAttribute, i);\r\n\t\t\t\t\t\tvEnd.fromBufferAttribute(positionAttribute, i + 1);\r\n\r\n\t\t\t\t\t\tconst distSq = _ray$1.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\r\n\r\n\t\t\t\t\t\tif (distSq > localThresholdSq) continue;\r\n\t\t\t\t\t\tinterRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\r\n\r\n\t\t\t\t\t\tconst distance = raycaster.ray.origin.distanceTo(interRay);\r\n\t\t\t\t\t\tif (distance < raycaster.near || distance > raycaster.far) continue;\r\n\t\t\t\t\t\tintersects.push({\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4(this.matrixWorld),\r\n\t\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\t\tobject: this\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (geometry.isGeometry) {\r\n\t\t\t\tconsole.error('THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tupdateMorphTargets() {\r\n\t\t\tconst geometry = this.geometry;\r\n\r\n\t\t\tif (geometry.isBufferGeometry) {\r\n\t\t\t\tconst morphAttributes = geometry.morphAttributes;\r\n\t\t\t\tconst keys = Object.keys(morphAttributes);\r\n\r\n\t\t\t\tif (keys.length > 0) {\r\n\t\t\t\t\tconst morphAttribute = morphAttributes[keys[0]];\r\n\r\n\t\t\t\t\tif (morphAttribute !== undefined) {\r\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\r\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\r\n\r\n\t\t\t\t\t\tfor (let m = 0, ml = morphAttribute.length; m < ml; m++) {\r\n\t\t\t\t\t\t\tconst name = morphAttribute[m].name || String(m);\r\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push(0);\r\n\t\t\t\t\t\t\tthis.morphTargetDictionary[name] = m;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconst morphTargets = geometry.morphTargets;\r\n\r\n\t\t\t\tif (morphTargets !== undefined && morphTargets.length > 0) {\r\n\t\t\t\t\tconsole.error('THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tLine.prototype.isLine = true;\r\n\r\n\tconst _start = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _end = /*@__PURE__*/new Vector3();\r\n\r\n\tclass LineSegments extends Line {\r\n\t\tconstructor(geometry, material) {\r\n\t\t\tsuper(geometry, material);\r\n\t\t\tthis.type = 'LineSegments';\r\n\t\t}\r\n\r\n\t\tcomputeLineDistances() {\r\n\t\t\tconst geometry = this.geometry;\r\n\r\n\t\t\tif (geometry.isBufferGeometry) {\r\n\t\t\t\t// we assume non-indexed geometry\r\n\t\t\t\tif (geometry.index === null) {\r\n\t\t\t\t\tconst positionAttribute = geometry.attributes.position;\r\n\t\t\t\t\tconst lineDistances = [];\r\n\r\n\t\t\t\t\tfor (let i = 0, l = positionAttribute.count; i < l; i += 2) {\r\n\t\t\t\t\t\t_start.fromBufferAttribute(positionAttribute, i);\r\n\r\n\t\t\t\t\t\t_end.fromBufferAttribute(positionAttribute, i + 1);\r\n\r\n\t\t\t\t\t\tlineDistances[i] = i === 0 ? 0 : lineDistances[i - 1];\r\n\t\t\t\t\t\tlineDistances[i + 1] = lineDistances[i] + _start.distanceTo(_end);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgeometry.setAttribute('lineDistance', new Float32BufferAttribute(lineDistances, 1));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.warn('THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');\r\n\t\t\t\t}\r\n\t\t\t} else if (geometry.isGeometry) {\r\n\t\t\t\tconsole.error('THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tLineSegments.prototype.isLineSegments = true;\r\n\r\n\tclass LineLoop extends Line {\r\n\t\tconstructor(geometry, material) {\r\n\t\t\tsuper(geometry, material);\r\n\t\t\tthis.type = 'LineLoop';\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tLineLoop.prototype.isLineLoop = true;\r\n\r\n\t/**\r\n\t * parameters = {\r\n\t *\tcolor: <hex>,\r\n\t *\topacity: <float>,\r\n\t *\tmap: new THREE.Texture( <Image> ),\r\n\t *\talphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tsize: <float>,\r\n\t *\tsizeAttenuation: <bool>\r\n\t *\r\n\t * }\r\n\t */\r\n\r\n\tclass PointsMaterial extends Material {\r\n\t\tconstructor(parameters) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'PointsMaterial';\r\n\t\t\tthis.color = new Color(0xffffff);\r\n\t\t\tthis.map = null;\r\n\t\t\tthis.alphaMap = null;\r\n\t\t\tthis.size = 1;\r\n\t\t\tthis.sizeAttenuation = true;\r\n\t\t\tthis.setValues(parameters);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.color.copy(source.color);\r\n\t\t\tthis.map = source.map;\r\n\t\t\tthis.alphaMap = source.alphaMap;\r\n\t\t\tthis.size = source.size;\r\n\t\t\tthis.sizeAttenuation = source.sizeAttenuation;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tPointsMaterial.prototype.isPointsMaterial = true;\r\n\r\n\tconst _inverseMatrix = /*@__PURE__*/new Matrix4();\r\n\r\n\tconst _ray = /*@__PURE__*/new Ray();\r\n\r\n\tconst _sphere = /*@__PURE__*/new Sphere();\r\n\r\n\tconst _position$2 = /*@__PURE__*/new Vector3();\r\n\r\n\tclass Points extends Object3D {\r\n\t\tconstructor(geometry = new BufferGeometry(), material = new PointsMaterial()) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'Points';\r\n\t\t\tthis.geometry = geometry;\r\n\t\t\tthis.material = material;\r\n\t\t\tthis.updateMorphTargets();\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.material = source.material;\r\n\t\t\tthis.geometry = source.geometry;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\traycast(raycaster, intersects) {\r\n\t\t\tconst geometry = this.geometry;\r\n\t\t\tconst matrixWorld = this.matrixWorld;\r\n\t\t\tconst threshold = raycaster.params.Points.threshold;\r\n\t\t\tconst drawRange = geometry.drawRange; // Checking boundingSphere distance to ray\r\n\r\n\t\t\tif (geometry.boundingSphere === null) geometry.computeBoundingSphere();\r\n\r\n\t\t\t_sphere.copy(geometry.boundingSphere);\r\n\r\n\t\t\t_sphere.applyMatrix4(matrixWorld);\r\n\r\n\t\t\t_sphere.radius += threshold;\r\n\t\t\tif (raycaster.ray.intersectsSphere(_sphere) === false) return; //\r\n\r\n\t\t\t_inverseMatrix.copy(matrixWorld).invert();\r\n\r\n\t\t\t_ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix);\r\n\r\n\t\t\tconst localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\r\n\t\t\tconst localThresholdSq = localThreshold * localThreshold;\r\n\r\n\t\t\tif (geometry.isBufferGeometry) {\r\n\t\t\t\tconst index = geometry.index;\r\n\t\t\t\tconst attributes = geometry.attributes;\r\n\t\t\t\tconst positionAttribute = attributes.position;\r\n\r\n\t\t\t\tif (index !== null) {\r\n\t\t\t\t\tconst start = Math.max(0, drawRange.start);\r\n\t\t\t\t\tconst end = Math.min(index.count, drawRange.start + drawRange.count);\r\n\r\n\t\t\t\t\tfor (let i = start, il = end; i < il; i++) {\r\n\t\t\t\t\t\tconst a = index.getX(i);\r\n\r\n\t\t\t\t\t\t_position$2.fromBufferAttribute(positionAttribute, a);\r\n\r\n\t\t\t\t\t\ttestPoint(_position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst start = Math.max(0, drawRange.start);\r\n\t\t\t\t\tconst end = Math.min(positionAttribute.count, drawRange.start + drawRange.count);\r\n\r\n\t\t\t\t\tfor (let i = start, l = end; i < l; i++) {\r\n\t\t\t\t\t\t_position$2.fromBufferAttribute(positionAttribute, i);\r\n\r\n\t\t\t\t\t\ttestPoint(_position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconsole.error('THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tupdateMorphTargets() {\r\n\t\t\tconst geometry = this.geometry;\r\n\r\n\t\t\tif (geometry.isBufferGeometry) {\r\n\t\t\t\tconst morphAttributes = geometry.morphAttributes;\r\n\t\t\t\tconst keys = Object.keys(morphAttributes);\r\n\r\n\t\t\t\tif (keys.length > 0) {\r\n\t\t\t\t\tconst morphAttribute = morphAttributes[keys[0]];\r\n\r\n\t\t\t\t\tif (morphAttribute !== undefined) {\r\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\r\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\r\n\r\n\t\t\t\t\t\tfor (let m = 0, ml = morphAttribute.length; m < ml; m++) {\r\n\t\t\t\t\t\t\tconst name = morphAttribute[m].name || String(m);\r\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push(0);\r\n\t\t\t\t\t\t\tthis.morphTargetDictionary[name] = m;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconst morphTargets = geometry.morphTargets;\r\n\r\n\t\t\t\tif (morphTargets !== undefined && morphTargets.length > 0) {\r\n\t\t\t\t\tconsole.error('THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tPoints.prototype.isPoints = true;\r\n\r\n\tfunction testPoint(point, index, localThresholdSq, matrixWorld, raycaster, intersects, object) {\r\n\t\tconst rayPointDistanceSq = _ray.distanceSqToPoint(point);\r\n\r\n\t\tif (rayPointDistanceSq < localThresholdSq) {\r\n\t\t\tconst intersectPoint = new Vector3();\r\n\r\n\t\t\t_ray.closestPointToPoint(point, intersectPoint);\r\n\r\n\t\t\tintersectPoint.applyMatrix4(matrixWorld);\r\n\t\t\tconst distance = raycaster.ray.origin.distanceTo(intersectPoint);\r\n\t\t\tif (distance < raycaster.near || distance > raycaster.far) return;\r\n\t\t\tintersects.push({\r\n\t\t\t\tdistance: distance,\r\n\t\t\t\tdistanceToRay: Math.sqrt(rayPointDistanceSq),\r\n\t\t\t\tpoint: intersectPoint,\r\n\t\t\t\tindex: index,\r\n\t\t\t\tface: null,\r\n\t\t\t\tobject: object\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tclass VideoTexture extends Texture {\r\n\t\tconstructor(video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\r\n\t\t\tsuper(video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\r\n\t\t\tthis.format = format !== undefined ? format : RGBFormat;\r\n\t\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\r\n\t\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\r\n\t\t\tthis.generateMipmaps = false;\r\n\t\t\tconst scope = this;\r\n\r\n\t\t\tfunction updateVideo() {\r\n\t\t\t\tscope.needsUpdate = true;\r\n\t\t\t\tvideo.requestVideoFrameCallback(updateVideo);\r\n\t\t\t}\r\n\r\n\t\t\tif ('requestVideoFrameCallback' in video) {\r\n\t\t\t\tvideo.requestVideoFrameCallback(updateVideo);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor(this.image).copy(this);\r\n\t\t}\r\n\r\n\t\tupdate() {\r\n\t\t\tconst video = this.image;\r\n\t\t\tconst hasVideoFrameCallback = ('requestVideoFrameCallback' in video);\r\n\r\n\t\t\tif (hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA) {\r\n\t\t\t\tthis.needsUpdate = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tVideoTexture.prototype.isVideoTexture = true;\r\n\r\n\tclass CompressedTexture extends Texture {\r\n\t\tconstructor(mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding) {\r\n\t\t\tsuper(null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\r\n\t\t\tthis.image = {\r\n\t\t\t\twidth: width,\r\n\t\t\t\theight: height\r\n\t\t\t};\r\n\t\t\tthis.mipmaps = mipmaps; // no flipping for cube textures\r\n\t\t\t// (also flipping doesn't work for compressed textures )\r\n\r\n\t\t\tthis.flipY = false; // can't generate mipmaps for compressed textures\r\n\t\t\t// mips must be embedded in DDS files\r\n\r\n\t\t\tthis.generateMipmaps = false;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tCompressedTexture.prototype.isCompressedTexture = true;\r\n\r\n\tclass CanvasTexture extends Texture {\r\n\t\tconstructor(canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\r\n\t\t\tsuper(canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\r\n\t\t\tthis.needsUpdate = true;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tCanvasTexture.prototype.isCanvasTexture = true;\r\n\r\n\tclass DepthTexture extends Texture {\r\n\t\tconstructor(width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format) {\r\n\t\t\tformat = format !== undefined ? format : DepthFormat;\r\n\r\n\t\t\tif (format !== DepthFormat && format !== DepthStencilFormat) {\r\n\t\t\t\tthrow new Error('DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat');\r\n\t\t\t}\r\n\r\n\t\t\tif (type === undefined && format === DepthFormat) type = UnsignedShortType;\r\n\t\t\tif (type === undefined && format === DepthStencilFormat) type = UnsignedInt248Type;\r\n\t\t\tsuper(null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\r\n\t\t\tthis.image = {\r\n\t\t\t\twidth: width,\r\n\t\t\t\theight: height\r\n\t\t\t};\r\n\t\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\r\n\t\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\r\n\t\t\tthis.flipY = false;\r\n\t\t\tthis.generateMipmaps = false;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tDepthTexture.prototype.isDepthTexture = true;\r\n\r\n\tclass CircleGeometry extends BufferGeometry {\r\n\t\tconstructor(radius = 1, segments = 8, thetaStart = 0, thetaLength = Math.PI * 2) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'CircleGeometry';\r\n\t\t\tthis.parameters = {\r\n\t\t\t\tradius: radius,\r\n\t\t\t\tsegments: segments,\r\n\t\t\t\tthetaStart: thetaStart,\r\n\t\t\t\tthetaLength: thetaLength\r\n\t\t\t};\r\n\t\t\tsegments = Math.max(3, segments); // buffers\r\n\r\n\t\t\tconst indices = [];\r\n\t\t\tconst vertices = [];\r\n\t\t\tconst normals = [];\r\n\t\t\tconst uvs = []; // helper variables\r\n\r\n\t\t\tconst vertex = new Vector3();\r\n\t\t\tconst uv = new Vector2(); // center point\r\n\r\n\t\t\tvertices.push(0, 0, 0);\r\n\t\t\tnormals.push(0, 0, 1);\r\n\t\t\tuvs.push(0.5, 0.5);\r\n\r\n\t\t\tfor (let s = 0, i = 3; s <= segments; s++, i += 3) {\r\n\t\t\t\tconst segment = thetaStart + s / segments * thetaLength; // vertex\r\n\r\n\t\t\t\tvertex.x = radius * Math.cos(segment);\r\n\t\t\t\tvertex.y = radius * Math.sin(segment);\r\n\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\r\n\r\n\t\t\t\tnormals.push(0, 0, 1); // uvs\r\n\r\n\t\t\t\tuv.x = (vertices[i] / radius + 1) / 2;\r\n\t\t\t\tuv.y = (vertices[i + 1] / radius + 1) / 2;\r\n\t\t\t\tuvs.push(uv.x, uv.y);\r\n\t\t\t} // indices\r\n\r\n\r\n\t\t\tfor (let i = 1; i <= segments; i++) {\r\n\t\t\t\tindices.push(i, i + 1, 0);\r\n\t\t\t} // build geometry\r\n\r\n\r\n\t\t\tthis.setIndex(indices);\r\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\r\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\r\n\t\t}\r\n\r\n\t\tstatic fromJSON(data) {\r\n\t\t\treturn new CircleGeometry(data.radius, data.segments, data.thetaStart, data.thetaLength);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass CylinderGeometry extends BufferGeometry {\r\n\t\tconstructor(radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'CylinderGeometry';\r\n\t\t\tthis.parameters = {\r\n\t\t\t\tradiusTop: radiusTop,\r\n\t\t\t\tradiusBottom: radiusBottom,\r\n\t\t\t\theight: height,\r\n\t\t\t\tradialSegments: radialSegments,\r\n\t\t\t\theightSegments: heightSegments,\r\n\t\t\t\topenEnded: openEnded,\r\n\t\t\t\tthetaStart: thetaStart,\r\n\t\t\t\tthetaLength: thetaLength\r\n\t\t\t};\r\n\t\t\tconst scope = this;\r\n\t\t\tradialSegments = Math.floor(radialSegments);\r\n\t\t\theightSegments = Math.floor(heightSegments); // buffers\r\n\r\n\t\t\tconst indices = [];\r\n\t\t\tconst vertices = [];\r\n\t\t\tconst normals = [];\r\n\t\t\tconst uvs = []; // helper variables\r\n\r\n\t\t\tlet index = 0;\r\n\t\t\tconst indexArray = [];\r\n\t\t\tconst halfHeight = height / 2;\r\n\t\t\tlet groupStart = 0; // generate geometry\r\n\r\n\t\t\tgenerateTorso();\r\n\r\n\t\t\tif (openEnded === false) {\r\n\t\t\t\tif (radiusTop > 0) generateCap(true);\r\n\t\t\t\tif (radiusBottom > 0) generateCap(false);\r\n\t\t\t} // build geometry\r\n\r\n\r\n\t\t\tthis.setIndex(indices);\r\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\r\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\r\n\r\n\t\t\tfunction generateTorso() {\r\n\t\t\t\tconst normal = new Vector3();\r\n\t\t\t\tconst vertex = new Vector3();\r\n\t\t\t\tlet groupCount = 0; // this will be used to calculate the normal\r\n\r\n\t\t\t\tconst slope = (radiusBottom - radiusTop) / height; // generate vertices, normals and uvs\r\n\r\n\t\t\t\tfor (let y = 0; y <= heightSegments; y++) {\r\n\t\t\t\t\tconst indexRow = [];\r\n\t\t\t\t\tconst v = y / heightSegments; // calculate the radius of the current row\r\n\r\n\t\t\t\t\tconst radius = v * (radiusBottom - radiusTop) + radiusTop;\r\n\r\n\t\t\t\t\tfor (let x = 0; x <= radialSegments; x++) {\r\n\t\t\t\t\t\tconst u = x / radialSegments;\r\n\t\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\r\n\t\t\t\t\t\tconst sinTheta = Math.sin(theta);\r\n\t\t\t\t\t\tconst cosTheta = Math.cos(theta); // vertex\r\n\r\n\t\t\t\t\t\tvertex.x = radius * sinTheta;\r\n\t\t\t\t\t\tvertex.y = -v * height + halfHeight;\r\n\t\t\t\t\t\tvertex.z = radius * cosTheta;\r\n\t\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\r\n\r\n\t\t\t\t\t\tnormal.set(sinTheta, slope, cosTheta).normalize();\r\n\t\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // uv\r\n\r\n\t\t\t\t\t\tuvs.push(u, 1 - v); // save index of vertex in respective row\r\n\r\n\t\t\t\t\t\tindexRow.push(index++);\r\n\t\t\t\t\t} // now save vertices of the row in our index array\r\n\r\n\r\n\t\t\t\t\tindexArray.push(indexRow);\r\n\t\t\t\t} // generate indices\r\n\r\n\r\n\t\t\t\tfor (let x = 0; x < radialSegments; x++) {\r\n\t\t\t\t\tfor (let y = 0; y < heightSegments; y++) {\r\n\t\t\t\t\t\t// we use the index array to access the correct indices\r\n\t\t\t\t\t\tconst a = indexArray[y][x];\r\n\t\t\t\t\t\tconst b = indexArray[y + 1][x];\r\n\t\t\t\t\t\tconst c = indexArray[y + 1][x + 1];\r\n\t\t\t\t\t\tconst d = indexArray[y][x + 1]; // faces\r\n\r\n\t\t\t\t\t\tindices.push(a, b, d);\r\n\t\t\t\t\t\tindices.push(b, c, d); // update group counter\r\n\r\n\t\t\t\t\t\tgroupCount += 6;\r\n\t\t\t\t\t}\r\n\t\t\t\t} // add a group to the geometry. this will ensure multi material support\r\n\r\n\r\n\t\t\t\tscope.addGroup(groupStart, groupCount, 0); // calculate new start value for groups\r\n\r\n\t\t\t\tgroupStart += groupCount;\r\n\t\t\t}\r\n\r\n\t\t\tfunction generateCap(top) {\r\n\t\t\t\t// save the index of the first center vertex\r\n\t\t\t\tconst centerIndexStart = index;\r\n\t\t\t\tconst uv = new Vector2();\r\n\t\t\t\tconst vertex = new Vector3();\r\n\t\t\t\tlet groupCount = 0;\r\n\t\t\t\tconst radius = top === true ? radiusTop : radiusBottom;\r\n\t\t\t\tconst sign = top === true ? 1 : -1; // first we generate the center vertex data of the cap.\r\n\t\t\t\t// because the geometry needs one set of uvs per face,\r\n\t\t\t\t// we must generate a center vertex per face/segment\r\n\r\n\t\t\t\tfor (let x = 1; x <= radialSegments; x++) {\r\n\t\t\t\t\t// vertex\r\n\t\t\t\t\tvertices.push(0, halfHeight * sign, 0); // normal\r\n\r\n\t\t\t\t\tnormals.push(0, sign, 0); // uv\r\n\r\n\t\t\t\t\tuvs.push(0.5, 0.5); // increase index\r\n\r\n\t\t\t\t\tindex++;\r\n\t\t\t\t} // save the index of the last center vertex\r\n\r\n\r\n\t\t\t\tconst centerIndexEnd = index; // now we generate the surrounding vertices, normals and uvs\r\n\r\n\t\t\t\tfor (let x = 0; x <= radialSegments; x++) {\r\n\t\t\t\t\tconst u = x / radialSegments;\r\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\r\n\t\t\t\t\tconst cosTheta = Math.cos(theta);\r\n\t\t\t\t\tconst sinTheta = Math.sin(theta); // vertex\r\n\r\n\t\t\t\t\tvertex.x = radius * sinTheta;\r\n\t\t\t\t\tvertex.y = halfHeight * sign;\r\n\t\t\t\t\tvertex.z = radius * cosTheta;\r\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\r\n\r\n\t\t\t\t\tnormals.push(0, sign, 0); // uv\r\n\r\n\t\t\t\t\tuv.x = cosTheta * 0.5 + 0.5;\r\n\t\t\t\t\tuv.y = sinTheta * 0.5 * sign + 0.5;\r\n\t\t\t\t\tuvs.push(uv.x, uv.y); // increase index\r\n\r\n\t\t\t\t\tindex++;\r\n\t\t\t\t} // generate indices\r\n\r\n\r\n\t\t\t\tfor (let x = 0; x < radialSegments; x++) {\r\n\t\t\t\t\tconst c = centerIndexStart + x;\r\n\t\t\t\t\tconst i = centerIndexEnd + x;\r\n\r\n\t\t\t\t\tif (top === true) {\r\n\t\t\t\t\t\t// face top\r\n\t\t\t\t\t\tindices.push(i, i + 1, c);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// face bottom\r\n\t\t\t\t\t\tindices.push(i + 1, i, c);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgroupCount += 3;\r\n\t\t\t\t} // add a group to the geometry. this will ensure multi material support\r\n\r\n\r\n\t\t\t\tscope.addGroup(groupStart, groupCount, top === true ? 1 : 2); // calculate new start value for groups\r\n\r\n\t\t\t\tgroupStart += groupCount;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tstatic fromJSON(data) {\r\n\t\t\treturn new CylinderGeometry(data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass ConeGeometry extends CylinderGeometry {\r\n\t\tconstructor(radius = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2) {\r\n\t\t\tsuper(0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength);\r\n\t\t\tthis.type = 'ConeGeometry';\r\n\t\t\tthis.parameters = {\r\n\t\t\t\tradius: radius,\r\n\t\t\t\theight: height,\r\n\t\t\t\tradialSegments: radialSegments,\r\n\t\t\t\theightSegments: heightSegments,\r\n\t\t\t\topenEnded: openEnded,\r\n\t\t\t\tthetaStart: thetaStart,\r\n\t\t\t\tthetaLength: thetaLength\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tstatic fromJSON(data) {\r\n\t\t\treturn new ConeGeometry(data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass PolyhedronGeometry extends BufferGeometry {\r\n\t\tconstructor(vertices, indices, radius = 1, detail = 0) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'PolyhedronGeometry';\r\n\t\t\tthis.parameters = {\r\n\t\t\t\tvertices: vertices,\r\n\t\t\t\tindices: indices,\r\n\t\t\t\tradius: radius,\r\n\t\t\t\tdetail: detail\r\n\t\t\t}; // default buffer data\r\n\r\n\t\t\tconst vertexBuffer = [];\r\n\t\t\tconst uvBuffer = []; // the subdivision creates the vertex buffer data\r\n\r\n\t\t\tsubdivide(detail); // all vertices should lie on a conceptual sphere with a given radius\r\n\r\n\t\t\tapplyRadius(radius); // finally, create the uv data\r\n\r\n\t\t\tgenerateUVs(); // build non-indexed geometry\r\n\r\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertexBuffer, 3));\r\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(vertexBuffer.slice(), 3));\r\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvBuffer, 2));\r\n\r\n\t\t\tif (detail === 0) {\r\n\t\t\t\tthis.computeVertexNormals(); // flat normals\r\n\t\t\t} else {\r\n\t\t\t\tthis.normalizeNormals(); // smooth normals\r\n\t\t\t} // helper functions\r\n\r\n\r\n\t\t\tfunction subdivide(detail) {\r\n\t\t\t\tconst a = new Vector3();\r\n\t\t\t\tconst b = new Vector3();\r\n\t\t\t\tconst c = new Vector3(); // iterate over all faces and apply a subdivison with the given detail value\r\n\r\n\t\t\t\tfor (let i = 0; i < indices.length; i += 3) {\r\n\t\t\t\t\t// get the vertices of the face\r\n\t\t\t\t\tgetVertexByIndex(indices[i + 0], a);\r\n\t\t\t\t\tgetVertexByIndex(indices[i + 1], b);\r\n\t\t\t\t\tgetVertexByIndex(indices[i + 2], c); // perform subdivision\r\n\r\n\t\t\t\t\tsubdivideFace(a, b, c, detail);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfunction subdivideFace(a, b, c, detail) {\r\n\t\t\t\tconst cols = detail + 1; // we use this multidimensional array as a data structure for creating the subdivision\r\n\r\n\t\t\t\tconst v = []; // construct all of the vertices for this subdivision\r\n\r\n\t\t\t\tfor (let i = 0; i <= cols; i++) {\r\n\t\t\t\t\tv[i] = [];\r\n\t\t\t\t\tconst aj = a.clone().lerp(c, i / cols);\r\n\t\t\t\t\tconst bj = b.clone().lerp(c, i / cols);\r\n\t\t\t\t\tconst rows = cols - i;\r\n\r\n\t\t\t\t\tfor (let j = 0; j <= rows; j++) {\r\n\t\t\t\t\t\tif (j === 0 && i === cols) {\r\n\t\t\t\t\t\t\tv[i][j] = aj;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tv[i][j] = aj.clone().lerp(bj, j / rows);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} // construct all of the faces\r\n\r\n\r\n\t\t\t\tfor (let i = 0; i < cols; i++) {\r\n\t\t\t\t\tfor (let j = 0; j < 2 * (cols - i) - 1; j++) {\r\n\t\t\t\t\t\tconst k = Math.floor(j / 2);\r\n\r\n\t\t\t\t\t\tif (j % 2 === 0) {\r\n\t\t\t\t\t\t\tpushVertex(v[i][k + 1]);\r\n\t\t\t\t\t\t\tpushVertex(v[i + 1][k]);\r\n\t\t\t\t\t\t\tpushVertex(v[i][k]);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpushVertex(v[i][k + 1]);\r\n\t\t\t\t\t\t\tpushVertex(v[i + 1][k + 1]);\r\n\t\t\t\t\t\t\tpushVertex(v[i + 1][k]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfunction applyRadius(radius) {\r\n\t\t\t\tconst vertex = new Vector3(); // iterate over the entire buffer and apply the radius to each vertex\r\n\r\n\t\t\t\tfor (let i = 0; i < vertexBuffer.length; i += 3) {\r\n\t\t\t\t\tvertex.x = vertexBuffer[i + 0];\r\n\t\t\t\t\tvertex.y = vertexBuffer[i + 1];\r\n\t\t\t\t\tvertex.z = vertexBuffer[i + 2];\r\n\t\t\t\t\tvertex.normalize().multiplyScalar(radius);\r\n\t\t\t\t\tvertexBuffer[i + 0] = vertex.x;\r\n\t\t\t\t\tvertexBuffer[i + 1] = vertex.y;\r\n\t\t\t\t\tvertexBuffer[i + 2] = vertex.z;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfunction generateUVs() {\r\n\t\t\t\tconst vertex = new Vector3();\r\n\r\n\t\t\t\tfor (let i = 0; i < vertexBuffer.length; i += 3) {\r\n\t\t\t\t\tvertex.x = vertexBuffer[i + 0];\r\n\t\t\t\t\tvertex.y = vertexBuffer[i + 1];\r\n\t\t\t\t\tvertex.z = vertexBuffer[i + 2];\r\n\t\t\t\t\tconst u = azimuth(vertex) / 2 / Math.PI + 0.5;\r\n\t\t\t\t\tconst v = inclination(vertex) / Math.PI + 0.5;\r\n\t\t\t\t\tuvBuffer.push(u, 1 - v);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcorrectUVs();\r\n\t\t\t\tcorrectSeam();\r\n\t\t\t}\r\n\r\n\t\t\tfunction correctSeam() {\r\n\t\t\t\t// handle case when face straddles the seam, see #3269\r\n\t\t\t\tfor (let i = 0; i < uvBuffer.length; i += 6) {\r\n\t\t\t\t\t// uv data of a single face\r\n\t\t\t\t\tconst x0 = uvBuffer[i + 0];\r\n\t\t\t\t\tconst x1 = uvBuffer[i + 2];\r\n\t\t\t\t\tconst x2 = uvBuffer[i + 4];\r\n\t\t\t\t\tconst max = Math.max(x0, x1, x2);\r\n\t\t\t\t\tconst min = Math.min(x0, x1, x2); // 0.9 is somewhat arbitrary\r\n\r\n\t\t\t\t\tif (max > 0.9 && min < 0.1) {\r\n\t\t\t\t\t\tif (x0 < 0.2) uvBuffer[i + 0] += 1;\r\n\t\t\t\t\t\tif (x1 < 0.2) uvBuffer[i + 2] += 1;\r\n\t\t\t\t\t\tif (x2 < 0.2) uvBuffer[i + 4] += 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfunction pushVertex(vertex) {\r\n\t\t\t\tvertexBuffer.push(vertex.x, vertex.y, vertex.z);\r\n\t\t\t}\r\n\r\n\t\t\tfunction getVertexByIndex(index, vertex) {\r\n\t\t\t\tconst stride = index * 3;\r\n\t\t\t\tvertex.x = vertices[stride + 0];\r\n\t\t\t\tvertex.y = vertices[stride + 1];\r\n\t\t\t\tvertex.z = vertices[stride + 2];\r\n\t\t\t}\r\n\r\n\t\t\tfunction correctUVs() {\r\n\t\t\t\tconst a = new Vector3();\r\n\t\t\t\tconst b = new Vector3();\r\n\t\t\t\tconst c = new Vector3();\r\n\t\t\t\tconst centroid = new Vector3();\r\n\t\t\t\tconst uvA = new Vector2();\r\n\t\t\t\tconst uvB = new Vector2();\r\n\t\t\t\tconst uvC = new Vector2();\r\n\r\n\t\t\t\tfor (let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6) {\r\n\t\t\t\t\ta.set(vertexBuffer[i + 0], vertexBuffer[i + 1], vertexBuffer[i + 2]);\r\n\t\t\t\t\tb.set(vertexBuffer[i + 3], vertexBuffer[i + 4], vertexBuffer[i + 5]);\r\n\t\t\t\t\tc.set(vertexBuffer[i + 6], vertexBuffer[i + 7], vertexBuffer[i + 8]);\r\n\t\t\t\t\tuvA.set(uvBuffer[j + 0], uvBuffer[j + 1]);\r\n\t\t\t\t\tuvB.set(uvBuffer[j + 2], uvBuffer[j + 3]);\r\n\t\t\t\t\tuvC.set(uvBuffer[j + 4], uvBuffer[j + 5]);\r\n\t\t\t\t\tcentroid.copy(a).add(b).add(c).divideScalar(3);\r\n\t\t\t\t\tconst azi = azimuth(centroid);\r\n\t\t\t\t\tcorrectUV(uvA, j + 0, a, azi);\r\n\t\t\t\t\tcorrectUV(uvB, j + 2, b, azi);\r\n\t\t\t\t\tcorrectUV(uvC, j + 4, c, azi);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfunction correctUV(uv, stride, vector, azimuth) {\r\n\t\t\t\tif (azimuth < 0 && uv.x === 1) {\r\n\t\t\t\t\tuvBuffer[stride] = uv.x - 1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (vector.x === 0 && vector.z === 0) {\r\n\t\t\t\t\tuvBuffer[stride] = azimuth / 2 / Math.PI + 0.5;\r\n\t\t\t\t}\r\n\t\t\t} // Angle around the Y axis, counter-clockwise when looking from above.\r\n\r\n\r\n\t\t\tfunction azimuth(vector) {\r\n\t\t\t\treturn Math.atan2(vector.z, -vector.x);\r\n\t\t\t} // Angle above the XZ plane.\r\n\r\n\r\n\t\t\tfunction inclination(vector) {\r\n\t\t\t\treturn Math.atan2(-vector.y, Math.sqrt(vector.x * vector.x + vector.z * vector.z));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tstatic fromJSON(data) {\r\n\t\t\treturn new PolyhedronGeometry(data.vertices, data.indices, data.radius, data.details);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass DodecahedronGeometry extends PolyhedronGeometry {\r\n\t\tconstructor(radius = 1, detail = 0) {\r\n\t\t\tconst t = (1 + Math.sqrt(5)) / 2;\r\n\t\t\tconst r = 1 / t;\r\n\t\t\tconst vertices = [// (±1, ±1, ±1)\r\n\t\t\t-1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, // (0, ±1/φ, ±φ)\r\n\t\t\t0, -r, -t, 0, -r, t, 0, r, -t, 0, r, t, // (±1/φ, ±φ, 0)\r\n\t\t\t-r, -t, 0, -r, t, 0, r, -t, 0, r, t, 0, // (±φ, 0, ±1/φ)\r\n\t\t\t-t, 0, -r, t, 0, -r, -t, 0, r, t, 0, r];\r\n\t\t\tconst indices = [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9];\r\n\t\t\tsuper(vertices, indices, radius, detail);\r\n\t\t\tthis.type = 'DodecahedronGeometry';\r\n\t\t\tthis.parameters = {\r\n\t\t\t\tradius: radius,\r\n\t\t\t\tdetail: detail\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tstatic fromJSON(data) {\r\n\t\t\treturn new DodecahedronGeometry(data.radius, data.detail);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst _v0 = new Vector3();\r\n\r\n\tconst _v1$1 = new Vector3();\r\n\r\n\tconst _normal = new Vector3();\r\n\r\n\tconst _triangle = new Triangle();\r\n\r\n\tclass EdgesGeometry extends BufferGeometry {\r\n\t\tconstructor(geometry, thresholdAngle) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'EdgesGeometry';\r\n\t\t\tthis.parameters = {\r\n\t\t\t\tthresholdAngle: thresholdAngle\r\n\t\t\t};\r\n\t\t\tthresholdAngle = thresholdAngle !== undefined ? thresholdAngle : 1;\r\n\r\n\t\t\tif (geometry.isGeometry === true) {\r\n\t\t\t\tconsole.error('THREE.EdgesGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst thresholdDot = Math.cos(DEG2RAD * thresholdAngle);\r\n\t\t\tconst indexAttr = geometry.getIndex();\r\n\t\t\tconst positionAttr = geometry.getAttribute('position');\r\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\r\n\t\t\tconst indexArr = [0, 0, 0];\r\n\t\t\tconst vertKeys = ['a', 'b', 'c'];\r\n\t\t\tconst hashes = new Array(3);\r\n\t\t\tconst edgeData = {};\r\n\t\t\tconst vertices = [];\r\n\r\n\t\t\tfor (let i = 0; i < indexCount; i += 3) {\r\n\t\t\t\tif (indexAttr) {\r\n\t\t\t\t\tindexArr[0] = indexAttr.getX(i);\r\n\t\t\t\t\tindexArr[1] = indexAttr.getX(i + 1);\r\n\t\t\t\t\tindexArr[2] = indexAttr.getX(i + 2);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tindexArr[0] = i;\r\n\t\t\t\t\tindexArr[1] = i + 1;\r\n\t\t\t\t\tindexArr[2] = i + 2;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst {\r\n\t\t\t\t\ta,\r\n\t\t\t\t\tb,\r\n\t\t\t\t\tc\r\n\t\t\t\t} = _triangle;\r\n\t\t\t\ta.fromBufferAttribute(positionAttr, indexArr[0]);\r\n\t\t\t\tb.fromBufferAttribute(positionAttr, indexArr[1]);\r\n\t\t\t\tc.fromBufferAttribute(positionAttr, indexArr[2]);\r\n\r\n\t\t\t\t_triangle.getNormal(_normal); // create hashes for the edge from the vertices\r\n\r\n\r\n\t\t\t\thashes[0] = `${a.x},${a.y},${a.z}`;\r\n\t\t\t\thashes[1] = `${b.x},${b.y},${b.z}`;\r\n\t\t\t\thashes[2] = `${c.x},${c.y},${c.z}`; // skip degenerate triangles\r\n\r\n\t\t\t\tif (hashes[0] === hashes[1] || hashes[1] === hashes[2] || hashes[2] === hashes[0]) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t} // iterate over every edge\r\n\r\n\r\n\t\t\t\tfor (let j = 0; j < 3; j++) {\r\n\t\t\t\t\t// get the first and next vertex making up the edge\r\n\t\t\t\t\tconst jNext = (j + 1) % 3;\r\n\t\t\t\t\tconst vecHash0 = hashes[j];\r\n\t\t\t\t\tconst vecHash1 = hashes[jNext];\r\n\t\t\t\t\tconst v0 = _triangle[vertKeys[j]];\r\n\t\t\t\t\tconst v1 = _triangle[vertKeys[jNext]];\r\n\t\t\t\t\tconst hash = `${vecHash0}_${vecHash1}`;\r\n\t\t\t\t\tconst reverseHash = `${vecHash1}_${vecHash0}`;\r\n\r\n\t\t\t\t\tif (reverseHash in edgeData && edgeData[reverseHash]) {\r\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\r\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\r\n\t\t\t\t\t\tif (_normal.dot(edgeData[reverseHash].normal) <= thresholdDot) {\r\n\t\t\t\t\t\t\tvertices.push(v0.x, v0.y, v0.z);\r\n\t\t\t\t\t\t\tvertices.push(v1.x, v1.y, v1.z);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tedgeData[reverseHash] = null;\r\n\t\t\t\t\t} else if (!(hash in edgeData)) {\r\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\r\n\t\t\t\t\t\tedgeData[hash] = {\r\n\t\t\t\t\t\t\tindex0: indexArr[j],\r\n\t\t\t\t\t\t\tindex1: indexArr[jNext],\r\n\t\t\t\t\t\t\tnormal: _normal.clone()\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} // iterate over all remaining, unmatched edges and add them to the vertex array\r\n\r\n\r\n\t\t\tfor (const key in edgeData) {\r\n\t\t\t\tif (edgeData[key]) {\r\n\t\t\t\t\tconst {\r\n\t\t\t\t\t\tindex0,\r\n\t\t\t\t\t\tindex1\r\n\t\t\t\t\t} = edgeData[key];\r\n\r\n\t\t\t\t\t_v0.fromBufferAttribute(positionAttr, index0);\r\n\r\n\t\t\t\t\t_v1$1.fromBufferAttribute(positionAttr, index1);\r\n\r\n\t\t\t\t\tvertices.push(_v0.x, _v0.y, _v0.z);\r\n\t\t\t\t\tvertices.push(_v1$1.x, _v1$1.y, _v1$1.z);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Extensible curve object.\r\n\t *\r\n\t * Some common of curve methods:\r\n\t * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\r\n\t * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\r\n\t * .getPoints(), .getSpacedPoints()\r\n\t * .getLength()\r\n\t * .updateArcLengths()\r\n\t *\r\n\t * This following curves inherit from THREE.Curve:\r\n\t *\r\n\t * -- 2D curves --\r\n\t * THREE.ArcCurve\r\n\t * THREE.CubicBezierCurve\r\n\t * THREE.EllipseCurve\r\n\t * THREE.LineCurve\r\n\t * THREE.QuadraticBezierCurve\r\n\t * THREE.SplineCurve\r\n\t *\r\n\t * -- 3D curves --\r\n\t * THREE.CatmullRomCurve3\r\n\t * THREE.CubicBezierCurve3\r\n\t * THREE.LineCurve3\r\n\t * THREE.QuadraticBezierCurve3\r\n\t *\r\n\t * A series of curves can be represented as a THREE.CurvePath.\r\n\t *\r\n\t **/\r\n\r\n\tclass Curve {\r\n\t\tconstructor() {\r\n\t\t\tthis.type = 'Curve';\r\n\t\t\tthis.arcLengthDivisions = 200;\r\n\t\t} // Virtual base class method to overwrite and implement in subclasses\r\n\t\t//\t- t [0 .. 1]\r\n\r\n\r\n\t\tgetPoint()\r\n\t\t/* t, optionalTarget */\r\n\t\t{\r\n\t\t\tconsole.warn('THREE.Curve: .getPoint() not implemented.');\r\n\t\t\treturn null;\r\n\t\t} // Get point at relative position in curve according to arc length\r\n\t\t// - u [0 .. 1]\r\n\r\n\r\n\t\tgetPointAt(u, optionalTarget) {\r\n\t\t\tconst t = this.getUtoTmapping(u);\r\n\t\t\treturn this.getPoint(t, optionalTarget);\r\n\t\t} // Get sequence of points using getPoint( t )\r\n\r\n\r\n\t\tgetPoints(divisions = 5) {\r\n\t\t\tconst points = [];\r\n\r\n\t\t\tfor (let d = 0; d <= divisions; d++) {\r\n\t\t\t\tpoints.push(this.getPoint(d / divisions));\r\n\t\t\t}\r\n\r\n\t\t\treturn points;\r\n\t\t} // Get sequence of points using getPointAt( u )\r\n\r\n\r\n\t\tgetSpacedPoints(divisions = 5) {\r\n\t\t\tconst points = [];\r\n\r\n\t\t\tfor (let d = 0; d <= divisions; d++) {\r\n\t\t\t\tpoints.push(this.getPointAt(d / divisions));\r\n\t\t\t}\r\n\r\n\t\t\treturn points;\r\n\t\t} // Get total curve arc length\r\n\r\n\r\n\t\tgetLength() {\r\n\t\t\tconst lengths = this.getLengths();\r\n\t\t\treturn lengths[lengths.length - 1];\r\n\t\t} // Get list of cumulative segment lengths\r\n\r\n\r\n\t\tgetLengths(divisions = this.arcLengthDivisions) {\r\n\t\t\tif (this.cacheArcLengths && this.cacheArcLengths.length === divisions + 1 && !this.needsUpdate) {\r\n\t\t\t\treturn this.cacheArcLengths;\r\n\t\t\t}\r\n\r\n\t\t\tthis.needsUpdate = false;\r\n\t\t\tconst cache = [];\r\n\t\t\tlet current,\r\n\t\t\t\t\tlast = this.getPoint(0);\r\n\t\t\tlet sum = 0;\r\n\t\t\tcache.push(0);\r\n\r\n\t\t\tfor (let p = 1; p <= divisions; p++) {\r\n\t\t\t\tcurrent = this.getPoint(p / divisions);\r\n\t\t\t\tsum += current.distanceTo(last);\r\n\t\t\t\tcache.push(sum);\r\n\t\t\t\tlast = current;\r\n\t\t\t}\r\n\r\n\t\t\tthis.cacheArcLengths = cache;\r\n\t\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\r\n\t\t}\r\n\r\n\t\tupdateArcLengths() {\r\n\t\t\tthis.needsUpdate = true;\r\n\t\t\tthis.getLengths();\r\n\t\t} // Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\r\n\r\n\r\n\t\tgetUtoTmapping(u, distance) {\r\n\t\t\tconst arcLengths = this.getLengths();\r\n\t\t\tlet i = 0;\r\n\t\t\tconst il = arcLengths.length;\r\n\t\t\tlet targetArcLength; // The targeted u distance value to get\r\n\r\n\t\t\tif (distance) {\r\n\t\t\t\ttargetArcLength = distance;\r\n\t\t\t} else {\r\n\t\t\t\ttargetArcLength = u * arcLengths[il - 1];\r\n\t\t\t} // binary search for the index with largest value smaller than target u distance\r\n\r\n\r\n\t\t\tlet low = 0,\r\n\t\t\t\t\thigh = il - 1,\r\n\t\t\t\t\tcomparison;\r\n\r\n\t\t\twhile (low <= high) {\r\n\t\t\t\ti = Math.floor(low + (high - low) / 2); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\r\n\r\n\t\t\t\tcomparison = arcLengths[i] - targetArcLength;\r\n\r\n\t\t\t\tif (comparison < 0) {\r\n\t\t\t\t\tlow = i + 1;\r\n\t\t\t\t} else if (comparison > 0) {\r\n\t\t\t\t\thigh = i - 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\thigh = i;\r\n\t\t\t\t\tbreak; // DONE\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ti = high;\r\n\r\n\t\t\tif (arcLengths[i] === targetArcLength) {\r\n\t\t\t\treturn i / (il - 1);\r\n\t\t\t} // we could get finer grain at lengths, or use simple interpolation between two points\r\n\r\n\r\n\t\t\tconst lengthBefore = arcLengths[i];\r\n\t\t\tconst lengthAfter = arcLengths[i + 1];\r\n\t\t\tconst segmentLength = lengthAfter - lengthBefore; // determine where we are between the 'before' and 'after' points\r\n\r\n\t\t\tconst segmentFraction = (targetArcLength - lengthBefore) / segmentLength; // add that fractional amount to t\r\n\r\n\t\t\tconst t = (i + segmentFraction) / (il - 1);\r\n\t\t\treturn t;\r\n\t\t} // Returns a unit vector tangent at t\r\n\t\t// In case any sub curve does not implement its tangent derivation,\r\n\t\t// 2 points a small delta apart will be used to find its gradient\r\n\t\t// which seems to give a reasonable approximation\r\n\r\n\r\n\t\tgetTangent(t, optionalTarget) {\r\n\t\t\tconst delta = 0.0001;\r\n\t\t\tlet t1 = t - delta;\r\n\t\t\tlet t2 = t + delta; // Capping in case of danger\r\n\r\n\t\t\tif (t1 < 0) t1 = 0;\r\n\t\t\tif (t2 > 1) t2 = 1;\r\n\t\t\tconst pt1 = this.getPoint(t1);\r\n\t\t\tconst pt2 = this.getPoint(t2);\r\n\t\t\tconst tangent = optionalTarget || (pt1.isVector2 ? new Vector2() : new Vector3());\r\n\t\t\ttangent.copy(pt2).sub(pt1).normalize();\r\n\t\t\treturn tangent;\r\n\t\t}\r\n\r\n\t\tgetTangentAt(u, optionalTarget) {\r\n\t\t\tconst t = this.getUtoTmapping(u);\r\n\t\t\treturn this.getTangent(t, optionalTarget);\r\n\t\t}\r\n\r\n\t\tcomputeFrenetFrames(segments, closed) {\r\n\t\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\r\n\t\t\tconst normal = new Vector3();\r\n\t\t\tconst tangents = [];\r\n\t\t\tconst normals = [];\r\n\t\t\tconst binormals = [];\r\n\t\t\tconst vec = new Vector3();\r\n\t\t\tconst mat = new Matrix4(); // compute the tangent vectors for each segment on the curve\r\n\r\n\t\t\tfor (let i = 0; i <= segments; i++) {\r\n\t\t\t\tconst u = i / segments;\r\n\t\t\t\ttangents[i] = this.getTangentAt(u, new Vector3());\r\n\t\t\t\ttangents[i].normalize();\r\n\t\t\t} // select an initial normal vector perpendicular to the first tangent vector,\r\n\t\t\t// and in the direction of the minimum tangent xyz component\r\n\r\n\r\n\t\t\tnormals[0] = new Vector3();\r\n\t\t\tbinormals[0] = new Vector3();\r\n\t\t\tlet min = Number.MAX_VALUE;\r\n\t\t\tconst tx = Math.abs(tangents[0].x);\r\n\t\t\tconst ty = Math.abs(tangents[0].y);\r\n\t\t\tconst tz = Math.abs(tangents[0].z);\r\n\r\n\t\t\tif (tx <= min) {\r\n\t\t\t\tmin = tx;\r\n\t\t\t\tnormal.set(1, 0, 0);\r\n\t\t\t}\r\n\r\n\t\t\tif (ty <= min) {\r\n\t\t\t\tmin = ty;\r\n\t\t\t\tnormal.set(0, 1, 0);\r\n\t\t\t}\r\n\r\n\t\t\tif (tz <= min) {\r\n\t\t\t\tnormal.set(0, 0, 1);\r\n\t\t\t}\r\n\r\n\t\t\tvec.crossVectors(tangents[0], normal).normalize();\r\n\t\t\tnormals[0].crossVectors(tangents[0], vec);\r\n\t\t\tbinormals[0].crossVectors(tangents[0], normals[0]); // compute the slowly-varying normal and binormal vectors for each segment on the curve\r\n\r\n\t\t\tfor (let i = 1; i <= segments; i++) {\r\n\t\t\t\tnormals[i] = normals[i - 1].clone();\r\n\t\t\t\tbinormals[i] = binormals[i - 1].clone();\r\n\t\t\t\tvec.crossVectors(tangents[i - 1], tangents[i]);\r\n\r\n\t\t\t\tif (vec.length() > Number.EPSILON) {\r\n\t\t\t\t\tvec.normalize();\r\n\t\t\t\t\tconst theta = Math.acos(clamp(tangents[i - 1].dot(tangents[i]), -1, 1)); // clamp for floating pt errors\r\n\r\n\t\t\t\t\tnormals[i].applyMatrix4(mat.makeRotationAxis(vec, theta));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbinormals[i].crossVectors(tangents[i], normals[i]);\r\n\t\t\t} // if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\r\n\r\n\r\n\t\t\tif (closed === true) {\r\n\t\t\t\tlet theta = Math.acos(clamp(normals[0].dot(normals[segments]), -1, 1));\r\n\t\t\t\ttheta /= segments;\r\n\r\n\t\t\t\tif (tangents[0].dot(vec.crossVectors(normals[0], normals[segments])) > 0) {\r\n\t\t\t\t\ttheta = -theta;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let i = 1; i <= segments; i++) {\r\n\t\t\t\t\t// twist a little...\r\n\t\t\t\t\tnormals[i].applyMatrix4(mat.makeRotationAxis(tangents[i], theta * i));\r\n\t\t\t\t\tbinormals[i].crossVectors(tangents[i], normals[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\ttangents: tangents,\r\n\t\t\t\tnormals: normals,\r\n\t\t\t\tbinormals: binormals\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor().copy(this);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.5,\r\n\t\t\t\t\ttype: 'Curve',\r\n\t\t\t\t\tgenerator: 'Curve.toJSON'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\r\n\t\t\tdata.type = this.type;\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\tfromJSON(json) {\r\n\t\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass EllipseCurve extends Curve {\r\n\t\tconstructor(aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'EllipseCurve';\r\n\t\t\tthis.aX = aX;\r\n\t\t\tthis.aY = aY;\r\n\t\t\tthis.xRadius = xRadius;\r\n\t\t\tthis.yRadius = yRadius;\r\n\t\t\tthis.aStartAngle = aStartAngle;\r\n\t\t\tthis.aEndAngle = aEndAngle;\r\n\t\t\tthis.aClockwise = aClockwise;\r\n\t\t\tthis.aRotation = aRotation;\r\n\t\t}\r\n\r\n\t\tgetPoint(t, optionalTarget) {\r\n\t\t\tconst point = optionalTarget || new Vector2();\r\n\t\t\tconst twoPi = Math.PI * 2;\r\n\t\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\r\n\t\t\tconst samePoints = Math.abs(deltaAngle) < Number.EPSILON; // ensures that deltaAngle is 0 .. 2 PI\r\n\r\n\t\t\twhile (deltaAngle < 0) deltaAngle += twoPi;\r\n\r\n\t\t\twhile (deltaAngle > twoPi) deltaAngle -= twoPi;\r\n\r\n\t\t\tif (deltaAngle < Number.EPSILON) {\r\n\t\t\t\tif (samePoints) {\r\n\t\t\t\t\tdeltaAngle = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdeltaAngle = twoPi;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.aClockwise === true && !samePoints) {\r\n\t\t\t\tif (deltaAngle === twoPi) {\r\n\t\t\t\t\tdeltaAngle = -twoPi;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdeltaAngle = deltaAngle - twoPi;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst angle = this.aStartAngle + t * deltaAngle;\r\n\t\t\tlet x = this.aX + this.xRadius * Math.cos(angle);\r\n\t\t\tlet y = this.aY + this.yRadius * Math.sin(angle);\r\n\r\n\t\t\tif (this.aRotation !== 0) {\r\n\t\t\t\tconst cos = Math.cos(this.aRotation);\r\n\t\t\t\tconst sin = Math.sin(this.aRotation);\r\n\t\t\t\tconst tx = x - this.aX;\r\n\t\t\t\tconst ty = y - this.aY; // Rotate the point about the center of the ellipse.\r\n\r\n\t\t\t\tx = tx * cos - ty * sin + this.aX;\r\n\t\t\t\ty = tx * sin + ty * cos + this.aY;\r\n\t\t\t}\r\n\r\n\t\t\treturn point.set(x, y);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.aX = source.aX;\r\n\t\t\tthis.aY = source.aY;\r\n\t\t\tthis.xRadius = source.xRadius;\r\n\t\t\tthis.yRadius = source.yRadius;\r\n\t\t\tthis.aStartAngle = source.aStartAngle;\r\n\t\t\tthis.aEndAngle = source.aEndAngle;\r\n\t\t\tthis.aClockwise = source.aClockwise;\r\n\t\t\tthis.aRotation = source.aRotation;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst data = super.toJSON();\r\n\t\t\tdata.aX = this.aX;\r\n\t\t\tdata.aY = this.aY;\r\n\t\t\tdata.xRadius = this.xRadius;\r\n\t\t\tdata.yRadius = this.yRadius;\r\n\t\t\tdata.aStartAngle = this.aStartAngle;\r\n\t\t\tdata.aEndAngle = this.aEndAngle;\r\n\t\t\tdata.aClockwise = this.aClockwise;\r\n\t\t\tdata.aRotation = this.aRotation;\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\tfromJSON(json) {\r\n\t\t\tsuper.fromJSON(json);\r\n\t\t\tthis.aX = json.aX;\r\n\t\t\tthis.aY = json.aY;\r\n\t\t\tthis.xRadius = json.xRadius;\r\n\t\t\tthis.yRadius = json.yRadius;\r\n\t\t\tthis.aStartAngle = json.aStartAngle;\r\n\t\t\tthis.aEndAngle = json.aEndAngle;\r\n\t\t\tthis.aClockwise = json.aClockwise;\r\n\t\t\tthis.aRotation = json.aRotation;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tEllipseCurve.prototype.isEllipseCurve = true;\r\n\r\n\tclass ArcCurve extends EllipseCurve {\r\n\t\tconstructor(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\r\n\t\t\tsuper(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\r\n\t\t\tthis.type = 'ArcCurve';\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tArcCurve.prototype.isArcCurve = true;\r\n\r\n\t/**\r\n\t * Centripetal CatmullRom Curve - which is useful for avoiding\r\n\t * cusps and self-intersections in non-uniform catmull rom curves.\r\n\t * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\r\n\t *\r\n\t * curve.type accepts centripetal(default), chordal and catmullrom\r\n\t * curve.tension is used for catmullrom which defaults to 0.5\r\n\t */\r\n\r\n\t/*\r\n\tBased on an optimized c++ solution in\r\n\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\r\n\t - http://ideone.com/NoEbVM\r\n\r\n\tThis CubicPoly class could be used for reusing some variables and calculations,\r\n\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\r\n\twhich can be placed in CurveUtils.\r\n\t*/\r\n\r\n\tfunction CubicPoly() {\r\n\t\tlet c0 = 0,\r\n\t\t\t\tc1 = 0,\r\n\t\t\t\tc2 = 0,\r\n\t\t\t\tc3 = 0;\r\n\t\t/*\r\n\t\t * Compute coefficients for a cubic polynomial\r\n\t\t *\t p(s) = c0 + c1*s + c2*s^2 + c3*s^3\r\n\t\t * such that\r\n\t\t *\t p(0) = x0, p(1) = x1\r\n\t\t *\tand\r\n\t\t *\t p'(0) = t0, p'(1) = t1.\r\n\t\t */\r\n\r\n\t\tfunction init(x0, x1, t0, t1) {\r\n\t\t\tc0 = x0;\r\n\t\t\tc1 = t0;\r\n\t\t\tc2 = -3 * x0 + 3 * x1 - 2 * t0 - t1;\r\n\t\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tinitCatmullRom: function (x0, x1, x2, x3, tension) {\r\n\t\t\t\tinit(x1, x2, tension * (x2 - x0), tension * (x3 - x1));\r\n\t\t\t},\r\n\t\t\tinitNonuniformCatmullRom: function (x0, x1, x2, x3, dt0, dt1, dt2) {\r\n\t\t\t\t// compute tangents when parameterized in [t1,t2]\r\n\t\t\t\tlet t1 = (x1 - x0) / dt0 - (x2 - x0) / (dt0 + dt1) + (x2 - x1) / dt1;\r\n\t\t\t\tlet t2 = (x2 - x1) / dt1 - (x3 - x1) / (dt1 + dt2) + (x3 - x2) / dt2; // rescale tangents for parametrization in [0,1]\r\n\r\n\t\t\t\tt1 *= dt1;\r\n\t\t\t\tt2 *= dt1;\r\n\t\t\t\tinit(x1, x2, t1, t2);\r\n\t\t\t},\r\n\t\t\tcalc: function (t) {\r\n\t\t\t\tconst t2 = t * t;\r\n\t\t\t\tconst t3 = t2 * t;\r\n\t\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\r\n\t\t\t}\r\n\t\t};\r\n\t} //\r\n\r\n\r\n\tconst tmp = new Vector3();\r\n\tconst px = new CubicPoly(),\r\n\t\t\t\tpy = new CubicPoly(),\r\n\t\t\t\tpz = new CubicPoly();\r\n\r\n\tclass CatmullRomCurve3 extends Curve {\r\n\t\tconstructor(points = [], closed = false, curveType = 'centripetal', tension = 0.5) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'CatmullRomCurve3';\r\n\t\t\tthis.points = points;\r\n\t\t\tthis.closed = closed;\r\n\t\t\tthis.curveType = curveType;\r\n\t\t\tthis.tension = tension;\r\n\t\t}\r\n\r\n\t\tgetPoint(t, optionalTarget = new Vector3()) {\r\n\t\t\tconst point = optionalTarget;\r\n\t\t\tconst points = this.points;\r\n\t\t\tconst l = points.length;\r\n\t\t\tconst p = (l - (this.closed ? 0 : 1)) * t;\r\n\t\t\tlet intPoint = Math.floor(p);\r\n\t\t\tlet weight = p - intPoint;\r\n\r\n\t\t\tif (this.closed) {\r\n\t\t\t\tintPoint += intPoint > 0 ? 0 : (Math.floor(Math.abs(intPoint) / l) + 1) * l;\r\n\t\t\t} else if (weight === 0 && intPoint === l - 1) {\r\n\t\t\t\tintPoint = l - 2;\r\n\t\t\t\tweight = 1;\r\n\t\t\t}\r\n\r\n\t\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\r\n\r\n\t\t\tif (this.closed || intPoint > 0) {\r\n\t\t\t\tp0 = points[(intPoint - 1) % l];\r\n\t\t\t} else {\r\n\t\t\t\t// extrapolate first point\r\n\t\t\t\ttmp.subVectors(points[0], points[1]).add(points[0]);\r\n\t\t\t\tp0 = tmp;\r\n\t\t\t}\r\n\r\n\t\t\tconst p1 = points[intPoint % l];\r\n\t\t\tconst p2 = points[(intPoint + 1) % l];\r\n\r\n\t\t\tif (this.closed || intPoint + 2 < l) {\r\n\t\t\t\tp3 = points[(intPoint + 2) % l];\r\n\t\t\t} else {\r\n\t\t\t\t// extrapolate last point\r\n\t\t\t\ttmp.subVectors(points[l - 1], points[l - 2]).add(points[l - 1]);\r\n\t\t\t\tp3 = tmp;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.curveType === 'centripetal' || this.curveType === 'chordal') {\r\n\t\t\t\t// init Centripetal / Chordal Catmull-Rom\r\n\t\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\r\n\t\t\t\tlet dt0 = Math.pow(p0.distanceToSquared(p1), pow);\r\n\t\t\t\tlet dt1 = Math.pow(p1.distanceToSquared(p2), pow);\r\n\t\t\t\tlet dt2 = Math.pow(p2.distanceToSquared(p3), pow); // safety check for repeated points\r\n\r\n\t\t\t\tif (dt1 < 1e-4) dt1 = 1.0;\r\n\t\t\t\tif (dt0 < 1e-4) dt0 = dt1;\r\n\t\t\t\tif (dt2 < 1e-4) dt2 = dt1;\r\n\t\t\t\tpx.initNonuniformCatmullRom(p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2);\r\n\t\t\t\tpy.initNonuniformCatmullRom(p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2);\r\n\t\t\t\tpz.initNonuniformCatmullRom(p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2);\r\n\t\t\t} else if (this.curveType === 'catmullrom') {\r\n\t\t\t\tpx.initCatmullRom(p0.x, p1.x, p2.x, p3.x, this.tension);\r\n\t\t\t\tpy.initCatmullRom(p0.y, p1.y, p2.y, p3.y, this.tension);\r\n\t\t\t\tpz.initCatmullRom(p0.z, p1.z, p2.z, p3.z, this.tension);\r\n\t\t\t}\r\n\r\n\t\t\tpoint.set(px.calc(weight), py.calc(weight), pz.calc(weight));\r\n\t\t\treturn point;\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.points = [];\r\n\r\n\t\t\tfor (let i = 0, l = source.points.length; i < l; i++) {\r\n\t\t\t\tconst point = source.points[i];\r\n\t\t\t\tthis.points.push(point.clone());\r\n\t\t\t}\r\n\r\n\t\t\tthis.closed = source.closed;\r\n\t\t\tthis.curveType = source.curveType;\r\n\t\t\tthis.tension = source.tension;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst data = super.toJSON();\r\n\t\t\tdata.points = [];\r\n\r\n\t\t\tfor (let i = 0, l = this.points.length; i < l; i++) {\r\n\t\t\t\tconst point = this.points[i];\r\n\t\t\t\tdata.points.push(point.toArray());\r\n\t\t\t}\r\n\r\n\t\t\tdata.closed = this.closed;\r\n\t\t\tdata.curveType = this.curveType;\r\n\t\t\tdata.tension = this.tension;\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\tfromJSON(json) {\r\n\t\t\tsuper.fromJSON(json);\r\n\t\t\tthis.points = [];\r\n\r\n\t\t\tfor (let i = 0, l = json.points.length; i < l; i++) {\r\n\t\t\t\tconst point = json.points[i];\r\n\t\t\t\tthis.points.push(new Vector3().fromArray(point));\r\n\t\t\t}\r\n\r\n\t\t\tthis.closed = json.closed;\r\n\t\t\tthis.curveType = json.curveType;\r\n\t\t\tthis.tension = json.tension;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\r\n\r\n\t/**\r\n\t * Bezier Curves formulas obtained from\r\n\t * http://en.wikipedia.org/wiki/Bézier_curve\r\n\t */\r\n\tfunction CatmullRom(t, p0, p1, p2, p3) {\r\n\t\tconst v0 = (p2 - p0) * 0.5;\r\n\t\tconst v1 = (p3 - p1) * 0.5;\r\n\t\tconst t2 = t * t;\r\n\t\tconst t3 = t * t2;\r\n\t\treturn (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\r\n\t} //\r\n\r\n\r\n\tfunction QuadraticBezierP0(t, p) {\r\n\t\tconst k = 1 - t;\r\n\t\treturn k * k * p;\r\n\t}\r\n\r\n\tfunction QuadraticBezierP1(t, p) {\r\n\t\treturn 2 * (1 - t) * t * p;\r\n\t}\r\n\r\n\tfunction QuadraticBezierP2(t, p) {\r\n\t\treturn t * t * p;\r\n\t}\r\n\r\n\tfunction QuadraticBezier(t, p0, p1, p2) {\r\n\t\treturn QuadraticBezierP0(t, p0) + QuadraticBezierP1(t, p1) + QuadraticBezierP2(t, p2);\r\n\t} //\r\n\r\n\r\n\tfunction CubicBezierP0(t, p) {\r\n\t\tconst k = 1 - t;\r\n\t\treturn k * k * k * p;\r\n\t}\r\n\r\n\tfunction CubicBezierP1(t, p) {\r\n\t\tconst k = 1 - t;\r\n\t\treturn 3 * k * k * t * p;\r\n\t}\r\n\r\n\tfunction CubicBezierP2(t, p) {\r\n\t\treturn 3 * (1 - t) * t * t * p;\r\n\t}\r\n\r\n\tfunction CubicBezierP3(t, p) {\r\n\t\treturn t * t * t * p;\r\n\t}\r\n\r\n\tfunction CubicBezier(t, p0, p1, p2, p3) {\r\n\t\treturn CubicBezierP0(t, p0) + CubicBezierP1(t, p1) + CubicBezierP2(t, p2) + CubicBezierP3(t, p3);\r\n\t}\r\n\r\n\tclass CubicBezierCurve extends Curve {\r\n\t\tconstructor(v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2()) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'CubicBezierCurve';\r\n\t\t\tthis.v0 = v0;\r\n\t\t\tthis.v1 = v1;\r\n\t\t\tthis.v2 = v2;\r\n\t\t\tthis.v3 = v3;\r\n\t\t}\r\n\r\n\t\tgetPoint(t, optionalTarget = new Vector2()) {\r\n\t\t\tconst point = optionalTarget;\r\n\t\t\tconst v0 = this.v0,\r\n\t\t\t\t\t\tv1 = this.v1,\r\n\t\t\t\t\t\tv2 = this.v2,\r\n\t\t\t\t\t\tv3 = this.v3;\r\n\t\t\tpoint.set(CubicBezier(t, v0.x, v1.x, v2.x, v3.x), CubicBezier(t, v0.y, v1.y, v2.y, v3.y));\r\n\t\t\treturn point;\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.v0.copy(source.v0);\r\n\t\t\tthis.v1.copy(source.v1);\r\n\t\t\tthis.v2.copy(source.v2);\r\n\t\t\tthis.v3.copy(source.v3);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst data = super.toJSON();\r\n\t\t\tdata.v0 = this.v0.toArray();\r\n\t\t\tdata.v1 = this.v1.toArray();\r\n\t\t\tdata.v2 = this.v2.toArray();\r\n\t\t\tdata.v3 = this.v3.toArray();\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\tfromJSON(json) {\r\n\t\t\tsuper.fromJSON(json);\r\n\t\t\tthis.v0.fromArray(json.v0);\r\n\t\t\tthis.v1.fromArray(json.v1);\r\n\t\t\tthis.v2.fromArray(json.v2);\r\n\t\t\tthis.v3.fromArray(json.v3);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tCubicBezierCurve.prototype.isCubicBezierCurve = true;\r\n\r\n\tclass CubicBezierCurve3 extends Curve {\r\n\t\tconstructor(v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3()) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'CubicBezierCurve3';\r\n\t\t\tthis.v0 = v0;\r\n\t\t\tthis.v1 = v1;\r\n\t\t\tthis.v2 = v2;\r\n\t\t\tthis.v3 = v3;\r\n\t\t}\r\n\r\n\t\tgetPoint(t, optionalTarget = new Vector3()) {\r\n\t\t\tconst point = optionalTarget;\r\n\t\t\tconst v0 = this.v0,\r\n\t\t\t\t\t\tv1 = this.v1,\r\n\t\t\t\t\t\tv2 = this.v2,\r\n\t\t\t\t\t\tv3 = this.v3;\r\n\t\t\tpoint.set(CubicBezier(t, v0.x, v1.x, v2.x, v3.x), CubicBezier(t, v0.y, v1.y, v2.y, v3.y), CubicBezier(t, v0.z, v1.z, v2.z, v3.z));\r\n\t\t\treturn point;\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.v0.copy(source.v0);\r\n\t\t\tthis.v1.copy(source.v1);\r\n\t\t\tthis.v2.copy(source.v2);\r\n\t\t\tthis.v3.copy(source.v3);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst data = super.toJSON();\r\n\t\t\tdata.v0 = this.v0.toArray();\r\n\t\t\tdata.v1 = this.v1.toArray();\r\n\t\t\tdata.v2 = this.v2.toArray();\r\n\t\t\tdata.v3 = this.v3.toArray();\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\tfromJSON(json) {\r\n\t\t\tsuper.fromJSON(json);\r\n\t\t\tthis.v0.fromArray(json.v0);\r\n\t\t\tthis.v1.fromArray(json.v1);\r\n\t\t\tthis.v2.fromArray(json.v2);\r\n\t\t\tthis.v3.fromArray(json.v3);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\r\n\r\n\tclass LineCurve extends Curve {\r\n\t\tconstructor(v1 = new Vector2(), v2 = new Vector2()) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'LineCurve';\r\n\t\t\tthis.v1 = v1;\r\n\t\t\tthis.v2 = v2;\r\n\t\t}\r\n\r\n\t\tgetPoint(t, optionalTarget = new Vector2()) {\r\n\t\t\tconst point = optionalTarget;\r\n\r\n\t\t\tif (t === 1) {\r\n\t\t\t\tpoint.copy(this.v2);\r\n\t\t\t} else {\r\n\t\t\t\tpoint.copy(this.v2).sub(this.v1);\r\n\t\t\t\tpoint.multiplyScalar(t).add(this.v1);\r\n\t\t\t}\r\n\r\n\t\t\treturn point;\r\n\t\t} // Line curve is linear, so we can overwrite default getPointAt\r\n\r\n\r\n\t\tgetPointAt(u, optionalTarget) {\r\n\t\t\treturn this.getPoint(u, optionalTarget);\r\n\t\t}\r\n\r\n\t\tgetTangent(t, optionalTarget) {\r\n\t\t\tconst tangent = optionalTarget || new Vector2();\r\n\t\t\ttangent.copy(this.v2).sub(this.v1).normalize();\r\n\t\t\treturn tangent;\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.v1.copy(source.v1);\r\n\t\t\tthis.v2.copy(source.v2);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst data = super.toJSON();\r\n\t\t\tdata.v1 = this.v1.toArray();\r\n\t\t\tdata.v2 = this.v2.toArray();\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\tfromJSON(json) {\r\n\t\t\tsuper.fromJSON(json);\r\n\t\t\tthis.v1.fromArray(json.v1);\r\n\t\t\tthis.v2.fromArray(json.v2);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tLineCurve.prototype.isLineCurve = true;\r\n\r\n\tclass LineCurve3 extends Curve {\r\n\t\tconstructor(v1 = new Vector3(), v2 = new Vector3()) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'LineCurve3';\r\n\t\t\tthis.isLineCurve3 = true;\r\n\t\t\tthis.v1 = v1;\r\n\t\t\tthis.v2 = v2;\r\n\t\t}\r\n\r\n\t\tgetPoint(t, optionalTarget = new Vector3()) {\r\n\t\t\tconst point = optionalTarget;\r\n\r\n\t\t\tif (t === 1) {\r\n\t\t\t\tpoint.copy(this.v2);\r\n\t\t\t} else {\r\n\t\t\t\tpoint.copy(this.v2).sub(this.v1);\r\n\t\t\t\tpoint.multiplyScalar(t).add(this.v1);\r\n\t\t\t}\r\n\r\n\t\t\treturn point;\r\n\t\t} // Line curve is linear, so we can overwrite default getPointAt\r\n\r\n\r\n\t\tgetPointAt(u, optionalTarget) {\r\n\t\t\treturn this.getPoint(u, optionalTarget);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.v1.copy(source.v1);\r\n\t\t\tthis.v2.copy(source.v2);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst data = super.toJSON();\r\n\t\t\tdata.v1 = this.v1.toArray();\r\n\t\t\tdata.v2 = this.v2.toArray();\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\tfromJSON(json) {\r\n\t\t\tsuper.fromJSON(json);\r\n\t\t\tthis.v1.fromArray(json.v1);\r\n\t\t\tthis.v2.fromArray(json.v2);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass QuadraticBezierCurve extends Curve {\r\n\t\tconstructor(v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2()) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'QuadraticBezierCurve';\r\n\t\t\tthis.v0 = v0;\r\n\t\t\tthis.v1 = v1;\r\n\t\t\tthis.v2 = v2;\r\n\t\t}\r\n\r\n\t\tgetPoint(t, optionalTarget = new Vector2()) {\r\n\t\t\tconst point = optionalTarget;\r\n\t\t\tconst v0 = this.v0,\r\n\t\t\t\t\t\tv1 = this.v1,\r\n\t\t\t\t\t\tv2 = this.v2;\r\n\t\t\tpoint.set(QuadraticBezier(t, v0.x, v1.x, v2.x), QuadraticBezier(t, v0.y, v1.y, v2.y));\r\n\t\t\treturn point;\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.v0.copy(source.v0);\r\n\t\t\tthis.v1.copy(source.v1);\r\n\t\t\tthis.v2.copy(source.v2);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst data = super.toJSON();\r\n\t\t\tdata.v0 = this.v0.toArray();\r\n\t\t\tdata.v1 = this.v1.toArray();\r\n\t\t\tdata.v2 = this.v2.toArray();\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\tfromJSON(json) {\r\n\t\t\tsuper.fromJSON(json);\r\n\t\t\tthis.v0.fromArray(json.v0);\r\n\t\t\tthis.v1.fromArray(json.v1);\r\n\t\t\tthis.v2.fromArray(json.v2);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\r\n\r\n\tclass QuadraticBezierCurve3 extends Curve {\r\n\t\tconstructor(v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3()) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'QuadraticBezierCurve3';\r\n\t\t\tthis.v0 = v0;\r\n\t\t\tthis.v1 = v1;\r\n\t\t\tthis.v2 = v2;\r\n\t\t}\r\n\r\n\t\tgetPoint(t, optionalTarget = new Vector3()) {\r\n\t\t\tconst point = optionalTarget;\r\n\t\t\tconst v0 = this.v0,\r\n\t\t\t\t\t\tv1 = this.v1,\r\n\t\t\t\t\t\tv2 = this.v2;\r\n\t\t\tpoint.set(QuadraticBezier(t, v0.x, v1.x, v2.x), QuadraticBezier(t, v0.y, v1.y, v2.y), QuadraticBezier(t, v0.z, v1.z, v2.z));\r\n\t\t\treturn point;\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.v0.copy(source.v0);\r\n\t\t\tthis.v1.copy(source.v1);\r\n\t\t\tthis.v2.copy(source.v2);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst data = super.toJSON();\r\n\t\t\tdata.v0 = this.v0.toArray();\r\n\t\t\tdata.v1 = this.v1.toArray();\r\n\t\t\tdata.v2 = this.v2.toArray();\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\tfromJSON(json) {\r\n\t\t\tsuper.fromJSON(json);\r\n\t\t\tthis.v0.fromArray(json.v0);\r\n\t\t\tthis.v1.fromArray(json.v1);\r\n\t\t\tthis.v2.fromArray(json.v2);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\r\n\r\n\tclass SplineCurve extends Curve {\r\n\t\tconstructor(points = []) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'SplineCurve';\r\n\t\t\tthis.points = points;\r\n\t\t}\r\n\r\n\t\tgetPoint(t, optionalTarget = new Vector2()) {\r\n\t\t\tconst point = optionalTarget;\r\n\t\t\tconst points = this.points;\r\n\t\t\tconst p = (points.length - 1) * t;\r\n\t\t\tconst intPoint = Math.floor(p);\r\n\t\t\tconst weight = p - intPoint;\r\n\t\t\tconst p0 = points[intPoint === 0 ? intPoint : intPoint - 1];\r\n\t\t\tconst p1 = points[intPoint];\r\n\t\t\tconst p2 = points[intPoint > points.length - 2 ? points.length - 1 : intPoint + 1];\r\n\t\t\tconst p3 = points[intPoint > points.length - 3 ? points.length - 1 : intPoint + 2];\r\n\t\t\tpoint.set(CatmullRom(weight, p0.x, p1.x, p2.x, p3.x), CatmullRom(weight, p0.y, p1.y, p2.y, p3.y));\r\n\t\t\treturn point;\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.points = [];\r\n\r\n\t\t\tfor (let i = 0, l = source.points.length; i < l; i++) {\r\n\t\t\t\tconst point = source.points[i];\r\n\t\t\t\tthis.points.push(point.clone());\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst data = super.toJSON();\r\n\t\t\tdata.points = [];\r\n\r\n\t\t\tfor (let i = 0, l = this.points.length; i < l; i++) {\r\n\t\t\t\tconst point = this.points[i];\r\n\t\t\t\tdata.points.push(point.toArray());\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\tfromJSON(json) {\r\n\t\t\tsuper.fromJSON(json);\r\n\t\t\tthis.points = [];\r\n\r\n\t\t\tfor (let i = 0, l = json.points.length; i < l; i++) {\r\n\t\t\t\tconst point = json.points[i];\r\n\t\t\t\tthis.points.push(new Vector2().fromArray(point));\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tSplineCurve.prototype.isSplineCurve = true;\r\n\r\n\tvar Curves = /*#__PURE__*/Object.freeze({\r\n\t\t__proto__: null,\r\n\t\tArcCurve: ArcCurve,\r\n\t\tCatmullRomCurve3: CatmullRomCurve3,\r\n\t\tCubicBezierCurve: CubicBezierCurve,\r\n\t\tCubicBezierCurve3: CubicBezierCurve3,\r\n\t\tEllipseCurve: EllipseCurve,\r\n\t\tLineCurve: LineCurve,\r\n\t\tLineCurve3: LineCurve3,\r\n\t\tQuadraticBezierCurve: QuadraticBezierCurve,\r\n\t\tQuadraticBezierCurve3: QuadraticBezierCurve3,\r\n\t\tSplineCurve: SplineCurve\r\n\t});\r\n\r\n\t/**\r\n\t * Port from https://github.com/mapbox/earcut (v2.2.2)\r\n\t */\r\n\tconst Earcut = {\r\n\t\ttriangulate: function (data, holeIndices, dim = 2) {\r\n\t\t\tconst hasHoles = holeIndices && holeIndices.length;\r\n\t\t\tconst outerLen = hasHoles ? holeIndices[0] * dim : data.length;\r\n\t\t\tlet outerNode = linkedList(data, 0, outerLen, dim, true);\r\n\t\t\tconst triangles = [];\r\n\t\t\tif (!outerNode || outerNode.next === outerNode.prev) return triangles;\r\n\t\t\tlet minX, minY, maxX, maxY, x, y, invSize;\r\n\t\t\tif (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim); // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\r\n\r\n\t\t\tif (data.length > 80 * dim) {\r\n\t\t\t\tminX = maxX = data[0];\r\n\t\t\t\tminY = maxY = data[1];\r\n\r\n\t\t\t\tfor (let i = dim; i < outerLen; i += dim) {\r\n\t\t\t\t\tx = data[i];\r\n\t\t\t\t\ty = data[i + 1];\r\n\t\t\t\t\tif (x < minX) minX = x;\r\n\t\t\t\t\tif (y < minY) minY = y;\r\n\t\t\t\t\tif (x > maxX) maxX = x;\r\n\t\t\t\t\tif (y > maxY) maxY = y;\r\n\t\t\t\t} // minX, minY and invSize are later used to transform coords into integers for z-order calculation\r\n\r\n\r\n\t\t\t\tinvSize = Math.max(maxX - minX, maxY - minY);\r\n\t\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\r\n\t\t\t}\r\n\r\n\t\t\tearcutLinked(outerNode, triangles, dim, minX, minY, invSize);\r\n\t\t\treturn triangles;\r\n\t\t}\r\n\t}; // create a circular doubly linked list from polygon points in the specified winding order\r\n\r\n\tfunction linkedList(data, start, end, dim, clockwise) {\r\n\t\tlet i, last;\r\n\r\n\t\tif (clockwise === signedArea(data, start, end, dim) > 0) {\r\n\t\t\tfor (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\r\n\t\t} else {\r\n\t\t\tfor (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\r\n\t\t}\r\n\r\n\t\tif (last && equals(last, last.next)) {\r\n\t\t\tremoveNode(last);\r\n\t\t\tlast = last.next;\r\n\t\t}\r\n\r\n\t\treturn last;\r\n\t} // eliminate colinear or duplicate points\r\n\r\n\r\n\tfunction filterPoints(start, end) {\r\n\t\tif (!start) return start;\r\n\t\tif (!end) end = start;\r\n\t\tlet p = start,\r\n\t\t\t\tagain;\r\n\r\n\t\tdo {\r\n\t\t\tagain = false;\r\n\r\n\t\t\tif (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\r\n\t\t\t\tremoveNode(p);\r\n\t\t\t\tp = end = p.prev;\r\n\t\t\t\tif (p === p.next) break;\r\n\t\t\t\tagain = true;\r\n\t\t\t} else {\r\n\t\t\t\tp = p.next;\r\n\t\t\t}\r\n\t\t} while (again || p !== end);\r\n\r\n\t\treturn end;\r\n\t} // main ear slicing loop which triangulates a polygon (given as a linked list)\r\n\r\n\r\n\tfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\r\n\t\tif (!ear) return; // interlink polygon nodes in z-order\r\n\r\n\t\tif (!pass && invSize) indexCurve(ear, minX, minY, invSize);\r\n\t\tlet stop = ear,\r\n\t\t\t\tprev,\r\n\t\t\t\tnext; // iterate through ears, slicing them one by one\r\n\r\n\t\twhile (ear.prev !== ear.next) {\r\n\t\t\tprev = ear.prev;\r\n\t\t\tnext = ear.next;\r\n\r\n\t\t\tif (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\r\n\t\t\t\t// cut off the triangle\r\n\t\t\t\ttriangles.push(prev.i / dim);\r\n\t\t\t\ttriangles.push(ear.i / dim);\r\n\t\t\t\ttriangles.push(next.i / dim);\r\n\t\t\t\tremoveNode(ear); // skipping the next vertex leads to less sliver triangles\r\n\r\n\t\t\t\tear = next.next;\r\n\t\t\t\tstop = next.next;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tear = next; // if we looped through the whole remaining polygon and can't find any more ears\r\n\r\n\t\t\tif (ear === stop) {\r\n\t\t\t\t// try filtering points and slicing again\r\n\t\t\t\tif (!pass) {\r\n\t\t\t\t\tearcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1); // if this didn't work, try curing all small self-intersections locally\r\n\t\t\t\t} else if (pass === 1) {\r\n\t\t\t\t\tear = cureLocalIntersections(filterPoints(ear), triangles, dim);\r\n\t\t\t\t\tearcutLinked(ear, triangles, dim, minX, minY, invSize, 2); // as a last resort, try splitting the remaining polygon into two\r\n\t\t\t\t} else if (pass === 2) {\r\n\t\t\t\t\tsplitEarcut(ear, triangles, dim, minX, minY, invSize);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t} // check whether a polygon node forms a valid ear with adjacent nodes\r\n\r\n\r\n\tfunction isEar(ear) {\r\n\t\tconst a = ear.prev,\r\n\t\t\t\t\tb = ear,\r\n\t\t\t\t\tc = ear.next;\r\n\t\tif (area(a, b, c) >= 0) return false; // reflex, can't be an ear\r\n\t\t// now make sure we don't have other points inside the potential ear\r\n\r\n\t\tlet p = ear.next.next;\r\n\r\n\t\twhile (p !== ear.prev) {\r\n\t\t\tif (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\r\n\t\t\tp = p.next;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction isEarHashed(ear, minX, minY, invSize) {\r\n\t\tconst a = ear.prev,\r\n\t\t\t\t\tb = ear,\r\n\t\t\t\t\tc = ear.next;\r\n\t\tif (area(a, b, c) >= 0) return false; // reflex, can't be an ear\r\n\t\t// triangle bbox; min & max are calculated like this for speed\r\n\r\n\t\tconst minTX = a.x < b.x ? a.x < c.x ? a.x : c.x : b.x < c.x ? b.x : c.x,\r\n\t\t\t\t\tminTY = a.y < b.y ? a.y < c.y ? a.y : c.y : b.y < c.y ? b.y : c.y,\r\n\t\t\t\t\tmaxTX = a.x > b.x ? a.x > c.x ? a.x : c.x : b.x > c.x ? b.x : c.x,\r\n\t\t\t\t\tmaxTY = a.y > b.y ? a.y > c.y ? a.y : c.y : b.y > c.y ? b.y : c.y; // z-order range for the current triangle bbox;\r\n\r\n\t\tconst minZ = zOrder(minTX, minTY, minX, minY, invSize),\r\n\t\t\t\t\tmaxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\r\n\t\tlet p = ear.prevZ,\r\n\t\t\t\tn = ear.nextZ; // look for points inside the triangle in both directions\r\n\r\n\t\twhile (p && p.z >= minZ && n && n.z <= maxZ) {\r\n\t\t\tif (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\r\n\t\t\tp = p.prevZ;\r\n\t\t\tif (n !== ear.prev && n !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\r\n\t\t\tn = n.nextZ;\r\n\t\t} // look for remaining points in decreasing z-order\r\n\r\n\r\n\t\twhile (p && p.z >= minZ) {\r\n\t\t\tif (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\r\n\t\t\tp = p.prevZ;\r\n\t\t} // look for remaining points in increasing z-order\r\n\r\n\r\n\t\twhile (n && n.z <= maxZ) {\r\n\t\t\tif (n !== ear.prev && n !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\r\n\t\t\tn = n.nextZ;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t} // go through all polygon nodes and cure small local self-intersections\r\n\r\n\r\n\tfunction cureLocalIntersections(start, triangles, dim) {\r\n\t\tlet p = start;\r\n\r\n\t\tdo {\r\n\t\t\tconst a = p.prev,\r\n\t\t\t\t\t\tb = p.next.next;\r\n\r\n\t\t\tif (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\r\n\t\t\t\ttriangles.push(a.i / dim);\r\n\t\t\t\ttriangles.push(p.i / dim);\r\n\t\t\t\ttriangles.push(b.i / dim); // remove two nodes involved\r\n\r\n\t\t\t\tremoveNode(p);\r\n\t\t\t\tremoveNode(p.next);\r\n\t\t\t\tp = start = b;\r\n\t\t\t}\r\n\r\n\t\t\tp = p.next;\r\n\t\t} while (p !== start);\r\n\r\n\t\treturn filterPoints(p);\r\n\t} // try splitting polygon into two and triangulate them independently\r\n\r\n\r\n\tfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\r\n\t\t// look for a valid diagonal that divides the polygon into two\r\n\t\tlet a = start;\r\n\r\n\t\tdo {\r\n\t\t\tlet b = a.next.next;\r\n\r\n\t\t\twhile (b !== a.prev) {\r\n\t\t\t\tif (a.i !== b.i && isValidDiagonal(a, b)) {\r\n\t\t\t\t\t// split the polygon in two by the diagonal\r\n\t\t\t\t\tlet c = splitPolygon(a, b); // filter colinear points around the cuts\r\n\r\n\t\t\t\t\ta = filterPoints(a, a.next);\r\n\t\t\t\t\tc = filterPoints(c, c.next); // run earcut on each half\r\n\r\n\t\t\t\t\tearcutLinked(a, triangles, dim, minX, minY, invSize);\r\n\t\t\t\t\tearcutLinked(c, triangles, dim, minX, minY, invSize);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tb = b.next;\r\n\t\t\t}\r\n\r\n\t\t\ta = a.next;\r\n\t\t} while (a !== start);\r\n\t} // link every hole into the outer loop, producing a single-ring polygon without holes\r\n\r\n\r\n\tfunction eliminateHoles(data, holeIndices, outerNode, dim) {\r\n\t\tconst queue = [];\r\n\t\tlet i, len, start, end, list;\r\n\r\n\t\tfor (i = 0, len = holeIndices.length; i < len; i++) {\r\n\t\t\tstart = holeIndices[i] * dim;\r\n\t\t\tend = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\r\n\t\t\tlist = linkedList(data, start, end, dim, false);\r\n\t\t\tif (list === list.next) list.steiner = true;\r\n\t\t\tqueue.push(getLeftmost(list));\r\n\t\t}\r\n\r\n\t\tqueue.sort(compareX); // process holes from left to right\r\n\r\n\t\tfor (i = 0; i < queue.length; i++) {\r\n\t\t\teliminateHole(queue[i], outerNode);\r\n\t\t\touterNode = filterPoints(outerNode, outerNode.next);\r\n\t\t}\r\n\r\n\t\treturn outerNode;\r\n\t}\r\n\r\n\tfunction compareX(a, b) {\r\n\t\treturn a.x - b.x;\r\n\t} // find a bridge between vertices that connects hole with an outer ring and and link it\r\n\r\n\r\n\tfunction eliminateHole(hole, outerNode) {\r\n\t\touterNode = findHoleBridge(hole, outerNode);\r\n\r\n\t\tif (outerNode) {\r\n\t\t\tconst b = splitPolygon(outerNode, hole); // filter collinear points around the cuts\r\n\r\n\t\t\tfilterPoints(outerNode, outerNode.next);\r\n\t\t\tfilterPoints(b, b.next);\r\n\t\t}\r\n\t} // David Eberly's algorithm for finding a bridge between hole and outer polygon\r\n\r\n\r\n\tfunction findHoleBridge(hole, outerNode) {\r\n\t\tlet p = outerNode;\r\n\t\tconst hx = hole.x;\r\n\t\tconst hy = hole.y;\r\n\t\tlet qx = -Infinity,\r\n\t\t\t\tm; // find a segment intersected by a ray from the hole's leftmost point to the left;\r\n\t\t// segment's endpoint with lesser x will be potential connection point\r\n\r\n\t\tdo {\r\n\t\t\tif (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\r\n\t\t\t\tconst x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\r\n\r\n\t\t\t\tif (x <= hx && x > qx) {\r\n\t\t\t\t\tqx = x;\r\n\r\n\t\t\t\t\tif (x === hx) {\r\n\t\t\t\t\t\tif (hy === p.y) return p;\r\n\t\t\t\t\t\tif (hy === p.next.y) return p.next;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tm = p.x < p.next.x ? p : p.next;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tp = p.next;\r\n\t\t} while (p !== outerNode);\r\n\r\n\t\tif (!m) return null;\r\n\t\tif (hx === qx) return m; // hole touches outer segment; pick leftmost endpoint\r\n\t\t// look for points inside the triangle of hole point, segment intersection and endpoint;\r\n\t\t// if there are no points found, we have a valid connection;\r\n\t\t// otherwise choose the point of the minimum angle with the ray as connection point\r\n\r\n\t\tconst stop = m,\r\n\t\t\t\t\tmx = m.x,\r\n\t\t\t\t\tmy = m.y;\r\n\t\tlet tanMin = Infinity,\r\n\t\t\t\ttan;\r\n\t\tp = m;\r\n\r\n\t\tdo {\r\n\t\t\tif (hx >= p.x && p.x >= mx && hx !== p.x && pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\r\n\t\t\t\ttan = Math.abs(hy - p.y) / (hx - p.x); // tangential\r\n\r\n\t\t\t\tif (locallyInside(p, hole) && (tan < tanMin || tan === tanMin && (p.x > m.x || p.x === m.x && sectorContainsSector(m, p)))) {\r\n\t\t\t\t\tm = p;\r\n\t\t\t\t\ttanMin = tan;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tp = p.next;\r\n\t\t} while (p !== stop);\r\n\r\n\t\treturn m;\r\n\t} // whether sector in vertex m contains sector in vertex p in the same coordinates\r\n\r\n\r\n\tfunction sectorContainsSector(m, p) {\r\n\t\treturn area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\r\n\t} // interlink polygon nodes in z-order\r\n\r\n\r\n\tfunction indexCurve(start, minX, minY, invSize) {\r\n\t\tlet p = start;\r\n\r\n\t\tdo {\r\n\t\t\tif (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\r\n\t\t\tp.prevZ = p.prev;\r\n\t\t\tp.nextZ = p.next;\r\n\t\t\tp = p.next;\r\n\t\t} while (p !== start);\r\n\r\n\t\tp.prevZ.nextZ = null;\r\n\t\tp.prevZ = null;\r\n\t\tsortLinked(p);\r\n\t} // Simon Tatham's linked list merge sort algorithm\r\n\t// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\r\n\r\n\r\n\tfunction sortLinked(list) {\r\n\t\tlet i,\r\n\t\t\t\tp,\r\n\t\t\t\tq,\r\n\t\t\t\te,\r\n\t\t\t\ttail,\r\n\t\t\t\tnumMerges,\r\n\t\t\t\tpSize,\r\n\t\t\t\tqSize,\r\n\t\t\t\tinSize = 1;\r\n\r\n\t\tdo {\r\n\t\t\tp = list;\r\n\t\t\tlist = null;\r\n\t\t\ttail = null;\r\n\t\t\tnumMerges = 0;\r\n\r\n\t\t\twhile (p) {\r\n\t\t\t\tnumMerges++;\r\n\t\t\t\tq = p;\r\n\t\t\t\tpSize = 0;\r\n\r\n\t\t\t\tfor (i = 0; i < inSize; i++) {\r\n\t\t\t\t\tpSize++;\r\n\t\t\t\t\tq = q.nextZ;\r\n\t\t\t\t\tif (!q) break;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tqSize = inSize;\r\n\r\n\t\t\t\twhile (pSize > 0 || qSize > 0 && q) {\r\n\t\t\t\t\tif (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\r\n\t\t\t\t\t\te = p;\r\n\t\t\t\t\t\tp = p.nextZ;\r\n\t\t\t\t\t\tpSize--;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\te = q;\r\n\t\t\t\t\t\tq = q.nextZ;\r\n\t\t\t\t\t\tqSize--;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (tail) tail.nextZ = e;else list = e;\r\n\t\t\t\t\te.prevZ = tail;\r\n\t\t\t\t\ttail = e;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tp = q;\r\n\t\t\t}\r\n\r\n\t\t\ttail.nextZ = null;\r\n\t\t\tinSize *= 2;\r\n\t\t} while (numMerges > 1);\r\n\r\n\t\treturn list;\r\n\t} // z-order of a point given coords and inverse of the longer side of data bbox\r\n\r\n\r\n\tfunction zOrder(x, y, minX, minY, invSize) {\r\n\t\t// coords are transformed into non-negative 15-bit integer range\r\n\t\tx = 32767 * (x - minX) * invSize;\r\n\t\ty = 32767 * (y - minY) * invSize;\r\n\t\tx = (x | x << 8) & 0x00FF00FF;\r\n\t\tx = (x | x << 4) & 0x0F0F0F0F;\r\n\t\tx = (x | x << 2) & 0x33333333;\r\n\t\tx = (x | x << 1) & 0x55555555;\r\n\t\ty = (y | y << 8) & 0x00FF00FF;\r\n\t\ty = (y | y << 4) & 0x0F0F0F0F;\r\n\t\ty = (y | y << 2) & 0x33333333;\r\n\t\ty = (y | y << 1) & 0x55555555;\r\n\t\treturn x | y << 1;\r\n\t} // find the leftmost node of a polygon ring\r\n\r\n\r\n\tfunction getLeftmost(start) {\r\n\t\tlet p = start,\r\n\t\t\t\tleftmost = start;\r\n\r\n\t\tdo {\r\n\t\t\tif (p.x < leftmost.x || p.x === leftmost.x && p.y < leftmost.y) leftmost = p;\r\n\t\t\tp = p.next;\r\n\t\t} while (p !== start);\r\n\r\n\t\treturn leftmost;\r\n\t} // check if a point lies within a convex triangle\r\n\r\n\r\n\tfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\r\n\t\treturn (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 && (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 && (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\r\n\t} // check if a diagonal between two polygon nodes is valid (lies in polygon interior)\r\n\r\n\r\n\tfunction isValidDiagonal(a, b) {\r\n\t\treturn a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && ( // dones't intersect other edges\r\n\t\tlocallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && ( // locally visible\r\n\t\tarea(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\r\n\t\tequals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\r\n\t} // signed area of a triangle\r\n\r\n\r\n\tfunction area(p, q, r) {\r\n\t\treturn (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\r\n\t} // check if two points are equal\r\n\r\n\r\n\tfunction equals(p1, p2) {\r\n\t\treturn p1.x === p2.x && p1.y === p2.y;\r\n\t} // check if two segments intersect\r\n\r\n\r\n\tfunction intersects(p1, q1, p2, q2) {\r\n\t\tconst o1 = sign(area(p1, q1, p2));\r\n\t\tconst o2 = sign(area(p1, q1, q2));\r\n\t\tconst o3 = sign(area(p2, q2, p1));\r\n\t\tconst o4 = sign(area(p2, q2, q1));\r\n\t\tif (o1 !== o2 && o3 !== o4) return true; // general case\r\n\r\n\t\tif (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\r\n\r\n\t\tif (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\r\n\r\n\t\tif (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\r\n\r\n\t\tif (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\r\n\r\n\t\treturn false;\r\n\t} // for collinear points p, q, r, check if point q lies on segment pr\r\n\r\n\r\n\tfunction onSegment(p, q, r) {\r\n\t\treturn q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\r\n\t}\r\n\r\n\tfunction sign(num) {\r\n\t\treturn num > 0 ? 1 : num < 0 ? -1 : 0;\r\n\t} // check if a polygon diagonal intersects any polygon segments\r\n\r\n\r\n\tfunction intersectsPolygon(a, b) {\r\n\t\tlet p = a;\r\n\r\n\t\tdo {\r\n\t\t\tif (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i && intersects(p, p.next, a, b)) return true;\r\n\t\t\tp = p.next;\r\n\t\t} while (p !== a);\r\n\r\n\t\treturn false;\r\n\t} // check if a polygon diagonal is locally inside the polygon\r\n\r\n\r\n\tfunction locallyInside(a, b) {\r\n\t\treturn area(a.prev, a, a.next) < 0 ? area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 : area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\r\n\t} // check if the middle point of a polygon diagonal is inside the polygon\r\n\r\n\r\n\tfunction middleInside(a, b) {\r\n\t\tlet p = a,\r\n\t\t\t\tinside = false;\r\n\t\tconst px = (a.x + b.x) / 2,\r\n\t\t\t\t\tpy = (a.y + b.y) / 2;\r\n\r\n\t\tdo {\r\n\t\t\tif (p.y > py !== p.next.y > py && p.next.y !== p.y && px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x) inside = !inside;\r\n\t\t\tp = p.next;\r\n\t\t} while (p !== a);\r\n\r\n\t\treturn inside;\r\n\t} // link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\r\n\t// if one belongs to the outer ring and another to a hole, it merges it into a single ring\r\n\r\n\r\n\tfunction splitPolygon(a, b) {\r\n\t\tconst a2 = new Node(a.i, a.x, a.y),\r\n\t\t\t\t\tb2 = new Node(b.i, b.x, b.y),\r\n\t\t\t\t\tan = a.next,\r\n\t\t\t\t\tbp = b.prev;\r\n\t\ta.next = b;\r\n\t\tb.prev = a;\r\n\t\ta2.next = an;\r\n\t\tan.prev = a2;\r\n\t\tb2.next = a2;\r\n\t\ta2.prev = b2;\r\n\t\tbp.next = b2;\r\n\t\tb2.prev = bp;\r\n\t\treturn b2;\r\n\t} // create a node and optionally link it with previous one (in a circular doubly linked list)\r\n\r\n\r\n\tfunction insertNode(i, x, y, last) {\r\n\t\tconst p = new Node(i, x, y);\r\n\r\n\t\tif (!last) {\r\n\t\t\tp.prev = p;\r\n\t\t\tp.next = p;\r\n\t\t} else {\r\n\t\t\tp.next = last.next;\r\n\t\t\tp.prev = last;\r\n\t\t\tlast.next.prev = p;\r\n\t\t\tlast.next = p;\r\n\t\t}\r\n\r\n\t\treturn p;\r\n\t}\r\n\r\n\tfunction removeNode(p) {\r\n\t\tp.next.prev = p.prev;\r\n\t\tp.prev.next = p.next;\r\n\t\tif (p.prevZ) p.prevZ.nextZ = p.nextZ;\r\n\t\tif (p.nextZ) p.nextZ.prevZ = p.prevZ;\r\n\t}\r\n\r\n\tfunction Node(i, x, y) {\r\n\t\t// vertex index in coordinates array\r\n\t\tthis.i = i; // vertex coordinates\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y; // previous and next vertex nodes in a polygon ring\r\n\r\n\t\tthis.prev = null;\r\n\t\tthis.next = null; // z-order curve value\r\n\r\n\t\tthis.z = null; // previous and next nodes in z-order\r\n\r\n\t\tthis.prevZ = null;\r\n\t\tthis.nextZ = null; // indicates whether this is a steiner point\r\n\r\n\t\tthis.steiner = false;\r\n\t}\r\n\r\n\tfunction signedArea(data, start, end, dim) {\r\n\t\tlet sum = 0;\r\n\r\n\t\tfor (let i = start, j = end - dim; i < end; i += dim) {\r\n\t\t\tsum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\r\n\t\t\tj = i;\r\n\t\t}\r\n\r\n\t\treturn sum;\r\n\t}\r\n\r\n\tclass ShapeUtils {\r\n\t\t// calculate area of the contour polygon\r\n\t\tstatic area(contour) {\r\n\t\t\tconst n = contour.length;\r\n\t\t\tlet a = 0.0;\r\n\r\n\t\t\tfor (let p = n - 1, q = 0; q < n; p = q++) {\r\n\t\t\t\ta += contour[p].x * contour[q].y - contour[q].x * contour[p].y;\r\n\t\t\t}\r\n\r\n\t\t\treturn a * 0.5;\r\n\t\t}\r\n\r\n\t\tstatic isClockWise(pts) {\r\n\t\t\treturn ShapeUtils.area(pts) < 0;\r\n\t\t}\r\n\r\n\t\tstatic triangulateShape(contour, holes) {\r\n\t\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\r\n\r\n\t\t\tconst holeIndices = []; // array of hole indices\r\n\r\n\t\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\r\n\r\n\t\t\tremoveDupEndPts(contour);\r\n\t\t\taddContour(vertices, contour); //\r\n\r\n\t\t\tlet holeIndex = contour.length;\r\n\t\t\tholes.forEach(removeDupEndPts);\r\n\r\n\t\t\tfor (let i = 0; i < holes.length; i++) {\r\n\t\t\t\tholeIndices.push(holeIndex);\r\n\t\t\t\tholeIndex += holes[i].length;\r\n\t\t\t\taddContour(vertices, holes[i]);\r\n\t\t\t} //\r\n\r\n\r\n\t\t\tconst triangles = Earcut.triangulate(vertices, holeIndices); //\r\n\r\n\t\t\tfor (let i = 0; i < triangles.length; i += 3) {\r\n\t\t\t\tfaces.push(triangles.slice(i, i + 3));\r\n\t\t\t}\r\n\r\n\t\t\treturn faces;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction removeDupEndPts(points) {\r\n\t\tconst l = points.length;\r\n\r\n\t\tif (l > 2 && points[l - 1].equals(points[0])) {\r\n\t\t\tpoints.pop();\r\n\t\t}\r\n\t}\r\n\r\n\tfunction addContour(vertices, contour) {\r\n\t\tfor (let i = 0; i < contour.length; i++) {\r\n\t\t\tvertices.push(contour[i].x);\r\n\t\t\tvertices.push(contour[i].y);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates extruded geometry from a path shape.\r\n\t *\r\n\t * parameters = {\r\n\t *\r\n\t *\tcurveSegments: <int>, // number of points on the curves\r\n\t *\tsteps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\r\n\t *\tdepth: <float>, // Depth to extrude the shape\r\n\t *\r\n\t *\tbevelEnabled: <bool>, // turn on bevel\r\n\t *\tbevelThickness: <float>, // how deep into the original shape bevel goes\r\n\t *\tbevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\r\n\t *\tbevelOffset: <float>, // how far from shape outline does bevel start\r\n\t *\tbevelSegments: <int>, // number of bevel layers\r\n\t *\r\n\t *\textrudePath: <THREE.Curve> // curve to extrude shape along\r\n\t *\r\n\t *\tUVGenerator: <Object> // object that provides UV generator functions\r\n\t *\r\n\t * }\r\n\t */\r\n\r\n\tclass ExtrudeGeometry extends BufferGeometry {\r\n\t\tconstructor(shapes, options) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'ExtrudeGeometry';\r\n\t\t\tthis.parameters = {\r\n\t\t\t\tshapes: shapes,\r\n\t\t\t\toptions: options\r\n\t\t\t};\r\n\t\t\tshapes = Array.isArray(shapes) ? shapes : [shapes];\r\n\t\t\tconst scope = this;\r\n\t\t\tconst verticesArray = [];\r\n\t\t\tconst uvArray = [];\r\n\r\n\t\t\tfor (let i = 0, l = shapes.length; i < l; i++) {\r\n\t\t\t\tconst shape = shapes[i];\r\n\t\t\t\taddShape(shape);\r\n\t\t\t} // build geometry\r\n\r\n\r\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(verticesArray, 3));\r\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvArray, 2));\r\n\t\t\tthis.computeVertexNormals(); // functions\r\n\r\n\t\t\tfunction addShape(shape) {\r\n\t\t\t\tconst placeholder = []; // options\r\n\r\n\t\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\t\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\r\n\t\t\t\tlet depth = options.depth !== undefined ? options.depth : 100;\r\n\t\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\r\n\t\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\r\n\t\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\r\n\t\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\r\n\t\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\r\n\t\t\t\tconst extrudePath = options.extrudePath;\r\n\t\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator; // deprecated options\r\n\r\n\t\t\t\tif (options.amount !== undefined) {\r\n\t\t\t\t\tconsole.warn('THREE.ExtrudeBufferGeometry: amount has been renamed to depth.');\r\n\t\t\t\t\tdepth = options.amount;\r\n\t\t\t\t} //\r\n\r\n\r\n\t\t\t\tlet extrudePts,\r\n\t\t\t\t\t\textrudeByPath = false;\r\n\t\t\t\tlet splineTube, binormal, normal, position2;\r\n\r\n\t\t\t\tif (extrudePath) {\r\n\t\t\t\t\textrudePts = extrudePath.getSpacedPoints(steps);\r\n\t\t\t\t\textrudeByPath = true;\r\n\t\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\r\n\t\t\t\t\t// SETUP TNB variables\r\n\t\t\t\t\t// TODO1 - have a .isClosed in spline?\r\n\r\n\t\t\t\t\tsplineTube = extrudePath.computeFrenetFrames(steps, false); // console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\r\n\r\n\t\t\t\t\tbinormal = new Vector3();\r\n\t\t\t\t\tnormal = new Vector3();\r\n\t\t\t\t\tposition2 = new Vector3();\r\n\t\t\t\t} // Safeguards if bevels are not enabled\r\n\r\n\r\n\t\t\t\tif (!bevelEnabled) {\r\n\t\t\t\t\tbevelSegments = 0;\r\n\t\t\t\t\tbevelThickness = 0;\r\n\t\t\t\t\tbevelSize = 0;\r\n\t\t\t\t\tbevelOffset = 0;\r\n\t\t\t\t} // Variables initialization\r\n\r\n\r\n\t\t\t\tconst shapePoints = shape.extractPoints(curveSegments);\r\n\t\t\t\tlet vertices = shapePoints.shape;\r\n\t\t\t\tconst holes = shapePoints.holes;\r\n\t\t\t\tconst reverse = !ShapeUtils.isClockWise(vertices);\r\n\r\n\t\t\t\tif (reverse) {\r\n\t\t\t\t\tvertices = vertices.reverse(); // Maybe we should also check if holes are in the opposite direction, just to be safe ...\r\n\r\n\t\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\r\n\t\t\t\t\t\tconst ahole = holes[h];\r\n\r\n\t\t\t\t\t\tif (ShapeUtils.isClockWise(ahole)) {\r\n\t\t\t\t\t\t\tholes[h] = ahole.reverse();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst faces = ShapeUtils.triangulateShape(vertices, holes);\r\n\t\t\t\t/* Vertices */\r\n\r\n\t\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\r\n\r\n\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\r\n\t\t\t\t\tconst ahole = holes[h];\r\n\t\t\t\t\tvertices = vertices.concat(ahole);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction scalePt2(pt, vec, size) {\r\n\t\t\t\t\tif (!vec) console.error('THREE.ExtrudeGeometry: vec does not exist');\r\n\t\t\t\t\treturn vec.clone().multiplyScalar(size).add(pt);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst vlen = vertices.length,\r\n\t\t\t\t\t\t\tflen = faces.length; // Find directions for point movement\r\n\r\n\t\t\t\tfunction getBevelVec(inPt, inPrev, inNext) {\r\n\t\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\r\n\t\t\t\t\t//\t shifted by 1 unit (length of normalized vector) to the left\r\n\t\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\r\n\t\t\t\t\t//\r\n\t\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\r\n\t\t\t\t\t//\tadjacent edges of inPt at a distance of 1 unit on the left side.\r\n\t\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\r\n\t\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\r\n\t\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\r\n\r\n\t\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\r\n\t\t\t\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\r\n\t\t\t\t\tconst v_next_x = inNext.x - inPt.x,\r\n\t\t\t\t\t\t\t\tv_next_y = inNext.y - inPt.y;\r\n\t\t\t\t\tconst v_prev_lensq = v_prev_x * v_prev_x + v_prev_y * v_prev_y; // check for collinear edges\r\n\r\n\t\t\t\t\tconst collinear0 = v_prev_x * v_next_y - v_prev_y * v_next_x;\r\n\r\n\t\t\t\t\tif (Math.abs(collinear0) > Number.EPSILON) {\r\n\t\t\t\t\t\t// not collinear\r\n\t\t\t\t\t\t// length of vectors for normalizing\r\n\t\t\t\t\t\tconst v_prev_len = Math.sqrt(v_prev_lensq);\r\n\t\t\t\t\t\tconst v_next_len = Math.sqrt(v_next_x * v_next_x + v_next_y * v_next_y); // shift adjacent points by unit vectors to the left\r\n\r\n\t\t\t\t\t\tconst ptPrevShift_x = inPrev.x - v_prev_y / v_prev_len;\r\n\t\t\t\t\t\tconst ptPrevShift_y = inPrev.y + v_prev_x / v_prev_len;\r\n\t\t\t\t\t\tconst ptNextShift_x = inNext.x - v_next_y / v_next_len;\r\n\t\t\t\t\t\tconst ptNextShift_y = inNext.y + v_next_x / v_next_len; // scaling factor for v_prev to intersection point\r\n\r\n\t\t\t\t\t\tconst sf = ((ptNextShift_x - ptPrevShift_x) * v_next_y - (ptNextShift_y - ptPrevShift_y) * v_next_x) / (v_prev_x * v_next_y - v_prev_y * v_next_x); // vector from inPt to intersection point\r\n\r\n\t\t\t\t\t\tv_trans_x = ptPrevShift_x + v_prev_x * sf - inPt.x;\r\n\t\t\t\t\t\tv_trans_y = ptPrevShift_y + v_prev_y * sf - inPt.y; // Don't normalize!, otherwise sharp corners become ugly\r\n\t\t\t\t\t\t//\tbut prevent crazy spikes\r\n\r\n\t\t\t\t\t\tconst v_trans_lensq = v_trans_x * v_trans_x + v_trans_y * v_trans_y;\r\n\r\n\t\t\t\t\t\tif (v_trans_lensq <= 2) {\r\n\t\t\t\t\t\t\treturn new Vector2(v_trans_x, v_trans_y);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tshrink_by = Math.sqrt(v_trans_lensq / 2);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// handle special case of collinear edges\r\n\t\t\t\t\t\tlet direction_eq = false; // assumes: opposite\r\n\r\n\t\t\t\t\t\tif (v_prev_x > Number.EPSILON) {\r\n\t\t\t\t\t\t\tif (v_next_x > Number.EPSILON) {\r\n\t\t\t\t\t\t\t\tdirection_eq = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (v_prev_x < -Number.EPSILON) {\r\n\t\t\t\t\t\t\t\tif (v_next_x < -Number.EPSILON) {\r\n\t\t\t\t\t\t\t\t\tdirection_eq = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tif (Math.sign(v_prev_y) === Math.sign(v_next_y)) {\r\n\t\t\t\t\t\t\t\t\tdirection_eq = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (direction_eq) {\r\n\t\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\r\n\t\t\t\t\t\t\tv_trans_x = -v_prev_y;\r\n\t\t\t\t\t\t\tv_trans_y = v_prev_x;\r\n\t\t\t\t\t\t\tshrink_by = Math.sqrt(v_prev_lensq);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\r\n\t\t\t\t\t\t\tv_trans_x = v_prev_x;\r\n\t\t\t\t\t\t\tv_trans_y = v_prev_y;\r\n\t\t\t\t\t\t\tshrink_by = Math.sqrt(v_prev_lensq / 2);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn new Vector2(v_trans_x / shrink_by, v_trans_y / shrink_by);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst contourMovements = [];\r\n\r\n\t\t\t\tfor (let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i++, j++, k++) {\r\n\t\t\t\t\tif (j === il) j = 0;\r\n\t\t\t\t\tif (k === il) k = 0; //\t(j)---(i)---(k)\r\n\t\t\t\t\t// console.log('i,j,k', i, j , k)\r\n\r\n\t\t\t\t\tcontourMovements[i] = getBevelVec(contour[i], contour[j], contour[k]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst holesMovements = [];\r\n\t\t\t\tlet oneHoleMovements,\r\n\t\t\t\t\t\tverticesMovements = contourMovements.concat();\r\n\r\n\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\r\n\t\t\t\t\tconst ahole = holes[h];\r\n\t\t\t\t\toneHoleMovements = [];\r\n\r\n\t\t\t\t\tfor (let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i++, j++, k++) {\r\n\t\t\t\t\t\tif (j === il) j = 0;\r\n\t\t\t\t\t\tif (k === il) k = 0; //\t(j)---(i)---(k)\r\n\r\n\t\t\t\t\t\toneHoleMovements[i] = getBevelVec(ahole[i], ahole[j], ahole[k]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tholesMovements.push(oneHoleMovements);\r\n\t\t\t\t\tverticesMovements = verticesMovements.concat(oneHoleMovements);\r\n\t\t\t\t} // Loop bevelSegments, 1 for the front, 1 for the back\r\n\r\n\r\n\t\t\t\tfor (let b = 0; b < bevelSegments; b++) {\r\n\t\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\r\n\t\t\t\t\tconst t = b / bevelSegments;\r\n\t\t\t\t\tconst z = bevelThickness * Math.cos(t * Math.PI / 2);\r\n\t\t\t\t\tconst bs = bevelSize * Math.sin(t * Math.PI / 2) + bevelOffset; // contract shape\r\n\r\n\t\t\t\t\tfor (let i = 0, il = contour.length; i < il; i++) {\r\n\t\t\t\t\t\tconst vert = scalePt2(contour[i], contourMovements[i], bs);\r\n\t\t\t\t\t\tv(vert.x, vert.y, -z);\r\n\t\t\t\t\t} // expand holes\r\n\r\n\r\n\t\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\r\n\t\t\t\t\t\tconst ahole = holes[h];\r\n\t\t\t\t\t\toneHoleMovements = holesMovements[h];\r\n\r\n\t\t\t\t\t\tfor (let i = 0, il = ahole.length; i < il; i++) {\r\n\t\t\t\t\t\t\tconst vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\r\n\t\t\t\t\t\t\tv(vert.x, vert.y, -z);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst bs = bevelSize + bevelOffset; // Back facing vertices\r\n\r\n\t\t\t\tfor (let i = 0; i < vlen; i++) {\r\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2(vertices[i], verticesMovements[i], bs) : vertices[i];\r\n\r\n\t\t\t\t\tif (!extrudeByPath) {\r\n\t\t\t\t\t\tv(vert.x, vert.y, 0);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\r\n\t\t\t\t\t\tnormal.copy(splineTube.normals[0]).multiplyScalar(vert.x);\r\n\t\t\t\t\t\tbinormal.copy(splineTube.binormals[0]).multiplyScalar(vert.y);\r\n\t\t\t\t\t\tposition2.copy(extrudePts[0]).add(normal).add(binormal);\r\n\t\t\t\t\t\tv(position2.x, position2.y, position2.z);\r\n\t\t\t\t\t}\r\n\t\t\t\t} // Add stepped vertices...\r\n\t\t\t\t// Including front facing vertices\r\n\r\n\r\n\t\t\t\tfor (let s = 1; s <= steps; s++) {\r\n\t\t\t\t\tfor (let i = 0; i < vlen; i++) {\r\n\t\t\t\t\t\tconst vert = bevelEnabled ? scalePt2(vertices[i], verticesMovements[i], bs) : vertices[i];\r\n\r\n\t\t\t\t\t\tif (!extrudeByPath) {\r\n\t\t\t\t\t\t\tv(vert.x, vert.y, depth / steps * s);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\r\n\t\t\t\t\t\t\tnormal.copy(splineTube.normals[s]).multiplyScalar(vert.x);\r\n\t\t\t\t\t\t\tbinormal.copy(splineTube.binormals[s]).multiplyScalar(vert.y);\r\n\t\t\t\t\t\t\tposition2.copy(extrudePts[s]).add(normal).add(binormal);\r\n\t\t\t\t\t\t\tv(position2.x, position2.y, position2.z);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} // Add bevel segments planes\r\n\t\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\r\n\r\n\r\n\t\t\t\tfor (let b = bevelSegments - 1; b >= 0; b--) {\r\n\t\t\t\t\tconst t = b / bevelSegments;\r\n\t\t\t\t\tconst z = bevelThickness * Math.cos(t * Math.PI / 2);\r\n\t\t\t\t\tconst bs = bevelSize * Math.sin(t * Math.PI / 2) + bevelOffset; // contract shape\r\n\r\n\t\t\t\t\tfor (let i = 0, il = contour.length; i < il; i++) {\r\n\t\t\t\t\t\tconst vert = scalePt2(contour[i], contourMovements[i], bs);\r\n\t\t\t\t\t\tv(vert.x, vert.y, depth + z);\r\n\t\t\t\t\t} // expand holes\r\n\r\n\r\n\t\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\r\n\t\t\t\t\t\tconst ahole = holes[h];\r\n\t\t\t\t\t\toneHoleMovements = holesMovements[h];\r\n\r\n\t\t\t\t\t\tfor (let i = 0, il = ahole.length; i < il; i++) {\r\n\t\t\t\t\t\t\tconst vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\r\n\r\n\t\t\t\t\t\t\tif (!extrudeByPath) {\r\n\t\t\t\t\t\t\t\tv(vert.x, vert.y, depth + z);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tv(vert.x, vert.y + extrudePts[steps - 1].y, extrudePts[steps - 1].x + z);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t/* Faces */\r\n\t\t\t\t// Top and bottom faces\r\n\r\n\r\n\t\t\t\tbuildLidFaces(); // Sides faces\r\n\r\n\t\t\t\tbuildSideFaces(); /////\tInternal functions\r\n\r\n\t\t\t\tfunction buildLidFaces() {\r\n\t\t\t\t\tconst start = verticesArray.length / 3;\r\n\r\n\t\t\t\t\tif (bevelEnabled) {\r\n\t\t\t\t\t\tlet layer = 0; // steps + 1\r\n\r\n\t\t\t\t\t\tlet offset = vlen * layer; // Bottom faces\r\n\r\n\t\t\t\t\t\tfor (let i = 0; i < flen; i++) {\r\n\t\t\t\t\t\t\tconst face = faces[i];\r\n\t\t\t\t\t\t\tf3(face[2] + offset, face[1] + offset, face[0] + offset);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlayer = steps + bevelSegments * 2;\r\n\t\t\t\t\t\toffset = vlen * layer; // Top faces\r\n\r\n\t\t\t\t\t\tfor (let i = 0; i < flen; i++) {\r\n\t\t\t\t\t\t\tconst face = faces[i];\r\n\t\t\t\t\t\t\tf3(face[0] + offset, face[1] + offset, face[2] + offset);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Bottom faces\r\n\t\t\t\t\t\tfor (let i = 0; i < flen; i++) {\r\n\t\t\t\t\t\t\tconst face = faces[i];\r\n\t\t\t\t\t\t\tf3(face[2], face[1], face[0]);\r\n\t\t\t\t\t\t} // Top faces\r\n\r\n\r\n\t\t\t\t\t\tfor (let i = 0; i < flen; i++) {\r\n\t\t\t\t\t\t\tconst face = faces[i];\r\n\t\t\t\t\t\t\tf3(face[0] + vlen * steps, face[1] + vlen * steps, face[2] + vlen * steps);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tscope.addGroup(start, verticesArray.length / 3 - start, 0);\r\n\t\t\t\t} // Create faces for the z-sides of the shape\r\n\r\n\r\n\t\t\t\tfunction buildSideFaces() {\r\n\t\t\t\t\tconst start = verticesArray.length / 3;\r\n\t\t\t\t\tlet layeroffset = 0;\r\n\t\t\t\t\tsidewalls(contour, layeroffset);\r\n\t\t\t\t\tlayeroffset += contour.length;\r\n\r\n\t\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\r\n\t\t\t\t\t\tconst ahole = holes[h];\r\n\t\t\t\t\t\tsidewalls(ahole, layeroffset); //, true\r\n\r\n\t\t\t\t\t\tlayeroffset += ahole.length;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tscope.addGroup(start, verticesArray.length / 3 - start, 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction sidewalls(contour, layeroffset) {\r\n\t\t\t\t\tlet i = contour.length;\r\n\r\n\t\t\t\t\twhile (--i >= 0) {\r\n\t\t\t\t\t\tconst j = i;\r\n\t\t\t\t\t\tlet k = i - 1;\r\n\t\t\t\t\t\tif (k < 0) k = contour.length - 1; //console.log('b', i,j, i-1, k,vertices.length);\r\n\r\n\t\t\t\t\t\tfor (let s = 0, sl = steps + bevelSegments * 2; s < sl; s++) {\r\n\t\t\t\t\t\t\tconst slen1 = vlen * s;\r\n\t\t\t\t\t\t\tconst slen2 = vlen * (s + 1);\r\n\t\t\t\t\t\t\tconst a = layeroffset + j + slen1,\r\n\t\t\t\t\t\t\t\t\t\tb = layeroffset + k + slen1,\r\n\t\t\t\t\t\t\t\t\t\tc = layeroffset + k + slen2,\r\n\t\t\t\t\t\t\t\t\t\td = layeroffset + j + slen2;\r\n\t\t\t\t\t\t\tf4(a, b, c, d);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction v(x, y, z) {\r\n\t\t\t\t\tplaceholder.push(x);\r\n\t\t\t\t\tplaceholder.push(y);\r\n\t\t\t\t\tplaceholder.push(z);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction f3(a, b, c) {\r\n\t\t\t\t\taddVertex(a);\r\n\t\t\t\t\taddVertex(b);\r\n\t\t\t\t\taddVertex(c);\r\n\t\t\t\t\tconst nextIndex = verticesArray.length / 3;\r\n\t\t\t\t\tconst uvs = uvgen.generateTopUV(scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1);\r\n\t\t\t\t\taddUV(uvs[0]);\r\n\t\t\t\t\taddUV(uvs[1]);\r\n\t\t\t\t\taddUV(uvs[2]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction f4(a, b, c, d) {\r\n\t\t\t\t\taddVertex(a);\r\n\t\t\t\t\taddVertex(b);\r\n\t\t\t\t\taddVertex(d);\r\n\t\t\t\t\taddVertex(b);\r\n\t\t\t\t\taddVertex(c);\r\n\t\t\t\t\taddVertex(d);\r\n\t\t\t\t\tconst nextIndex = verticesArray.length / 3;\r\n\t\t\t\t\tconst uvs = uvgen.generateSideWallUV(scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1);\r\n\t\t\t\t\taddUV(uvs[0]);\r\n\t\t\t\t\taddUV(uvs[1]);\r\n\t\t\t\t\taddUV(uvs[3]);\r\n\t\t\t\t\taddUV(uvs[1]);\r\n\t\t\t\t\taddUV(uvs[2]);\r\n\t\t\t\t\taddUV(uvs[3]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction addVertex(index) {\r\n\t\t\t\t\tverticesArray.push(placeholder[index * 3 + 0]);\r\n\t\t\t\t\tverticesArray.push(placeholder[index * 3 + 1]);\r\n\t\t\t\t\tverticesArray.push(placeholder[index * 3 + 2]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction addUV(vector2) {\r\n\t\t\t\t\tuvArray.push(vector2.x);\r\n\t\t\t\t\tuvArray.push(vector2.y);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst data = super.toJSON();\r\n\t\t\tconst shapes = this.parameters.shapes;\r\n\t\t\tconst options = this.parameters.options;\r\n\t\t\treturn toJSON$1(shapes, options, data);\r\n\t\t}\r\n\r\n\t\tstatic fromJSON(data, shapes) {\r\n\t\t\tconst geometryShapes = [];\r\n\r\n\t\t\tfor (let j = 0, jl = data.shapes.length; j < jl; j++) {\r\n\t\t\t\tconst shape = shapes[data.shapes[j]];\r\n\t\t\t\tgeometryShapes.push(shape);\r\n\t\t\t}\r\n\r\n\t\t\tconst extrudePath = data.options.extrudePath;\r\n\r\n\t\t\tif (extrudePath !== undefined) {\r\n\t\t\t\tdata.options.extrudePath = new Curves[extrudePath.type]().fromJSON(extrudePath);\r\n\t\t\t}\r\n\r\n\t\t\treturn new ExtrudeGeometry(geometryShapes, data.options);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst WorldUVGenerator = {\r\n\t\tgenerateTopUV: function (geometry, vertices, indexA, indexB, indexC) {\r\n\t\t\tconst a_x = vertices[indexA * 3];\r\n\t\t\tconst a_y = vertices[indexA * 3 + 1];\r\n\t\t\tconst b_x = vertices[indexB * 3];\r\n\t\t\tconst b_y = vertices[indexB * 3 + 1];\r\n\t\t\tconst c_x = vertices[indexC * 3];\r\n\t\t\tconst c_y = vertices[indexC * 3 + 1];\r\n\t\t\treturn [new Vector2(a_x, a_y), new Vector2(b_x, b_y), new Vector2(c_x, c_y)];\r\n\t\t},\r\n\t\tgenerateSideWallUV: function (geometry, vertices, indexA, indexB, indexC, indexD) {\r\n\t\t\tconst a_x = vertices[indexA * 3];\r\n\t\t\tconst a_y = vertices[indexA * 3 + 1];\r\n\t\t\tconst a_z = vertices[indexA * 3 + 2];\r\n\t\t\tconst b_x = vertices[indexB * 3];\r\n\t\t\tconst b_y = vertices[indexB * 3 + 1];\r\n\t\t\tconst b_z = vertices[indexB * 3 + 2];\r\n\t\t\tconst c_x = vertices[indexC * 3];\r\n\t\t\tconst c_y = vertices[indexC * 3 + 1];\r\n\t\t\tconst c_z = vertices[indexC * 3 + 2];\r\n\t\t\tconst d_x = vertices[indexD * 3];\r\n\t\t\tconst d_y = vertices[indexD * 3 + 1];\r\n\t\t\tconst d_z = vertices[indexD * 3 + 2];\r\n\r\n\t\t\tif (Math.abs(a_y - b_y) < Math.abs(a_x - b_x)) {\r\n\t\t\t\treturn [new Vector2(a_x, 1 - a_z), new Vector2(b_x, 1 - b_z), new Vector2(c_x, 1 - c_z), new Vector2(d_x, 1 - d_z)];\r\n\t\t\t} else {\r\n\t\t\t\treturn [new Vector2(a_y, 1 - a_z), new Vector2(b_y, 1 - b_z), new Vector2(c_y, 1 - c_z), new Vector2(d_y, 1 - d_z)];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tfunction toJSON$1(shapes, options, data) {\r\n\t\tdata.shapes = [];\r\n\r\n\t\tif (Array.isArray(shapes)) {\r\n\t\t\tfor (let i = 0, l = shapes.length; i < l; i++) {\r\n\t\t\t\tconst shape = shapes[i];\r\n\t\t\t\tdata.shapes.push(shape.uuid);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tdata.shapes.push(shapes.uuid);\r\n\t\t}\r\n\r\n\t\tif (options.extrudePath !== undefined) data.options.extrudePath = options.extrudePath.toJSON();\r\n\t\treturn data;\r\n\t}\r\n\r\n\tclass IcosahedronGeometry extends PolyhedronGeometry {\r\n\t\tconstructor(radius = 1, detail = 0) {\r\n\t\t\tconst t = (1 + Math.sqrt(5)) / 2;\r\n\t\t\tconst vertices = [-1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, 0, 0, -1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, t, 0, -1, t, 0, 1, -t, 0, -1, -t, 0, 1];\r\n\t\t\tconst indices = [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1];\r\n\t\t\tsuper(vertices, indices, radius, detail);\r\n\t\t\tthis.type = 'IcosahedronGeometry';\r\n\t\t\tthis.parameters = {\r\n\t\t\t\tradius: radius,\r\n\t\t\t\tdetail: detail\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tstatic fromJSON(data) {\r\n\t\t\treturn new IcosahedronGeometry(data.radius, data.detail);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass LatheGeometry extends BufferGeometry {\r\n\t\tconstructor(points, segments = 12, phiStart = 0, phiLength = Math.PI * 2) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'LatheGeometry';\r\n\t\t\tthis.parameters = {\r\n\t\t\t\tpoints: points,\r\n\t\t\t\tsegments: segments,\r\n\t\t\t\tphiStart: phiStart,\r\n\t\t\t\tphiLength: phiLength\r\n\t\t\t};\r\n\t\t\tsegments = Math.floor(segments); // clamp phiLength so it's in range of [ 0, 2PI ]\r\n\r\n\t\t\tphiLength = clamp(phiLength, 0, Math.PI * 2); // buffers\r\n\r\n\t\t\tconst indices = [];\r\n\t\t\tconst vertices = [];\r\n\t\t\tconst uvs = []; // helper variables\r\n\r\n\t\t\tconst inverseSegments = 1.0 / segments;\r\n\t\t\tconst vertex = new Vector3();\r\n\t\t\tconst uv = new Vector2(); // generate vertices and uvs\r\n\r\n\t\t\tfor (let i = 0; i <= segments; i++) {\r\n\t\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\r\n\t\t\t\tconst sin = Math.sin(phi);\r\n\t\t\t\tconst cos = Math.cos(phi);\r\n\r\n\t\t\t\tfor (let j = 0; j <= points.length - 1; j++) {\r\n\t\t\t\t\t// vertex\r\n\t\t\t\t\tvertex.x = points[j].x * sin;\r\n\t\t\t\t\tvertex.y = points[j].y;\r\n\t\t\t\t\tvertex.z = points[j].x * cos;\r\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // uv\r\n\r\n\t\t\t\t\tuv.x = i / segments;\r\n\t\t\t\t\tuv.y = j / (points.length - 1);\r\n\t\t\t\t\tuvs.push(uv.x, uv.y);\r\n\t\t\t\t}\r\n\t\t\t} // indices\r\n\r\n\r\n\t\t\tfor (let i = 0; i < segments; i++) {\r\n\t\t\t\tfor (let j = 0; j < points.length - 1; j++) {\r\n\t\t\t\t\tconst base = j + i * points.length;\r\n\t\t\t\t\tconst a = base;\r\n\t\t\t\t\tconst b = base + points.length;\r\n\t\t\t\t\tconst c = base + points.length + 1;\r\n\t\t\t\t\tconst d = base + 1; // faces\r\n\r\n\t\t\t\t\tindices.push(a, b, d);\r\n\t\t\t\t\tindices.push(b, c, d);\r\n\t\t\t\t}\r\n\t\t\t} // build geometry\r\n\r\n\r\n\t\t\tthis.setIndex(indices);\r\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // generate normals\r\n\r\n\t\t\tthis.computeVertexNormals(); // if the geometry is closed, we need to average the normals along the seam.\r\n\t\t\t// because the corresponding vertices are identical (but still have different UVs).\r\n\r\n\t\t\tif (phiLength === Math.PI * 2) {\r\n\t\t\t\tconst normals = this.attributes.normal.array;\r\n\t\t\t\tconst n1 = new Vector3();\r\n\t\t\t\tconst n2 = new Vector3();\r\n\t\t\t\tconst n = new Vector3(); // this is the buffer offset for the last line of vertices\r\n\r\n\t\t\t\tconst base = segments * points.length * 3;\r\n\r\n\t\t\t\tfor (let i = 0, j = 0; i < points.length; i++, j += 3) {\r\n\t\t\t\t\t// select the normal of the vertex in the first line\r\n\t\t\t\t\tn1.x = normals[j + 0];\r\n\t\t\t\t\tn1.y = normals[j + 1];\r\n\t\t\t\t\tn1.z = normals[j + 2]; // select the normal of the vertex in the last line\r\n\r\n\t\t\t\t\tn2.x = normals[base + j + 0];\r\n\t\t\t\t\tn2.y = normals[base + j + 1];\r\n\t\t\t\t\tn2.z = normals[base + j + 2]; // average normals\r\n\r\n\t\t\t\t\tn.addVectors(n1, n2).normalize(); // assign the new values to both normals\r\n\r\n\t\t\t\t\tnormals[j + 0] = normals[base + j + 0] = n.x;\r\n\t\t\t\t\tnormals[j + 1] = normals[base + j + 1] = n.y;\r\n\t\t\t\t\tnormals[j + 2] = normals[base + j + 2] = n.z;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tstatic fromJSON(data) {\r\n\t\t\treturn new LatheGeometry(data.points, data.segments, data.phiStart, data.phiLength);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass OctahedronGeometry extends PolyhedronGeometry {\r\n\t\tconstructor(radius = 1, detail = 0) {\r\n\t\t\tconst vertices = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1];\r\n\t\t\tconst indices = [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2];\r\n\t\t\tsuper(vertices, indices, radius, detail);\r\n\t\t\tthis.type = 'OctahedronGeometry';\r\n\t\t\tthis.parameters = {\r\n\t\t\t\tradius: radius,\r\n\t\t\t\tdetail: detail\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tstatic fromJSON(data) {\r\n\t\t\treturn new OctahedronGeometry(data.radius, data.detail);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Parametric Surfaces Geometry\r\n\t * based on the brilliant article by @prideout https://prideout.net/blog/old/blog/index.html@p=44.html\r\n\t */\r\n\r\n\tclass ParametricGeometry extends BufferGeometry {\r\n\t\tconstructor(func, slices, stacks) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'ParametricGeometry';\r\n\t\t\tthis.parameters = {\r\n\t\t\t\tfunc: func,\r\n\t\t\t\tslices: slices,\r\n\t\t\t\tstacks: stacks\r\n\t\t\t}; // buffers\r\n\r\n\t\t\tconst indices = [];\r\n\t\t\tconst vertices = [];\r\n\t\t\tconst normals = [];\r\n\t\t\tconst uvs = [];\r\n\t\t\tconst EPS = 0.00001;\r\n\t\t\tconst normal = new Vector3();\r\n\t\t\tconst p0 = new Vector3(),\r\n\t\t\t\t\t\tp1 = new Vector3();\r\n\t\t\tconst pu = new Vector3(),\r\n\t\t\t\t\t\tpv = new Vector3();\r\n\r\n\t\t\tif (func.length < 3) {\r\n\t\t\t\tconsole.error('THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.');\r\n\t\t\t} // generate vertices, normals and uvs\r\n\r\n\r\n\t\t\tconst sliceCount = slices + 1;\r\n\r\n\t\t\tfor (let i = 0; i <= stacks; i++) {\r\n\t\t\t\tconst v = i / stacks;\r\n\r\n\t\t\t\tfor (let j = 0; j <= slices; j++) {\r\n\t\t\t\t\tconst u = j / slices; // vertex\r\n\r\n\t\t\t\t\tfunc(u, v, p0);\r\n\t\t\t\t\tvertices.push(p0.x, p0.y, p0.z); // normal\r\n\t\t\t\t\t// approximate tangent vectors via finite differences\r\n\r\n\t\t\t\t\tif (u - EPS >= 0) {\r\n\t\t\t\t\t\tfunc(u - EPS, v, p1);\r\n\t\t\t\t\t\tpu.subVectors(p0, p1);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tfunc(u + EPS, v, p1);\r\n\t\t\t\t\t\tpu.subVectors(p1, p0);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (v - EPS >= 0) {\r\n\t\t\t\t\t\tfunc(u, v - EPS, p1);\r\n\t\t\t\t\t\tpv.subVectors(p0, p1);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tfunc(u, v + EPS, p1);\r\n\t\t\t\t\t\tpv.subVectors(p1, p0);\r\n\t\t\t\t\t} // cross product of tangent vectors returns surface normal\r\n\r\n\r\n\t\t\t\t\tnormal.crossVectors(pu, pv).normalize();\r\n\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // uv\r\n\r\n\t\t\t\t\tuvs.push(u, v);\r\n\t\t\t\t}\r\n\t\t\t} // generate indices\r\n\r\n\r\n\t\t\tfor (let i = 0; i < stacks; i++) {\r\n\t\t\t\tfor (let j = 0; j < slices; j++) {\r\n\t\t\t\t\tconst a = i * sliceCount + j;\r\n\t\t\t\t\tconst b = i * sliceCount + j + 1;\r\n\t\t\t\t\tconst c = (i + 1) * sliceCount + j + 1;\r\n\t\t\t\t\tconst d = (i + 1) * sliceCount + j; // faces one and two\r\n\r\n\t\t\t\t\tindices.push(a, b, d);\r\n\t\t\t\t\tindices.push(b, c, d);\r\n\t\t\t\t}\r\n\t\t\t} // build geometry\r\n\r\n\r\n\t\t\tthis.setIndex(indices);\r\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\r\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass RingGeometry extends BufferGeometry {\r\n\t\tconstructor(innerRadius = 0.5, outerRadius = 1, thetaSegments = 8, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'RingGeometry';\r\n\t\t\tthis.parameters = {\r\n\t\t\t\tinnerRadius: innerRadius,\r\n\t\t\t\touterRadius: outerRadius,\r\n\t\t\t\tthetaSegments: thetaSegments,\r\n\t\t\t\tphiSegments: phiSegments,\r\n\t\t\t\tthetaStart: thetaStart,\r\n\t\t\t\tthetaLength: thetaLength\r\n\t\t\t};\r\n\t\t\tthetaSegments = Math.max(3, thetaSegments);\r\n\t\t\tphiSegments = Math.max(1, phiSegments); // buffers\r\n\r\n\t\t\tconst indices = [];\r\n\t\t\tconst vertices = [];\r\n\t\t\tconst normals = [];\r\n\t\t\tconst uvs = []; // some helper variables\r\n\r\n\t\t\tlet radius = innerRadius;\r\n\t\t\tconst radiusStep = (outerRadius - innerRadius) / phiSegments;\r\n\t\t\tconst vertex = new Vector3();\r\n\t\t\tconst uv = new Vector2(); // generate vertices, normals and uvs\r\n\r\n\t\t\tfor (let j = 0; j <= phiSegments; j++) {\r\n\t\t\t\tfor (let i = 0; i <= thetaSegments; i++) {\r\n\t\t\t\t\t// values are generate from the inside of the ring to the outside\r\n\t\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength; // vertex\r\n\r\n\t\t\t\t\tvertex.x = radius * Math.cos(segment);\r\n\t\t\t\t\tvertex.y = radius * Math.sin(segment);\r\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\r\n\r\n\t\t\t\t\tnormals.push(0, 0, 1); // uv\r\n\r\n\t\t\t\t\tuv.x = (vertex.x / outerRadius + 1) / 2;\r\n\t\t\t\t\tuv.y = (vertex.y / outerRadius + 1) / 2;\r\n\t\t\t\t\tuvs.push(uv.x, uv.y);\r\n\t\t\t\t} // increase the radius for next row of vertices\r\n\r\n\r\n\t\t\t\tradius += radiusStep;\r\n\t\t\t} // indices\r\n\r\n\r\n\t\t\tfor (let j = 0; j < phiSegments; j++) {\r\n\t\t\t\tconst thetaSegmentLevel = j * (thetaSegments + 1);\r\n\r\n\t\t\t\tfor (let i = 0; i < thetaSegments; i++) {\r\n\t\t\t\t\tconst segment = i + thetaSegmentLevel;\r\n\t\t\t\t\tconst a = segment;\r\n\t\t\t\t\tconst b = segment + thetaSegments + 1;\r\n\t\t\t\t\tconst c = segment + thetaSegments + 2;\r\n\t\t\t\t\tconst d = segment + 1; // faces\r\n\r\n\t\t\t\t\tindices.push(a, b, d);\r\n\t\t\t\t\tindices.push(b, c, d);\r\n\t\t\t\t}\r\n\t\t\t} // build geometry\r\n\r\n\r\n\t\t\tthis.setIndex(indices);\r\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\r\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\r\n\t\t}\r\n\r\n\t\tstatic fromJSON(data) {\r\n\t\t\treturn new RingGeometry(data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass ShapeGeometry extends BufferGeometry {\r\n\t\tconstructor(shapes, curveSegments = 12) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'ShapeGeometry';\r\n\t\t\tthis.parameters = {\r\n\t\t\t\tshapes: shapes,\r\n\t\t\t\tcurveSegments: curveSegments\r\n\t\t\t}; // buffers\r\n\r\n\t\t\tconst indices = [];\r\n\t\t\tconst vertices = [];\r\n\t\t\tconst normals = [];\r\n\t\t\tconst uvs = []; // helper variables\r\n\r\n\t\t\tlet groupStart = 0;\r\n\t\t\tlet groupCount = 0; // allow single and array values for \"shapes\" parameter\r\n\r\n\t\t\tif (Array.isArray(shapes) === false) {\r\n\t\t\t\taddShape(shapes);\r\n\t\t\t} else {\r\n\t\t\t\tfor (let i = 0; i < shapes.length; i++) {\r\n\t\t\t\t\taddShape(shapes[i]);\r\n\t\t\t\t\tthis.addGroup(groupStart, groupCount, i); // enables MultiMaterial support\r\n\r\n\t\t\t\t\tgroupStart += groupCount;\r\n\t\t\t\t\tgroupCount = 0;\r\n\t\t\t\t}\r\n\t\t\t} // build geometry\r\n\r\n\r\n\t\t\tthis.setIndex(indices);\r\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\r\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // helper functions\r\n\r\n\t\t\tfunction addShape(shape) {\r\n\t\t\t\tconst indexOffset = vertices.length / 3;\r\n\t\t\t\tconst points = shape.extractPoints(curveSegments);\r\n\t\t\t\tlet shapeVertices = points.shape;\r\n\t\t\t\tconst shapeHoles = points.holes; // check direction of vertices\r\n\r\n\t\t\t\tif (ShapeUtils.isClockWise(shapeVertices) === false) {\r\n\t\t\t\t\tshapeVertices = shapeVertices.reverse();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let i = 0, l = shapeHoles.length; i < l; i++) {\r\n\t\t\t\t\tconst shapeHole = shapeHoles[i];\r\n\r\n\t\t\t\t\tif (ShapeUtils.isClockWise(shapeHole) === true) {\r\n\t\t\t\t\t\tshapeHoles[i] = shapeHole.reverse();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst faces = ShapeUtils.triangulateShape(shapeVertices, shapeHoles); // join vertices of inner and outer paths to a single array\r\n\r\n\t\t\t\tfor (let i = 0, l = shapeHoles.length; i < l; i++) {\r\n\t\t\t\t\tconst shapeHole = shapeHoles[i];\r\n\t\t\t\t\tshapeVertices = shapeVertices.concat(shapeHole);\r\n\t\t\t\t} // vertices, normals, uvs\r\n\r\n\r\n\t\t\t\tfor (let i = 0, l = shapeVertices.length; i < l; i++) {\r\n\t\t\t\t\tconst vertex = shapeVertices[i];\r\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, 0);\r\n\t\t\t\t\tnormals.push(0, 0, 1);\r\n\t\t\t\t\tuvs.push(vertex.x, vertex.y); // world uvs\r\n\t\t\t\t} // incides\r\n\r\n\r\n\t\t\t\tfor (let i = 0, l = faces.length; i < l; i++) {\r\n\t\t\t\t\tconst face = faces[i];\r\n\t\t\t\t\tconst a = face[0] + indexOffset;\r\n\t\t\t\t\tconst b = face[1] + indexOffset;\r\n\t\t\t\t\tconst c = face[2] + indexOffset;\r\n\t\t\t\t\tindices.push(a, b, c);\r\n\t\t\t\t\tgroupCount += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst data = super.toJSON();\r\n\t\t\tconst shapes = this.parameters.shapes;\r\n\t\t\treturn toJSON(shapes, data);\r\n\t\t}\r\n\r\n\t\tstatic fromJSON(data, shapes) {\r\n\t\t\tconst geometryShapes = [];\r\n\r\n\t\t\tfor (let j = 0, jl = data.shapes.length; j < jl; j++) {\r\n\t\t\t\tconst shape = shapes[data.shapes[j]];\r\n\t\t\t\tgeometryShapes.push(shape);\r\n\t\t\t}\r\n\r\n\t\t\treturn new ShapeGeometry(geometryShapes, data.curveSegments);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction toJSON(shapes, data) {\r\n\t\tdata.shapes = [];\r\n\r\n\t\tif (Array.isArray(shapes)) {\r\n\t\t\tfor (let i = 0, l = shapes.length; i < l; i++) {\r\n\t\t\t\tconst shape = shapes[i];\r\n\t\t\t\tdata.shapes.push(shape.uuid);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tdata.shapes.push(shapes.uuid);\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tclass SphereGeometry extends BufferGeometry {\r\n\t\tconstructor(radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'SphereGeometry';\r\n\t\t\tthis.parameters = {\r\n\t\t\t\tradius: radius,\r\n\t\t\t\twidthSegments: widthSegments,\r\n\t\t\t\theightSegments: heightSegments,\r\n\t\t\t\tphiStart: phiStart,\r\n\t\t\t\tphiLength: phiLength,\r\n\t\t\t\tthetaStart: thetaStart,\r\n\t\t\t\tthetaLength: thetaLength\r\n\t\t\t};\r\n\t\t\twidthSegments = Math.max(3, Math.floor(widthSegments));\r\n\t\t\theightSegments = Math.max(2, Math.floor(heightSegments));\r\n\t\t\tconst thetaEnd = Math.min(thetaStart + thetaLength, Math.PI);\r\n\t\t\tlet index = 0;\r\n\t\t\tconst grid = [];\r\n\t\t\tconst vertex = new Vector3();\r\n\t\t\tconst normal = new Vector3(); // buffers\r\n\r\n\t\t\tconst indices = [];\r\n\t\t\tconst vertices = [];\r\n\t\t\tconst normals = [];\r\n\t\t\tconst uvs = []; // generate vertices, normals and uvs\r\n\r\n\t\t\tfor (let iy = 0; iy <= heightSegments; iy++) {\r\n\t\t\t\tconst verticesRow = [];\r\n\t\t\t\tconst v = iy / heightSegments; // special case for the poles\r\n\r\n\t\t\t\tlet uOffset = 0;\r\n\r\n\t\t\t\tif (iy == 0 && thetaStart == 0) {\r\n\t\t\t\t\tuOffset = 0.5 / widthSegments;\r\n\t\t\t\t} else if (iy == heightSegments && thetaEnd == Math.PI) {\r\n\t\t\t\t\tuOffset = -0.5 / widthSegments;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let ix = 0; ix <= widthSegments; ix++) {\r\n\t\t\t\t\tconst u = ix / widthSegments; // vertex\r\n\r\n\t\t\t\t\tvertex.x = -radius * Math.cos(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\r\n\t\t\t\t\tvertex.y = radius * Math.cos(thetaStart + v * thetaLength);\r\n\t\t\t\t\tvertex.z = radius * Math.sin(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\r\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\r\n\r\n\t\t\t\t\tnormal.copy(vertex).normalize();\r\n\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // uv\r\n\r\n\t\t\t\t\tuvs.push(u + uOffset, 1 - v);\r\n\t\t\t\t\tverticesRow.push(index++);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgrid.push(verticesRow);\r\n\t\t\t} // indices\r\n\r\n\r\n\t\t\tfor (let iy = 0; iy < heightSegments; iy++) {\r\n\t\t\t\tfor (let ix = 0; ix < widthSegments; ix++) {\r\n\t\t\t\t\tconst a = grid[iy][ix + 1];\r\n\t\t\t\t\tconst b = grid[iy][ix];\r\n\t\t\t\t\tconst c = grid[iy + 1][ix];\r\n\t\t\t\t\tconst d = grid[iy + 1][ix + 1];\r\n\t\t\t\t\tif (iy !== 0 || thetaStart > 0) indices.push(a, b, d);\r\n\t\t\t\t\tif (iy !== heightSegments - 1 || thetaEnd < Math.PI) indices.push(b, c, d);\r\n\t\t\t\t}\r\n\t\t\t} // build geometry\r\n\r\n\r\n\t\t\tthis.setIndex(indices);\r\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\r\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\r\n\t\t}\r\n\r\n\t\tstatic fromJSON(data) {\r\n\t\t\treturn new SphereGeometry(data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass TetrahedronGeometry extends PolyhedronGeometry {\r\n\t\tconstructor(radius = 1, detail = 0) {\r\n\t\t\tconst vertices = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1];\r\n\t\t\tconst indices = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];\r\n\t\t\tsuper(vertices, indices, radius, detail);\r\n\t\t\tthis.type = 'TetrahedronGeometry';\r\n\t\t\tthis.parameters = {\r\n\t\t\t\tradius: radius,\r\n\t\t\t\tdetail: detail\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tstatic fromJSON(data) {\r\n\t\t\treturn new TetrahedronGeometry(data.radius, data.detail);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Text = 3D Text\r\n\t *\r\n\t * parameters = {\r\n\t *\tfont: <THREE.Font>, // font\r\n\t *\r\n\t *\tsize: <float>, // size of the text\r\n\t *\theight: <float>, // thickness to extrude text\r\n\t *\tcurveSegments: <int>, // number of points on the curves\r\n\t *\r\n\t *\tbevelEnabled: <bool>, // turn on bevel\r\n\t *\tbevelThickness: <float>, // how deep into text bevel goes\r\n\t *\tbevelSize: <float>, // how far from text outline (including bevelOffset) is bevel\r\n\t *\tbevelOffset: <float> // how far from text outline does bevel start\r\n\t * }\r\n\t */\r\n\r\n\tclass TextGeometry extends ExtrudeGeometry {\r\n\t\tconstructor(text, parameters = {}) {\r\n\t\t\tconst font = parameters.font;\r\n\r\n\t\t\tif (!(font && font.isFont)) {\r\n\t\t\t\tconsole.error('THREE.TextGeometry: font parameter is not an instance of THREE.Font.');\r\n\t\t\t\treturn new BufferGeometry();\r\n\t\t\t}\r\n\r\n\t\t\tconst shapes = font.generateShapes(text, parameters.size); // translate parameters to ExtrudeGeometry API\r\n\r\n\t\t\tparameters.depth = parameters.height !== undefined ? parameters.height : 50; // defaults\r\n\r\n\t\t\tif (parameters.bevelThickness === undefined) parameters.bevelThickness = 10;\r\n\t\t\tif (parameters.bevelSize === undefined) parameters.bevelSize = 8;\r\n\t\t\tif (parameters.bevelEnabled === undefined) parameters.bevelEnabled = false;\r\n\t\t\tsuper(shapes, parameters);\r\n\t\t\tthis.type = 'TextGeometry';\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass TorusGeometry extends BufferGeometry {\r\n\t\tconstructor(radius = 1, tube = 0.4, radialSegments = 8, tubularSegments = 6, arc = Math.PI * 2) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'TorusGeometry';\r\n\t\t\tthis.parameters = {\r\n\t\t\t\tradius: radius,\r\n\t\t\t\ttube: tube,\r\n\t\t\t\tradialSegments: radialSegments,\r\n\t\t\t\ttubularSegments: tubularSegments,\r\n\t\t\t\tarc: arc\r\n\t\t\t};\r\n\t\t\tradialSegments = Math.floor(radialSegments);\r\n\t\t\ttubularSegments = Math.floor(tubularSegments); // buffers\r\n\r\n\t\t\tconst indices = [];\r\n\t\t\tconst vertices = [];\r\n\t\t\tconst normals = [];\r\n\t\t\tconst uvs = []; // helper variables\r\n\r\n\t\t\tconst center = new Vector3();\r\n\t\t\tconst vertex = new Vector3();\r\n\t\t\tconst normal = new Vector3(); // generate vertices, normals and uvs\r\n\r\n\t\t\tfor (let j = 0; j <= radialSegments; j++) {\r\n\t\t\t\tfor (let i = 0; i <= tubularSegments; i++) {\r\n\t\t\t\t\tconst u = i / tubularSegments * arc;\r\n\t\t\t\t\tconst v = j / radialSegments * Math.PI * 2; // vertex\r\n\r\n\t\t\t\t\tvertex.x = (radius + tube * Math.cos(v)) * Math.cos(u);\r\n\t\t\t\t\tvertex.y = (radius + tube * Math.cos(v)) * Math.sin(u);\r\n\t\t\t\t\tvertex.z = tube * Math.sin(v);\r\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\r\n\r\n\t\t\t\t\tcenter.x = radius * Math.cos(u);\r\n\t\t\t\t\tcenter.y = radius * Math.sin(u);\r\n\t\t\t\t\tnormal.subVectors(vertex, center).normalize();\r\n\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // uv\r\n\r\n\t\t\t\t\tuvs.push(i / tubularSegments);\r\n\t\t\t\t\tuvs.push(j / radialSegments);\r\n\t\t\t\t}\r\n\t\t\t} // generate indices\r\n\r\n\r\n\t\t\tfor (let j = 1; j <= radialSegments; j++) {\r\n\t\t\t\tfor (let i = 1; i <= tubularSegments; i++) {\r\n\t\t\t\t\t// indices\r\n\t\t\t\t\tconst a = (tubularSegments + 1) * j + i - 1;\r\n\t\t\t\t\tconst b = (tubularSegments + 1) * (j - 1) + i - 1;\r\n\t\t\t\t\tconst c = (tubularSegments + 1) * (j - 1) + i;\r\n\t\t\t\t\tconst d = (tubularSegments + 1) * j + i; // faces\r\n\r\n\t\t\t\t\tindices.push(a, b, d);\r\n\t\t\t\t\tindices.push(b, c, d);\r\n\t\t\t\t}\r\n\t\t\t} // build geometry\r\n\r\n\r\n\t\t\tthis.setIndex(indices);\r\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\r\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\r\n\t\t}\r\n\r\n\t\tstatic fromJSON(data) {\r\n\t\t\treturn new TorusGeometry(data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass TorusKnotGeometry extends BufferGeometry {\r\n\t\tconstructor(radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'TorusKnotGeometry';\r\n\t\t\tthis.parameters = {\r\n\t\t\t\tradius: radius,\r\n\t\t\t\ttube: tube,\r\n\t\t\t\ttubularSegments: tubularSegments,\r\n\t\t\t\tradialSegments: radialSegments,\r\n\t\t\t\tp: p,\r\n\t\t\t\tq: q\r\n\t\t\t};\r\n\t\t\ttubularSegments = Math.floor(tubularSegments);\r\n\t\t\tradialSegments = Math.floor(radialSegments); // buffers\r\n\r\n\t\t\tconst indices = [];\r\n\t\t\tconst vertices = [];\r\n\t\t\tconst normals = [];\r\n\t\t\tconst uvs = []; // helper variables\r\n\r\n\t\t\tconst vertex = new Vector3();\r\n\t\t\tconst normal = new Vector3();\r\n\t\t\tconst P1 = new Vector3();\r\n\t\t\tconst P2 = new Vector3();\r\n\t\t\tconst B = new Vector3();\r\n\t\t\tconst T = new Vector3();\r\n\t\t\tconst N = new Vector3(); // generate vertices, normals and uvs\r\n\r\n\t\t\tfor (let i = 0; i <= tubularSegments; ++i) {\r\n\t\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\r\n\t\t\t\tconst u = i / tubularSegments * p * Math.PI * 2; // now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\r\n\t\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\r\n\r\n\t\t\t\tcalculatePositionOnCurve(u, p, q, radius, P1);\r\n\t\t\t\tcalculatePositionOnCurve(u + 0.01, p, q, radius, P2); // calculate orthonormal basis\r\n\r\n\t\t\t\tT.subVectors(P2, P1);\r\n\t\t\t\tN.addVectors(P2, P1);\r\n\t\t\t\tB.crossVectors(T, N);\r\n\t\t\t\tN.crossVectors(B, T); // normalize B, N. T can be ignored, we don't use it\r\n\r\n\t\t\t\tB.normalize();\r\n\t\t\t\tN.normalize();\r\n\r\n\t\t\t\tfor (let j = 0; j <= radialSegments; ++j) {\r\n\t\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\r\n\t\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\r\n\t\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\r\n\t\t\t\t\tconst cx = -tube * Math.cos(v);\r\n\t\t\t\t\tconst cy = tube * Math.sin(v); // now calculate the final vertex position.\r\n\t\t\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\r\n\r\n\t\t\t\t\tvertex.x = P1.x + (cx * N.x + cy * B.x);\r\n\t\t\t\t\tvertex.y = P1.y + (cx * N.y + cy * B.y);\r\n\t\t\t\t\tvertex.z = P1.z + (cx * N.z + cy * B.z);\r\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\r\n\r\n\t\t\t\t\tnormal.subVectors(vertex, P1).normalize();\r\n\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // uv\r\n\r\n\t\t\t\t\tuvs.push(i / tubularSegments);\r\n\t\t\t\t\tuvs.push(j / radialSegments);\r\n\t\t\t\t}\r\n\t\t\t} // generate indices\r\n\r\n\r\n\t\t\tfor (let j = 1; j <= tubularSegments; j++) {\r\n\t\t\t\tfor (let i = 1; i <= radialSegments; i++) {\r\n\t\t\t\t\t// indices\r\n\t\t\t\t\tconst a = (radialSegments + 1) * (j - 1) + (i - 1);\r\n\t\t\t\t\tconst b = (radialSegments + 1) * j + (i - 1);\r\n\t\t\t\t\tconst c = (radialSegments + 1) * j + i;\r\n\t\t\t\t\tconst d = (radialSegments + 1) * (j - 1) + i; // faces\r\n\r\n\t\t\t\t\tindices.push(a, b, d);\r\n\t\t\t\t\tindices.push(b, c, d);\r\n\t\t\t\t}\r\n\t\t\t} // build geometry\r\n\r\n\r\n\t\t\tthis.setIndex(indices);\r\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\r\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // this function calculates the current position on the torus curve\r\n\r\n\t\t\tfunction calculatePositionOnCurve(u, p, q, radius, position) {\r\n\t\t\t\tconst cu = Math.cos(u);\r\n\t\t\t\tconst su = Math.sin(u);\r\n\t\t\t\tconst quOverP = q / p * u;\r\n\t\t\t\tconst cs = Math.cos(quOverP);\r\n\t\t\t\tposition.x = radius * (2 + cs) * 0.5 * cu;\r\n\t\t\t\tposition.y = radius * (2 + cs) * su * 0.5;\r\n\t\t\t\tposition.z = radius * Math.sin(quOverP) * 0.5;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tstatic fromJSON(data) {\r\n\t\t\treturn new TorusKnotGeometry(data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass TubeGeometry extends BufferGeometry {\r\n\t\tconstructor(path, tubularSegments = 64, radius = 1, radialSegments = 8, closed = false) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'TubeGeometry';\r\n\t\t\tthis.parameters = {\r\n\t\t\t\tpath: path,\r\n\t\t\t\ttubularSegments: tubularSegments,\r\n\t\t\t\tradius: radius,\r\n\t\t\t\tradialSegments: radialSegments,\r\n\t\t\t\tclosed: closed\r\n\t\t\t};\r\n\t\t\tconst frames = path.computeFrenetFrames(tubularSegments, closed); // expose internals\r\n\r\n\t\t\tthis.tangents = frames.tangents;\r\n\t\t\tthis.normals = frames.normals;\r\n\t\t\tthis.binormals = frames.binormals; // helper variables\r\n\r\n\t\t\tconst vertex = new Vector3();\r\n\t\t\tconst normal = new Vector3();\r\n\t\t\tconst uv = new Vector2();\r\n\t\t\tlet P = new Vector3(); // buffer\r\n\r\n\t\t\tconst vertices = [];\r\n\t\t\tconst normals = [];\r\n\t\t\tconst uvs = [];\r\n\t\t\tconst indices = []; // create buffer data\r\n\r\n\t\t\tgenerateBufferData(); // build geometry\r\n\r\n\t\t\tthis.setIndex(indices);\r\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\r\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // functions\r\n\r\n\t\t\tfunction generateBufferData() {\r\n\t\t\t\tfor (let i = 0; i < tubularSegments; i++) {\r\n\t\t\t\t\tgenerateSegment(i);\r\n\t\t\t\t} // if the geometry is not closed, generate the last row of vertices and normals\r\n\t\t\t\t// at the regular position on the given path\r\n\t\t\t\t//\r\n\t\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\r\n\r\n\r\n\t\t\t\tgenerateSegment(closed === false ? tubularSegments : 0); // uvs are generated in a separate function.\r\n\t\t\t\t// this makes it easy compute correct values for closed geometries\r\n\r\n\t\t\t\tgenerateUVs(); // finally create faces\r\n\r\n\t\t\t\tgenerateIndices();\r\n\t\t\t}\r\n\r\n\t\t\tfunction generateSegment(i) {\r\n\t\t\t\t// we use getPointAt to sample evenly distributed points from the given path\r\n\t\t\t\tP = path.getPointAt(i / tubularSegments, P); // retrieve corresponding normal and binormal\r\n\r\n\t\t\t\tconst N = frames.normals[i];\r\n\t\t\t\tconst B = frames.binormals[i]; // generate normals and vertices for the current segment\r\n\r\n\t\t\t\tfor (let j = 0; j <= radialSegments; j++) {\r\n\t\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\r\n\t\t\t\t\tconst sin = Math.sin(v);\r\n\t\t\t\t\tconst cos = -Math.cos(v); // normal\r\n\r\n\t\t\t\t\tnormal.x = cos * N.x + sin * B.x;\r\n\t\t\t\t\tnormal.y = cos * N.y + sin * B.y;\r\n\t\t\t\t\tnormal.z = cos * N.z + sin * B.z;\r\n\t\t\t\t\tnormal.normalize();\r\n\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // vertex\r\n\r\n\t\t\t\t\tvertex.x = P.x + radius * normal.x;\r\n\t\t\t\t\tvertex.y = P.y + radius * normal.y;\r\n\t\t\t\t\tvertex.z = P.z + radius * normal.z;\r\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfunction generateIndices() {\r\n\t\t\t\tfor (let j = 1; j <= tubularSegments; j++) {\r\n\t\t\t\t\tfor (let i = 1; i <= radialSegments; i++) {\r\n\t\t\t\t\t\tconst a = (radialSegments + 1) * (j - 1) + (i - 1);\r\n\t\t\t\t\t\tconst b = (radialSegments + 1) * j + (i - 1);\r\n\t\t\t\t\t\tconst c = (radialSegments + 1) * j + i;\r\n\t\t\t\t\t\tconst d = (radialSegments + 1) * (j - 1) + i; // faces\r\n\r\n\t\t\t\t\t\tindices.push(a, b, d);\r\n\t\t\t\t\t\tindices.push(b, c, d);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfunction generateUVs() {\r\n\t\t\t\tfor (let i = 0; i <= tubularSegments; i++) {\r\n\t\t\t\t\tfor (let j = 0; j <= radialSegments; j++) {\r\n\t\t\t\t\t\tuv.x = i / tubularSegments;\r\n\t\t\t\t\t\tuv.y = j / radialSegments;\r\n\t\t\t\t\t\tuvs.push(uv.x, uv.y);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst data = super.toJSON();\r\n\t\t\tdata.path = this.parameters.path.toJSON();\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\tstatic fromJSON(data) {\r\n\t\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\r\n\t\t\t// User defined curves or instances of CurvePath will not be deserialized.\r\n\t\t\treturn new TubeGeometry(new Curves[data.path.type]().fromJSON(data.path), data.tubularSegments, data.radius, data.radialSegments, data.closed);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass WireframeGeometry extends BufferGeometry {\r\n\t\tconstructor(geometry) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'WireframeGeometry';\r\n\r\n\t\t\tif (geometry.isGeometry === true) {\r\n\t\t\t\tconsole.error('THREE.WireframeGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\r\n\t\t\t\treturn;\r\n\t\t\t} // buffer\r\n\r\n\r\n\t\t\tconst vertices = [];\r\n\t\t\tconst edges = new Set(); // helper variables\r\n\r\n\t\t\tconst start = new Vector3();\r\n\t\t\tconst end = new Vector3();\r\n\r\n\t\t\tif (geometry.index !== null) {\r\n\t\t\t\t// indexed BufferGeometry\r\n\t\t\t\tconst position = geometry.attributes.position;\r\n\t\t\t\tconst indices = geometry.index;\r\n\t\t\t\tlet groups = geometry.groups;\r\n\r\n\t\t\t\tif (groups.length === 0) {\r\n\t\t\t\t\tgroups = [{\r\n\t\t\t\t\t\tstart: 0,\r\n\t\t\t\t\t\tcount: indices.count,\r\n\t\t\t\t\t\tmaterialIndex: 0\r\n\t\t\t\t\t}];\r\n\t\t\t\t} // create a data structure that contains all eges without duplicates\r\n\r\n\r\n\t\t\t\tfor (let o = 0, ol = groups.length; o < ol; ++o) {\r\n\t\t\t\t\tconst group = groups[o];\r\n\t\t\t\t\tconst groupStart = group.start;\r\n\t\t\t\t\tconst groupCount = group.count;\r\n\r\n\t\t\t\t\tfor (let i = groupStart, l = groupStart + groupCount; i < l; i += 3) {\r\n\t\t\t\t\t\tfor (let j = 0; j < 3; j++) {\r\n\t\t\t\t\t\t\tconst index1 = indices.getX(i + j);\r\n\t\t\t\t\t\t\tconst index2 = indices.getX(i + (j + 1) % 3);\r\n\t\t\t\t\t\t\tstart.fromBufferAttribute(position, index1);\r\n\t\t\t\t\t\t\tend.fromBufferAttribute(position, index2);\r\n\r\n\t\t\t\t\t\t\tif (isUniqueEdge(start, end, edges) === true) {\r\n\t\t\t\t\t\t\t\tvertices.push(start.x, start.y, start.z);\r\n\t\t\t\t\t\t\t\tvertices.push(end.x, end.y, end.z);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// non-indexed BufferGeometry\r\n\t\t\t\tconst position = geometry.attributes.position;\r\n\r\n\t\t\t\tfor (let i = 0, l = position.count / 3; i < l; i++) {\r\n\t\t\t\t\tfor (let j = 0; j < 3; j++) {\r\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\r\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\r\n\t\t\t\t\t\tconst index1 = 3 * i + j;\r\n\t\t\t\t\t\tconst index2 = 3 * i + (j + 1) % 3;\r\n\t\t\t\t\t\tstart.fromBufferAttribute(position, index1);\r\n\t\t\t\t\t\tend.fromBufferAttribute(position, index2);\r\n\r\n\t\t\t\t\t\tif (isUniqueEdge(start, end, edges) === true) {\r\n\t\t\t\t\t\t\tvertices.push(start.x, start.y, start.z);\r\n\t\t\t\t\t\t\tvertices.push(end.x, end.y, end.z);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} // build geometry\r\n\r\n\r\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction isUniqueEdge(start, end, edges) {\r\n\t\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\r\n\t\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\r\n\r\n\t\tif (edges.has(hash1) === true || edges.has(hash2) === true) {\r\n\t\t\treturn false;\r\n\t\t} else {\r\n\t\t\tedges.add(hash1, hash2);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\tvar Geometries = /*#__PURE__*/Object.freeze({\r\n\t\t__proto__: null,\r\n\t\tBoxGeometry: BoxGeometry,\r\n\t\tBoxBufferGeometry: BoxGeometry,\r\n\t\tCircleGeometry: CircleGeometry,\r\n\t\tCircleBufferGeometry: CircleGeometry,\r\n\t\tConeGeometry: ConeGeometry,\r\n\t\tConeBufferGeometry: ConeGeometry,\r\n\t\tCylinderGeometry: CylinderGeometry,\r\n\t\tCylinderBufferGeometry: CylinderGeometry,\r\n\t\tDodecahedronGeometry: DodecahedronGeometry,\r\n\t\tDodecahedronBufferGeometry: DodecahedronGeometry,\r\n\t\tEdgesGeometry: EdgesGeometry,\r\n\t\tExtrudeGeometry: ExtrudeGeometry,\r\n\t\tExtrudeBufferGeometry: ExtrudeGeometry,\r\n\t\tIcosahedronGeometry: IcosahedronGeometry,\r\n\t\tIcosahedronBufferGeometry: IcosahedronGeometry,\r\n\t\tLatheGeometry: LatheGeometry,\r\n\t\tLatheBufferGeometry: LatheGeometry,\r\n\t\tOctahedronGeometry: OctahedronGeometry,\r\n\t\tOctahedronBufferGeometry: OctahedronGeometry,\r\n\t\tParametricGeometry: ParametricGeometry,\r\n\t\tParametricBufferGeometry: ParametricGeometry,\r\n\t\tPlaneGeometry: PlaneGeometry,\r\n\t\tPlaneBufferGeometry: PlaneGeometry,\r\n\t\tPolyhedronGeometry: PolyhedronGeometry,\r\n\t\tPolyhedronBufferGeometry: PolyhedronGeometry,\r\n\t\tRingGeometry: RingGeometry,\r\n\t\tRingBufferGeometry: RingGeometry,\r\n\t\tShapeGeometry: ShapeGeometry,\r\n\t\tShapeBufferGeometry: ShapeGeometry,\r\n\t\tSphereGeometry: SphereGeometry,\r\n\t\tSphereBufferGeometry: SphereGeometry,\r\n\t\tTetrahedronGeometry: TetrahedronGeometry,\r\n\t\tTetrahedronBufferGeometry: TetrahedronGeometry,\r\n\t\tTextGeometry: TextGeometry,\r\n\t\tTextBufferGeometry: TextGeometry,\r\n\t\tTorusGeometry: TorusGeometry,\r\n\t\tTorusBufferGeometry: TorusGeometry,\r\n\t\tTorusKnotGeometry: TorusKnotGeometry,\r\n\t\tTorusKnotBufferGeometry: TorusKnotGeometry,\r\n\t\tTubeGeometry: TubeGeometry,\r\n\t\tTubeBufferGeometry: TubeGeometry,\r\n\t\tWireframeGeometry: WireframeGeometry\r\n\t});\r\n\r\n\t/**\r\n\t * parameters = {\r\n\t *\tcolor: <THREE.Color>\r\n\t * }\r\n\t */\r\n\r\n\tclass ShadowMaterial extends Material {\r\n\t\tconstructor(parameters) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'ShadowMaterial';\r\n\t\t\tthis.color = new Color(0x000000);\r\n\t\t\tthis.transparent = true;\r\n\t\t\tthis.setValues(parameters);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.color.copy(source.color);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tShadowMaterial.prototype.isShadowMaterial = true;\r\n\r\n\t/**\r\n\t * parameters = {\r\n\t *\tcolor: <hex>,\r\n\t *\troughness: <float>,\r\n\t *\tmetalness: <float>,\r\n\t *\topacity: <float>,\r\n\t *\r\n\t *\tmap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tlightMap: new THREE.Texture( <Image> ),\r\n\t *\tlightMapIntensity: <float>\r\n\t *\r\n\t *\taoMap: new THREE.Texture( <Image> ),\r\n\t *\taoMapIntensity: <float>\r\n\t *\r\n\t *\temissive: <hex>,\r\n\t *\temissiveIntensity: <float>\r\n\t *\temissiveMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tbumpMap: new THREE.Texture( <Image> ),\r\n\t *\tbumpScale: <float>,\r\n\t *\r\n\t *\tnormalMap: new THREE.Texture( <Image> ),\r\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\r\n\t *\tnormalScale: <Vector2>,\r\n\t *\r\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\r\n\t *\tdisplacementScale: <float>,\r\n\t *\tdisplacementBias: <float>,\r\n\t *\r\n\t *\troughnessMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tmetalnessMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\talphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\r\n\t *\tenvMapIntensity: <float>\r\n\t *\r\n\t *\trefractionRatio: <float>,\r\n\t *\r\n\t *\twireframe: <boolean>,\r\n\t *\twireframeLinewidth: <float>,\r\n\t *\r\n\t *\tflatShading: <bool>\r\n\t * }\r\n\t */\r\n\r\n\tclass MeshStandardMaterial extends Material {\r\n\t\tconstructor(parameters) {\r\n\t\t\tsuper();\r\n\t\t\tthis.defines = {\r\n\t\t\t\t'STANDARD': ''\r\n\t\t\t};\r\n\t\t\tthis.type = 'MeshStandardMaterial';\r\n\t\t\tthis.color = new Color(0xffffff); // diffuse\r\n\r\n\t\t\tthis.roughness = 1.0;\r\n\t\t\tthis.metalness = 0.0;\r\n\t\t\tthis.map = null;\r\n\t\t\tthis.lightMap = null;\r\n\t\t\tthis.lightMapIntensity = 1.0;\r\n\t\t\tthis.aoMap = null;\r\n\t\t\tthis.aoMapIntensity = 1.0;\r\n\t\t\tthis.emissive = new Color(0x000000);\r\n\t\t\tthis.emissiveIntensity = 1.0;\r\n\t\t\tthis.emissiveMap = null;\r\n\t\t\tthis.bumpMap = null;\r\n\t\t\tthis.bumpScale = 1;\r\n\t\t\tthis.normalMap = null;\r\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\r\n\t\t\tthis.normalScale = new Vector2(1, 1);\r\n\t\t\tthis.displacementMap = null;\r\n\t\t\tthis.displacementScale = 1;\r\n\t\t\tthis.displacementBias = 0;\r\n\t\t\tthis.roughnessMap = null;\r\n\t\t\tthis.metalnessMap = null;\r\n\t\t\tthis.alphaMap = null;\r\n\t\t\tthis.envMap = null;\r\n\t\t\tthis.envMapIntensity = 1.0;\r\n\t\t\tthis.refractionRatio = 0.98;\r\n\t\t\tthis.wireframe = false;\r\n\t\t\tthis.wireframeLinewidth = 1;\r\n\t\t\tthis.wireframeLinecap = 'round';\r\n\t\t\tthis.wireframeLinejoin = 'round';\r\n\t\t\tthis.flatShading = false;\r\n\t\t\tthis.setValues(parameters);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.defines = {\r\n\t\t\t\t'STANDARD': ''\r\n\t\t\t};\r\n\t\t\tthis.color.copy(source.color);\r\n\t\t\tthis.roughness = source.roughness;\r\n\t\t\tthis.metalness = source.metalness;\r\n\t\t\tthis.map = source.map;\r\n\t\t\tthis.lightMap = source.lightMap;\r\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\t\t\tthis.aoMap = source.aoMap;\r\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\t\t\tthis.emissive.copy(source.emissive);\r\n\t\t\tthis.emissiveMap = source.emissiveMap;\r\n\t\t\tthis.emissiveIntensity = source.emissiveIntensity;\r\n\t\t\tthis.bumpMap = source.bumpMap;\r\n\t\t\tthis.bumpScale = source.bumpScale;\r\n\t\t\tthis.normalMap = source.normalMap;\r\n\t\t\tthis.normalMapType = source.normalMapType;\r\n\t\t\tthis.normalScale.copy(source.normalScale);\r\n\t\t\tthis.displacementMap = source.displacementMap;\r\n\t\t\tthis.displacementScale = source.displacementScale;\r\n\t\t\tthis.displacementBias = source.displacementBias;\r\n\t\t\tthis.roughnessMap = source.roughnessMap;\r\n\t\t\tthis.metalnessMap = source.metalnessMap;\r\n\t\t\tthis.alphaMap = source.alphaMap;\r\n\t\t\tthis.envMap = source.envMap;\r\n\t\t\tthis.envMapIntensity = source.envMapIntensity;\r\n\t\t\tthis.refractionRatio = source.refractionRatio;\r\n\t\t\tthis.wireframe = source.wireframe;\r\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\t\t\tthis.flatShading = source.flatShading;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\r\n\r\n\t/**\r\n\t * parameters = {\r\n\t *\tclearcoat: <float>,\r\n\t *\tclearcoatMap: new THREE.Texture( <Image> ),\r\n\t *\tclearcoatRoughness: <float>,\r\n\t *\tclearcoatRoughnessMap: new THREE.Texture( <Image> ),\r\n\t *\tclearcoatNormalScale: <Vector2>,\r\n\t *\tclearcoatNormalMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\treflectivity: <float>,\r\n\t *\tior: <float>,\r\n\t *\r\n\t *\tsheen: <Color>,\r\n\t *\r\n\t *\ttransmission: <float>,\r\n\t *\ttransmissionMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tthickness: <float>,\r\n\t *\tthicknessMap: new THREE.Texture( <Image> ),\r\n\t *\tattenuationDistance: <float>,\r\n\t *\tattenuationTint: <Color>,\r\n\t *\r\n\t *\tspecularIntensity: <float>,\r\n\t *\tspecularIntensityhMap: new THREE.Texture( <Image> ),\r\n\t *\tspecularTint: <Color>,\r\n\t *\tspecularTintMap: new THREE.Texture( <Image> )\r\n\t * }\r\n\t */\r\n\r\n\tclass MeshPhysicalMaterial extends MeshStandardMaterial {\r\n\t\tconstructor(parameters) {\r\n\t\t\tsuper();\r\n\t\t\tthis.defines = {\r\n\t\t\t\t'STANDARD': '',\r\n\t\t\t\t'PHYSICAL': ''\r\n\t\t\t};\r\n\t\t\tthis.type = 'MeshPhysicalMaterial';\r\n\t\t\tthis.clearcoat = 0.0;\r\n\t\t\tthis.clearcoatMap = null;\r\n\t\t\tthis.clearcoatRoughness = 0.0;\r\n\t\t\tthis.clearcoatRoughnessMap = null;\r\n\t\t\tthis.clearcoatNormalScale = new Vector2(1, 1);\r\n\t\t\tthis.clearcoatNormalMap = null;\r\n\t\t\tthis.reflectivity = 0.5; // maps to F0 = 0.04\r\n\r\n\t\t\tObject.defineProperty(this, 'ior', {\r\n\t\t\t\tget: function () {\r\n\t\t\t\t\treturn (1 + 0.4 * this.reflectivity) / (1 - 0.4 * this.reflectivity);\r\n\t\t\t\t},\r\n\t\t\t\tset: function (ior) {\r\n\t\t\t\t\tthis.reflectivity = clamp(2.5 * (ior - 1) / (ior + 1), 0, 1);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.sheen = null; // null will disable sheen bsdf\r\n\r\n\t\t\tthis.transmission = 0.0;\r\n\t\t\tthis.transmissionMap = null;\r\n\t\t\tthis.thickness = 0.01;\r\n\t\t\tthis.thicknessMap = null;\r\n\t\t\tthis.attenuationDistance = 0.0;\r\n\t\t\tthis.attenuationTint = new Color(1, 1, 1);\r\n\t\t\tthis.specularIntensity = 1.0;\r\n\t\t\tthis.specularIntensityMap = null;\r\n\t\t\tthis.specularTint = new Color(1, 1, 1);\r\n\t\t\tthis.specularTintMap = null;\r\n\t\t\tthis.setValues(parameters);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.defines = {\r\n\t\t\t\t'STANDARD': '',\r\n\t\t\t\t'PHYSICAL': ''\r\n\t\t\t};\r\n\t\t\tthis.clearcoat = source.clearcoat;\r\n\t\t\tthis.clearcoatMap = source.clearcoatMap;\r\n\t\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\r\n\t\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\r\n\t\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\r\n\t\t\tthis.clearcoatNormalScale.copy(source.clearcoatNormalScale);\r\n\t\t\tthis.reflectivity = source.reflectivity;\r\n\r\n\t\t\tif (source.sheen) {\r\n\t\t\t\tthis.sheen = (this.sheen || new Color()).copy(source.sheen);\r\n\t\t\t} else {\r\n\t\t\t\tthis.sheen = null;\r\n\t\t\t}\r\n\r\n\t\t\tthis.transmission = source.transmission;\r\n\t\t\tthis.transmissionMap = source.transmissionMap;\r\n\t\t\tthis.thickness = source.thickness;\r\n\t\t\tthis.thicknessMap = source.thicknessMap;\r\n\t\t\tthis.attenuationDistance = source.attenuationDistance;\r\n\t\t\tthis.attenuationTint.copy(source.attenuationTint);\r\n\t\t\tthis.specularIntensity = source.specularIntensity;\r\n\t\t\tthis.specularIntensityMap = source.specularIntensityMap;\r\n\t\t\tthis.specularTint.copy(source.specularTint);\r\n\t\t\tthis.specularTintMap = source.specularTintMap;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\r\n\r\n\t/**\r\n\t * parameters = {\r\n\t *\tcolor: <hex>,\r\n\t *\tspecular: <hex>,\r\n\t *\tshininess: <float>,\r\n\t *\topacity: <float>,\r\n\t *\r\n\t *\tmap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tlightMap: new THREE.Texture( <Image> ),\r\n\t *\tlightMapIntensity: <float>\r\n\t *\r\n\t *\taoMap: new THREE.Texture( <Image> ),\r\n\t *\taoMapIntensity: <float>\r\n\t *\r\n\t *\temissive: <hex>,\r\n\t *\temissiveIntensity: <float>\r\n\t *\temissiveMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tbumpMap: new THREE.Texture( <Image> ),\r\n\t *\tbumpScale: <float>,\r\n\t *\r\n\t *\tnormalMap: new THREE.Texture( <Image> ),\r\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\r\n\t *\tnormalScale: <Vector2>,\r\n\t *\r\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\r\n\t *\tdisplacementScale: <float>,\r\n\t *\tdisplacementBias: <float>,\r\n\t *\r\n\t *\tspecularMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\talphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\r\n\t *\tcombine: THREE.MultiplyOperation,\r\n\t *\treflectivity: <float>,\r\n\t *\trefractionRatio: <float>,\r\n\t *\r\n\t *\twireframe: <boolean>,\r\n\t *\twireframeLinewidth: <float>,\r\n\t *\r\n\t *\tflatShading: <bool>\r\n\t * }\r\n\t */\r\n\r\n\tclass MeshPhongMaterial extends Material {\r\n\t\tconstructor(parameters) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'MeshPhongMaterial';\r\n\t\t\tthis.color = new Color(0xffffff); // diffuse\r\n\r\n\t\t\tthis.specular = new Color(0x111111);\r\n\t\t\tthis.shininess = 30;\r\n\t\t\tthis.map = null;\r\n\t\t\tthis.lightMap = null;\r\n\t\t\tthis.lightMapIntensity = 1.0;\r\n\t\t\tthis.aoMap = null;\r\n\t\t\tthis.aoMapIntensity = 1.0;\r\n\t\t\tthis.emissive = new Color(0x000000);\r\n\t\t\tthis.emissiveIntensity = 1.0;\r\n\t\t\tthis.emissiveMap = null;\r\n\t\t\tthis.bumpMap = null;\r\n\t\t\tthis.bumpScale = 1;\r\n\t\t\tthis.normalMap = null;\r\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\r\n\t\t\tthis.normalScale = new Vector2(1, 1);\r\n\t\t\tthis.displacementMap = null;\r\n\t\t\tthis.displacementScale = 1;\r\n\t\t\tthis.displacementBias = 0;\r\n\t\t\tthis.specularMap = null;\r\n\t\t\tthis.alphaMap = null;\r\n\t\t\tthis.envMap = null;\r\n\t\t\tthis.combine = MultiplyOperation;\r\n\t\t\tthis.reflectivity = 1;\r\n\t\t\tthis.refractionRatio = 0.98;\r\n\t\t\tthis.wireframe = false;\r\n\t\t\tthis.wireframeLinewidth = 1;\r\n\t\t\tthis.wireframeLinecap = 'round';\r\n\t\t\tthis.wireframeLinejoin = 'round';\r\n\t\t\tthis.flatShading = false;\r\n\t\t\tthis.setValues(parameters);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.color.copy(source.color);\r\n\t\t\tthis.specular.copy(source.specular);\r\n\t\t\tthis.shininess = source.shininess;\r\n\t\t\tthis.map = source.map;\r\n\t\t\tthis.lightMap = source.lightMap;\r\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\t\t\tthis.aoMap = source.aoMap;\r\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\t\t\tthis.emissive.copy(source.emissive);\r\n\t\t\tthis.emissiveMap = source.emissiveMap;\r\n\t\t\tthis.emissiveIntensity = source.emissiveIntensity;\r\n\t\t\tthis.bumpMap = source.bumpMap;\r\n\t\t\tthis.bumpScale = source.bumpScale;\r\n\t\t\tthis.normalMap = source.normalMap;\r\n\t\t\tthis.normalMapType = source.normalMapType;\r\n\t\t\tthis.normalScale.copy(source.normalScale);\r\n\t\t\tthis.displacementMap = source.displacementMap;\r\n\t\t\tthis.displacementScale = source.displacementScale;\r\n\t\t\tthis.displacementBias = source.displacementBias;\r\n\t\t\tthis.specularMap = source.specularMap;\r\n\t\t\tthis.alphaMap = source.alphaMap;\r\n\t\t\tthis.envMap = source.envMap;\r\n\t\t\tthis.combine = source.combine;\r\n\t\t\tthis.reflectivity = source.reflectivity;\r\n\t\t\tthis.refractionRatio = source.refractionRatio;\r\n\t\t\tthis.wireframe = source.wireframe;\r\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\t\t\tthis.flatShading = source.flatShading;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\r\n\r\n\t/**\r\n\t * parameters = {\r\n\t *\tcolor: <hex>,\r\n\t *\r\n\t *\tmap: new THREE.Texture( <Image> ),\r\n\t *\tgradientMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tlightMap: new THREE.Texture( <Image> ),\r\n\t *\tlightMapIntensity: <float>\r\n\t *\r\n\t *\taoMap: new THREE.Texture( <Image> ),\r\n\t *\taoMapIntensity: <float>\r\n\t *\r\n\t *\temissive: <hex>,\r\n\t *\temissiveIntensity: <float>\r\n\t *\temissiveMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tbumpMap: new THREE.Texture( <Image> ),\r\n\t *\tbumpScale: <float>,\r\n\t *\r\n\t *\tnormalMap: new THREE.Texture( <Image> ),\r\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\r\n\t *\tnormalScale: <Vector2>,\r\n\t *\r\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\r\n\t *\tdisplacementScale: <float>,\r\n\t *\tdisplacementBias: <float>,\r\n\t *\r\n\t *\talphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\twireframe: <boolean>,\r\n\t *\twireframeLinewidth: <float>,\r\n\t *\r\n\t * }\r\n\t */\r\n\r\n\tclass MeshToonMaterial extends Material {\r\n\t\tconstructor(parameters) {\r\n\t\t\tsuper();\r\n\t\t\tthis.defines = {\r\n\t\t\t\t'TOON': ''\r\n\t\t\t};\r\n\t\t\tthis.type = 'MeshToonMaterial';\r\n\t\t\tthis.color = new Color(0xffffff);\r\n\t\t\tthis.map = null;\r\n\t\t\tthis.gradientMap = null;\r\n\t\t\tthis.lightMap = null;\r\n\t\t\tthis.lightMapIntensity = 1.0;\r\n\t\t\tthis.aoMap = null;\r\n\t\t\tthis.aoMapIntensity = 1.0;\r\n\t\t\tthis.emissive = new Color(0x000000);\r\n\t\t\tthis.emissiveIntensity = 1.0;\r\n\t\t\tthis.emissiveMap = null;\r\n\t\t\tthis.bumpMap = null;\r\n\t\t\tthis.bumpScale = 1;\r\n\t\t\tthis.normalMap = null;\r\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\r\n\t\t\tthis.normalScale = new Vector2(1, 1);\r\n\t\t\tthis.displacementMap = null;\r\n\t\t\tthis.displacementScale = 1;\r\n\t\t\tthis.displacementBias = 0;\r\n\t\t\tthis.alphaMap = null;\r\n\t\t\tthis.wireframe = false;\r\n\t\t\tthis.wireframeLinewidth = 1;\r\n\t\t\tthis.wireframeLinecap = 'round';\r\n\t\t\tthis.wireframeLinejoin = 'round';\r\n\t\t\tthis.setValues(parameters);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.color.copy(source.color);\r\n\t\t\tthis.map = source.map;\r\n\t\t\tthis.gradientMap = source.gradientMap;\r\n\t\t\tthis.lightMap = source.lightMap;\r\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\t\t\tthis.aoMap = source.aoMap;\r\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\t\t\tthis.emissive.copy(source.emissive);\r\n\t\t\tthis.emissiveMap = source.emissiveMap;\r\n\t\t\tthis.emissiveIntensity = source.emissiveIntensity;\r\n\t\t\tthis.bumpMap = source.bumpMap;\r\n\t\t\tthis.bumpScale = source.bumpScale;\r\n\t\t\tthis.normalMap = source.normalMap;\r\n\t\t\tthis.normalMapType = source.normalMapType;\r\n\t\t\tthis.normalScale.copy(source.normalScale);\r\n\t\t\tthis.displacementMap = source.displacementMap;\r\n\t\t\tthis.displacementScale = source.displacementScale;\r\n\t\t\tthis.displacementBias = source.displacementBias;\r\n\t\t\tthis.alphaMap = source.alphaMap;\r\n\t\t\tthis.wireframe = source.wireframe;\r\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tMeshToonMaterial.prototype.isMeshToonMaterial = true;\r\n\r\n\t/**\r\n\t * parameters = {\r\n\t *\topacity: <float>,\r\n\t *\r\n\t *\tbumpMap: new THREE.Texture( <Image> ),\r\n\t *\tbumpScale: <float>,\r\n\t *\r\n\t *\tnormalMap: new THREE.Texture( <Image> ),\r\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\r\n\t *\tnormalScale: <Vector2>,\r\n\t *\r\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\r\n\t *\tdisplacementScale: <float>,\r\n\t *\tdisplacementBias: <float>,\r\n\t *\r\n\t *\twireframe: <boolean>,\r\n\t *\twireframeLinewidth: <float>\r\n\t *\r\n\t *\tflatShading: <bool>\r\n\t * }\r\n\t */\r\n\r\n\tclass MeshNormalMaterial extends Material {\r\n\t\tconstructor(parameters) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'MeshNormalMaterial';\r\n\t\t\tthis.bumpMap = null;\r\n\t\t\tthis.bumpScale = 1;\r\n\t\t\tthis.normalMap = null;\r\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\r\n\t\t\tthis.normalScale = new Vector2(1, 1);\r\n\t\t\tthis.displacementMap = null;\r\n\t\t\tthis.displacementScale = 1;\r\n\t\t\tthis.displacementBias = 0;\r\n\t\t\tthis.wireframe = false;\r\n\t\t\tthis.wireframeLinewidth = 1;\r\n\t\t\tthis.fog = false;\r\n\t\t\tthis.flatShading = false;\r\n\t\t\tthis.setValues(parameters);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.bumpMap = source.bumpMap;\r\n\t\t\tthis.bumpScale = source.bumpScale;\r\n\t\t\tthis.normalMap = source.normalMap;\r\n\t\t\tthis.normalMapType = source.normalMapType;\r\n\t\t\tthis.normalScale.copy(source.normalScale);\r\n\t\t\tthis.displacementMap = source.displacementMap;\r\n\t\t\tthis.displacementScale = source.displacementScale;\r\n\t\t\tthis.displacementBias = source.displacementBias;\r\n\t\t\tthis.wireframe = source.wireframe;\r\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\t\tthis.flatShading = source.flatShading;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\r\n\r\n\t/**\r\n\t * parameters = {\r\n\t *\tcolor: <hex>,\r\n\t *\topacity: <float>,\r\n\t *\r\n\t *\tmap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tlightMap: new THREE.Texture( <Image> ),\r\n\t *\tlightMapIntensity: <float>\r\n\t *\r\n\t *\taoMap: new THREE.Texture( <Image> ),\r\n\t *\taoMapIntensity: <float>\r\n\t *\r\n\t *\temissive: <hex>,\r\n\t *\temissiveIntensity: <float>\r\n\t *\temissiveMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tspecularMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\talphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\r\n\t *\tcombine: THREE.Multiply,\r\n\t *\treflectivity: <float>,\r\n\t *\trefractionRatio: <float>,\r\n\t *\r\n\t *\twireframe: <boolean>,\r\n\t *\twireframeLinewidth: <float>,\r\n\t *\r\n\t * }\r\n\t */\r\n\r\n\tclass MeshLambertMaterial extends Material {\r\n\t\tconstructor(parameters) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'MeshLambertMaterial';\r\n\t\t\tthis.color = new Color(0xffffff); // diffuse\r\n\r\n\t\t\tthis.map = null;\r\n\t\t\tthis.lightMap = null;\r\n\t\t\tthis.lightMapIntensity = 1.0;\r\n\t\t\tthis.aoMap = null;\r\n\t\t\tthis.aoMapIntensity = 1.0;\r\n\t\t\tthis.emissive = new Color(0x000000);\r\n\t\t\tthis.emissiveIntensity = 1.0;\r\n\t\t\tthis.emissiveMap = null;\r\n\t\t\tthis.specularMap = null;\r\n\t\t\tthis.alphaMap = null;\r\n\t\t\tthis.envMap = null;\r\n\t\t\tthis.combine = MultiplyOperation;\r\n\t\t\tthis.reflectivity = 1;\r\n\t\t\tthis.refractionRatio = 0.98;\r\n\t\t\tthis.wireframe = false;\r\n\t\t\tthis.wireframeLinewidth = 1;\r\n\t\t\tthis.wireframeLinecap = 'round';\r\n\t\t\tthis.wireframeLinejoin = 'round';\r\n\t\t\tthis.setValues(parameters);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.color.copy(source.color);\r\n\t\t\tthis.map = source.map;\r\n\t\t\tthis.lightMap = source.lightMap;\r\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\t\t\tthis.aoMap = source.aoMap;\r\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\t\t\tthis.emissive.copy(source.emissive);\r\n\t\t\tthis.emissiveMap = source.emissiveMap;\r\n\t\t\tthis.emissiveIntensity = source.emissiveIntensity;\r\n\t\t\tthis.specularMap = source.specularMap;\r\n\t\t\tthis.alphaMap = source.alphaMap;\r\n\t\t\tthis.envMap = source.envMap;\r\n\t\t\tthis.combine = source.combine;\r\n\t\t\tthis.reflectivity = source.reflectivity;\r\n\t\t\tthis.refractionRatio = source.refractionRatio;\r\n\t\t\tthis.wireframe = source.wireframe;\r\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\r\n\r\n\t/**\r\n\t * parameters = {\r\n\t *\tcolor: <hex>,\r\n\t *\topacity: <float>,\r\n\t *\r\n\t *\tmatcap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tmap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tbumpMap: new THREE.Texture( <Image> ),\r\n\t *\tbumpScale: <float>,\r\n\t *\r\n\t *\tnormalMap: new THREE.Texture( <Image> ),\r\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\r\n\t *\tnormalScale: <Vector2>,\r\n\t *\r\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\r\n\t *\tdisplacementScale: <float>,\r\n\t *\tdisplacementBias: <float>,\r\n\t *\r\n\t *\talphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *\tflatShading: <bool>\r\n\t * }\r\n\t */\r\n\r\n\tclass MeshMatcapMaterial extends Material {\r\n\t\tconstructor(parameters) {\r\n\t\t\tsuper();\r\n\t\t\tthis.defines = {\r\n\t\t\t\t'MATCAP': ''\r\n\t\t\t};\r\n\t\t\tthis.type = 'MeshMatcapMaterial';\r\n\t\t\tthis.color = new Color(0xffffff); // diffuse\r\n\r\n\t\t\tthis.matcap = null;\r\n\t\t\tthis.map = null;\r\n\t\t\tthis.bumpMap = null;\r\n\t\t\tthis.bumpScale = 1;\r\n\t\t\tthis.normalMap = null;\r\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\r\n\t\t\tthis.normalScale = new Vector2(1, 1);\r\n\t\t\tthis.displacementMap = null;\r\n\t\t\tthis.displacementScale = 1;\r\n\t\t\tthis.displacementBias = 0;\r\n\t\t\tthis.alphaMap = null;\r\n\t\t\tthis.flatShading = false;\r\n\t\t\tthis.setValues(parameters);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.defines = {\r\n\t\t\t\t'MATCAP': ''\r\n\t\t\t};\r\n\t\t\tthis.color.copy(source.color);\r\n\t\t\tthis.matcap = source.matcap;\r\n\t\t\tthis.map = source.map;\r\n\t\t\tthis.bumpMap = source.bumpMap;\r\n\t\t\tthis.bumpScale = source.bumpScale;\r\n\t\t\tthis.normalMap = source.normalMap;\r\n\t\t\tthis.normalMapType = source.normalMapType;\r\n\t\t\tthis.normalScale.copy(source.normalScale);\r\n\t\t\tthis.displacementMap = source.displacementMap;\r\n\t\t\tthis.displacementScale = source.displacementScale;\r\n\t\t\tthis.displacementBias = source.displacementBias;\r\n\t\t\tthis.alphaMap = source.alphaMap;\r\n\t\t\tthis.flatShading = source.flatShading;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tMeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\r\n\r\n\t/**\r\n\t * parameters = {\r\n\t *\tcolor: <hex>,\r\n\t *\topacity: <float>,\r\n\t *\r\n\t *\tlinewidth: <float>,\r\n\t *\r\n\t *\tscale: <float>,\r\n\t *\tdashSize: <float>,\r\n\t *\tgapSize: <float>\r\n\t * }\r\n\t */\r\n\r\n\tclass LineDashedMaterial extends LineBasicMaterial {\r\n\t\tconstructor(parameters) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'LineDashedMaterial';\r\n\t\t\tthis.scale = 1;\r\n\t\t\tthis.dashSize = 3;\r\n\t\t\tthis.gapSize = 1;\r\n\t\t\tthis.setValues(parameters);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.scale = source.scale;\r\n\t\t\tthis.dashSize = source.dashSize;\r\n\t\t\tthis.gapSize = source.gapSize;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tLineDashedMaterial.prototype.isLineDashedMaterial = true;\r\n\r\n\tvar Materials = /*#__PURE__*/Object.freeze({\r\n\t\t__proto__: null,\r\n\t\tShadowMaterial: ShadowMaterial,\r\n\t\tSpriteMaterial: SpriteMaterial,\r\n\t\tRawShaderMaterial: RawShaderMaterial,\r\n\t\tShaderMaterial: ShaderMaterial,\r\n\t\tPointsMaterial: PointsMaterial,\r\n\t\tMeshPhysicalMaterial: MeshPhysicalMaterial,\r\n\t\tMeshStandardMaterial: MeshStandardMaterial,\r\n\t\tMeshPhongMaterial: MeshPhongMaterial,\r\n\t\tMeshToonMaterial: MeshToonMaterial,\r\n\t\tMeshNormalMaterial: MeshNormalMaterial,\r\n\t\tMeshLambertMaterial: MeshLambertMaterial,\r\n\t\tMeshDepthMaterial: MeshDepthMaterial,\r\n\t\tMeshDistanceMaterial: MeshDistanceMaterial,\r\n\t\tMeshBasicMaterial: MeshBasicMaterial,\r\n\t\tMeshMatcapMaterial: MeshMatcapMaterial,\r\n\t\tLineDashedMaterial: LineDashedMaterial,\r\n\t\tLineBasicMaterial: LineBasicMaterial,\r\n\t\tMaterial: Material\r\n\t});\r\n\r\n\tconst AnimationUtils = {\r\n\t\t// same as Array.prototype.slice, but also works on typed arrays\r\n\t\tarraySlice: function (array, from, to) {\r\n\t\t\tif (AnimationUtils.isTypedArray(array)) {\r\n\t\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\r\n\t\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\r\n\t\t\t\treturn new array.constructor(array.subarray(from, to !== undefined ? to : array.length));\r\n\t\t\t}\r\n\r\n\t\t\treturn array.slice(from, to);\r\n\t\t},\r\n\t\t// converts an array to a specific type\r\n\t\tconvertArray: function (array, type, forceClone) {\r\n\t\t\tif (!array || // let 'undefined' and 'null' pass\r\n\t\t\t!forceClone && array.constructor === type) return array;\r\n\r\n\t\t\tif (typeof type.BYTES_PER_ELEMENT === 'number') {\r\n\t\t\t\treturn new type(array); // create typed array\r\n\t\t\t}\r\n\r\n\t\t\treturn Array.prototype.slice.call(array); // create Array\r\n\t\t},\r\n\t\tisTypedArray: function (object) {\r\n\t\t\treturn ArrayBuffer.isView(object) && !(object instanceof DataView);\r\n\t\t},\r\n\t\t// returns an array by which times and values can be sorted\r\n\t\tgetKeyframeOrder: function (times) {\r\n\t\t\tfunction compareTime(i, j) {\r\n\t\t\t\treturn times[i] - times[j];\r\n\t\t\t}\r\n\r\n\t\t\tconst n = times.length;\r\n\t\t\tconst result = new Array(n);\r\n\r\n\t\t\tfor (let i = 0; i !== n; ++i) result[i] = i;\r\n\r\n\t\t\tresult.sort(compareTime);\r\n\t\t\treturn result;\r\n\t\t},\r\n\t\t// uses the array previously returned by 'getKeyframeOrder' to sort data\r\n\t\tsortedArray: function (values, stride, order) {\r\n\t\t\tconst nValues = values.length;\r\n\t\t\tconst result = new values.constructor(nValues);\r\n\r\n\t\t\tfor (let i = 0, dstOffset = 0; dstOffset !== nValues; ++i) {\r\n\t\t\t\tconst srcOffset = order[i] * stride;\r\n\r\n\t\t\t\tfor (let j = 0; j !== stride; ++j) {\r\n\t\t\t\t\tresult[dstOffset++] = values[srcOffset + j];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t},\r\n\t\t// function for parsing AOS keyframe formats\r\n\t\tflattenJSON: function (jsonKeys, times, values, valuePropertyName) {\r\n\t\t\tlet i = 1,\r\n\t\t\t\t\tkey = jsonKeys[0];\r\n\r\n\t\t\twhile (key !== undefined && key[valuePropertyName] === undefined) {\r\n\t\t\t\tkey = jsonKeys[i++];\r\n\t\t\t}\r\n\r\n\t\t\tif (key === undefined) return; // no data\r\n\r\n\t\t\tlet value = key[valuePropertyName];\r\n\t\t\tif (value === undefined) return; // no data\r\n\r\n\t\t\tif (Array.isArray(value)) {\r\n\t\t\t\tdo {\r\n\t\t\t\t\tvalue = key[valuePropertyName];\r\n\r\n\t\t\t\t\tif (value !== undefined) {\r\n\t\t\t\t\t\ttimes.push(key.time);\r\n\t\t\t\t\t\tvalues.push.apply(values, value); // push all elements\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tkey = jsonKeys[i++];\r\n\t\t\t\t} while (key !== undefined);\r\n\t\t\t} else if (value.toArray !== undefined) {\r\n\t\t\t\t// ...assume THREE.Math-ish\r\n\t\t\t\tdo {\r\n\t\t\t\t\tvalue = key[valuePropertyName];\r\n\r\n\t\t\t\t\tif (value !== undefined) {\r\n\t\t\t\t\t\ttimes.push(key.time);\r\n\t\t\t\t\t\tvalue.toArray(values, values.length);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tkey = jsonKeys[i++];\r\n\t\t\t\t} while (key !== undefined);\r\n\t\t\t} else {\r\n\t\t\t\t// otherwise push as-is\r\n\t\t\t\tdo {\r\n\t\t\t\t\tvalue = key[valuePropertyName];\r\n\r\n\t\t\t\t\tif (value !== undefined) {\r\n\t\t\t\t\t\ttimes.push(key.time);\r\n\t\t\t\t\t\tvalues.push(value);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tkey = jsonKeys[i++];\r\n\t\t\t\t} while (key !== undefined);\r\n\t\t\t}\r\n\t\t},\r\n\t\tsubclip: function (sourceClip, name, startFrame, endFrame, fps = 30) {\r\n\t\t\tconst clip = sourceClip.clone();\r\n\t\t\tclip.name = name;\r\n\t\t\tconst tracks = [];\r\n\r\n\t\t\tfor (let i = 0; i < clip.tracks.length; ++i) {\r\n\t\t\t\tconst track = clip.tracks[i];\r\n\t\t\t\tconst valueSize = track.getValueSize();\r\n\t\t\t\tconst times = [];\r\n\t\t\t\tconst values = [];\r\n\r\n\t\t\t\tfor (let j = 0; j < track.times.length; ++j) {\r\n\t\t\t\t\tconst frame = track.times[j] * fps;\r\n\t\t\t\t\tif (frame < startFrame || frame >= endFrame) continue;\r\n\t\t\t\t\ttimes.push(track.times[j]);\r\n\r\n\t\t\t\t\tfor (let k = 0; k < valueSize; ++k) {\r\n\t\t\t\t\t\tvalues.push(track.values[j * valueSize + k]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (times.length === 0) continue;\r\n\t\t\t\ttrack.times = AnimationUtils.convertArray(times, track.times.constructor);\r\n\t\t\t\ttrack.values = AnimationUtils.convertArray(values, track.values.constructor);\r\n\t\t\t\ttracks.push(track);\r\n\t\t\t}\r\n\r\n\t\t\tclip.tracks = tracks; // find minimum .times value across all tracks in the trimmed clip\r\n\r\n\t\t\tlet minStartTime = Infinity;\r\n\r\n\t\t\tfor (let i = 0; i < clip.tracks.length; ++i) {\r\n\t\t\t\tif (minStartTime > clip.tracks[i].times[0]) {\r\n\t\t\t\t\tminStartTime = clip.tracks[i].times[0];\r\n\t\t\t\t}\r\n\t\t\t} // shift all tracks such that clip begins at t=0\r\n\r\n\r\n\t\t\tfor (let i = 0; i < clip.tracks.length; ++i) {\r\n\t\t\t\tclip.tracks[i].shift(-1 * minStartTime);\r\n\t\t\t}\r\n\r\n\t\t\tclip.resetDuration();\r\n\t\t\treturn clip;\r\n\t\t},\r\n\t\tmakeClipAdditive: function (targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30) {\r\n\t\t\tif (fps <= 0) fps = 30;\r\n\t\t\tconst numTracks = referenceClip.tracks.length;\r\n\t\t\tconst referenceTime = referenceFrame / fps; // Make each track's values relative to the values at the reference frame\r\n\r\n\t\t\tfor (let i = 0; i < numTracks; ++i) {\r\n\t\t\t\tconst referenceTrack = referenceClip.tracks[i];\r\n\t\t\t\tconst referenceTrackType = referenceTrack.ValueTypeName; // Skip this track if it's non-numeric\r\n\r\n\t\t\t\tif (referenceTrackType === 'bool' || referenceTrackType === 'string') continue; // Find the track in the target clip whose name and type matches the reference track\r\n\r\n\t\t\t\tconst targetTrack = targetClip.tracks.find(function (track) {\r\n\t\t\t\t\treturn track.name === referenceTrack.name && track.ValueTypeName === referenceTrackType;\r\n\t\t\t\t});\r\n\t\t\t\tif (targetTrack === undefined) continue;\r\n\t\t\t\tlet referenceOffset = 0;\r\n\t\t\t\tconst referenceValueSize = referenceTrack.getValueSize();\r\n\r\n\t\t\t\tif (referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline) {\r\n\t\t\t\t\treferenceOffset = referenceValueSize / 3;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet targetOffset = 0;\r\n\t\t\t\tconst targetValueSize = targetTrack.getValueSize();\r\n\r\n\t\t\t\tif (targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline) {\r\n\t\t\t\t\ttargetOffset = targetValueSize / 3;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst lastIndex = referenceTrack.times.length - 1;\r\n\t\t\t\tlet referenceValue; // Find the value to subtract out of the track\r\n\r\n\t\t\t\tif (referenceTime <= referenceTrack.times[0]) {\r\n\t\t\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\r\n\t\t\t\t\tconst startIndex = referenceOffset;\r\n\t\t\t\t\tconst endIndex = referenceValueSize - referenceOffset;\r\n\t\t\t\t\treferenceValue = AnimationUtils.arraySlice(referenceTrack.values, startIndex, endIndex);\r\n\t\t\t\t} else if (referenceTime >= referenceTrack.times[lastIndex]) {\r\n\t\t\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\r\n\t\t\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\r\n\t\t\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\r\n\t\t\t\t\treferenceValue = AnimationUtils.arraySlice(referenceTrack.values, startIndex, endIndex);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Interpolate to the reference value\r\n\t\t\t\t\tconst interpolant = referenceTrack.createInterpolant();\r\n\t\t\t\t\tconst startIndex = referenceOffset;\r\n\t\t\t\t\tconst endIndex = referenceValueSize - referenceOffset;\r\n\t\t\t\t\tinterpolant.evaluate(referenceTime);\r\n\t\t\t\t\treferenceValue = AnimationUtils.arraySlice(interpolant.resultBuffer, startIndex, endIndex);\r\n\t\t\t\t} // Conjugate the quaternion\r\n\r\n\r\n\t\t\t\tif (referenceTrackType === 'quaternion') {\r\n\t\t\t\t\tconst referenceQuat = new Quaternion().fromArray(referenceValue).normalize().conjugate();\r\n\t\t\t\t\treferenceQuat.toArray(referenceValue);\r\n\t\t\t\t} // Subtract the reference value from all of the track values\r\n\r\n\r\n\t\t\t\tconst numTimes = targetTrack.times.length;\r\n\r\n\t\t\t\tfor (let j = 0; j < numTimes; ++j) {\r\n\t\t\t\t\tconst valueStart = j * targetValueSize + targetOffset;\r\n\r\n\t\t\t\t\tif (referenceTrackType === 'quaternion') {\r\n\t\t\t\t\t\t// Multiply the conjugate for quaternion track types\r\n\t\t\t\t\t\tQuaternion.multiplyQuaternionsFlat(targetTrack.values, valueStart, referenceValue, 0, targetTrack.values, valueStart);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2; // Subtract each value for all other numeric track types\r\n\r\n\t\t\t\t\t\tfor (let k = 0; k < valueEnd; ++k) {\r\n\t\t\t\t\t\t\ttargetTrack.values[valueStart + k] -= referenceValue[k];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttargetClip.blendMode = AdditiveAnimationBlendMode;\r\n\t\t\treturn targetClip;\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Abstract base class of interpolants over parametric samples.\r\n\t *\r\n\t * The parameter domain is one dimensional, typically the time or a path\r\n\t * along a curve defined by the data.\r\n\t *\r\n\t * The sample values can have any dimensionality and derived classes may\r\n\t * apply special interpretations to the data.\r\n\t *\r\n\t * This class provides the interval seek in a Template Method, deferring\r\n\t * the actual interpolation to derived classes.\r\n\t *\r\n\t * Time complexity is O(1) for linear access crossing at most two points\r\n\t * and O(log N) for random access, where N is the number of positions.\r\n\t *\r\n\t * References:\r\n\t *\r\n\t * \t\thttp://www.oodesign.com/template-method-pattern.html\r\n\t *\r\n\t */\r\n\tclass Interpolant {\r\n\t\tconstructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\r\n\t\t\tthis.parameterPositions = parameterPositions;\r\n\t\t\tthis._cachedIndex = 0;\r\n\t\t\tthis.resultBuffer = resultBuffer !== undefined ? resultBuffer : new sampleValues.constructor(sampleSize);\r\n\t\t\tthis.sampleValues = sampleValues;\r\n\t\t\tthis.valueSize = sampleSize;\r\n\t\t\tthis.settings = null;\r\n\t\t\tthis.DefaultSettings_ = {};\r\n\t\t}\r\n\r\n\t\tevaluate(t) {\r\n\t\t\tconst pp = this.parameterPositions;\r\n\t\t\tlet i1 = this._cachedIndex,\r\n\t\t\t\t\tt1 = pp[i1],\r\n\t\t\t\t\tt0 = pp[i1 - 1];\r\n\r\n\t\t\tvalidate_interval: {\r\n\t\t\t\tseek: {\r\n\t\t\t\t\tlet right;\r\n\r\n\t\t\t\t\tlinear_scan: {\r\n\t\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\r\n\t\t\t\t\t\t//- slower code:\r\n\t\t\t\t\t\t//-\r\n\t\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\r\n\t\t\t\t\t\tforward_scan: if (!(t < t1)) {\r\n\t\t\t\t\t\t\tfor (let giveUpAt = i1 + 2;;) {\r\n\t\t\t\t\t\t\t\tif (t1 === undefined) {\r\n\t\t\t\t\t\t\t\t\tif (t < t0) break forward_scan; // after end\r\n\r\n\t\t\t\t\t\t\t\t\ti1 = pp.length;\r\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\r\n\t\t\t\t\t\t\t\t\treturn this.afterEnd_(i1 - 1, t, t0);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif (i1 === giveUpAt) break; // this loop\r\n\r\n\t\t\t\t\t\t\t\tt0 = t1;\r\n\t\t\t\t\t\t\t\tt1 = pp[++i1];\r\n\r\n\t\t\t\t\t\t\t\tif (t < t1) {\r\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\r\n\t\t\t\t\t\t\t\t\tbreak seek;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} // prepare binary search on the right side of the index\r\n\r\n\r\n\t\t\t\t\t\t\tright = pp.length;\r\n\t\t\t\t\t\t\tbreak linear_scan;\r\n\t\t\t\t\t\t} //- slower code:\r\n\t\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\r\n\r\n\r\n\t\t\t\t\t\tif (!(t >= t0)) {\r\n\t\t\t\t\t\t\t// looping?\r\n\t\t\t\t\t\t\tconst t1global = pp[1];\r\n\r\n\t\t\t\t\t\t\tif (t < t1global) {\r\n\t\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\r\n\r\n\t\t\t\t\t\t\t\tt0 = t1global;\r\n\t\t\t\t\t\t\t} // linear reverse scan\r\n\r\n\r\n\t\t\t\t\t\t\tfor (let giveUpAt = i1 - 2;;) {\r\n\t\t\t\t\t\t\t\tif (t0 === undefined) {\r\n\t\t\t\t\t\t\t\t\t// before start\r\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\r\n\t\t\t\t\t\t\t\t\treturn this.beforeStart_(0, t, t1);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif (i1 === giveUpAt) break; // this loop\r\n\r\n\t\t\t\t\t\t\t\tt1 = t0;\r\n\t\t\t\t\t\t\t\tt0 = pp[--i1 - 1];\r\n\r\n\t\t\t\t\t\t\t\tif (t >= t0) {\r\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\r\n\t\t\t\t\t\t\t\t\tbreak seek;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} // prepare binary search on the left side of the index\r\n\r\n\r\n\t\t\t\t\t\t\tright = i1;\r\n\t\t\t\t\t\t\ti1 = 0;\r\n\t\t\t\t\t\t\tbreak linear_scan;\r\n\t\t\t\t\t\t} // the interval is valid\r\n\r\n\r\n\t\t\t\t\t\tbreak validate_interval;\r\n\t\t\t\t\t} // linear scan\r\n\t\t\t\t\t// binary search\r\n\r\n\r\n\t\t\t\t\twhile (i1 < right) {\r\n\t\t\t\t\t\tconst mid = i1 + right >>> 1;\r\n\r\n\t\t\t\t\t\tif (t < pp[mid]) {\r\n\t\t\t\t\t\t\tright = mid;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ti1 = mid + 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tt1 = pp[i1];\r\n\t\t\t\t\tt0 = pp[i1 - 1]; // check boundary cases, again\r\n\r\n\t\t\t\t\tif (t0 === undefined) {\r\n\t\t\t\t\t\tthis._cachedIndex = 0;\r\n\t\t\t\t\t\treturn this.beforeStart_(0, t, t1);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (t1 === undefined) {\r\n\t\t\t\t\t\ti1 = pp.length;\r\n\t\t\t\t\t\tthis._cachedIndex = i1;\r\n\t\t\t\t\t\treturn this.afterEnd_(i1 - 1, t0, t);\r\n\t\t\t\t\t}\r\n\t\t\t\t} // seek\r\n\r\n\r\n\t\t\t\tthis._cachedIndex = i1;\r\n\t\t\t\tthis.intervalChanged_(i1, t0, t1);\r\n\t\t\t} // validate_interval\r\n\r\n\r\n\t\t\treturn this.interpolate_(i1, t0, t, t1);\r\n\t\t}\r\n\r\n\t\tgetSettings_() {\r\n\t\t\treturn this.settings || this.DefaultSettings_;\r\n\t\t}\r\n\r\n\t\tcopySampleValue_(index) {\r\n\t\t\t// copies a sample value to the result buffer\r\n\t\t\tconst result = this.resultBuffer,\r\n\t\t\t\t\t\tvalues = this.sampleValues,\r\n\t\t\t\t\t\tstride = this.valueSize,\r\n\t\t\t\t\t\toffset = index * stride;\r\n\r\n\t\t\tfor (let i = 0; i !== stride; ++i) {\r\n\t\t\t\tresult[i] = values[offset + i];\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t} // Template methods for derived classes:\r\n\r\n\r\n\t\tinterpolate_()\r\n\t\t/* i1, t0, t, t1 */\r\n\t\t{\r\n\t\t\tthrow new Error('call to abstract method'); // implementations shall return this.resultBuffer\r\n\t\t}\r\n\r\n\t\tintervalChanged_()\r\n\t\t/* i1, t0, t1 */\r\n\t\t{// empty\r\n\t\t}\r\n\r\n\t} // ALIAS DEFINITIONS\r\n\r\n\r\n\tInterpolant.prototype.beforeStart_ = Interpolant.prototype.copySampleValue_;\r\n\tInterpolant.prototype.afterEnd_ = Interpolant.prototype.copySampleValue_;\r\n\r\n\t/**\r\n\t * Fast and simple cubic spline interpolant.\r\n\t *\r\n\t * It was derived from a Hermitian construction setting the first derivative\r\n\t * at each sample position to the linear slope between neighboring positions\r\n\t * over their parameter interval.\r\n\t */\r\n\r\n\tclass CubicInterpolant extends Interpolant {\r\n\t\tconstructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\r\n\t\t\tsuper(parameterPositions, sampleValues, sampleSize, resultBuffer);\r\n\t\t\tthis._weightPrev = -0;\r\n\t\t\tthis._offsetPrev = -0;\r\n\t\t\tthis._weightNext = -0;\r\n\t\t\tthis._offsetNext = -0;\r\n\t\t\tthis.DefaultSettings_ = {\r\n\t\t\t\tendingStart: ZeroCurvatureEnding,\r\n\t\t\t\tendingEnd: ZeroCurvatureEnding\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tintervalChanged_(i1, t0, t1) {\r\n\t\t\tconst pp = this.parameterPositions;\r\n\t\t\tlet iPrev = i1 - 2,\r\n\t\t\t\t\tiNext = i1 + 1,\r\n\t\t\t\t\ttPrev = pp[iPrev],\r\n\t\t\t\t\ttNext = pp[iNext];\r\n\r\n\t\t\tif (tPrev === undefined) {\r\n\t\t\t\tswitch (this.getSettings_().endingStart) {\r\n\t\t\t\t\tcase ZeroSlopeEnding:\r\n\t\t\t\t\t\t// f'(t0) = 0\r\n\t\t\t\t\t\tiPrev = i1;\r\n\t\t\t\t\t\ttPrev = 2 * t0 - t1;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase WrapAroundEnding:\r\n\t\t\t\t\t\t// use the other end of the curve\r\n\t\t\t\t\t\tiPrev = pp.length - 2;\r\n\t\t\t\t\t\ttPrev = t0 + pp[iPrev] - pp[iPrev + 1];\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t// ZeroCurvatureEnding\r\n\t\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\r\n\t\t\t\t\t\tiPrev = i1;\r\n\t\t\t\t\t\ttPrev = t1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (tNext === undefined) {\r\n\t\t\t\tswitch (this.getSettings_().endingEnd) {\r\n\t\t\t\t\tcase ZeroSlopeEnding:\r\n\t\t\t\t\t\t// f'(tN) = 0\r\n\t\t\t\t\t\tiNext = i1;\r\n\t\t\t\t\t\ttNext = 2 * t1 - t0;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase WrapAroundEnding:\r\n\t\t\t\t\t\t// use the other end of the curve\r\n\t\t\t\t\t\tiNext = 1;\r\n\t\t\t\t\t\ttNext = t1 + pp[1] - pp[0];\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t// ZeroCurvatureEnding\r\n\t\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\r\n\t\t\t\t\t\tiNext = i1 - 1;\r\n\t\t\t\t\t\ttNext = t0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst halfDt = (t1 - t0) * 0.5,\r\n\t\t\t\t\t\tstride = this.valueSize;\r\n\t\t\tthis._weightPrev = halfDt / (t0 - tPrev);\r\n\t\t\tthis._weightNext = halfDt / (tNext - t1);\r\n\t\t\tthis._offsetPrev = iPrev * stride;\r\n\t\t\tthis._offsetNext = iNext * stride;\r\n\t\t}\r\n\r\n\t\tinterpolate_(i1, t0, t, t1) {\r\n\t\t\tconst result = this.resultBuffer,\r\n\t\t\t\t\t\tvalues = this.sampleValues,\r\n\t\t\t\t\t\tstride = this.valueSize,\r\n\t\t\t\t\t\to1 = i1 * stride,\r\n\t\t\t\t\t\to0 = o1 - stride,\r\n\t\t\t\t\t\toP = this._offsetPrev,\r\n\t\t\t\t\t\toN = this._offsetNext,\r\n\t\t\t\t\t\twP = this._weightPrev,\r\n\t\t\t\t\t\twN = this._weightNext,\r\n\t\t\t\t\t\tp = (t - t0) / (t1 - t0),\r\n\t\t\t\t\t\tpp = p * p,\r\n\t\t\t\t\t\tppp = pp * p; // evaluate polynomials\r\n\r\n\t\t\tconst sP = -wP * ppp + 2 * wP * pp - wP * p;\r\n\t\t\tconst s0 = (1 + wP) * ppp + (-1.5 - 2 * wP) * pp + (-0.5 + wP) * p + 1;\r\n\t\t\tconst s1 = (-1 - wN) * ppp + (1.5 + wN) * pp + 0.5 * p;\r\n\t\t\tconst sN = wN * ppp - wN * pp; // combine data linearly\r\n\r\n\t\t\tfor (let i = 0; i !== stride; ++i) {\r\n\t\t\t\tresult[i] = sP * values[oP + i] + s0 * values[o0 + i] + s1 * values[o1 + i] + sN * values[oN + i];\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass LinearInterpolant extends Interpolant {\r\n\t\tconstructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\r\n\t\t\tsuper(parameterPositions, sampleValues, sampleSize, resultBuffer);\r\n\t\t}\r\n\r\n\t\tinterpolate_(i1, t0, t, t1) {\r\n\t\t\tconst result = this.resultBuffer,\r\n\t\t\t\t\t\tvalues = this.sampleValues,\r\n\t\t\t\t\t\tstride = this.valueSize,\r\n\t\t\t\t\t\toffset1 = i1 * stride,\r\n\t\t\t\t\t\toffset0 = offset1 - stride,\r\n\t\t\t\t\t\tweight1 = (t - t0) / (t1 - t0),\r\n\t\t\t\t\t\tweight0 = 1 - weight1;\r\n\r\n\t\t\tfor (let i = 0; i !== stride; ++i) {\r\n\t\t\t\tresult[i] = values[offset0 + i] * weight0 + values[offset1 + i] * weight1;\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * Interpolant that evaluates to the sample value at the position preceeding\r\n\t * the parameter.\r\n\t */\r\n\r\n\tclass DiscreteInterpolant extends Interpolant {\r\n\t\tconstructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\r\n\t\t\tsuper(parameterPositions, sampleValues, sampleSize, resultBuffer);\r\n\t\t}\r\n\r\n\t\tinterpolate_(i1\r\n\t\t/*, t0, t, t1 */\r\n\t\t) {\r\n\t\t\treturn this.copySampleValue_(i1 - 1);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass KeyframeTrack {\r\n\t\tconstructor(name, times, values, interpolation) {\r\n\t\t\tif (name === undefined) throw new Error('THREE.KeyframeTrack: track name is undefined');\r\n\t\t\tif (times === undefined || times.length === 0) throw new Error('THREE.KeyframeTrack: no keyframes in track named ' + name);\r\n\t\t\tthis.name = name;\r\n\t\t\tthis.times = AnimationUtils.convertArray(times, this.TimeBufferType);\r\n\t\t\tthis.values = AnimationUtils.convertArray(values, this.ValueBufferType);\r\n\t\t\tthis.setInterpolation(interpolation || this.DefaultInterpolation);\r\n\t\t} // Serialization (in static context, because of constructor invocation\r\n\t\t// and automatic invocation of .toJSON):\r\n\r\n\r\n\t\tstatic toJSON(track) {\r\n\t\t\tconst trackType = track.constructor;\r\n\t\t\tlet json; // derived classes can define a static toJSON method\r\n\r\n\t\t\tif (trackType.toJSON !== this.toJSON) {\r\n\t\t\t\tjson = trackType.toJSON(track);\r\n\t\t\t} else {\r\n\t\t\t\t// by default, we assume the data can be serialized as-is\r\n\t\t\t\tjson = {\r\n\t\t\t\t\t'name': track.name,\r\n\t\t\t\t\t'times': AnimationUtils.convertArray(track.times, Array),\r\n\t\t\t\t\t'values': AnimationUtils.convertArray(track.values, Array)\r\n\t\t\t\t};\r\n\t\t\t\tconst interpolation = track.getInterpolation();\r\n\r\n\t\t\t\tif (interpolation !== track.DefaultInterpolation) {\r\n\t\t\t\t\tjson.interpolation = interpolation;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tjson.type = track.ValueTypeName; // mandatory\r\n\r\n\t\t\treturn json;\r\n\t\t}\r\n\r\n\t\tInterpolantFactoryMethodDiscrete(result) {\r\n\t\t\treturn new DiscreteInterpolant(this.times, this.values, this.getValueSize(), result);\r\n\t\t}\r\n\r\n\t\tInterpolantFactoryMethodLinear(result) {\r\n\t\t\treturn new LinearInterpolant(this.times, this.values, this.getValueSize(), result);\r\n\t\t}\r\n\r\n\t\tInterpolantFactoryMethodSmooth(result) {\r\n\t\t\treturn new CubicInterpolant(this.times, this.values, this.getValueSize(), result);\r\n\t\t}\r\n\r\n\t\tsetInterpolation(interpolation) {\r\n\t\t\tlet factoryMethod;\r\n\r\n\t\t\tswitch (interpolation) {\r\n\t\t\t\tcase InterpolateDiscrete:\r\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase InterpolateLinear:\r\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase InterpolateSmooth:\r\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif (factoryMethod === undefined) {\r\n\t\t\t\tconst message = 'unsupported interpolation for ' + this.ValueTypeName + ' keyframe track named ' + this.name;\r\n\r\n\t\t\t\tif (this.createInterpolant === undefined) {\r\n\t\t\t\t\t// fall back to default, unless the default itself is messed up\r\n\t\t\t\t\tif (interpolation !== this.DefaultInterpolation) {\r\n\t\t\t\t\t\tthis.setInterpolation(this.DefaultInterpolation);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthrow new Error(message); // fatal, in this case\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.warn('THREE.KeyframeTrack:', message);\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\r\n\t\t\tthis.createInterpolant = factoryMethod;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetInterpolation() {\r\n\t\t\tswitch (this.createInterpolant) {\r\n\t\t\t\tcase this.InterpolantFactoryMethodDiscrete:\r\n\t\t\t\t\treturn InterpolateDiscrete;\r\n\r\n\t\t\t\tcase this.InterpolantFactoryMethodLinear:\r\n\t\t\t\t\treturn InterpolateLinear;\r\n\r\n\t\t\t\tcase this.InterpolantFactoryMethodSmooth:\r\n\t\t\t\t\treturn InterpolateSmooth;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tgetValueSize() {\r\n\t\t\treturn this.values.length / this.times.length;\r\n\t\t} // move all keyframes either forwards or backwards in time\r\n\r\n\r\n\t\tshift(timeOffset) {\r\n\t\t\tif (timeOffset !== 0.0) {\r\n\t\t\t\tconst times = this.times;\r\n\r\n\t\t\t\tfor (let i = 0, n = times.length; i !== n; ++i) {\r\n\t\t\t\t\ttimes[i] += timeOffset;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t} // scale all keyframe times by a factor (useful for frame <-> seconds conversions)\r\n\r\n\r\n\t\tscale(timeScale) {\r\n\t\t\tif (timeScale !== 1.0) {\r\n\t\t\t\tconst times = this.times;\r\n\r\n\t\t\t\tfor (let i = 0, n = times.length; i !== n; ++i) {\r\n\t\t\t\t\ttimes[i] *= timeScale;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t} // removes keyframes before and after animation without changing any values within the range [startTime, endTime].\r\n\t\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\r\n\r\n\r\n\t\ttrim(startTime, endTime) {\r\n\t\t\tconst times = this.times,\r\n\t\t\t\t\t\tnKeys = times.length;\r\n\t\t\tlet from = 0,\r\n\t\t\t\t\tto = nKeys - 1;\r\n\r\n\t\t\twhile (from !== nKeys && times[from] < startTime) {\r\n\t\t\t\t++from;\r\n\t\t\t}\r\n\r\n\t\t\twhile (to !== -1 && times[to] > endTime) {\r\n\t\t\t\t--to;\r\n\t\t\t}\r\n\r\n\t\t\t++to; // inclusive -> exclusive bound\r\n\r\n\t\t\tif (from !== 0 || to !== nKeys) {\r\n\t\t\t\t// empty tracks are forbidden, so keep at least one keyframe\r\n\t\t\t\tif (from >= to) {\r\n\t\t\t\t\tto = Math.max(to, 1);\r\n\t\t\t\t\tfrom = to - 1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst stride = this.getValueSize();\r\n\t\t\t\tthis.times = AnimationUtils.arraySlice(times, from, to);\r\n\t\t\t\tthis.values = AnimationUtils.arraySlice(this.values, from * stride, to * stride);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t} // ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\r\n\r\n\r\n\t\tvalidate() {\r\n\t\t\tlet valid = true;\r\n\t\t\tconst valueSize = this.getValueSize();\r\n\r\n\t\t\tif (valueSize - Math.floor(valueSize) !== 0) {\r\n\t\t\t\tconsole.error('THREE.KeyframeTrack: Invalid value size in track.', this);\r\n\t\t\t\tvalid = false;\r\n\t\t\t}\r\n\r\n\t\t\tconst times = this.times,\r\n\t\t\t\t\t\tvalues = this.values,\r\n\t\t\t\t\t\tnKeys = times.length;\r\n\r\n\t\t\tif (nKeys === 0) {\r\n\t\t\t\tconsole.error('THREE.KeyframeTrack: Track is empty.', this);\r\n\t\t\t\tvalid = false;\r\n\t\t\t}\r\n\r\n\t\t\tlet prevTime = null;\r\n\r\n\t\t\tfor (let i = 0; i !== nKeys; i++) {\r\n\t\t\t\tconst currTime = times[i];\r\n\r\n\t\t\t\tif (typeof currTime === 'number' && isNaN(currTime)) {\r\n\t\t\t\t\tconsole.error('THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime);\r\n\t\t\t\t\tvalid = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (prevTime !== null && prevTime > currTime) {\r\n\t\t\t\t\tconsole.error('THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime);\r\n\t\t\t\t\tvalid = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tprevTime = currTime;\r\n\t\t\t}\r\n\r\n\t\t\tif (values !== undefined) {\r\n\t\t\t\tif (AnimationUtils.isTypedArray(values)) {\r\n\t\t\t\t\tfor (let i = 0, n = values.length; i !== n; ++i) {\r\n\t\t\t\t\t\tconst value = values[i];\r\n\r\n\t\t\t\t\t\tif (isNaN(value)) {\r\n\t\t\t\t\t\t\tconsole.error('THREE.KeyframeTrack: Value is not a valid number.', this, i, value);\r\n\t\t\t\t\t\t\tvalid = false;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn valid;\r\n\t\t} // removes equivalent sequential keys as common in morph target sequences\r\n\t\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\r\n\r\n\r\n\t\toptimize() {\r\n\t\t\t// times or values may be shared with other tracks, so overwriting is unsafe\r\n\t\t\tconst times = AnimationUtils.arraySlice(this.times),\r\n\t\t\t\t\t\tvalues = AnimationUtils.arraySlice(this.values),\r\n\t\t\t\t\t\tstride = this.getValueSize(),\r\n\t\t\t\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\r\n\t\t\t\t\t\tlastIndex = times.length - 1;\r\n\t\t\tlet writeIndex = 1;\r\n\r\n\t\t\tfor (let i = 1; i < lastIndex; ++i) {\r\n\t\t\t\tlet keep = false;\r\n\t\t\t\tconst time = times[i];\r\n\t\t\t\tconst timeNext = times[i + 1]; // remove adjacent keyframes scheduled at the same time\r\n\r\n\t\t\t\tif (time !== timeNext && (i !== 1 || time !== times[0])) {\r\n\t\t\t\t\tif (!smoothInterpolation) {\r\n\t\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\r\n\t\t\t\t\t\tconst offset = i * stride,\r\n\t\t\t\t\t\t\t\t\toffsetP = offset - stride,\r\n\t\t\t\t\t\t\t\t\toffsetN = offset + stride;\r\n\r\n\t\t\t\t\t\tfor (let j = 0; j !== stride; ++j) {\r\n\t\t\t\t\t\t\tconst value = values[offset + j];\r\n\r\n\t\t\t\t\t\t\tif (value !== values[offsetP + j] || value !== values[offsetN + j]) {\r\n\t\t\t\t\t\t\t\tkeep = true;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tkeep = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} // in-place compaction\r\n\r\n\r\n\t\t\t\tif (keep) {\r\n\t\t\t\t\tif (i !== writeIndex) {\r\n\t\t\t\t\t\ttimes[writeIndex] = times[i];\r\n\t\t\t\t\t\tconst readOffset = i * stride,\r\n\t\t\t\t\t\t\t\t\twriteOffset = writeIndex * stride;\r\n\r\n\t\t\t\t\t\tfor (let j = 0; j !== stride; ++j) {\r\n\t\t\t\t\t\t\tvalues[writeOffset + j] = values[readOffset + j];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t++writeIndex;\r\n\t\t\t\t}\r\n\t\t\t} // flush last keyframe (compaction looks ahead)\r\n\r\n\r\n\t\t\tif (lastIndex > 0) {\r\n\t\t\t\ttimes[writeIndex] = times[lastIndex];\r\n\r\n\t\t\t\tfor (let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++j) {\r\n\t\t\t\t\tvalues[writeOffset + j] = values[readOffset + j];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t++writeIndex;\r\n\t\t\t}\r\n\r\n\t\t\tif (writeIndex !== times.length) {\r\n\t\t\t\tthis.times = AnimationUtils.arraySlice(times, 0, writeIndex);\r\n\t\t\t\tthis.values = AnimationUtils.arraySlice(values, 0, writeIndex * stride);\r\n\t\t\t} else {\r\n\t\t\t\tthis.times = times;\r\n\t\t\t\tthis.values = values;\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\tconst times = AnimationUtils.arraySlice(this.times, 0);\r\n\t\t\tconst values = AnimationUtils.arraySlice(this.values, 0);\r\n\t\t\tconst TypedKeyframeTrack = this.constructor;\r\n\t\t\tconst track = new TypedKeyframeTrack(this.name, times, values); // Interpolant argument to constructor is not saved, so copy the factory method directly.\r\n\r\n\t\t\ttrack.createInterpolant = this.createInterpolant;\r\n\t\t\treturn track;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tKeyframeTrack.prototype.TimeBufferType = Float32Array;\r\n\tKeyframeTrack.prototype.ValueBufferType = Float32Array;\r\n\tKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\r\n\r\n\t/**\r\n\t * A Track of Boolean keyframe values.\r\n\t */\r\n\r\n\tclass BooleanKeyframeTrack extends KeyframeTrack {}\r\n\r\n\tBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\r\n\tBooleanKeyframeTrack.prototype.ValueBufferType = Array;\r\n\tBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\r\n\tBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\r\n\tBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined; // Note: Actually this track could have a optimized / compressed\r\n\r\n\t/**\r\n\t * A Track of keyframe values that represent color.\r\n\t */\r\n\r\n\tclass ColorKeyframeTrack extends KeyframeTrack {}\r\n\r\n\tColorKeyframeTrack.prototype.ValueTypeName = 'color'; // ValueBufferType is inherited\r\n\r\n\t/**\r\n\t * A Track of numeric keyframe values.\r\n\t */\r\n\r\n\tclass NumberKeyframeTrack extends KeyframeTrack {}\r\n\r\n\tNumberKeyframeTrack.prototype.ValueTypeName = 'number'; // ValueBufferType is inherited\r\n\r\n\t/**\r\n\t * Spherical linear unit quaternion interpolant.\r\n\t */\r\n\r\n\tclass QuaternionLinearInterpolant extends Interpolant {\r\n\t\tconstructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\r\n\t\t\tsuper(parameterPositions, sampleValues, sampleSize, resultBuffer);\r\n\t\t}\r\n\r\n\t\tinterpolate_(i1, t0, t, t1) {\r\n\t\t\tconst result = this.resultBuffer,\r\n\t\t\t\t\t\tvalues = this.sampleValues,\r\n\t\t\t\t\t\tstride = this.valueSize,\r\n\t\t\t\t\t\talpha = (t - t0) / (t1 - t0);\r\n\t\t\tlet offset = i1 * stride;\r\n\r\n\t\t\tfor (let end = offset + stride; offset !== end; offset += 4) {\r\n\t\t\t\tQuaternion.slerpFlat(result, 0, values, offset - stride, values, offset, alpha);\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A Track of quaternion keyframe values.\r\n\t */\r\n\r\n\tclass QuaternionKeyframeTrack extends KeyframeTrack {\r\n\t\tInterpolantFactoryMethodLinear(result) {\r\n\t\t\treturn new QuaternionLinearInterpolant(this.times, this.values, this.getValueSize(), result);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion'; // ValueBufferType is inherited\r\n\r\n\tQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\r\n\tQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\r\n\r\n\t/**\r\n\t * A Track that interpolates Strings\r\n\t */\r\n\r\n\tclass StringKeyframeTrack extends KeyframeTrack {}\r\n\r\n\tStringKeyframeTrack.prototype.ValueTypeName = 'string';\r\n\tStringKeyframeTrack.prototype.ValueBufferType = Array;\r\n\tStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\r\n\tStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\r\n\tStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\r\n\r\n\t/**\r\n\t * A Track of vectored keyframe values.\r\n\t */\r\n\r\n\tclass VectorKeyframeTrack extends KeyframeTrack {}\r\n\r\n\tVectorKeyframeTrack.prototype.ValueTypeName = 'vector'; // ValueBufferType is inherited\r\n\r\n\tclass AnimationClip {\r\n\t\tconstructor(name, duration = -1, tracks, blendMode = NormalAnimationBlendMode) {\r\n\t\t\tthis.name = name;\r\n\t\t\tthis.tracks = tracks;\r\n\t\t\tthis.duration = duration;\r\n\t\t\tthis.blendMode = blendMode;\r\n\t\t\tthis.uuid = generateUUID(); // this means it should figure out its duration by scanning the tracks\r\n\r\n\t\t\tif (this.duration < 0) {\r\n\t\t\t\tthis.resetDuration();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tstatic parse(json) {\r\n\t\t\tconst tracks = [],\r\n\t\t\t\t\t\tjsonTracks = json.tracks,\r\n\t\t\t\t\t\tframeTime = 1.0 / (json.fps || 1.0);\r\n\r\n\t\t\tfor (let i = 0, n = jsonTracks.length; i !== n; ++i) {\r\n\t\t\t\ttracks.push(parseKeyframeTrack(jsonTracks[i]).scale(frameTime));\r\n\t\t\t}\r\n\r\n\t\t\tconst clip = new this(json.name, json.duration, tracks, json.blendMode);\r\n\t\t\tclip.uuid = json.uuid;\r\n\t\t\treturn clip;\r\n\t\t}\r\n\r\n\t\tstatic toJSON(clip) {\r\n\t\t\tconst tracks = [],\r\n\t\t\t\t\t\tclipTracks = clip.tracks;\r\n\t\t\tconst json = {\r\n\t\t\t\t'name': clip.name,\r\n\t\t\t\t'duration': clip.duration,\r\n\t\t\t\t'tracks': tracks,\r\n\t\t\t\t'uuid': clip.uuid,\r\n\t\t\t\t'blendMode': clip.blendMode\r\n\t\t\t};\r\n\r\n\t\t\tfor (let i = 0, n = clipTracks.length; i !== n; ++i) {\r\n\t\t\t\ttracks.push(KeyframeTrack.toJSON(clipTracks[i]));\r\n\t\t\t}\r\n\r\n\t\t\treturn json;\r\n\t\t}\r\n\r\n\t\tstatic CreateFromMorphTargetSequence(name, morphTargetSequence, fps, noLoop) {\r\n\t\t\tconst numMorphTargets = morphTargetSequence.length;\r\n\t\t\tconst tracks = [];\r\n\r\n\t\t\tfor (let i = 0; i < numMorphTargets; i++) {\r\n\t\t\t\tlet times = [];\r\n\t\t\t\tlet values = [];\r\n\t\t\t\ttimes.push((i + numMorphTargets - 1) % numMorphTargets, i, (i + 1) % numMorphTargets);\r\n\t\t\t\tvalues.push(0, 1, 0);\r\n\t\t\t\tconst order = AnimationUtils.getKeyframeOrder(times);\r\n\t\t\t\ttimes = AnimationUtils.sortedArray(times, 1, order);\r\n\t\t\t\tvalues = AnimationUtils.sortedArray(values, 1, order); // if there is a key at the first frame, duplicate it as the\r\n\t\t\t\t// last frame as well for perfect loop.\r\n\r\n\t\t\t\tif (!noLoop && times[0] === 0) {\r\n\t\t\t\t\ttimes.push(numMorphTargets);\r\n\t\t\t\t\tvalues.push(values[0]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttracks.push(new NumberKeyframeTrack('.morphTargetInfluences[' + morphTargetSequence[i].name + ']', times, values).scale(1.0 / fps));\r\n\t\t\t}\r\n\r\n\t\t\treturn new this(name, -1, tracks);\r\n\t\t}\r\n\r\n\t\tstatic findByName(objectOrClipArray, name) {\r\n\t\t\tlet clipArray = objectOrClipArray;\r\n\r\n\t\t\tif (!Array.isArray(objectOrClipArray)) {\r\n\t\t\t\tconst o = objectOrClipArray;\r\n\t\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = 0; i < clipArray.length; i++) {\r\n\t\t\t\tif (clipArray[i].name === name) {\r\n\t\t\t\t\treturn clipArray[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tstatic CreateClipsFromMorphTargetSequences(morphTargets, fps, noLoop) {\r\n\t\t\tconst animationToMorphTargets = {}; // tested with https://regex101.com/ on trick sequences\r\n\t\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\r\n\r\n\t\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/; // sort morph target names into animation groups based\r\n\t\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\r\n\r\n\t\t\tfor (let i = 0, il = morphTargets.length; i < il; i++) {\r\n\t\t\t\tconst morphTarget = morphTargets[i];\r\n\t\t\t\tconst parts = morphTarget.name.match(pattern);\r\n\r\n\t\t\t\tif (parts && parts.length > 1) {\r\n\t\t\t\t\tconst name = parts[1];\r\n\t\t\t\t\tlet animationMorphTargets = animationToMorphTargets[name];\r\n\r\n\t\t\t\t\tif (!animationMorphTargets) {\r\n\t\t\t\t\t\tanimationToMorphTargets[name] = animationMorphTargets = [];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tanimationMorphTargets.push(morphTarget);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst clips = [];\r\n\r\n\t\t\tfor (const name in animationToMorphTargets) {\r\n\t\t\t\tclips.push(this.CreateFromMorphTargetSequence(name, animationToMorphTargets[name], fps, noLoop));\r\n\t\t\t}\r\n\r\n\t\t\treturn clips;\r\n\t\t} // parse the animation.hierarchy format\r\n\r\n\r\n\t\tstatic parseAnimation(animation, bones) {\r\n\t\t\tif (!animation) {\r\n\t\t\t\tconsole.error('THREE.AnimationClip: No animation in JSONLoader data.');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tconst addNonemptyTrack = function (trackType, trackName, animationKeys, propertyName, destTracks) {\r\n\t\t\t\t// only return track if there are actually keys.\r\n\t\t\t\tif (animationKeys.length !== 0) {\r\n\t\t\t\t\tconst times = [];\r\n\t\t\t\t\tconst values = [];\r\n\t\t\t\t\tAnimationUtils.flattenJSON(animationKeys, times, values, propertyName); // empty keys are filtered out, so check again\r\n\r\n\t\t\t\t\tif (times.length !== 0) {\r\n\t\t\t\t\t\tdestTracks.push(new trackType(trackName, times, values));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tconst tracks = [];\r\n\t\t\tconst clipName = animation.name || 'default';\r\n\t\t\tconst fps = animation.fps || 30;\r\n\t\t\tconst blendMode = animation.blendMode; // automatic length determination in AnimationClip.\r\n\r\n\t\t\tlet duration = animation.length || -1;\r\n\t\t\tconst hierarchyTracks = animation.hierarchy || [];\r\n\r\n\t\t\tfor (let h = 0; h < hierarchyTracks.length; h++) {\r\n\t\t\t\tconst animationKeys = hierarchyTracks[h].keys; // skip empty tracks\r\n\r\n\t\t\t\tif (!animationKeys || animationKeys.length === 0) continue; // process morph targets\r\n\r\n\t\t\t\tif (animationKeys[0].morphTargets) {\r\n\t\t\t\t\t// figure out all morph targets used in this track\r\n\t\t\t\t\tconst morphTargetNames = {};\r\n\t\t\t\t\tlet k;\r\n\r\n\t\t\t\t\tfor (k = 0; k < animationKeys.length; k++) {\r\n\t\t\t\t\t\tif (animationKeys[k].morphTargets) {\r\n\t\t\t\t\t\t\tfor (let m = 0; m < animationKeys[k].morphTargets.length; m++) {\r\n\t\t\t\t\t\t\t\tmorphTargetNames[animationKeys[k].morphTargets[m]] = -1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} // create a track for each morph target with all zero\r\n\t\t\t\t\t// morphTargetInfluences except for the keys in which\r\n\t\t\t\t\t// the morphTarget is named.\r\n\r\n\r\n\t\t\t\t\tfor (const morphTargetName in morphTargetNames) {\r\n\t\t\t\t\t\tconst times = [];\r\n\t\t\t\t\t\tconst values = [];\r\n\r\n\t\t\t\t\t\tfor (let m = 0; m !== animationKeys[k].morphTargets.length; ++m) {\r\n\t\t\t\t\t\t\tconst animationKey = animationKeys[k];\r\n\t\t\t\t\t\t\ttimes.push(animationKey.time);\r\n\t\t\t\t\t\t\tvalues.push(animationKey.morphTarget === morphTargetName ? 1 : 0);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttracks.push(new NumberKeyframeTrack('.morphTargetInfluence[' + morphTargetName + ']', times, values));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tduration = morphTargetNames.length * (fps || 1.0);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// ...assume skeletal animation\r\n\t\t\t\t\tconst boneName = '.bones[' + bones[h].name + ']';\r\n\t\t\t\t\taddNonemptyTrack(VectorKeyframeTrack, boneName + '.position', animationKeys, 'pos', tracks);\r\n\t\t\t\t\taddNonemptyTrack(QuaternionKeyframeTrack, boneName + '.quaternion', animationKeys, 'rot', tracks);\r\n\t\t\t\t\taddNonemptyTrack(VectorKeyframeTrack, boneName + '.scale', animationKeys, 'scl', tracks);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (tracks.length === 0) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tconst clip = new this(clipName, duration, tracks, blendMode);\r\n\t\t\treturn clip;\r\n\t\t}\r\n\r\n\t\tresetDuration() {\r\n\t\t\tconst tracks = this.tracks;\r\n\t\t\tlet duration = 0;\r\n\r\n\t\t\tfor (let i = 0, n = tracks.length; i !== n; ++i) {\r\n\t\t\t\tconst track = this.tracks[i];\r\n\t\t\t\tduration = Math.max(duration, track.times[track.times.length - 1]);\r\n\t\t\t}\r\n\r\n\t\t\tthis.duration = duration;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttrim() {\r\n\t\t\tfor (let i = 0; i < this.tracks.length; i++) {\r\n\t\t\t\tthis.tracks[i].trim(0, this.duration);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tvalidate() {\r\n\t\t\tlet valid = true;\r\n\r\n\t\t\tfor (let i = 0; i < this.tracks.length; i++) {\r\n\t\t\t\tvalid = valid && this.tracks[i].validate();\r\n\t\t\t}\r\n\r\n\t\t\treturn valid;\r\n\t\t}\r\n\r\n\t\toptimize() {\r\n\t\t\tfor (let i = 0; i < this.tracks.length; i++) {\r\n\t\t\t\tthis.tracks[i].optimize();\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\tconst tracks = [];\r\n\r\n\t\t\tfor (let i = 0; i < this.tracks.length; i++) {\r\n\t\t\t\ttracks.push(this.tracks[i].clone());\r\n\t\t\t}\r\n\r\n\t\t\treturn new this.constructor(this.name, this.duration, tracks, this.blendMode);\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\treturn this.constructor.toJSON(this);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction getTrackTypeForValueTypeName(typeName) {\r\n\t\tswitch (typeName.toLowerCase()) {\r\n\t\t\tcase 'scalar':\r\n\t\t\tcase 'double':\r\n\t\t\tcase 'float':\r\n\t\t\tcase 'number':\r\n\t\t\tcase 'integer':\r\n\t\t\t\treturn NumberKeyframeTrack;\r\n\r\n\t\t\tcase 'vector':\r\n\t\t\tcase 'vector2':\r\n\t\t\tcase 'vector3':\r\n\t\t\tcase 'vector4':\r\n\t\t\t\treturn VectorKeyframeTrack;\r\n\r\n\t\t\tcase 'color':\r\n\t\t\t\treturn ColorKeyframeTrack;\r\n\r\n\t\t\tcase 'quaternion':\r\n\t\t\t\treturn QuaternionKeyframeTrack;\r\n\r\n\t\t\tcase 'bool':\r\n\t\t\tcase 'boolean':\r\n\t\t\t\treturn BooleanKeyframeTrack;\r\n\r\n\t\t\tcase 'string':\r\n\t\t\t\treturn StringKeyframeTrack;\r\n\t\t}\r\n\r\n\t\tthrow new Error('THREE.KeyframeTrack: Unsupported typeName: ' + typeName);\r\n\t}\r\n\r\n\tfunction parseKeyframeTrack(json) {\r\n\t\tif (json.type === undefined) {\r\n\t\t\tthrow new Error('THREE.KeyframeTrack: track type undefined, can not parse');\r\n\t\t}\r\n\r\n\t\tconst trackType = getTrackTypeForValueTypeName(json.type);\r\n\r\n\t\tif (json.times === undefined) {\r\n\t\t\tconst times = [],\r\n\t\t\t\t\t\tvalues = [];\r\n\t\t\tAnimationUtils.flattenJSON(json.keys, times, values, 'value');\r\n\t\t\tjson.times = times;\r\n\t\t\tjson.values = values;\r\n\t\t} // derived classes can define a static parse method\r\n\r\n\r\n\t\tif (trackType.parse !== undefined) {\r\n\t\t\treturn trackType.parse(json);\r\n\t\t} else {\r\n\t\t\t// by default, we assume a constructor compatible with the base\r\n\t\t\treturn new trackType(json.name, json.times, json.values, json.interpolation);\r\n\t\t}\r\n\t}\r\n\r\n\tconst Cache = {\r\n\t\tenabled: false,\r\n\t\tfiles: {},\r\n\t\tadd: function (key, file) {\r\n\t\t\tif (this.enabled === false) return; // console.log( 'THREE.Cache', 'Adding key:', key );\r\n\r\n\t\t\tthis.files[key] = file;\r\n\t\t},\r\n\t\tget: function (key) {\r\n\t\t\tif (this.enabled === false) return; // console.log( 'THREE.Cache', 'Checking key:', key );\r\n\r\n\t\t\treturn this.files[key];\r\n\t\t},\r\n\t\tremove: function (key) {\r\n\t\t\tdelete this.files[key];\r\n\t\t},\r\n\t\tclear: function () {\r\n\t\t\tthis.files = {};\r\n\t\t}\r\n\t};\r\n\r\n\tclass LoadingManager {\r\n\t\tconstructor(onLoad, onProgress, onError) {\r\n\t\t\tconst scope = this;\r\n\t\t\tlet isLoading = false;\r\n\t\t\tlet itemsLoaded = 0;\r\n\t\t\tlet itemsTotal = 0;\r\n\t\t\tlet urlModifier = undefined;\r\n\t\t\tconst handlers = []; // Refer to #5689 for the reason why we don't set .onStart\r\n\t\t\t// in the constructor\r\n\r\n\t\t\tthis.onStart = undefined;\r\n\t\t\tthis.onLoad = onLoad;\r\n\t\t\tthis.onProgress = onProgress;\r\n\t\t\tthis.onError = onError;\r\n\r\n\t\t\tthis.itemStart = function (url) {\r\n\t\t\t\titemsTotal++;\r\n\r\n\t\t\t\tif (isLoading === false) {\r\n\t\t\t\t\tif (scope.onStart !== undefined) {\r\n\t\t\t\t\t\tscope.onStart(url, itemsLoaded, itemsTotal);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tisLoading = true;\r\n\t\t\t};\r\n\r\n\t\t\tthis.itemEnd = function (url) {\r\n\t\t\t\titemsLoaded++;\r\n\r\n\t\t\t\tif (scope.onProgress !== undefined) {\r\n\t\t\t\t\tscope.onProgress(url, itemsLoaded, itemsTotal);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (itemsLoaded === itemsTotal) {\r\n\t\t\t\t\tisLoading = false;\r\n\r\n\t\t\t\t\tif (scope.onLoad !== undefined) {\r\n\t\t\t\t\t\tscope.onLoad();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tthis.itemError = function (url) {\r\n\t\t\t\tif (scope.onError !== undefined) {\r\n\t\t\t\t\tscope.onError(url);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tthis.resolveURL = function (url) {\r\n\t\t\t\tif (urlModifier) {\r\n\t\t\t\t\treturn urlModifier(url);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn url;\r\n\t\t\t};\r\n\r\n\t\t\tthis.setURLModifier = function (transform) {\r\n\t\t\t\turlModifier = transform;\r\n\t\t\t\treturn this;\r\n\t\t\t};\r\n\r\n\t\t\tthis.addHandler = function (regex, loader) {\r\n\t\t\t\thandlers.push(regex, loader);\r\n\t\t\t\treturn this;\r\n\t\t\t};\r\n\r\n\t\t\tthis.removeHandler = function (regex) {\r\n\t\t\t\tconst index = handlers.indexOf(regex);\r\n\r\n\t\t\t\tif (index !== -1) {\r\n\t\t\t\t\thandlers.splice(index, 2);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this;\r\n\t\t\t};\r\n\r\n\t\t\tthis.getHandler = function (file) {\r\n\t\t\t\tfor (let i = 0, l = handlers.length; i < l; i += 2) {\r\n\t\t\t\t\tconst regex = handlers[i];\r\n\t\t\t\t\tconst loader = handlers[i + 1];\r\n\t\t\t\t\tif (regex.global) regex.lastIndex = 0; // see #17920\r\n\r\n\t\t\t\t\tif (regex.test(file)) {\r\n\t\t\t\t\t\treturn loader;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn null;\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst DefaultLoadingManager = new LoadingManager();\r\n\r\n\tclass Loader {\r\n\t\tconstructor(manager) {\r\n\t\t\tthis.manager = manager !== undefined ? manager : DefaultLoadingManager;\r\n\t\t\tthis.crossOrigin = 'anonymous';\r\n\t\t\tthis.withCredentials = false;\r\n\t\t\tthis.path = '';\r\n\t\t\tthis.resourcePath = '';\r\n\t\t\tthis.requestHeader = {};\r\n\t\t}\r\n\r\n\t\tload()\r\n\t\t/* url, onLoad, onProgress, onError */\r\n\t\t{}\r\n\r\n\t\tloadAsync(url, onProgress) {\r\n\t\t\tconst scope = this;\r\n\t\t\treturn new Promise(function (resolve, reject) {\r\n\t\t\t\tscope.load(url, resolve, onProgress, reject);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tparse()\r\n\t\t/* data */\r\n\t\t{}\r\n\r\n\t\tsetCrossOrigin(crossOrigin) {\r\n\t\t\tthis.crossOrigin = crossOrigin;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetWithCredentials(value) {\r\n\t\t\tthis.withCredentials = value;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetPath(path) {\r\n\t\t\tthis.path = path;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetResourcePath(resourcePath) {\r\n\t\t\tthis.resourcePath = resourcePath;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetRequestHeader(requestHeader) {\r\n\t\t\tthis.requestHeader = requestHeader;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst loading = {};\r\n\r\n\tclass FileLoader extends Loader {\r\n\t\tconstructor(manager) {\r\n\t\t\tsuper(manager);\r\n\t\t}\r\n\r\n\t\tload(url, onLoad, onProgress, onError) {\r\n\t\t\tif (url === undefined) url = '';\r\n\t\t\tif (this.path !== undefined) url = this.path + url;\r\n\t\t\turl = this.manager.resolveURL(url);\r\n\t\t\tconst scope = this;\r\n\t\t\tconst cached = Cache.get(url);\r\n\r\n\t\t\tif (cached !== undefined) {\r\n\t\t\t\tscope.manager.itemStart(url);\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tif (onLoad) onLoad(cached);\r\n\t\t\t\t\tscope.manager.itemEnd(url);\r\n\t\t\t\t}, 0);\r\n\t\t\t\treturn cached;\r\n\t\t\t} // Check if request is duplicate\r\n\r\n\r\n\t\t\tif (loading[url] !== undefined) {\r\n\t\t\t\tloading[url].push({\r\n\t\t\t\t\tonLoad: onLoad,\r\n\t\t\t\t\tonProgress: onProgress,\r\n\t\t\t\t\tonError: onError\r\n\t\t\t\t});\r\n\t\t\t\treturn;\r\n\t\t\t} // Check for data: URI\r\n\r\n\r\n\t\t\tconst dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\r\n\t\t\tconst dataUriRegexResult = url.match(dataUriRegex);\r\n\t\t\tlet request; // Safari can not handle Data URIs through XMLHttpRequest so process manually\r\n\r\n\t\t\tif (dataUriRegexResult) {\r\n\t\t\t\tconst mimeType = dataUriRegexResult[1];\r\n\t\t\t\tconst isBase64 = !!dataUriRegexResult[2];\r\n\t\t\t\tlet data = dataUriRegexResult[3];\r\n\t\t\t\tdata = decodeURIComponent(data);\r\n\t\t\t\tif (isBase64) data = atob(data);\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tlet response;\r\n\t\t\t\t\tconst responseType = (this.responseType || '').toLowerCase();\r\n\r\n\t\t\t\t\tswitch (responseType) {\r\n\t\t\t\t\t\tcase 'arraybuffer':\r\n\t\t\t\t\t\tcase 'blob':\r\n\t\t\t\t\t\t\tconst view = new Uint8Array(data.length);\r\n\r\n\t\t\t\t\t\t\tfor (let i = 0; i < data.length; i++) {\r\n\t\t\t\t\t\t\t\tview[i] = data.charCodeAt(i);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (responseType === 'blob') {\r\n\t\t\t\t\t\t\t\tresponse = new Blob([view.buffer], {\r\n\t\t\t\t\t\t\t\t\ttype: mimeType\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tresponse = view.buffer;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'document':\r\n\t\t\t\t\t\t\tconst parser = new DOMParser();\r\n\t\t\t\t\t\t\tresponse = parser.parseFromString(data, mimeType);\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'json':\r\n\t\t\t\t\t\t\tresponse = JSON.parse(data);\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t// 'text' or other\r\n\t\t\t\t\t\t\tresponse = data;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} // Wait for next browser tick like standard XMLHttpRequest event dispatching does\r\n\r\n\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\tif (onLoad) onLoad(response);\r\n\t\t\t\t\t\tscope.manager.itemEnd(url);\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\tif (onError) onError(error);\r\n\t\t\t\t\t\tscope.manager.itemError(url);\r\n\t\t\t\t\t\tscope.manager.itemEnd(url);\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Initialise array for duplicate requests\r\n\t\t\t\tloading[url] = [];\r\n\t\t\t\tloading[url].push({\r\n\t\t\t\t\tonLoad: onLoad,\r\n\t\t\t\t\tonProgress: onProgress,\r\n\t\t\t\t\tonError: onError\r\n\t\t\t\t});\r\n\t\t\t\trequest = new XMLHttpRequest();\r\n\t\t\t\trequest.open('GET', url, true);\r\n\t\t\t\trequest.addEventListener('load', function (event) {\r\n\t\t\t\t\tconst response = this.response;\r\n\t\t\t\t\tconst callbacks = loading[url];\r\n\t\t\t\t\tdelete loading[url];\r\n\r\n\t\t\t\t\tif (this.status === 200 || this.status === 0) {\r\n\t\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\r\n\t\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\r\n\t\t\t\t\t\tif (this.status === 0) console.warn('THREE.FileLoader: HTTP Status 0 received.'); // Add to cache only on HTTP success, so that we do not cache\r\n\t\t\t\t\t\t// error response bodies as proper responses to requests.\r\n\r\n\t\t\t\t\t\tCache.add(url, response);\r\n\r\n\t\t\t\t\t\tfor (let i = 0, il = callbacks.length; i < il; i++) {\r\n\t\t\t\t\t\t\tconst callback = callbacks[i];\r\n\t\t\t\t\t\t\tif (callback.onLoad) callback.onLoad(response);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tscope.manager.itemEnd(url);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tfor (let i = 0, il = callbacks.length; i < il; i++) {\r\n\t\t\t\t\t\t\tconst callback = callbacks[i];\r\n\t\t\t\t\t\t\tif (callback.onError) callback.onError(event);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tscope.manager.itemError(url);\r\n\t\t\t\t\t\tscope.manager.itemEnd(url);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, false);\r\n\t\t\t\trequest.addEventListener('progress', function (event) {\r\n\t\t\t\t\tconst callbacks = loading[url];\r\n\r\n\t\t\t\t\tfor (let i = 0, il = callbacks.length; i < il; i++) {\r\n\t\t\t\t\t\tconst callback = callbacks[i];\r\n\t\t\t\t\t\tif (callback.onProgress) callback.onProgress(event);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, false);\r\n\t\t\t\trequest.addEventListener('error', function (event) {\r\n\t\t\t\t\tconst callbacks = loading[url];\r\n\t\t\t\t\tdelete loading[url];\r\n\r\n\t\t\t\t\tfor (let i = 0, il = callbacks.length; i < il; i++) {\r\n\t\t\t\t\t\tconst callback = callbacks[i];\r\n\t\t\t\t\t\tif (callback.onError) callback.onError(event);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tscope.manager.itemError(url);\r\n\t\t\t\t\tscope.manager.itemEnd(url);\r\n\t\t\t\t}, false);\r\n\t\t\t\trequest.addEventListener('abort', function (event) {\r\n\t\t\t\t\tconst callbacks = loading[url];\r\n\t\t\t\t\tdelete loading[url];\r\n\r\n\t\t\t\t\tfor (let i = 0, il = callbacks.length; i < il; i++) {\r\n\t\t\t\t\t\tconst callback = callbacks[i];\r\n\t\t\t\t\t\tif (callback.onError) callback.onError(event);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tscope.manager.itemError(url);\r\n\t\t\t\t\tscope.manager.itemEnd(url);\r\n\t\t\t\t}, false);\r\n\t\t\t\tif (this.responseType !== undefined) request.responseType = this.responseType;\r\n\t\t\t\tif (this.withCredentials !== undefined) request.withCredentials = this.withCredentials;\r\n\t\t\t\tif (request.overrideMimeType) request.overrideMimeType(this.mimeType !== undefined ? this.mimeType : 'text/plain');\r\n\r\n\t\t\t\tfor (const header in this.requestHeader) {\r\n\t\t\t\t\trequest.setRequestHeader(header, this.requestHeader[header]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\trequest.send(null);\r\n\t\t\t}\r\n\r\n\t\t\tscope.manager.itemStart(url);\r\n\t\t\treturn request;\r\n\t\t}\r\n\r\n\t\tsetResponseType(value) {\r\n\t\t\tthis.responseType = value;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetMimeType(value) {\r\n\t\t\tthis.mimeType = value;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass AnimationLoader extends Loader {\r\n\t\tconstructor(manager) {\r\n\t\t\tsuper(manager);\r\n\t\t}\r\n\r\n\t\tload(url, onLoad, onProgress, onError) {\r\n\t\t\tconst scope = this;\r\n\t\t\tconst loader = new FileLoader(this.manager);\r\n\t\t\tloader.setPath(this.path);\r\n\t\t\tloader.setRequestHeader(this.requestHeader);\r\n\t\t\tloader.setWithCredentials(this.withCredentials);\r\n\t\t\tloader.load(url, function (text) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tonLoad(scope.parse(JSON.parse(text)));\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tif (onError) {\r\n\t\t\t\t\t\tonError(e);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tscope.manager.itemError(url);\r\n\t\t\t\t}\r\n\t\t\t}, onProgress, onError);\r\n\t\t}\r\n\r\n\t\tparse(json) {\r\n\t\t\tconst animations = [];\r\n\r\n\t\t\tfor (let i = 0; i < json.length; i++) {\r\n\t\t\t\tconst clip = AnimationClip.parse(json[i]);\r\n\t\t\t\tanimations.push(clip);\r\n\t\t\t}\r\n\r\n\t\t\treturn animations;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Abstract Base class to block based textures loader (dds, pvr, ...)\r\n\t *\r\n\t * Sub classes have to implement the parse() method which will be used in load().\r\n\t */\r\n\r\n\tclass CompressedTextureLoader extends Loader {\r\n\t\tconstructor(manager) {\r\n\t\t\tsuper(manager);\r\n\t\t}\r\n\r\n\t\tload(url, onLoad, onProgress, onError) {\r\n\t\t\tconst scope = this;\r\n\t\t\tconst images = [];\r\n\t\t\tconst texture = new CompressedTexture();\r\n\t\t\tconst loader = new FileLoader(this.manager);\r\n\t\t\tloader.setPath(this.path);\r\n\t\t\tloader.setResponseType('arraybuffer');\r\n\t\t\tloader.setRequestHeader(this.requestHeader);\r\n\t\t\tloader.setWithCredentials(scope.withCredentials);\r\n\t\t\tlet loaded = 0;\r\n\r\n\t\t\tfunction loadTexture(i) {\r\n\t\t\t\tloader.load(url[i], function (buffer) {\r\n\t\t\t\t\tconst texDatas = scope.parse(buffer, true);\r\n\t\t\t\t\timages[i] = {\r\n\t\t\t\t\t\twidth: texDatas.width,\r\n\t\t\t\t\t\theight: texDatas.height,\r\n\t\t\t\t\t\tformat: texDatas.format,\r\n\t\t\t\t\t\tmipmaps: texDatas.mipmaps\r\n\t\t\t\t\t};\r\n\t\t\t\t\tloaded += 1;\r\n\r\n\t\t\t\t\tif (loaded === 6) {\r\n\t\t\t\t\t\tif (texDatas.mipmapCount === 1) texture.minFilter = LinearFilter;\r\n\t\t\t\t\t\ttexture.image = images;\r\n\t\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\t\t\t\t\tif (onLoad) onLoad(texture);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, onProgress, onError);\r\n\t\t\t}\r\n\r\n\t\t\tif (Array.isArray(url)) {\r\n\t\t\t\tfor (let i = 0, il = url.length; i < il; ++i) {\r\n\t\t\t\t\tloadTexture(i);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// compressed cubemap texture stored in a single DDS file\r\n\t\t\t\tloader.load(url, function (buffer) {\r\n\t\t\t\t\tconst texDatas = scope.parse(buffer, true);\r\n\r\n\t\t\t\t\tif (texDatas.isCubemap) {\r\n\t\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\r\n\r\n\t\t\t\t\t\tfor (let f = 0; f < faces; f++) {\r\n\t\t\t\t\t\t\timages[f] = {\r\n\t\t\t\t\t\t\t\tmipmaps: []\r\n\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\tfor (let i = 0; i < texDatas.mipmapCount; i++) {\r\n\t\t\t\t\t\t\t\timages[f].mipmaps.push(texDatas.mipmaps[f * texDatas.mipmapCount + i]);\r\n\t\t\t\t\t\t\t\timages[f].format = texDatas.format;\r\n\t\t\t\t\t\t\t\timages[f].width = texDatas.width;\r\n\t\t\t\t\t\t\t\timages[f].height = texDatas.height;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttexture.image = images;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttexture.image.width = texDatas.width;\r\n\t\t\t\t\t\ttexture.image.height = texDatas.height;\r\n\t\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (texDatas.mipmapCount === 1) {\r\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\t\t\t\tif (onLoad) onLoad(texture);\r\n\t\t\t\t}, onProgress, onError);\r\n\t\t\t}\r\n\r\n\t\t\treturn texture;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass ImageLoader extends Loader {\r\n\t\tconstructor(manager) {\r\n\t\t\tsuper(manager);\r\n\t\t}\r\n\r\n\t\tload(url, onLoad, onProgress, onError) {\r\n\t\t\tif (this.path !== undefined) url = this.path + url;\r\n\t\t\turl = this.manager.resolveURL(url);\r\n\t\t\tconst scope = this;\r\n\t\t\tconst cached = Cache.get(url);\r\n\r\n\t\t\tif (cached !== undefined) {\r\n\t\t\t\tscope.manager.itemStart(url);\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tif (onLoad) onLoad(cached);\r\n\t\t\t\t\tscope.manager.itemEnd(url);\r\n\t\t\t\t}, 0);\r\n\t\t\t\treturn cached;\r\n\t\t\t}\r\n\r\n\t\t\tconst image = document.createElementNS('http://www.w3.org/1999/xhtml', 'img');\r\n\r\n\t\t\tfunction onImageLoad() {\r\n\t\t\t\timage.removeEventListener('load', onImageLoad, false);\r\n\t\t\t\timage.removeEventListener('error', onImageError, false);\r\n\t\t\t\tCache.add(url, this);\r\n\t\t\t\tif (onLoad) onLoad(this);\r\n\t\t\t\tscope.manager.itemEnd(url);\r\n\t\t\t}\r\n\r\n\t\t\tfunction onImageError(event) {\r\n\t\t\t\timage.removeEventListener('load', onImageLoad, false);\r\n\t\t\t\timage.removeEventListener('error', onImageError, false);\r\n\t\t\t\tif (onError) onError(event);\r\n\t\t\t\tscope.manager.itemError(url);\r\n\t\t\t\tscope.manager.itemEnd(url);\r\n\t\t\t}\r\n\r\n\t\t\timage.addEventListener('load', onImageLoad, false);\r\n\t\t\timage.addEventListener('error', onImageError, false);\r\n\r\n\t\t\tif (url.substr(0, 5) !== 'data:') {\r\n\t\t\t\tif (this.crossOrigin !== undefined) image.crossOrigin = this.crossOrigin;\r\n\t\t\t}\r\n\r\n\t\t\tscope.manager.itemStart(url);\r\n\t\t\timage.src = url;\r\n\t\t\treturn image;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass CubeTextureLoader extends Loader {\r\n\t\tconstructor(manager) {\r\n\t\t\tsuper(manager);\r\n\t\t}\r\n\r\n\t\tload(urls, onLoad, onProgress, onError) {\r\n\t\t\tconst texture = new CubeTexture();\r\n\t\t\tconst loader = new ImageLoader(this.manager);\r\n\t\t\tloader.setCrossOrigin(this.crossOrigin);\r\n\t\t\tloader.setPath(this.path);\r\n\t\t\tlet loaded = 0;\r\n\r\n\t\t\tfunction loadTexture(i) {\r\n\t\t\t\tloader.load(urls[i], function (image) {\r\n\t\t\t\t\ttexture.images[i] = image;\r\n\t\t\t\t\tloaded++;\r\n\r\n\t\t\t\t\tif (loaded === 6) {\r\n\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\t\t\t\t\tif (onLoad) onLoad(texture);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, undefined, onError);\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = 0; i < urls.length; ++i) {\r\n\t\t\t\tloadTexture(i);\r\n\t\t\t}\r\n\r\n\t\t\treturn texture;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\r\n\t *\r\n\t * Sub classes have to implement the parse() method which will be used in load().\r\n\t */\r\n\r\n\tclass DataTextureLoader extends Loader {\r\n\t\tconstructor(manager) {\r\n\t\t\tsuper(manager);\r\n\t\t}\r\n\r\n\t\tload(url, onLoad, onProgress, onError) {\r\n\t\t\tconst scope = this;\r\n\t\t\tconst texture = new DataTexture();\r\n\t\t\tconst loader = new FileLoader(this.manager);\r\n\t\t\tloader.setResponseType('arraybuffer');\r\n\t\t\tloader.setRequestHeader(this.requestHeader);\r\n\t\t\tloader.setPath(this.path);\r\n\t\t\tloader.setWithCredentials(scope.withCredentials);\r\n\t\t\tloader.load(url, function (buffer) {\r\n\t\t\t\tconst texData = scope.parse(buffer);\r\n\t\t\t\tif (!texData) return;\r\n\r\n\t\t\t\tif (texData.image !== undefined) {\r\n\t\t\t\t\ttexture.image = texData.image;\r\n\t\t\t\t} else if (texData.data !== undefined) {\r\n\t\t\t\t\ttexture.image.width = texData.width;\r\n\t\t\t\t\ttexture.image.height = texData.height;\r\n\t\t\t\t\ttexture.image.data = texData.data;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\r\n\t\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\r\n\t\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\r\n\t\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\r\n\t\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\r\n\r\n\t\t\t\tif (texData.encoding !== undefined) {\r\n\t\t\t\t\ttexture.encoding = texData.encoding;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (texData.flipY !== undefined) {\r\n\t\t\t\t\ttexture.flipY = texData.flipY;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (texData.format !== undefined) {\r\n\t\t\t\t\ttexture.format = texData.format;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (texData.type !== undefined) {\r\n\t\t\t\t\ttexture.type = texData.type;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (texData.mipmaps !== undefined) {\r\n\t\t\t\t\ttexture.mipmaps = texData.mipmaps;\r\n\t\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (texData.mipmapCount === 1) {\r\n\t\t\t\t\ttexture.minFilter = LinearFilter;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (texData.generateMipmaps !== undefined) {\r\n\t\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\t\t\t\tif (onLoad) onLoad(texture, texData);\r\n\t\t\t}, onProgress, onError);\r\n\t\t\treturn texture;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass TextureLoader extends Loader {\r\n\t\tconstructor(manager) {\r\n\t\t\tsuper(manager);\r\n\t\t}\r\n\r\n\t\tload(url, onLoad, onProgress, onError) {\r\n\t\t\tconst texture = new Texture();\r\n\t\t\tconst loader = new ImageLoader(this.manager);\r\n\t\t\tloader.setCrossOrigin(this.crossOrigin);\r\n\t\t\tloader.setPath(this.path);\r\n\t\t\tloader.load(url, function (image) {\r\n\t\t\t\ttexture.image = image; // JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\r\n\r\n\t\t\t\tconst isJPEG = url.search(/\\.jpe?g($|\\?)/i) > 0 || url.search(/^data\\:image\\/jpeg/) === 0;\r\n\t\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\tif (onLoad !== undefined) {\r\n\t\t\t\t\tonLoad(texture);\r\n\t\t\t\t}\r\n\t\t\t}, onProgress, onError);\r\n\t\t\treturn texture;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**************************************************************\r\n\t *\tCurved Path - a curve path is simply a array of connected\r\n\t *\tcurves, but retains the api of a curve\r\n\t **************************************************************/\r\n\r\n\tclass CurvePath extends Curve {\r\n\t\tconstructor() {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'CurvePath';\r\n\t\t\tthis.curves = [];\r\n\t\t\tthis.autoClose = false; // Automatically closes the path\r\n\t\t}\r\n\r\n\t\tadd(curve) {\r\n\t\t\tthis.curves.push(curve);\r\n\t\t}\r\n\r\n\t\tclosePath() {\r\n\t\t\t// Add a line curve if start and end of lines are not connected\r\n\t\t\tconst startPoint = this.curves[0].getPoint(0);\r\n\t\t\tconst endPoint = this.curves[this.curves.length - 1].getPoint(1);\r\n\r\n\t\t\tif (!startPoint.equals(endPoint)) {\r\n\t\t\t\tthis.curves.push(new LineCurve(endPoint, startPoint));\r\n\t\t\t}\r\n\t\t} // To get accurate point with reference to\r\n\t\t// entire path distance at time t,\r\n\t\t// following has to be done:\r\n\t\t// 1. Length of each sub path have to be known\r\n\t\t// 2. Locate and identify type of curve\r\n\t\t// 3. Get t for the curve\r\n\t\t// 4. Return curve.getPointAt(t')\r\n\r\n\r\n\t\tgetPoint(t) {\r\n\t\t\tconst d = t * this.getLength();\r\n\t\t\tconst curveLengths = this.getCurveLengths();\r\n\t\t\tlet i = 0; // To think about boundaries points.\r\n\r\n\t\t\twhile (i < curveLengths.length) {\r\n\t\t\t\tif (curveLengths[i] >= d) {\r\n\t\t\t\t\tconst diff = curveLengths[i] - d;\r\n\t\t\t\t\tconst curve = this.curves[i];\r\n\t\t\t\t\tconst segmentLength = curve.getLength();\r\n\t\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\r\n\t\t\t\t\treturn curve.getPointAt(u);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\r\n\t\t\treturn null; // loop where sum != 0, sum > d , sum+1 <d\r\n\t\t} // We cannot use the default THREE.Curve getPoint() with getLength() because in\r\n\t\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\r\n\t\t// getPoint() depends on getLength\r\n\r\n\r\n\t\tgetLength() {\r\n\t\t\tconst lens = this.getCurveLengths();\r\n\t\t\treturn lens[lens.length - 1];\r\n\t\t} // cacheLengths must be recalculated.\r\n\r\n\r\n\t\tupdateArcLengths() {\r\n\t\t\tthis.needsUpdate = true;\r\n\t\t\tthis.cacheLengths = null;\r\n\t\t\tthis.getCurveLengths();\r\n\t\t} // Compute lengths and cache them\r\n\t\t// We cannot overwrite getLengths() because UtoT mapping uses it.\r\n\r\n\r\n\t\tgetCurveLengths() {\r\n\t\t\t// We use cache values if curves and cache array are same length\r\n\t\t\tif (this.cacheLengths && this.cacheLengths.length === this.curves.length) {\r\n\t\t\t\treturn this.cacheLengths;\r\n\t\t\t} // Get length of sub-curve\r\n\t\t\t// Push sums into cached array\r\n\r\n\r\n\t\t\tconst lengths = [];\r\n\t\t\tlet sums = 0;\r\n\r\n\t\t\tfor (let i = 0, l = this.curves.length; i < l; i++) {\r\n\t\t\t\tsums += this.curves[i].getLength();\r\n\t\t\t\tlengths.push(sums);\r\n\t\t\t}\r\n\r\n\t\t\tthis.cacheLengths = lengths;\r\n\t\t\treturn lengths;\r\n\t\t}\r\n\r\n\t\tgetSpacedPoints(divisions = 40) {\r\n\t\t\tconst points = [];\r\n\r\n\t\t\tfor (let i = 0; i <= divisions; i++) {\r\n\t\t\t\tpoints.push(this.getPoint(i / divisions));\r\n\t\t\t}\r\n\r\n\t\t\tif (this.autoClose) {\r\n\t\t\t\tpoints.push(points[0]);\r\n\t\t\t}\r\n\r\n\t\t\treturn points;\r\n\t\t}\r\n\r\n\t\tgetPoints(divisions = 12) {\r\n\t\t\tconst points = [];\r\n\t\t\tlet last;\r\n\r\n\t\t\tfor (let i = 0, curves = this.curves; i < curves.length; i++) {\r\n\t\t\t\tconst curve = curves[i];\r\n\t\t\t\tconst resolution = curve && curve.isEllipseCurve ? divisions * 2 : curve && (curve.isLineCurve || curve.isLineCurve3) ? 1 : curve && curve.isSplineCurve ? divisions * curve.points.length : divisions;\r\n\t\t\t\tconst pts = curve.getPoints(resolution);\r\n\r\n\t\t\t\tfor (let j = 0; j < pts.length; j++) {\r\n\t\t\t\t\tconst point = pts[j];\r\n\t\t\t\t\tif (last && last.equals(point)) continue; // ensures no consecutive points are duplicates\r\n\r\n\t\t\t\t\tpoints.push(point);\r\n\t\t\t\t\tlast = point;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.autoClose && points.length > 1 && !points[points.length - 1].equals(points[0])) {\r\n\t\t\t\tpoints.push(points[0]);\r\n\t\t\t}\r\n\r\n\t\t\treturn points;\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.curves = [];\r\n\r\n\t\t\tfor (let i = 0, l = source.curves.length; i < l; i++) {\r\n\t\t\t\tconst curve = source.curves[i];\r\n\t\t\t\tthis.curves.push(curve.clone());\r\n\t\t\t}\r\n\r\n\t\t\tthis.autoClose = source.autoClose;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst data = super.toJSON();\r\n\t\t\tdata.autoClose = this.autoClose;\r\n\t\t\tdata.curves = [];\r\n\r\n\t\t\tfor (let i = 0, l = this.curves.length; i < l; i++) {\r\n\t\t\t\tconst curve = this.curves[i];\r\n\t\t\t\tdata.curves.push(curve.toJSON());\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\tfromJSON(json) {\r\n\t\t\tsuper.fromJSON(json);\r\n\t\t\tthis.autoClose = json.autoClose;\r\n\t\t\tthis.curves = [];\r\n\r\n\t\t\tfor (let i = 0, l = json.curves.length; i < l; i++) {\r\n\t\t\t\tconst curve = json.curves[i];\r\n\t\t\t\tthis.curves.push(new Curves[curve.type]().fromJSON(curve));\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass Path extends CurvePath {\r\n\t\tconstructor(points) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'Path';\r\n\t\t\tthis.currentPoint = new Vector2();\r\n\r\n\t\t\tif (points) {\r\n\t\t\t\tthis.setFromPoints(points);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsetFromPoints(points) {\r\n\t\t\tthis.moveTo(points[0].x, points[0].y);\r\n\r\n\t\t\tfor (let i = 1, l = points.length; i < l; i++) {\r\n\t\t\t\tthis.lineTo(points[i].x, points[i].y);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmoveTo(x, y) {\r\n\t\t\tthis.currentPoint.set(x, y); // TODO consider referencing vectors instead of copying?\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tlineTo(x, y) {\r\n\t\t\tconst curve = new LineCurve(this.currentPoint.clone(), new Vector2(x, y));\r\n\t\t\tthis.curves.push(curve);\r\n\t\t\tthis.currentPoint.set(x, y);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tquadraticCurveTo(aCPx, aCPy, aX, aY) {\r\n\t\t\tconst curve = new QuadraticBezierCurve(this.currentPoint.clone(), new Vector2(aCPx, aCPy), new Vector2(aX, aY));\r\n\t\t\tthis.curves.push(curve);\r\n\t\t\tthis.currentPoint.set(aX, aY);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tbezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\r\n\t\t\tconst curve = new CubicBezierCurve(this.currentPoint.clone(), new Vector2(aCP1x, aCP1y), new Vector2(aCP2x, aCP2y), new Vector2(aX, aY));\r\n\t\t\tthis.curves.push(curve);\r\n\t\t\tthis.currentPoint.set(aX, aY);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsplineThru(pts\r\n\t\t/*Array of Vector*/\r\n\t\t) {\r\n\t\t\tconst npts = [this.currentPoint.clone()].concat(pts);\r\n\t\t\tconst curve = new SplineCurve(npts);\r\n\t\t\tthis.curves.push(curve);\r\n\t\t\tthis.currentPoint.copy(pts[pts.length - 1]);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tarc(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\r\n\t\t\tconst x0 = this.currentPoint.x;\r\n\t\t\tconst y0 = this.currentPoint.y;\r\n\t\t\tthis.absarc(aX + x0, aY + y0, aRadius, aStartAngle, aEndAngle, aClockwise);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tabsarc(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\r\n\t\t\tthis.absellipse(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tellipse(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\r\n\t\t\tconst x0 = this.currentPoint.x;\r\n\t\t\tconst y0 = this.currentPoint.y;\r\n\t\t\tthis.absellipse(aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tabsellipse(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\r\n\t\t\tconst curve = new EllipseCurve(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\r\n\r\n\t\t\tif (this.curves.length > 0) {\r\n\t\t\t\t// if a previous curve is present, attempt to join\r\n\t\t\t\tconst firstPoint = curve.getPoint(0);\r\n\r\n\t\t\t\tif (!firstPoint.equals(this.currentPoint)) {\r\n\t\t\t\t\tthis.lineTo(firstPoint.x, firstPoint.y);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.curves.push(curve);\r\n\t\t\tconst lastPoint = curve.getPoint(1);\r\n\t\t\tthis.currentPoint.copy(lastPoint);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.currentPoint.copy(source.currentPoint);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst data = super.toJSON();\r\n\t\t\tdata.currentPoint = this.currentPoint.toArray();\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\tfromJSON(json) {\r\n\t\t\tsuper.fromJSON(json);\r\n\t\t\tthis.currentPoint.fromArray(json.currentPoint);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass Shape extends Path {\r\n\t\tconstructor(points) {\r\n\t\t\tsuper(points);\r\n\t\t\tthis.uuid = generateUUID();\r\n\t\t\tthis.type = 'Shape';\r\n\t\t\tthis.holes = [];\r\n\t\t}\r\n\r\n\t\tgetPointsHoles(divisions) {\r\n\t\t\tconst holesPts = [];\r\n\r\n\t\t\tfor (let i = 0, l = this.holes.length; i < l; i++) {\r\n\t\t\t\tholesPts[i] = this.holes[i].getPoints(divisions);\r\n\t\t\t}\r\n\r\n\t\t\treturn holesPts;\r\n\t\t} // get points of shape and holes (keypoints based on segments parameter)\r\n\r\n\r\n\t\textractPoints(divisions) {\r\n\t\t\treturn {\r\n\t\t\t\tshape: this.getPoints(divisions),\r\n\t\t\t\tholes: this.getPointsHoles(divisions)\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.holes = [];\r\n\r\n\t\t\tfor (let i = 0, l = source.holes.length; i < l; i++) {\r\n\t\t\t\tconst hole = source.holes[i];\r\n\t\t\t\tthis.holes.push(hole.clone());\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst data = super.toJSON();\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.holes = [];\r\n\r\n\t\t\tfor (let i = 0, l = this.holes.length; i < l; i++) {\r\n\t\t\t\tconst hole = this.holes[i];\r\n\t\t\t\tdata.holes.push(hole.toJSON());\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\tfromJSON(json) {\r\n\t\t\tsuper.fromJSON(json);\r\n\t\t\tthis.uuid = json.uuid;\r\n\t\t\tthis.holes = [];\r\n\r\n\t\t\tfor (let i = 0, l = json.holes.length; i < l; i++) {\r\n\t\t\t\tconst hole = json.holes[i];\r\n\t\t\t\tthis.holes.push(new Path().fromJSON(hole));\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass Light extends Object3D {\r\n\t\tconstructor(color, intensity = 1) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'Light';\r\n\t\t\tthis.color = new Color(color);\r\n\t\t\tthis.intensity = intensity;\r\n\t\t}\r\n\r\n\t\tdispose() {// Empty here in base class; some subclasses override.\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.color.copy(source.color);\r\n\t\t\tthis.intensity = source.intensity;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON(meta) {\r\n\t\t\tconst data = super.toJSON(meta);\r\n\t\t\tdata.object.color = this.color.getHex();\r\n\t\t\tdata.object.intensity = this.intensity;\r\n\t\t\tif (this.groundColor !== undefined) data.object.groundColor = this.groundColor.getHex();\r\n\t\t\tif (this.distance !== undefined) data.object.distance = this.distance;\r\n\t\t\tif (this.angle !== undefined) data.object.angle = this.angle;\r\n\t\t\tif (this.decay !== undefined) data.object.decay = this.decay;\r\n\t\t\tif (this.penumbra !== undefined) data.object.penumbra = this.penumbra;\r\n\t\t\tif (this.shadow !== undefined) data.object.shadow = this.shadow.toJSON();\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tLight.prototype.isLight = true;\r\n\r\n\tclass HemisphereLight extends Light {\r\n\t\tconstructor(skyColor, groundColor, intensity) {\r\n\t\t\tsuper(skyColor, intensity);\r\n\t\t\tthis.type = 'HemisphereLight';\r\n\t\t\tthis.position.copy(Object3D.DefaultUp);\r\n\t\t\tthis.updateMatrix();\r\n\t\t\tthis.groundColor = new Color(groundColor);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tLight.prototype.copy.call(this, source);\r\n\t\t\tthis.groundColor.copy(source.groundColor);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tHemisphereLight.prototype.isHemisphereLight = true;\r\n\r\n\tconst _projScreenMatrix$1 = /*@__PURE__*/new Matrix4();\r\n\r\n\tconst _lightPositionWorld$1 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _lookTarget$1 = /*@__PURE__*/new Vector3();\r\n\r\n\tclass LightShadow {\r\n\t\tconstructor(camera) {\r\n\t\t\tthis.camera = camera;\r\n\t\t\tthis.bias = 0;\r\n\t\t\tthis.normalBias = 0;\r\n\t\t\tthis.radius = 1;\r\n\t\t\tthis.mapSize = new Vector2(512, 512);\r\n\t\t\tthis.map = null;\r\n\t\t\tthis.mapPass = null;\r\n\t\t\tthis.matrix = new Matrix4();\r\n\t\t\tthis.autoUpdate = true;\r\n\t\t\tthis.needsUpdate = false;\r\n\t\t\tthis._frustum = new Frustum();\r\n\t\t\tthis._frameExtents = new Vector2(1, 1);\r\n\t\t\tthis._viewportCount = 1;\r\n\t\t\tthis._viewports = [new Vector4(0, 0, 1, 1)];\r\n\t\t}\r\n\r\n\t\tgetViewportCount() {\r\n\t\t\treturn this._viewportCount;\r\n\t\t}\r\n\r\n\t\tgetFrustum() {\r\n\t\t\treturn this._frustum;\r\n\t\t}\r\n\r\n\t\tupdateMatrices(light) {\r\n\t\t\tconst shadowCamera = this.camera;\r\n\t\t\tconst shadowMatrix = this.matrix;\r\n\r\n\t\t\t_lightPositionWorld$1.setFromMatrixPosition(light.matrixWorld);\r\n\r\n\t\t\tshadowCamera.position.copy(_lightPositionWorld$1);\r\n\r\n\t\t\t_lookTarget$1.setFromMatrixPosition(light.target.matrixWorld);\r\n\r\n\t\t\tshadowCamera.lookAt(_lookTarget$1);\r\n\t\t\tshadowCamera.updateMatrixWorld();\r\n\r\n\t\t\t_projScreenMatrix$1.multiplyMatrices(shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse);\r\n\r\n\t\t\tthis._frustum.setFromProjectionMatrix(_projScreenMatrix$1);\r\n\r\n\t\t\tshadowMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\r\n\t\t\tshadowMatrix.multiply(shadowCamera.projectionMatrix);\r\n\t\t\tshadowMatrix.multiply(shadowCamera.matrixWorldInverse);\r\n\t\t}\r\n\r\n\t\tgetViewport(viewportIndex) {\r\n\t\t\treturn this._viewports[viewportIndex];\r\n\t\t}\r\n\r\n\t\tgetFrameExtents() {\r\n\t\t\treturn this._frameExtents;\r\n\t\t}\r\n\r\n\t\tdispose() {\r\n\t\t\tif (this.map) {\r\n\t\t\t\tthis.map.dispose();\r\n\t\t\t}\r\n\r\n\t\t\tif (this.mapPass) {\r\n\t\t\t\tthis.mapPass.dispose();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tthis.camera = source.camera.clone();\r\n\t\t\tthis.bias = source.bias;\r\n\t\t\tthis.radius = source.radius;\r\n\t\t\tthis.mapSize.copy(source.mapSize);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor().copy(this);\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst object = {};\r\n\t\t\tif (this.bias !== 0) object.bias = this.bias;\r\n\t\t\tif (this.normalBias !== 0) object.normalBias = this.normalBias;\r\n\t\t\tif (this.radius !== 1) object.radius = this.radius;\r\n\t\t\tif (this.mapSize.x !== 512 || this.mapSize.y !== 512) object.mapSize = this.mapSize.toArray();\r\n\t\t\tobject.camera = this.camera.toJSON(false).object;\r\n\t\t\tdelete object.camera.matrix;\r\n\t\t\treturn object;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass SpotLightShadow extends LightShadow {\r\n\t\tconstructor() {\r\n\t\t\tsuper(new PerspectiveCamera(50, 1, 0.5, 500));\r\n\t\t\tthis.focus = 1;\r\n\t\t}\r\n\r\n\t\tupdateMatrices(light) {\r\n\t\t\tconst camera = this.camera;\r\n\t\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\r\n\t\t\tconst aspect = this.mapSize.width / this.mapSize.height;\r\n\t\t\tconst far = light.distance || camera.far;\r\n\r\n\t\t\tif (fov !== camera.fov || aspect !== camera.aspect || far !== camera.far) {\r\n\t\t\t\tcamera.fov = fov;\r\n\t\t\t\tcamera.aspect = aspect;\r\n\t\t\t\tcamera.far = far;\r\n\t\t\t\tcamera.updateProjectionMatrix();\r\n\t\t\t}\r\n\r\n\t\t\tsuper.updateMatrices(light);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.focus = source.focus;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tSpotLightShadow.prototype.isSpotLightShadow = true;\r\n\r\n\tclass SpotLight extends Light {\r\n\t\tconstructor(color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 1) {\r\n\t\t\tsuper(color, intensity);\r\n\t\t\tthis.type = 'SpotLight';\r\n\t\t\tthis.position.copy(Object3D.DefaultUp);\r\n\t\t\tthis.updateMatrix();\r\n\t\t\tthis.target = new Object3D();\r\n\t\t\tthis.distance = distance;\r\n\t\t\tthis.angle = angle;\r\n\t\t\tthis.penumbra = penumbra;\r\n\t\t\tthis.decay = decay; // for physically correct lights, should be 2.\r\n\r\n\t\t\tthis.shadow = new SpotLightShadow();\r\n\t\t}\r\n\r\n\t\tget power() {\r\n\t\t\t// intensity = power per solid angle.\r\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\r\n\t\t\treturn this.intensity * Math.PI;\r\n\t\t}\r\n\r\n\t\tset power(power) {\r\n\t\t\t// intensity = power per solid angle.\r\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\r\n\t\t\tthis.intensity = power / Math.PI;\r\n\t\t}\r\n\r\n\t\tdispose() {\r\n\t\t\tthis.shadow.dispose();\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.distance = source.distance;\r\n\t\t\tthis.angle = source.angle;\r\n\t\t\tthis.penumbra = source.penumbra;\r\n\t\t\tthis.decay = source.decay;\r\n\t\t\tthis.target = source.target.clone();\r\n\t\t\tthis.shadow = source.shadow.clone();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tSpotLight.prototype.isSpotLight = true;\r\n\r\n\tconst _projScreenMatrix = /*@__PURE__*/new Matrix4();\r\n\r\n\tconst _lightPositionWorld = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _lookTarget = /*@__PURE__*/new Vector3();\r\n\r\n\tclass PointLightShadow extends LightShadow {\r\n\t\tconstructor() {\r\n\t\t\tsuper(new PerspectiveCamera(90, 1, 0.5, 500));\r\n\t\t\tthis._frameExtents = new Vector2(4, 2);\r\n\t\t\tthis._viewportCount = 6;\r\n\t\t\tthis._viewports = [// These viewports map a cube-map onto a 2D texture with the\r\n\t\t\t// following orientation:\r\n\t\t\t//\r\n\t\t\t//\txzXZ\r\n\t\t\t//\t y Y\r\n\t\t\t//\r\n\t\t\t// X - Positive x direction\r\n\t\t\t// x - Negative x direction\r\n\t\t\t// Y - Positive y direction\r\n\t\t\t// y - Negative y direction\r\n\t\t\t// Z - Positive z direction\r\n\t\t\t// z - Negative z direction\r\n\t\t\t// positive X\r\n\t\t\tnew Vector4(2, 1, 1, 1), // negative X\r\n\t\t\tnew Vector4(0, 1, 1, 1), // positive Z\r\n\t\t\tnew Vector4(3, 1, 1, 1), // negative Z\r\n\t\t\tnew Vector4(1, 1, 1, 1), // positive Y\r\n\t\t\tnew Vector4(3, 0, 1, 1), // negative Y\r\n\t\t\tnew Vector4(1, 0, 1, 1)];\r\n\t\t\tthis._cubeDirections = [new Vector3(1, 0, 0), new Vector3(-1, 0, 0), new Vector3(0, 0, 1), new Vector3(0, 0, -1), new Vector3(0, 1, 0), new Vector3(0, -1, 0)];\r\n\t\t\tthis._cubeUps = [new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 0, 1), new Vector3(0, 0, -1)];\r\n\t\t}\r\n\r\n\t\tupdateMatrices(light, viewportIndex = 0) {\r\n\t\t\tconst camera = this.camera;\r\n\t\t\tconst shadowMatrix = this.matrix;\r\n\t\t\tconst far = light.distance || camera.far;\r\n\r\n\t\t\tif (far !== camera.far) {\r\n\t\t\t\tcamera.far = far;\r\n\t\t\t\tcamera.updateProjectionMatrix();\r\n\t\t\t}\r\n\r\n\t\t\t_lightPositionWorld.setFromMatrixPosition(light.matrixWorld);\r\n\r\n\t\t\tcamera.position.copy(_lightPositionWorld);\r\n\r\n\t\t\t_lookTarget.copy(camera.position);\r\n\r\n\t\t\t_lookTarget.add(this._cubeDirections[viewportIndex]);\r\n\r\n\t\t\tcamera.up.copy(this._cubeUps[viewportIndex]);\r\n\t\t\tcamera.lookAt(_lookTarget);\r\n\t\t\tcamera.updateMatrixWorld();\r\n\t\t\tshadowMatrix.makeTranslation(-_lightPositionWorld.x, -_lightPositionWorld.y, -_lightPositionWorld.z);\r\n\r\n\t\t\t_projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\r\n\r\n\t\t\tthis._frustum.setFromProjectionMatrix(_projScreenMatrix);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tPointLightShadow.prototype.isPointLightShadow = true;\r\n\r\n\tclass PointLight extends Light {\r\n\t\tconstructor(color, intensity, distance = 0, decay = 1) {\r\n\t\t\tsuper(color, intensity);\r\n\t\t\tthis.type = 'PointLight';\r\n\t\t\tthis.distance = distance;\r\n\t\t\tthis.decay = decay; // for physically correct lights, should be 2.\r\n\r\n\t\t\tthis.shadow = new PointLightShadow();\r\n\t\t}\r\n\r\n\t\tget power() {\r\n\t\t\t// intensity = power per solid angle.\r\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\r\n\t\t\treturn this.intensity * 4 * Math.PI;\r\n\t\t}\r\n\r\n\t\tset power(power) {\r\n\t\t\t// intensity = power per solid angle.\r\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\r\n\t\t\tthis.intensity = power / (4 * Math.PI);\r\n\t\t}\r\n\r\n\t\tdispose() {\r\n\t\t\tthis.shadow.dispose();\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.distance = source.distance;\r\n\t\t\tthis.decay = source.decay;\r\n\t\t\tthis.shadow = source.shadow.clone();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tPointLight.prototype.isPointLight = true;\r\n\r\n\tclass DirectionalLightShadow extends LightShadow {\r\n\t\tconstructor() {\r\n\t\t\tsuper(new OrthographicCamera(-5, 5, 5, -5, 0.5, 500));\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tDirectionalLightShadow.prototype.isDirectionalLightShadow = true;\r\n\r\n\tclass DirectionalLight extends Light {\r\n\t\tconstructor(color, intensity) {\r\n\t\t\tsuper(color, intensity);\r\n\t\t\tthis.type = 'DirectionalLight';\r\n\t\t\tthis.position.copy(Object3D.DefaultUp);\r\n\t\t\tthis.updateMatrix();\r\n\t\t\tthis.target = new Object3D();\r\n\t\t\tthis.shadow = new DirectionalLightShadow();\r\n\t\t}\r\n\r\n\t\tdispose() {\r\n\t\t\tthis.shadow.dispose();\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.target = source.target.clone();\r\n\t\t\tthis.shadow = source.shadow.clone();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tDirectionalLight.prototype.isDirectionalLight = true;\r\n\r\n\tclass AmbientLight extends Light {\r\n\t\tconstructor(color, intensity) {\r\n\t\t\tsuper(color, intensity);\r\n\t\t\tthis.type = 'AmbientLight';\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tAmbientLight.prototype.isAmbientLight = true;\r\n\r\n\tclass RectAreaLight extends Light {\r\n\t\tconstructor(color, intensity, width = 10, height = 10) {\r\n\t\t\tsuper(color, intensity);\r\n\t\t\tthis.type = 'RectAreaLight';\r\n\t\t\tthis.width = width;\r\n\t\t\tthis.height = height;\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.width = source.width;\r\n\t\t\tthis.height = source.height;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON(meta) {\r\n\t\t\tconst data = super.toJSON(meta);\r\n\t\t\tdata.object.width = this.width;\r\n\t\t\tdata.object.height = this.height;\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tRectAreaLight.prototype.isRectAreaLight = true;\r\n\r\n\t/**\r\n\t * Primary reference:\r\n\t *\t https://graphics.stanford.edu/papers/envmap/envmap.pdf\r\n\t *\r\n\t * Secondary reference:\r\n\t *\t https://www.ppsloan.org/publications/StupidSH36.pdf\r\n\t */\r\n\t// 3-band SH defined by 9 coefficients\r\n\r\n\tclass SphericalHarmonics3 {\r\n\t\tconstructor() {\r\n\t\t\tthis.coefficients = [];\r\n\r\n\t\t\tfor (let i = 0; i < 9; i++) {\r\n\t\t\t\tthis.coefficients.push(new Vector3());\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tset(coefficients) {\r\n\t\t\tfor (let i = 0; i < 9; i++) {\r\n\t\t\t\tthis.coefficients[i].copy(coefficients[i]);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tzero() {\r\n\t\t\tfor (let i = 0; i < 9; i++) {\r\n\t\t\t\tthis.coefficients[i].set(0, 0, 0);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t} // get the radiance in the direction of the normal\r\n\t\t// target is a Vector3\r\n\r\n\r\n\t\tgetAt(normal, target) {\r\n\t\t\t// normal is assumed to be unit length\r\n\t\t\tconst x = normal.x,\r\n\t\t\t\t\t\ty = normal.y,\r\n\t\t\t\t\t\tz = normal.z;\r\n\t\t\tconst coeff = this.coefficients; // band 0\r\n\r\n\t\t\ttarget.copy(coeff[0]).multiplyScalar(0.282095); // band 1\r\n\r\n\t\t\ttarget.addScaledVector(coeff[1], 0.488603 * y);\r\n\t\t\ttarget.addScaledVector(coeff[2], 0.488603 * z);\r\n\t\t\ttarget.addScaledVector(coeff[3], 0.488603 * x); // band 2\r\n\r\n\t\t\ttarget.addScaledVector(coeff[4], 1.092548 * (x * y));\r\n\t\t\ttarget.addScaledVector(coeff[5], 1.092548 * (y * z));\r\n\t\t\ttarget.addScaledVector(coeff[6], 0.315392 * (3.0 * z * z - 1.0));\r\n\t\t\ttarget.addScaledVector(coeff[7], 1.092548 * (x * z));\r\n\t\t\ttarget.addScaledVector(coeff[8], 0.546274 * (x * x - y * y));\r\n\t\t\treturn target;\r\n\t\t} // get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\r\n\t\t// target is a Vector3\r\n\t\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\r\n\r\n\r\n\t\tgetIrradianceAt(normal, target) {\r\n\t\t\t// normal is assumed to be unit length\r\n\t\t\tconst x = normal.x,\r\n\t\t\t\t\t\ty = normal.y,\r\n\t\t\t\t\t\tz = normal.z;\r\n\t\t\tconst coeff = this.coefficients; // band 0\r\n\r\n\t\t\ttarget.copy(coeff[0]).multiplyScalar(0.886227); // π * 0.282095\r\n\t\t\t// band 1\r\n\r\n\t\t\ttarget.addScaledVector(coeff[1], 2.0 * 0.511664 * y); // ( 2 * π / 3 ) * 0.488603\r\n\r\n\t\t\ttarget.addScaledVector(coeff[2], 2.0 * 0.511664 * z);\r\n\t\t\ttarget.addScaledVector(coeff[3], 2.0 * 0.511664 * x); // band 2\r\n\r\n\t\t\ttarget.addScaledVector(coeff[4], 2.0 * 0.429043 * x * y); // ( π / 4 ) * 1.092548\r\n\r\n\t\t\ttarget.addScaledVector(coeff[5], 2.0 * 0.429043 * y * z);\r\n\t\t\ttarget.addScaledVector(coeff[6], 0.743125 * z * z - 0.247708); // ( π / 4 ) * 0.315392 * 3\r\n\r\n\t\t\ttarget.addScaledVector(coeff[7], 2.0 * 0.429043 * x * z);\r\n\t\t\ttarget.addScaledVector(coeff[8], 0.429043 * (x * x - y * y)); // ( π / 4 ) * 0.546274\r\n\r\n\t\t\treturn target;\r\n\t\t}\r\n\r\n\t\tadd(sh) {\r\n\t\t\tfor (let i = 0; i < 9; i++) {\r\n\t\t\t\tthis.coefficients[i].add(sh.coefficients[i]);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\taddScaledSH(sh, s) {\r\n\t\t\tfor (let i = 0; i < 9; i++) {\r\n\t\t\t\tthis.coefficients[i].addScaledVector(sh.coefficients[i], s);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tscale(s) {\r\n\t\t\tfor (let i = 0; i < 9; i++) {\r\n\t\t\t\tthis.coefficients[i].multiplyScalar(s);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tlerp(sh, alpha) {\r\n\t\t\tfor (let i = 0; i < 9; i++) {\r\n\t\t\t\tthis.coefficients[i].lerp(sh.coefficients[i], alpha);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tequals(sh) {\r\n\t\t\tfor (let i = 0; i < 9; i++) {\r\n\t\t\t\tif (!this.coefficients[i].equals(sh.coefficients[i])) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tcopy(sh) {\r\n\t\t\treturn this.set(sh.coefficients);\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor().copy(this);\r\n\t\t}\r\n\r\n\t\tfromArray(array, offset = 0) {\r\n\t\t\tconst coefficients = this.coefficients;\r\n\r\n\t\t\tfor (let i = 0; i < 9; i++) {\r\n\t\t\t\tcoefficients[i].fromArray(array, offset + i * 3);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoArray(array = [], offset = 0) {\r\n\t\t\tconst coefficients = this.coefficients;\r\n\r\n\t\t\tfor (let i = 0; i < 9; i++) {\r\n\t\t\t\tcoefficients[i].toArray(array, offset + i * 3);\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\t\t} // evaluate the basis functions\r\n\t\t// shBasis is an Array[ 9 ]\r\n\r\n\r\n\t\tstatic getBasisAt(normal, shBasis) {\r\n\t\t\t// normal is assumed to be unit length\r\n\t\t\tconst x = normal.x,\r\n\t\t\t\t\t\ty = normal.y,\r\n\t\t\t\t\t\tz = normal.z; // band 0\r\n\r\n\t\t\tshBasis[0] = 0.282095; // band 1\r\n\r\n\t\t\tshBasis[1] = 0.488603 * y;\r\n\t\t\tshBasis[2] = 0.488603 * z;\r\n\t\t\tshBasis[3] = 0.488603 * x; // band 2\r\n\r\n\t\t\tshBasis[4] = 1.092548 * x * y;\r\n\t\t\tshBasis[5] = 1.092548 * y * z;\r\n\t\t\tshBasis[6] = 0.315392 * (3 * z * z - 1);\r\n\t\t\tshBasis[7] = 1.092548 * x * z;\r\n\t\t\tshBasis[8] = 0.546274 * (x * x - y * y);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tSphericalHarmonics3.prototype.isSphericalHarmonics3 = true;\r\n\r\n\tclass LightProbe extends Light {\r\n\t\tconstructor(sh = new SphericalHarmonics3(), intensity = 1) {\r\n\t\t\tsuper(undefined, intensity);\r\n\t\t\tthis.sh = sh;\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.sh.copy(source.sh);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tfromJSON(json) {\r\n\t\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\r\n\r\n\t\t\tthis.sh.fromArray(json.sh);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON(meta) {\r\n\t\t\tconst data = super.toJSON(meta);\r\n\t\t\tdata.object.sh = this.sh.toArray();\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tLightProbe.prototype.isLightProbe = true;\r\n\r\n\tclass MaterialLoader extends Loader {\r\n\t\tconstructor(manager) {\r\n\t\t\tsuper(manager);\r\n\t\t\tthis.textures = {};\r\n\t\t}\r\n\r\n\t\tload(url, onLoad, onProgress, onError) {\r\n\t\t\tconst scope = this;\r\n\t\t\tconst loader = new FileLoader(scope.manager);\r\n\t\t\tloader.setPath(scope.path);\r\n\t\t\tloader.setRequestHeader(scope.requestHeader);\r\n\t\t\tloader.setWithCredentials(scope.withCredentials);\r\n\t\t\tloader.load(url, function (text) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tonLoad(scope.parse(JSON.parse(text)));\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tif (onError) {\r\n\t\t\t\t\t\tonError(e);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tscope.manager.itemError(url);\r\n\t\t\t\t}\r\n\t\t\t}, onProgress, onError);\r\n\t\t}\r\n\r\n\t\tparse(json) {\r\n\t\t\tconst textures = this.textures;\r\n\r\n\t\t\tfunction getTexture(name) {\r\n\t\t\t\tif (textures[name] === undefined) {\r\n\t\t\t\t\tconsole.warn('THREE.MaterialLoader: Undefined texture', name);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn textures[name];\r\n\t\t\t}\r\n\r\n\t\t\tconst material = new Materials[json.type]();\r\n\t\t\tif (json.uuid !== undefined) material.uuid = json.uuid;\r\n\t\t\tif (json.name !== undefined) material.name = json.name;\r\n\t\t\tif (json.color !== undefined && material.color !== undefined) material.color.setHex(json.color);\r\n\t\t\tif (json.roughness !== undefined) material.roughness = json.roughness;\r\n\t\t\tif (json.metalness !== undefined) material.metalness = json.metalness;\r\n\t\t\tif (json.sheen !== undefined) material.sheen = new Color().setHex(json.sheen);\r\n\t\t\tif (json.emissive !== undefined && material.emissive !== undefined) material.emissive.setHex(json.emissive);\r\n\t\t\tif (json.specular !== undefined && material.specular !== undefined) material.specular.setHex(json.specular);\r\n\t\t\tif (json.specularIntensity !== undefined) material.specularIntensity = json.specularIntensity;\r\n\t\t\tif (json.specularTint !== undefined && material.specularTint !== undefined) material.specularTint.setHex(json.specularTint);\r\n\t\t\tif (json.shininess !== undefined) material.shininess = json.shininess;\r\n\t\t\tif (json.clearcoat !== undefined) material.clearcoat = json.clearcoat;\r\n\t\t\tif (json.clearcoatRoughness !== undefined) material.clearcoatRoughness = json.clearcoatRoughness;\r\n\t\t\tif (json.transmission !== undefined) material.transmission = json.transmission;\r\n\t\t\tif (json.thickness !== undefined) material.thickness = json.thickness;\r\n\t\t\tif (json.attenuationDistance !== undefined) material.attenuationDistance = json.attenuationDistance;\r\n\t\t\tif (json.attenuationTint !== undefined && material.attenuationTint !== undefined) material.attenuationTint.setHex(json.attenuationTint);\r\n\t\t\tif (json.fog !== undefined) material.fog = json.fog;\r\n\t\t\tif (json.flatShading !== undefined) material.flatShading = json.flatShading;\r\n\t\t\tif (json.blending !== undefined) material.blending = json.blending;\r\n\t\t\tif (json.combine !== undefined) material.combine = json.combine;\r\n\t\t\tif (json.side !== undefined) material.side = json.side;\r\n\t\t\tif (json.shadowSide !== undefined) material.shadowSide = json.shadowSide;\r\n\t\t\tif (json.opacity !== undefined) material.opacity = json.opacity;\r\n\t\t\tif (json.transparent !== undefined) material.transparent = json.transparent;\r\n\t\t\tif (json.alphaTest !== undefined) material.alphaTest = json.alphaTest;\r\n\t\t\tif (json.depthTest !== undefined) material.depthTest = json.depthTest;\r\n\t\t\tif (json.depthWrite !== undefined) material.depthWrite = json.depthWrite;\r\n\t\t\tif (json.colorWrite !== undefined) material.colorWrite = json.colorWrite;\r\n\t\t\tif (json.stencilWrite !== undefined) material.stencilWrite = json.stencilWrite;\r\n\t\t\tif (json.stencilWriteMask !== undefined) material.stencilWriteMask = json.stencilWriteMask;\r\n\t\t\tif (json.stencilFunc !== undefined) material.stencilFunc = json.stencilFunc;\r\n\t\t\tif (json.stencilRef !== undefined) material.stencilRef = json.stencilRef;\r\n\t\t\tif (json.stencilFuncMask !== undefined) material.stencilFuncMask = json.stencilFuncMask;\r\n\t\t\tif (json.stencilFail !== undefined) material.stencilFail = json.stencilFail;\r\n\t\t\tif (json.stencilZFail !== undefined) material.stencilZFail = json.stencilZFail;\r\n\t\t\tif (json.stencilZPass !== undefined) material.stencilZPass = json.stencilZPass;\r\n\t\t\tif (json.wireframe !== undefined) material.wireframe = json.wireframe;\r\n\t\t\tif (json.wireframeLinewidth !== undefined) material.wireframeLinewidth = json.wireframeLinewidth;\r\n\t\t\tif (json.wireframeLinecap !== undefined) material.wireframeLinecap = json.wireframeLinecap;\r\n\t\t\tif (json.wireframeLinejoin !== undefined) material.wireframeLinejoin = json.wireframeLinejoin;\r\n\t\t\tif (json.rotation !== undefined) material.rotation = json.rotation;\r\n\t\t\tif (json.linewidth !== 1) material.linewidth = json.linewidth;\r\n\t\t\tif (json.dashSize !== undefined) material.dashSize = json.dashSize;\r\n\t\t\tif (json.gapSize !== undefined) material.gapSize = json.gapSize;\r\n\t\t\tif (json.scale !== undefined) material.scale = json.scale;\r\n\t\t\tif (json.polygonOffset !== undefined) material.polygonOffset = json.polygonOffset;\r\n\t\t\tif (json.polygonOffsetFactor !== undefined) material.polygonOffsetFactor = json.polygonOffsetFactor;\r\n\t\t\tif (json.polygonOffsetUnits !== undefined) material.polygonOffsetUnits = json.polygonOffsetUnits;\r\n\t\t\tif (json.dithering !== undefined) material.dithering = json.dithering;\r\n\t\t\tif (json.alphaToCoverage !== undefined) material.alphaToCoverage = json.alphaToCoverage;\r\n\t\t\tif (json.premultipliedAlpha !== undefined) material.premultipliedAlpha = json.premultipliedAlpha;\r\n\t\t\tif (json.visible !== undefined) material.visible = json.visible;\r\n\t\t\tif (json.toneMapped !== undefined) material.toneMapped = json.toneMapped;\r\n\t\t\tif (json.userData !== undefined) material.userData = json.userData;\r\n\r\n\t\t\tif (json.vertexColors !== undefined) {\r\n\t\t\t\tif (typeof json.vertexColors === 'number') {\r\n\t\t\t\t\tmaterial.vertexColors = json.vertexColors > 0 ? true : false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmaterial.vertexColors = json.vertexColors;\r\n\t\t\t\t}\r\n\t\t\t} // Shader Material\r\n\r\n\r\n\t\t\tif (json.uniforms !== undefined) {\r\n\t\t\t\tfor (const name in json.uniforms) {\r\n\t\t\t\t\tconst uniform = json.uniforms[name];\r\n\t\t\t\t\tmaterial.uniforms[name] = {};\r\n\r\n\t\t\t\t\tswitch (uniform.type) {\r\n\t\t\t\t\t\tcase 't':\r\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = getTexture(uniform.value);\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'c':\r\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Color().setHex(uniform.value);\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'v2':\r\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Vector2().fromArray(uniform.value);\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'v3':\r\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Vector3().fromArray(uniform.value);\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'v4':\r\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Vector4().fromArray(uniform.value);\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'm3':\r\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Matrix3().fromArray(uniform.value);\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'm4':\r\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Matrix4().fromArray(uniform.value);\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = uniform.value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (json.defines !== undefined) material.defines = json.defines;\r\n\t\t\tif (json.vertexShader !== undefined) material.vertexShader = json.vertexShader;\r\n\t\t\tif (json.fragmentShader !== undefined) material.fragmentShader = json.fragmentShader;\r\n\r\n\t\t\tif (json.extensions !== undefined) {\r\n\t\t\t\tfor (const key in json.extensions) {\r\n\t\t\t\t\tmaterial.extensions[key] = json.extensions[key];\r\n\t\t\t\t}\r\n\t\t\t} // Deprecated\r\n\r\n\r\n\t\t\tif (json.shading !== undefined) material.flatShading = json.shading === 1; // THREE.FlatShading\r\n\t\t\t// for PointsMaterial\r\n\r\n\t\t\tif (json.size !== undefined) material.size = json.size;\r\n\t\t\tif (json.sizeAttenuation !== undefined) material.sizeAttenuation = json.sizeAttenuation; // maps\r\n\r\n\t\t\tif (json.map !== undefined) material.map = getTexture(json.map);\r\n\t\t\tif (json.matcap !== undefined) material.matcap = getTexture(json.matcap);\r\n\t\t\tif (json.alphaMap !== undefined) material.alphaMap = getTexture(json.alphaMap);\r\n\t\t\tif (json.bumpMap !== undefined) material.bumpMap = getTexture(json.bumpMap);\r\n\t\t\tif (json.bumpScale !== undefined) material.bumpScale = json.bumpScale;\r\n\t\t\tif (json.normalMap !== undefined) material.normalMap = getTexture(json.normalMap);\r\n\t\t\tif (json.normalMapType !== undefined) material.normalMapType = json.normalMapType;\r\n\r\n\t\t\tif (json.normalScale !== undefined) {\r\n\t\t\t\tlet normalScale = json.normalScale;\r\n\r\n\t\t\t\tif (Array.isArray(normalScale) === false) {\r\n\t\t\t\t\t// Blender exporter used to export a scalar. See #7459\r\n\t\t\t\t\tnormalScale = [normalScale, normalScale];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmaterial.normalScale = new Vector2().fromArray(normalScale);\r\n\t\t\t}\r\n\r\n\t\t\tif (json.displacementMap !== undefined) material.displacementMap = getTexture(json.displacementMap);\r\n\t\t\tif (json.displacementScale !== undefined) material.displacementScale = json.displacementScale;\r\n\t\t\tif (json.displacementBias !== undefined) material.displacementBias = json.displacementBias;\r\n\t\t\tif (json.roughnessMap !== undefined) material.roughnessMap = getTexture(json.roughnessMap);\r\n\t\t\tif (json.metalnessMap !== undefined) material.metalnessMap = getTexture(json.metalnessMap);\r\n\t\t\tif (json.emissiveMap !== undefined) material.emissiveMap = getTexture(json.emissiveMap);\r\n\t\t\tif (json.emissiveIntensity !== undefined) material.emissiveIntensity = json.emissiveIntensity;\r\n\t\t\tif (json.specularMap !== undefined) material.specularMap = getTexture(json.specularMap);\r\n\t\t\tif (json.specularIntensityMap !== undefined) material.specularIntensityMap = getTexture(json.specularIntensityMap);\r\n\t\t\tif (json.specularTintMap !== undefined) material.specularTintMap = getTexture(json.specularTintMap);\r\n\t\t\tif (json.envMap !== undefined) material.envMap = getTexture(json.envMap);\r\n\t\t\tif (json.envMapIntensity !== undefined) material.envMapIntensity = json.envMapIntensity;\r\n\t\t\tif (json.reflectivity !== undefined) material.reflectivity = json.reflectivity;\r\n\t\t\tif (json.refractionRatio !== undefined) material.refractionRatio = json.refractionRatio;\r\n\t\t\tif (json.lightMap !== undefined) material.lightMap = getTexture(json.lightMap);\r\n\t\t\tif (json.lightMapIntensity !== undefined) material.lightMapIntensity = json.lightMapIntensity;\r\n\t\t\tif (json.aoMap !== undefined) material.aoMap = getTexture(json.aoMap);\r\n\t\t\tif (json.aoMapIntensity !== undefined) material.aoMapIntensity = json.aoMapIntensity;\r\n\t\t\tif (json.gradientMap !== undefined) material.gradientMap = getTexture(json.gradientMap);\r\n\t\t\tif (json.clearcoatMap !== undefined) material.clearcoatMap = getTexture(json.clearcoatMap);\r\n\t\t\tif (json.clearcoatRoughnessMap !== undefined) material.clearcoatRoughnessMap = getTexture(json.clearcoatRoughnessMap);\r\n\t\t\tif (json.clearcoatNormalMap !== undefined) material.clearcoatNormalMap = getTexture(json.clearcoatNormalMap);\r\n\t\t\tif (json.clearcoatNormalScale !== undefined) material.clearcoatNormalScale = new Vector2().fromArray(json.clearcoatNormalScale);\r\n\t\t\tif (json.transmissionMap !== undefined) material.transmissionMap = getTexture(json.transmissionMap);\r\n\t\t\tif (json.thicknessMap !== undefined) material.thicknessMap = getTexture(json.thicknessMap);\r\n\t\t\treturn material;\r\n\t\t}\r\n\r\n\t\tsetTextures(value) {\r\n\t\t\tthis.textures = value;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass LoaderUtils {\r\n\t\tstatic decodeText(array) {\r\n\t\t\tif (typeof TextDecoder !== 'undefined') {\r\n\t\t\t\treturn new TextDecoder().decode(array);\r\n\t\t\t} // Avoid the String.fromCharCode.apply(null, array) shortcut, which\r\n\t\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\r\n\r\n\r\n\t\t\tlet s = '';\r\n\r\n\t\t\tfor (let i = 0, il = array.length; i < il; i++) {\r\n\t\t\t\t// Implicitly assumes little-endian.\r\n\t\t\t\ts += String.fromCharCode(array[i]);\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\t// merges multi-byte utf-8 characters.\r\n\t\t\t\treturn decodeURIComponent(escape(s));\r\n\t\t\t} catch (e) {\r\n\t\t\t\t// see #16358\r\n\t\t\t\treturn s;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tstatic extractUrlBase(url) {\r\n\t\t\tconst index = url.lastIndexOf('/');\r\n\t\t\tif (index === -1) return './';\r\n\t\t\treturn url.substr(0, index + 1);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass InstancedBufferGeometry extends BufferGeometry {\r\n\t\tconstructor() {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'InstancedBufferGeometry';\r\n\t\t\tthis.instanceCount = Infinity;\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.instanceCount = source.instanceCount;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor().copy(this);\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst data = super.toJSON(this);\r\n\t\t\tdata.instanceCount = this.instanceCount;\r\n\t\t\tdata.isInstancedBufferGeometry = true;\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tInstancedBufferGeometry.prototype.isInstancedBufferGeometry = true;\r\n\r\n\tclass InstancedBufferAttribute extends BufferAttribute {\r\n\t\tconstructor(array, itemSize, normalized, meshPerAttribute = 1) {\r\n\t\t\tif (typeof normalized === 'number') {\r\n\t\t\t\tmeshPerAttribute = normalized;\r\n\t\t\t\tnormalized = false;\r\n\t\t\t\tconsole.error('THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.');\r\n\t\t\t}\r\n\r\n\t\t\tsuper(array, itemSize, normalized);\r\n\t\t\tthis.meshPerAttribute = meshPerAttribute;\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoJSON() {\r\n\t\t\tconst data = super.toJSON();\r\n\t\t\tdata.meshPerAttribute = this.meshPerAttribute;\r\n\t\t\tdata.isInstancedBufferAttribute = true;\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tInstancedBufferAttribute.prototype.isInstancedBufferAttribute = true;\r\n\r\n\tclass BufferGeometryLoader extends Loader {\r\n\t\tconstructor(manager) {\r\n\t\t\tsuper(manager);\r\n\t\t}\r\n\r\n\t\tload(url, onLoad, onProgress, onError) {\r\n\t\t\tconst scope = this;\r\n\t\t\tconst loader = new FileLoader(scope.manager);\r\n\t\t\tloader.setPath(scope.path);\r\n\t\t\tloader.setRequestHeader(scope.requestHeader);\r\n\t\t\tloader.setWithCredentials(scope.withCredentials);\r\n\t\t\tloader.load(url, function (text) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tonLoad(scope.parse(JSON.parse(text)));\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tif (onError) {\r\n\t\t\t\t\t\tonError(e);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tscope.manager.itemError(url);\r\n\t\t\t\t}\r\n\t\t\t}, onProgress, onError);\r\n\t\t}\r\n\r\n\t\tparse(json) {\r\n\t\t\tconst interleavedBufferMap = {};\r\n\t\t\tconst arrayBufferMap = {};\r\n\r\n\t\t\tfunction getInterleavedBuffer(json, uuid) {\r\n\t\t\t\tif (interleavedBufferMap[uuid] !== undefined) return interleavedBufferMap[uuid];\r\n\t\t\t\tconst interleavedBuffers = json.interleavedBuffers;\r\n\t\t\t\tconst interleavedBuffer = interleavedBuffers[uuid];\r\n\t\t\t\tconst buffer = getArrayBuffer(json, interleavedBuffer.buffer);\r\n\t\t\t\tconst array = getTypedArray(interleavedBuffer.type, buffer);\r\n\t\t\t\tconst ib = new InterleavedBuffer(array, interleavedBuffer.stride);\r\n\t\t\t\tib.uuid = interleavedBuffer.uuid;\r\n\t\t\t\tinterleavedBufferMap[uuid] = ib;\r\n\t\t\t\treturn ib;\r\n\t\t\t}\r\n\r\n\t\t\tfunction getArrayBuffer(json, uuid) {\r\n\t\t\t\tif (arrayBufferMap[uuid] !== undefined) return arrayBufferMap[uuid];\r\n\t\t\t\tconst arrayBuffers = json.arrayBuffers;\r\n\t\t\t\tconst arrayBuffer = arrayBuffers[uuid];\r\n\t\t\t\tconst ab = new Uint32Array(arrayBuffer).buffer;\r\n\t\t\t\tarrayBufferMap[uuid] = ab;\r\n\t\t\t\treturn ab;\r\n\t\t\t}\r\n\r\n\t\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\r\n\t\t\tconst index = json.data.index;\r\n\r\n\t\t\tif (index !== undefined) {\r\n\t\t\t\tconst typedArray = getTypedArray(index.type, index.array);\r\n\t\t\t\tgeometry.setIndex(new BufferAttribute(typedArray, 1));\r\n\t\t\t}\r\n\r\n\t\t\tconst attributes = json.data.attributes;\r\n\r\n\t\t\tfor (const key in attributes) {\r\n\t\t\t\tconst attribute = attributes[key];\r\n\t\t\t\tlet bufferAttribute;\r\n\r\n\t\t\t\tif (attribute.isInterleavedBufferAttribute) {\r\n\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer(json.data, attribute.data);\r\n\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute(interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst typedArray = getTypedArray(attribute.type, attribute.array);\r\n\t\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\r\n\t\t\t\t\tbufferAttribute = new bufferAttributeConstr(typedArray, attribute.itemSize, attribute.normalized);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (attribute.name !== undefined) bufferAttribute.name = attribute.name;\r\n\t\t\t\tif (attribute.usage !== undefined) bufferAttribute.setUsage(attribute.usage);\r\n\r\n\t\t\t\tif (attribute.updateRange !== undefined) {\r\n\t\t\t\t\tbufferAttribute.updateRange.offset = attribute.updateRange.offset;\r\n\t\t\t\t\tbufferAttribute.updateRange.count = attribute.updateRange.count;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.setAttribute(key, bufferAttribute);\r\n\t\t\t}\r\n\r\n\t\t\tconst morphAttributes = json.data.morphAttributes;\r\n\r\n\t\t\tif (morphAttributes) {\r\n\t\t\t\tfor (const key in morphAttributes) {\r\n\t\t\t\t\tconst attributeArray = morphAttributes[key];\r\n\t\t\t\t\tconst array = [];\r\n\r\n\t\t\t\t\tfor (let i = 0, il = attributeArray.length; i < il; i++) {\r\n\t\t\t\t\t\tconst attribute = attributeArray[i];\r\n\t\t\t\t\t\tlet bufferAttribute;\r\n\r\n\t\t\t\t\t\tif (attribute.isInterleavedBufferAttribute) {\r\n\t\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer(json.data, attribute.data);\r\n\t\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute(interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tconst typedArray = getTypedArray(attribute.type, attribute.array);\r\n\t\t\t\t\t\t\tbufferAttribute = new BufferAttribute(typedArray, attribute.itemSize, attribute.normalized);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (attribute.name !== undefined) bufferAttribute.name = attribute.name;\r\n\t\t\t\t\t\tarray.push(bufferAttribute);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgeometry.morphAttributes[key] = array;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\r\n\r\n\t\t\tif (morphTargetsRelative) {\r\n\t\t\t\tgeometry.morphTargetsRelative = true;\r\n\t\t\t}\r\n\r\n\t\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\r\n\r\n\t\t\tif (groups !== undefined) {\r\n\t\t\t\tfor (let i = 0, n = groups.length; i !== n; ++i) {\r\n\t\t\t\t\tconst group = groups[i];\r\n\t\t\t\t\tgeometry.addGroup(group.start, group.count, group.materialIndex);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst boundingSphere = json.data.boundingSphere;\r\n\r\n\t\t\tif (boundingSphere !== undefined) {\r\n\t\t\t\tconst center = new Vector3();\r\n\r\n\t\t\t\tif (boundingSphere.center !== undefined) {\r\n\t\t\t\t\tcenter.fromArray(boundingSphere.center);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.boundingSphere = new Sphere(center, boundingSphere.radius);\r\n\t\t\t}\r\n\r\n\t\t\tif (json.name) geometry.name = json.name;\r\n\t\t\tif (json.userData) geometry.userData = json.userData;\r\n\t\t\treturn geometry;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass ObjectLoader extends Loader {\r\n\t\tconstructor(manager) {\r\n\t\t\tsuper(manager);\r\n\t\t}\r\n\r\n\t\tload(url, onLoad, onProgress, onError) {\r\n\t\t\tconst scope = this;\r\n\t\t\tconst path = this.path === '' ? LoaderUtils.extractUrlBase(url) : this.path;\r\n\t\t\tthis.resourcePath = this.resourcePath || path;\r\n\t\t\tconst loader = new FileLoader(this.manager);\r\n\t\t\tloader.setPath(this.path);\r\n\t\t\tloader.setRequestHeader(this.requestHeader);\r\n\t\t\tloader.setWithCredentials(this.withCredentials);\r\n\t\t\tloader.load(url, function (text) {\r\n\t\t\t\tlet json = null;\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tjson = JSON.parse(text);\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tif (onError !== undefined) onError(error);\r\n\t\t\t\t\tconsole.error('THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst metadata = json.metadata;\r\n\r\n\t\t\t\tif (metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry') {\r\n\t\t\t\t\tconsole.error('THREE.ObjectLoader: Can\\'t load ' + url);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscope.parse(json, onLoad);\r\n\t\t\t}, onProgress, onError);\r\n\t\t}\r\n\r\n\t\tasync loadAsync(url, onProgress) {\r\n\t\t\tconst scope = this;\r\n\t\t\tconst path = this.path === '' ? LoaderUtils.extractUrlBase(url) : this.path;\r\n\t\t\tthis.resourcePath = this.resourcePath || path;\r\n\t\t\tconst loader = new FileLoader(this.manager);\r\n\t\t\tloader.setPath(this.path);\r\n\t\t\tloader.setRequestHeader(this.requestHeader);\r\n\t\t\tloader.setWithCredentials(this.withCredentials);\r\n\t\t\tconst text = await loader.loadAsync(url, onProgress);\r\n\t\t\tconst json = JSON.parse(text);\r\n\t\t\tconst metadata = json.metadata;\r\n\r\n\t\t\tif (metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry') {\r\n\t\t\t\tthrow new Error('THREE.ObjectLoader: Can\\'t load ' + url);\r\n\t\t\t}\r\n\r\n\t\t\treturn await scope.parseAsync(json);\r\n\t\t}\r\n\r\n\t\tparse(json, onLoad) {\r\n\t\t\tconst animations = this.parseAnimations(json.animations);\r\n\t\t\tconst shapes = this.parseShapes(json.shapes);\r\n\t\t\tconst geometries = this.parseGeometries(json.geometries, shapes);\r\n\t\t\tconst images = this.parseImages(json.images, function () {\r\n\t\t\t\tif (onLoad !== undefined) onLoad(object);\r\n\t\t\t});\r\n\t\t\tconst textures = this.parseTextures(json.textures, images);\r\n\t\t\tconst materials = this.parseMaterials(json.materials, textures);\r\n\t\t\tconst object = this.parseObject(json.object, geometries, materials, textures, animations);\r\n\t\t\tconst skeletons = this.parseSkeletons(json.skeletons, object);\r\n\t\t\tthis.bindSkeletons(object, skeletons); //\r\n\r\n\t\t\tif (onLoad !== undefined) {\r\n\t\t\t\tlet hasImages = false;\r\n\r\n\t\t\t\tfor (const uuid in images) {\r\n\t\t\t\t\tif (images[uuid] instanceof HTMLImageElement) {\r\n\t\t\t\t\t\thasImages = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (hasImages === false) onLoad(object);\r\n\t\t\t}\r\n\r\n\t\t\treturn object;\r\n\t\t}\r\n\r\n\t\tasync parseAsync(json) {\r\n\t\t\tconst animations = this.parseAnimations(json.animations);\r\n\t\t\tconst shapes = this.parseShapes(json.shapes);\r\n\t\t\tconst geometries = this.parseGeometries(json.geometries, shapes);\r\n\t\t\tconst images = await this.parseImagesAsync(json.images);\r\n\t\t\tconst textures = this.parseTextures(json.textures, images);\r\n\t\t\tconst materials = this.parseMaterials(json.materials, textures);\r\n\t\t\tconst object = this.parseObject(json.object, geometries, materials, textures, animations);\r\n\t\t\tconst skeletons = this.parseSkeletons(json.skeletons, object);\r\n\t\t\tthis.bindSkeletons(object, skeletons);\r\n\t\t\treturn object;\r\n\t\t}\r\n\r\n\t\tparseShapes(json) {\r\n\t\t\tconst shapes = {};\r\n\r\n\t\t\tif (json !== undefined) {\r\n\t\t\t\tfor (let i = 0, l = json.length; i < l; i++) {\r\n\t\t\t\t\tconst shape = new Shape().fromJSON(json[i]);\r\n\t\t\t\t\tshapes[shape.uuid] = shape;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn shapes;\r\n\t\t}\r\n\r\n\t\tparseSkeletons(json, object) {\r\n\t\t\tconst skeletons = {};\r\n\t\t\tconst bones = {}; // generate bone lookup table\r\n\r\n\t\t\tobject.traverse(function (child) {\r\n\t\t\t\tif (child.isBone) bones[child.uuid] = child;\r\n\t\t\t}); // create skeletons\r\n\r\n\t\t\tif (json !== undefined) {\r\n\t\t\t\tfor (let i = 0, l = json.length; i < l; i++) {\r\n\t\t\t\t\tconst skeleton = new Skeleton().fromJSON(json[i], bones);\r\n\t\t\t\t\tskeletons[skeleton.uuid] = skeleton;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn skeletons;\r\n\t\t}\r\n\r\n\t\tparseGeometries(json, shapes) {\r\n\t\t\tconst geometries = {};\r\n\r\n\t\t\tif (json !== undefined) {\r\n\t\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\r\n\r\n\t\t\t\tfor (let i = 0, l = json.length; i < l; i++) {\r\n\t\t\t\t\tlet geometry;\r\n\t\t\t\t\tconst data = json[i];\r\n\r\n\t\t\t\t\tswitch (data.type) {\r\n\t\t\t\t\t\tcase 'BufferGeometry':\r\n\t\t\t\t\t\tcase 'InstancedBufferGeometry':\r\n\t\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse(data);\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'Geometry':\r\n\t\t\t\t\t\t\tconsole.error('THREE.ObjectLoader: The legacy Geometry type is no longer supported.');\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tif (data.type in Geometries) {\r\n\t\t\t\t\t\t\t\tgeometry = Geometries[data.type].fromJSON(data, shapes);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconsole.warn(`THREE.ObjectLoader: Unsupported geometry type \"${data.type}\"`);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgeometry.uuid = data.uuid;\r\n\t\t\t\t\tif (data.name !== undefined) geometry.name = data.name;\r\n\t\t\t\t\tif (geometry.isBufferGeometry === true && data.userData !== undefined) geometry.userData = data.userData;\r\n\t\t\t\t\tgeometries[data.uuid] = geometry;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn geometries;\r\n\t\t}\r\n\r\n\t\tparseMaterials(json, textures) {\r\n\t\t\tconst cache = {}; // MultiMaterial\r\n\r\n\t\t\tconst materials = {};\r\n\r\n\t\t\tif (json !== undefined) {\r\n\t\t\t\tconst loader = new MaterialLoader();\r\n\t\t\t\tloader.setTextures(textures);\r\n\r\n\t\t\t\tfor (let i = 0, l = json.length; i < l; i++) {\r\n\t\t\t\t\tconst data = json[i];\r\n\r\n\t\t\t\t\tif (data.type === 'MultiMaterial') {\r\n\t\t\t\t\t\t// Deprecated\r\n\t\t\t\t\t\tconst array = [];\r\n\r\n\t\t\t\t\t\tfor (let j = 0; j < data.materials.length; j++) {\r\n\t\t\t\t\t\t\tconst material = data.materials[j];\r\n\r\n\t\t\t\t\t\t\tif (cache[material.uuid] === undefined) {\r\n\t\t\t\t\t\t\t\tcache[material.uuid] = loader.parse(material);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tarray.push(cache[material.uuid]);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tmaterials[data.uuid] = array;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (cache[data.uuid] === undefined) {\r\n\t\t\t\t\t\t\tcache[data.uuid] = loader.parse(data);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tmaterials[data.uuid] = cache[data.uuid];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn materials;\r\n\t\t}\r\n\r\n\t\tparseAnimations(json) {\r\n\t\t\tconst animations = {};\r\n\r\n\t\t\tif (json !== undefined) {\r\n\t\t\t\tfor (let i = 0; i < json.length; i++) {\r\n\t\t\t\t\tconst data = json[i];\r\n\t\t\t\t\tconst clip = AnimationClip.parse(data);\r\n\t\t\t\t\tanimations[clip.uuid] = clip;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn animations;\r\n\t\t}\r\n\r\n\t\tparseImages(json, onLoad) {\r\n\t\t\tconst scope = this;\r\n\t\t\tconst images = {};\r\n\t\t\tlet loader;\r\n\r\n\t\t\tfunction loadImage(url) {\r\n\t\t\t\tscope.manager.itemStart(url);\r\n\t\t\t\treturn loader.load(url, function () {\r\n\t\t\t\t\tscope.manager.itemEnd(url);\r\n\t\t\t\t}, undefined, function () {\r\n\t\t\t\t\tscope.manager.itemError(url);\r\n\t\t\t\t\tscope.manager.itemEnd(url);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tfunction deserializeImage(image) {\r\n\t\t\t\tif (typeof image === 'string') {\r\n\t\t\t\t\tconst url = image;\r\n\t\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(url) ? url : scope.resourcePath + url;\r\n\t\t\t\t\treturn loadImage(path);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (image.data) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tdata: getTypedArray(image.type, image.data),\r\n\t\t\t\t\t\t\twidth: image.width,\r\n\t\t\t\t\t\t\theight: image.height\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (json !== undefined && json.length > 0) {\r\n\t\t\t\tconst manager = new LoadingManager(onLoad);\r\n\t\t\t\tloader = new ImageLoader(manager);\r\n\t\t\t\tloader.setCrossOrigin(this.crossOrigin);\r\n\r\n\t\t\t\tfor (let i = 0, il = json.length; i < il; i++) {\r\n\t\t\t\t\tconst image = json[i];\r\n\t\t\t\t\tconst url = image.url;\r\n\r\n\t\t\t\t\tif (Array.isArray(url)) {\r\n\t\t\t\t\t\t// load array of images e.g CubeTexture\r\n\t\t\t\t\t\timages[image.uuid] = [];\r\n\r\n\t\t\t\t\t\tfor (let j = 0, jl = url.length; j < jl; j++) {\r\n\t\t\t\t\t\t\tconst currentUrl = url[j];\r\n\t\t\t\t\t\t\tconst deserializedImage = deserializeImage(currentUrl);\r\n\r\n\t\t\t\t\t\t\tif (deserializedImage !== null) {\r\n\t\t\t\t\t\t\t\tif (deserializedImage instanceof HTMLImageElement) {\r\n\t\t\t\t\t\t\t\t\timages[image.uuid].push(deserializedImage);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\r\n\t\t\t\t\t\t\t\t\timages[image.uuid].push(new DataTexture(deserializedImage.data, deserializedImage.width, deserializedImage.height));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// load single image\r\n\t\t\t\t\t\tconst deserializedImage = deserializeImage(image.url);\r\n\r\n\t\t\t\t\t\tif (deserializedImage !== null) {\r\n\t\t\t\t\t\t\timages[image.uuid] = deserializedImage;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn images;\r\n\t\t}\r\n\r\n\t\tasync parseImagesAsync(json) {\r\n\t\t\tconst scope = this;\r\n\t\t\tconst images = {};\r\n\t\t\tlet loader;\r\n\r\n\t\t\tasync function deserializeImage(image) {\r\n\t\t\t\tif (typeof image === 'string') {\r\n\t\t\t\t\tconst url = image;\r\n\t\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(url) ? url : scope.resourcePath + url;\r\n\t\t\t\t\treturn await loader.loadAsync(path);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (image.data) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tdata: getTypedArray(image.type, image.data),\r\n\t\t\t\t\t\t\twidth: image.width,\r\n\t\t\t\t\t\t\theight: image.height\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (json !== undefined && json.length > 0) {\r\n\t\t\t\tloader = new ImageLoader(this.manager);\r\n\t\t\t\tloader.setCrossOrigin(this.crossOrigin);\r\n\r\n\t\t\t\tfor (let i = 0, il = json.length; i < il; i++) {\r\n\t\t\t\t\tconst image = json[i];\r\n\t\t\t\t\tconst url = image.url;\r\n\r\n\t\t\t\t\tif (Array.isArray(url)) {\r\n\t\t\t\t\t\t// load array of images e.g CubeTexture\r\n\t\t\t\t\t\timages[image.uuid] = [];\r\n\r\n\t\t\t\t\t\tfor (let j = 0, jl = url.length; j < jl; j++) {\r\n\t\t\t\t\t\t\tconst currentUrl = url[j];\r\n\t\t\t\t\t\t\tconst deserializedImage = await deserializeImage(currentUrl);\r\n\r\n\t\t\t\t\t\t\tif (deserializedImage !== null) {\r\n\t\t\t\t\t\t\t\tif (deserializedImage instanceof HTMLImageElement) {\r\n\t\t\t\t\t\t\t\t\timages[image.uuid].push(deserializedImage);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\r\n\t\t\t\t\t\t\t\t\timages[image.uuid].push(new DataTexture(deserializedImage.data, deserializedImage.width, deserializedImage.height));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// load single image\r\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage(image.url);\r\n\r\n\t\t\t\t\t\tif (deserializedImage !== null) {\r\n\t\t\t\t\t\t\timages[image.uuid] = deserializedImage;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn images;\r\n\t\t}\r\n\r\n\t\tparseTextures(json, images) {\r\n\t\t\tfunction parseConstant(value, type) {\r\n\t\t\t\tif (typeof value === 'number') return value;\r\n\t\t\t\tconsole.warn('THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value);\r\n\t\t\t\treturn type[value];\r\n\t\t\t}\r\n\r\n\t\t\tconst textures = {};\r\n\r\n\t\t\tif (json !== undefined) {\r\n\t\t\t\tfor (let i = 0, l = json.length; i < l; i++) {\r\n\t\t\t\t\tconst data = json[i];\r\n\r\n\t\t\t\t\tif (data.image === undefined) {\r\n\t\t\t\t\t\tconsole.warn('THREE.ObjectLoader: No \"image\" specified for', data.uuid);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (images[data.image] === undefined) {\r\n\t\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Undefined image', data.image);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet texture;\r\n\t\t\t\t\tconst image = images[data.image];\r\n\r\n\t\t\t\t\tif (Array.isArray(image)) {\r\n\t\t\t\t\t\ttexture = new CubeTexture(image);\r\n\t\t\t\t\t\tif (image.length === 6) texture.needsUpdate = true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (image && image.data) {\r\n\t\t\t\t\t\t\ttexture = new DataTexture(image.data, image.width, image.height);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ttexture = new Texture(image);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (image) texture.needsUpdate = true; // textures can have undefined image data\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttexture.uuid = data.uuid;\r\n\t\t\t\t\tif (data.name !== undefined) texture.name = data.name;\r\n\t\t\t\t\tif (data.mapping !== undefined) texture.mapping = parseConstant(data.mapping, TEXTURE_MAPPING);\r\n\t\t\t\t\tif (data.offset !== undefined) texture.offset.fromArray(data.offset);\r\n\t\t\t\t\tif (data.repeat !== undefined) texture.repeat.fromArray(data.repeat);\r\n\t\t\t\t\tif (data.center !== undefined) texture.center.fromArray(data.center);\r\n\t\t\t\t\tif (data.rotation !== undefined) texture.rotation = data.rotation;\r\n\r\n\t\t\t\t\tif (data.wrap !== undefined) {\r\n\t\t\t\t\t\ttexture.wrapS = parseConstant(data.wrap[0], TEXTURE_WRAPPING);\r\n\t\t\t\t\t\ttexture.wrapT = parseConstant(data.wrap[1], TEXTURE_WRAPPING);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (data.format !== undefined) texture.format = data.format;\r\n\t\t\t\t\tif (data.type !== undefined) texture.type = data.type;\r\n\t\t\t\t\tif (data.encoding !== undefined) texture.encoding = data.encoding;\r\n\t\t\t\t\tif (data.minFilter !== undefined) texture.minFilter = parseConstant(data.minFilter, TEXTURE_FILTER);\r\n\t\t\t\t\tif (data.magFilter !== undefined) texture.magFilter = parseConstant(data.magFilter, TEXTURE_FILTER);\r\n\t\t\t\t\tif (data.anisotropy !== undefined) texture.anisotropy = data.anisotropy;\r\n\t\t\t\t\tif (data.flipY !== undefined) texture.flipY = data.flipY;\r\n\t\t\t\t\tif (data.premultiplyAlpha !== undefined) texture.premultiplyAlpha = data.premultiplyAlpha;\r\n\t\t\t\t\tif (data.unpackAlignment !== undefined) texture.unpackAlignment = data.unpackAlignment;\r\n\t\t\t\t\ttextures[data.uuid] = texture;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn textures;\r\n\t\t}\r\n\r\n\t\tparseObject(data, geometries, materials, textures, animations) {\r\n\t\t\tlet object;\r\n\r\n\t\t\tfunction getGeometry(name) {\r\n\t\t\t\tif (geometries[name] === undefined) {\r\n\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Undefined geometry', name);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn geometries[name];\r\n\t\t\t}\r\n\r\n\t\t\tfunction getMaterial(name) {\r\n\t\t\t\tif (name === undefined) return undefined;\r\n\r\n\t\t\t\tif (Array.isArray(name)) {\r\n\t\t\t\t\tconst array = [];\r\n\r\n\t\t\t\t\tfor (let i = 0, l = name.length; i < l; i++) {\r\n\t\t\t\t\t\tconst uuid = name[i];\r\n\r\n\t\t\t\t\t\tif (materials[uuid] === undefined) {\r\n\t\t\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Undefined material', uuid);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tarray.push(materials[uuid]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn array;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (materials[name] === undefined) {\r\n\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Undefined material', name);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn materials[name];\r\n\t\t\t}\r\n\r\n\t\t\tfunction getTexture(uuid) {\r\n\t\t\t\tif (textures[uuid] === undefined) {\r\n\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Undefined texture', uuid);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn textures[uuid];\r\n\t\t\t}\r\n\r\n\t\t\tlet geometry, material;\r\n\r\n\t\t\tswitch (data.type) {\r\n\t\t\t\tcase 'Scene':\r\n\t\t\t\t\tobject = new Scene();\r\n\r\n\t\t\t\t\tif (data.background !== undefined) {\r\n\t\t\t\t\t\tif (Number.isInteger(data.background)) {\r\n\t\t\t\t\t\t\tobject.background = new Color(data.background);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tobject.background = getTexture(data.background);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (data.environment !== undefined) {\r\n\t\t\t\t\t\tobject.environment = getTexture(data.environment);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (data.fog !== undefined) {\r\n\t\t\t\t\t\tif (data.fog.type === 'Fog') {\r\n\t\t\t\t\t\t\tobject.fog = new Fog(data.fog.color, data.fog.near, data.fog.far);\r\n\t\t\t\t\t\t} else if (data.fog.type === 'FogExp2') {\r\n\t\t\t\t\t\t\tobject.fog = new FogExp2(data.fog.color, data.fog.density);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PerspectiveCamera':\r\n\t\t\t\t\tobject = new PerspectiveCamera(data.fov, data.aspect, data.near, data.far);\r\n\t\t\t\t\tif (data.focus !== undefined) object.focus = data.focus;\r\n\t\t\t\t\tif (data.zoom !== undefined) object.zoom = data.zoom;\r\n\t\t\t\t\tif (data.filmGauge !== undefined) object.filmGauge = data.filmGauge;\r\n\t\t\t\t\tif (data.filmOffset !== undefined) object.filmOffset = data.filmOffset;\r\n\t\t\t\t\tif (data.view !== undefined) object.view = Object.assign({}, data.view);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'OrthographicCamera':\r\n\t\t\t\t\tobject = new OrthographicCamera(data.left, data.right, data.top, data.bottom, data.near, data.far);\r\n\t\t\t\t\tif (data.zoom !== undefined) object.zoom = data.zoom;\r\n\t\t\t\t\tif (data.view !== undefined) object.view = Object.assign({}, data.view);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'AmbientLight':\r\n\t\t\t\t\tobject = new AmbientLight(data.color, data.intensity);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'DirectionalLight':\r\n\t\t\t\t\tobject = new DirectionalLight(data.color, data.intensity);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointLight':\r\n\t\t\t\t\tobject = new PointLight(data.color, data.intensity, data.distance, data.decay);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'RectAreaLight':\r\n\t\t\t\t\tobject = new RectAreaLight(data.color, data.intensity, data.width, data.height);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SpotLight':\r\n\t\t\t\t\tobject = new SpotLight(data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'HemisphereLight':\r\n\t\t\t\t\tobject = new HemisphereLight(data.color, data.groundColor, data.intensity);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'LightProbe':\r\n\t\t\t\t\tobject = new LightProbe().fromJSON(data);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SkinnedMesh':\r\n\t\t\t\t\tgeometry = getGeometry(data.geometry);\r\n\t\t\t\t\tmaterial = getMaterial(data.material);\r\n\t\t\t\t\tobject = new SkinnedMesh(geometry, material);\r\n\t\t\t\t\tif (data.bindMode !== undefined) object.bindMode = data.bindMode;\r\n\t\t\t\t\tif (data.bindMatrix !== undefined) object.bindMatrix.fromArray(data.bindMatrix);\r\n\t\t\t\t\tif (data.skeleton !== undefined) object.skeleton = data.skeleton;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Mesh':\r\n\t\t\t\t\tgeometry = getGeometry(data.geometry);\r\n\t\t\t\t\tmaterial = getMaterial(data.material);\r\n\t\t\t\t\tobject = new Mesh(geometry, material);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'InstancedMesh':\r\n\t\t\t\t\tgeometry = getGeometry(data.geometry);\r\n\t\t\t\t\tmaterial = getMaterial(data.material);\r\n\t\t\t\t\tconst count = data.count;\r\n\t\t\t\t\tconst instanceMatrix = data.instanceMatrix;\r\n\t\t\t\t\tconst instanceColor = data.instanceColor;\r\n\t\t\t\t\tobject = new InstancedMesh(geometry, material, count);\r\n\t\t\t\t\tobject.instanceMatrix = new BufferAttribute(new Float32Array(instanceMatrix.array), 16);\r\n\t\t\t\t\tif (instanceColor !== undefined) object.instanceColor = new BufferAttribute(new Float32Array(instanceColor.array), instanceColor.itemSize);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'LOD':\r\n\t\t\t\t\tobject = new LOD();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Line':\r\n\t\t\t\t\tobject = new Line(getGeometry(data.geometry), getMaterial(data.material));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'LineLoop':\r\n\t\t\t\t\tobject = new LineLoop(getGeometry(data.geometry), getMaterial(data.material));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'LineSegments':\r\n\t\t\t\t\tobject = new LineSegments(getGeometry(data.geometry), getMaterial(data.material));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointCloud':\r\n\t\t\t\tcase 'Points':\r\n\t\t\t\t\tobject = new Points(getGeometry(data.geometry), getMaterial(data.material));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Sprite':\r\n\t\t\t\t\tobject = new Sprite(getMaterial(data.material));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Group':\r\n\t\t\t\t\tobject = new Group();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Bone':\r\n\t\t\t\t\tobject = new Bone();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tobject = new Object3D();\r\n\t\t\t}\r\n\r\n\t\t\tobject.uuid = data.uuid;\r\n\t\t\tif (data.name !== undefined) object.name = data.name;\r\n\r\n\t\t\tif (data.matrix !== undefined) {\r\n\t\t\t\tobject.matrix.fromArray(data.matrix);\r\n\t\t\t\tif (data.matrixAutoUpdate !== undefined) object.matrixAutoUpdate = data.matrixAutoUpdate;\r\n\t\t\t\tif (object.matrixAutoUpdate) object.matrix.decompose(object.position, object.quaternion, object.scale);\r\n\t\t\t} else {\r\n\t\t\t\tif (data.position !== undefined) object.position.fromArray(data.position);\r\n\t\t\t\tif (data.rotation !== undefined) object.rotation.fromArray(data.rotation);\r\n\t\t\t\tif (data.quaternion !== undefined) object.quaternion.fromArray(data.quaternion);\r\n\t\t\t\tif (data.scale !== undefined) object.scale.fromArray(data.scale);\r\n\t\t\t}\r\n\r\n\t\t\tif (data.castShadow !== undefined) object.castShadow = data.castShadow;\r\n\t\t\tif (data.receiveShadow !== undefined) object.receiveShadow = data.receiveShadow;\r\n\r\n\t\t\tif (data.shadow) {\r\n\t\t\t\tif (data.shadow.bias !== undefined) object.shadow.bias = data.shadow.bias;\r\n\t\t\t\tif (data.shadow.normalBias !== undefined) object.shadow.normalBias = data.shadow.normalBias;\r\n\t\t\t\tif (data.shadow.radius !== undefined) object.shadow.radius = data.shadow.radius;\r\n\t\t\t\tif (data.shadow.mapSize !== undefined) object.shadow.mapSize.fromArray(data.shadow.mapSize);\r\n\t\t\t\tif (data.shadow.camera !== undefined) object.shadow.camera = this.parseObject(data.shadow.camera);\r\n\t\t\t}\r\n\r\n\t\t\tif (data.visible !== undefined) object.visible = data.visible;\r\n\t\t\tif (data.frustumCulled !== undefined) object.frustumCulled = data.frustumCulled;\r\n\t\t\tif (data.renderOrder !== undefined) object.renderOrder = data.renderOrder;\r\n\t\t\tif (data.userData !== undefined) object.userData = data.userData;\r\n\t\t\tif (data.layers !== undefined) object.layers.mask = data.layers;\r\n\r\n\t\t\tif (data.children !== undefined) {\r\n\t\t\t\tconst children = data.children;\r\n\r\n\t\t\t\tfor (let i = 0; i < children.length; i++) {\r\n\t\t\t\t\tobject.add(this.parseObject(children[i], geometries, materials, textures, animations));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (data.animations !== undefined) {\r\n\t\t\t\tconst objectAnimations = data.animations;\r\n\r\n\t\t\t\tfor (let i = 0; i < objectAnimations.length; i++) {\r\n\t\t\t\t\tconst uuid = objectAnimations[i];\r\n\t\t\t\t\tobject.animations.push(animations[uuid]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (data.type === 'LOD') {\r\n\t\t\t\tif (data.autoUpdate !== undefined) object.autoUpdate = data.autoUpdate;\r\n\t\t\t\tconst levels = data.levels;\r\n\r\n\t\t\t\tfor (let l = 0; l < levels.length; l++) {\r\n\t\t\t\t\tconst level = levels[l];\r\n\t\t\t\t\tconst child = object.getObjectByProperty('uuid', level.object);\r\n\r\n\t\t\t\t\tif (child !== undefined) {\r\n\t\t\t\t\t\tobject.addLevel(child, level.distance);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn object;\r\n\t\t}\r\n\r\n\t\tbindSkeletons(object, skeletons) {\r\n\t\t\tif (Object.keys(skeletons).length === 0) return;\r\n\t\t\tobject.traverse(function (child) {\r\n\t\t\t\tif (child.isSkinnedMesh === true && child.skeleton !== undefined) {\r\n\t\t\t\t\tconst skeleton = skeletons[child.skeleton];\r\n\r\n\t\t\t\t\tif (skeleton === undefined) {\r\n\t\t\t\t\t\tconsole.warn('THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tchild.bind(skeleton, child.bindMatrix);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\t/* DEPRECATED */\r\n\r\n\r\n\t\tsetTexturePath(value) {\r\n\t\t\tconsole.warn('THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().');\r\n\t\t\treturn this.setResourcePath(value);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst TEXTURE_MAPPING = {\r\n\t\tUVMapping: UVMapping,\r\n\t\tCubeReflectionMapping: CubeReflectionMapping,\r\n\t\tCubeRefractionMapping: CubeRefractionMapping,\r\n\t\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\r\n\t\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\r\n\t\tCubeUVReflectionMapping: CubeUVReflectionMapping,\r\n\t\tCubeUVRefractionMapping: CubeUVRefractionMapping\r\n\t};\r\n\tconst TEXTURE_WRAPPING = {\r\n\t\tRepeatWrapping: RepeatWrapping,\r\n\t\tClampToEdgeWrapping: ClampToEdgeWrapping,\r\n\t\tMirroredRepeatWrapping: MirroredRepeatWrapping\r\n\t};\r\n\tconst TEXTURE_FILTER = {\r\n\t\tNearestFilter: NearestFilter,\r\n\t\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\r\n\t\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\r\n\t\tLinearFilter: LinearFilter,\r\n\t\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\r\n\t\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\r\n\t};\r\n\r\n\tclass ImageBitmapLoader extends Loader {\r\n\t\tconstructor(manager) {\r\n\t\t\tsuper(manager);\r\n\r\n\t\t\tif (typeof createImageBitmap === 'undefined') {\r\n\t\t\t\tconsole.warn('THREE.ImageBitmapLoader: createImageBitmap() not supported.');\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof fetch === 'undefined') {\r\n\t\t\t\tconsole.warn('THREE.ImageBitmapLoader: fetch() not supported.');\r\n\t\t\t}\r\n\r\n\t\t\tthis.options = {\r\n\t\t\t\tpremultiplyAlpha: 'none'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tsetOptions(options) {\r\n\t\t\tthis.options = options;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tload(url, onLoad, onProgress, onError) {\r\n\t\t\tif (url === undefined) url = '';\r\n\t\t\tif (this.path !== undefined) url = this.path + url;\r\n\t\t\turl = this.manager.resolveURL(url);\r\n\t\t\tconst scope = this;\r\n\t\t\tconst cached = Cache.get(url);\r\n\r\n\t\t\tif (cached !== undefined) {\r\n\t\t\t\tscope.manager.itemStart(url);\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tif (onLoad) onLoad(cached);\r\n\t\t\t\t\tscope.manager.itemEnd(url);\r\n\t\t\t\t}, 0);\r\n\t\t\t\treturn cached;\r\n\t\t\t}\r\n\r\n\t\t\tconst fetchOptions = {};\r\n\t\t\tfetchOptions.credentials = this.crossOrigin === 'anonymous' ? 'same-origin' : 'include';\r\n\t\t\tfetchOptions.headers = this.requestHeader;\r\n\t\t\tfetch(url, fetchOptions).then(function (res) {\r\n\t\t\t\treturn res.blob();\r\n\t\t\t}).then(function (blob) {\r\n\t\t\t\treturn createImageBitmap(blob, Object.assign(scope.options, {\r\n\t\t\t\t\tcolorSpaceConversion: 'none'\r\n\t\t\t\t}));\r\n\t\t\t}).then(function (imageBitmap) {\r\n\t\t\t\tCache.add(url, imageBitmap);\r\n\t\t\t\tif (onLoad) onLoad(imageBitmap);\r\n\t\t\t\tscope.manager.itemEnd(url);\r\n\t\t\t}).catch(function (e) {\r\n\t\t\t\tif (onError) onError(e);\r\n\t\t\t\tscope.manager.itemError(url);\r\n\t\t\t\tscope.manager.itemEnd(url);\r\n\t\t\t});\r\n\t\t\tscope.manager.itemStart(url);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tImageBitmapLoader.prototype.isImageBitmapLoader = true;\r\n\r\n\tclass ShapePath {\r\n\t\tconstructor() {\r\n\t\t\tthis.type = 'ShapePath';\r\n\t\t\tthis.color = new Color();\r\n\t\t\tthis.subPaths = [];\r\n\t\t\tthis.currentPath = null;\r\n\t\t}\r\n\r\n\t\tmoveTo(x, y) {\r\n\t\t\tthis.currentPath = new Path();\r\n\t\t\tthis.subPaths.push(this.currentPath);\r\n\t\t\tthis.currentPath.moveTo(x, y);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tlineTo(x, y) {\r\n\t\t\tthis.currentPath.lineTo(x, y);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tquadraticCurveTo(aCPx, aCPy, aX, aY) {\r\n\t\t\tthis.currentPath.quadraticCurveTo(aCPx, aCPy, aX, aY);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tbezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\r\n\t\t\tthis.currentPath.bezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsplineThru(pts) {\r\n\t\t\tthis.currentPath.splineThru(pts);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoShapes(isCCW, noHoles) {\r\n\t\t\tfunction toShapesNoHoles(inSubpaths) {\r\n\t\t\t\tconst shapes = [];\r\n\r\n\t\t\t\tfor (let i = 0, l = inSubpaths.length; i < l; i++) {\r\n\t\t\t\t\tconst tmpPath = inSubpaths[i];\r\n\t\t\t\t\tconst tmpShape = new Shape();\r\n\t\t\t\t\ttmpShape.curves = tmpPath.curves;\r\n\t\t\t\t\tshapes.push(tmpShape);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn shapes;\r\n\t\t\t}\r\n\r\n\t\t\tfunction isPointInsidePolygon(inPt, inPolygon) {\r\n\t\t\t\tconst polyLen = inPolygon.length; // inPt on polygon contour => immediate success\t\tor\r\n\t\t\t\t// toggling of inside/outside at every single! intersection point of an edge\r\n\t\t\t\t//\twith the horizontal line through inPt, left of inPt\r\n\t\t\t\t//\tnot counting lowerY endpoints of edges and whole edges on that line\r\n\r\n\t\t\t\tlet inside = false;\r\n\r\n\t\t\t\tfor (let p = polyLen - 1, q = 0; q < polyLen; p = q++) {\r\n\t\t\t\t\tlet edgeLowPt = inPolygon[p];\r\n\t\t\t\t\tlet edgeHighPt = inPolygon[q];\r\n\t\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\r\n\t\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\r\n\r\n\t\t\t\t\tif (Math.abs(edgeDy) > Number.EPSILON) {\r\n\t\t\t\t\t\t// not parallel\r\n\t\t\t\t\t\tif (edgeDy < 0) {\r\n\t\t\t\t\t\t\tedgeLowPt = inPolygon[q];\r\n\t\t\t\t\t\t\tedgeDx = -edgeDx;\r\n\t\t\t\t\t\t\tedgeHighPt = inPolygon[p];\r\n\t\t\t\t\t\t\tedgeDy = -edgeDy;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (inPt.y < edgeLowPt.y || inPt.y > edgeHighPt.y) continue;\r\n\r\n\t\t\t\t\t\tif (inPt.y === edgeLowPt.y) {\r\n\t\t\t\t\t\t\tif (inPt.x === edgeLowPt.x) return true; // inPt is on contour ?\r\n\t\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tconst perpEdge = edgeDy * (inPt.x - edgeLowPt.x) - edgeDx * (inPt.y - edgeLowPt.y);\r\n\t\t\t\t\t\t\tif (perpEdge === 0) return true; // inPt is on contour ?\r\n\r\n\t\t\t\t\t\t\tif (perpEdge < 0) continue;\r\n\t\t\t\t\t\t\tinside = !inside; // true intersection left of inPt\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// parallel or collinear\r\n\t\t\t\t\t\tif (inPt.y !== edgeLowPt.y) continue; // parallel\r\n\t\t\t\t\t\t// edge lies on the same horizontal line as inPt\r\n\r\n\t\t\t\t\t\tif (edgeHighPt.x <= inPt.x && inPt.x <= edgeLowPt.x || edgeLowPt.x <= inPt.x && inPt.x <= edgeHighPt.x) return true; // inPt: Point on contour !\r\n\t\t\t\t\t\t// continue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn inside;\r\n\t\t\t}\r\n\r\n\t\t\tconst isClockWise = ShapeUtils.isClockWise;\r\n\t\t\tconst subPaths = this.subPaths;\r\n\t\t\tif (subPaths.length === 0) return [];\r\n\t\t\tif (noHoles === true) return toShapesNoHoles(subPaths);\r\n\t\t\tlet solid, tmpPath, tmpShape;\r\n\t\t\tconst shapes = [];\r\n\r\n\t\t\tif (subPaths.length === 1) {\r\n\t\t\t\ttmpPath = subPaths[0];\r\n\t\t\t\ttmpShape = new Shape();\r\n\t\t\t\ttmpShape.curves = tmpPath.curves;\r\n\t\t\t\tshapes.push(tmpShape);\r\n\t\t\t\treturn shapes;\r\n\t\t\t}\r\n\r\n\t\t\tlet holesFirst = !isClockWise(subPaths[0].getPoints());\r\n\t\t\tholesFirst = isCCW ? !holesFirst : holesFirst; // console.log(\"Holes first\", holesFirst);\r\n\r\n\t\t\tconst betterShapeHoles = [];\r\n\t\t\tconst newShapes = [];\r\n\t\t\tlet newShapeHoles = [];\r\n\t\t\tlet mainIdx = 0;\r\n\t\t\tlet tmpPoints;\r\n\t\t\tnewShapes[mainIdx] = undefined;\r\n\t\t\tnewShapeHoles[mainIdx] = [];\r\n\r\n\t\t\tfor (let i = 0, l = subPaths.length; i < l; i++) {\r\n\t\t\t\ttmpPath = subPaths[i];\r\n\t\t\t\ttmpPoints = tmpPath.getPoints();\r\n\t\t\t\tsolid = isClockWise(tmpPoints);\r\n\t\t\t\tsolid = isCCW ? !solid : solid;\r\n\r\n\t\t\t\tif (solid) {\r\n\t\t\t\t\tif (!holesFirst && newShapes[mainIdx]) mainIdx++;\r\n\t\t\t\t\tnewShapes[mainIdx] = {\r\n\t\t\t\t\t\ts: new Shape(),\r\n\t\t\t\t\t\tp: tmpPoints\r\n\t\t\t\t\t};\r\n\t\t\t\t\tnewShapes[mainIdx].s.curves = tmpPath.curves;\r\n\t\t\t\t\tif (holesFirst) mainIdx++;\r\n\t\t\t\t\tnewShapeHoles[mainIdx] = []; //console.log('cw', i);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnewShapeHoles[mainIdx].push({\r\n\t\t\t\t\t\th: tmpPath,\r\n\t\t\t\t\t\tp: tmpPoints[0]\r\n\t\t\t\t\t}); //console.log('ccw', i);\r\n\t\t\t\t}\r\n\t\t\t} // only Holes? -> probably all Shapes with wrong orientation\r\n\r\n\r\n\t\t\tif (!newShapes[0]) return toShapesNoHoles(subPaths);\r\n\r\n\t\t\tif (newShapes.length > 1) {\r\n\t\t\t\tlet ambiguous = false;\r\n\t\t\t\tconst toChange = [];\r\n\r\n\t\t\t\tfor (let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\r\n\t\t\t\t\tbetterShapeHoles[sIdx] = [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\r\n\t\t\t\t\tconst sho = newShapeHoles[sIdx];\r\n\r\n\t\t\t\t\tfor (let hIdx = 0; hIdx < sho.length; hIdx++) {\r\n\t\t\t\t\t\tconst ho = sho[hIdx];\r\n\t\t\t\t\t\tlet hole_unassigned = true;\r\n\r\n\t\t\t\t\t\tfor (let s2Idx = 0; s2Idx < newShapes.length; s2Idx++) {\r\n\t\t\t\t\t\t\tif (isPointInsidePolygon(ho.p, newShapes[s2Idx].p)) {\r\n\t\t\t\t\t\t\t\tif (sIdx !== s2Idx) toChange.push({\r\n\t\t\t\t\t\t\t\t\tfroms: sIdx,\r\n\t\t\t\t\t\t\t\t\ttos: s2Idx,\r\n\t\t\t\t\t\t\t\t\thole: hIdx\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\tif (hole_unassigned) {\r\n\t\t\t\t\t\t\t\t\thole_unassigned = false;\r\n\t\t\t\t\t\t\t\t\tbetterShapeHoles[s2Idx].push(ho);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tambiguous = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (hole_unassigned) {\r\n\t\t\t\t\t\t\tbetterShapeHoles[sIdx].push(ho);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} // console.log(\"ambiguous: \", ambiguous);\r\n\r\n\r\n\t\t\t\tif (toChange.length > 0) {\r\n\t\t\t\t\t// console.log(\"to change: \", toChange);\r\n\t\t\t\t\tif (!ambiguous) newShapeHoles = betterShapeHoles;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet tmpHoles;\r\n\r\n\t\t\tfor (let i = 0, il = newShapes.length; i < il; i++) {\r\n\t\t\t\ttmpShape = newShapes[i].s;\r\n\t\t\t\tshapes.push(tmpShape);\r\n\t\t\t\ttmpHoles = newShapeHoles[i];\r\n\r\n\t\t\t\tfor (let j = 0, jl = tmpHoles.length; j < jl; j++) {\r\n\t\t\t\t\ttmpShape.holes.push(tmpHoles[j].h);\r\n\t\t\t\t}\r\n\t\t\t} //console.log(\"shape\", shapes);\r\n\r\n\r\n\t\t\treturn shapes;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass Font {\r\n\t\tconstructor(data) {\r\n\t\t\tthis.type = 'Font';\r\n\t\t\tthis.data = data;\r\n\t\t}\r\n\r\n\t\tgenerateShapes(text, size = 100) {\r\n\t\t\tconst shapes = [];\r\n\t\t\tconst paths = createPaths(text, size, this.data);\r\n\r\n\t\t\tfor (let p = 0, pl = paths.length; p < pl; p++) {\r\n\t\t\t\tArray.prototype.push.apply(shapes, paths[p].toShapes());\r\n\t\t\t}\r\n\r\n\t\t\treturn shapes;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction createPaths(text, size, data) {\r\n\t\tconst chars = Array.from(text);\r\n\t\tconst scale = size / data.resolution;\r\n\t\tconst line_height = (data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness) * scale;\r\n\t\tconst paths = [];\r\n\t\tlet offsetX = 0,\r\n\t\t\t\toffsetY = 0;\r\n\r\n\t\tfor (let i = 0; i < chars.length; i++) {\r\n\t\t\tconst char = chars[i];\r\n\r\n\t\t\tif (char === '\\n') {\r\n\t\t\t\toffsetX = 0;\r\n\t\t\t\toffsetY -= line_height;\r\n\t\t\t} else {\r\n\t\t\t\tconst ret = createPath(char, scale, offsetX, offsetY, data);\r\n\t\t\t\toffsetX += ret.offsetX;\r\n\t\t\t\tpaths.push(ret.path);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn paths;\r\n\t}\r\n\r\n\tfunction createPath(char, scale, offsetX, offsetY, data) {\r\n\t\tconst glyph = data.glyphs[char] || data.glyphs['?'];\r\n\r\n\t\tif (!glyph) {\r\n\t\t\tconsole.error('THREE.Font: character \"' + char + '\" does not exists in font family ' + data.familyName + '.');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst path = new ShapePath();\r\n\t\tlet x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\r\n\r\n\t\tif (glyph.o) {\r\n\t\t\tconst outline = glyph._cachedOutline || (glyph._cachedOutline = glyph.o.split(' '));\r\n\r\n\t\t\tfor (let i = 0, l = outline.length; i < l;) {\r\n\t\t\t\tconst action = outline[i++];\r\n\r\n\t\t\t\tswitch (action) {\r\n\t\t\t\t\tcase 'm':\r\n\t\t\t\t\t\t// moveTo\r\n\t\t\t\t\t\tx = outline[i++] * scale + offsetX;\r\n\t\t\t\t\t\ty = outline[i++] * scale + offsetY;\r\n\t\t\t\t\t\tpath.moveTo(x, y);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'l':\r\n\t\t\t\t\t\t// lineTo\r\n\t\t\t\t\t\tx = outline[i++] * scale + offsetX;\r\n\t\t\t\t\t\ty = outline[i++] * scale + offsetY;\r\n\t\t\t\t\t\tpath.lineTo(x, y);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'q':\r\n\t\t\t\t\t\t// quadraticCurveTo\r\n\t\t\t\t\t\tcpx = outline[i++] * scale + offsetX;\r\n\t\t\t\t\t\tcpy = outline[i++] * scale + offsetY;\r\n\t\t\t\t\t\tcpx1 = outline[i++] * scale + offsetX;\r\n\t\t\t\t\t\tcpy1 = outline[i++] * scale + offsetY;\r\n\t\t\t\t\t\tpath.quadraticCurveTo(cpx1, cpy1, cpx, cpy);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'b':\r\n\t\t\t\t\t\t// bezierCurveTo\r\n\t\t\t\t\t\tcpx = outline[i++] * scale + offsetX;\r\n\t\t\t\t\t\tcpy = outline[i++] * scale + offsetY;\r\n\t\t\t\t\t\tcpx1 = outline[i++] * scale + offsetX;\r\n\t\t\t\t\t\tcpy1 = outline[i++] * scale + offsetY;\r\n\t\t\t\t\t\tcpx2 = outline[i++] * scale + offsetX;\r\n\t\t\t\t\t\tcpy2 = outline[i++] * scale + offsetY;\r\n\t\t\t\t\t\tpath.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, cpx, cpy);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\toffsetX: glyph.ha * scale,\r\n\t\t\tpath: path\r\n\t\t};\r\n\t}\r\n\r\n\tFont.prototype.isFont = true;\r\n\r\n\tclass FontLoader extends Loader {\r\n\t\tconstructor(manager) {\r\n\t\t\tsuper(manager);\r\n\t\t}\r\n\r\n\t\tload(url, onLoad, onProgress, onError) {\r\n\t\t\tconst scope = this;\r\n\t\t\tconst loader = new FileLoader(this.manager);\r\n\t\t\tloader.setPath(this.path);\r\n\t\t\tloader.setRequestHeader(this.requestHeader);\r\n\t\t\tloader.setWithCredentials(scope.withCredentials);\r\n\t\t\tloader.load(url, function (text) {\r\n\t\t\t\tlet json;\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tjson = JSON.parse(text);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tconsole.warn('THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.');\r\n\t\t\t\t\tjson = JSON.parse(text.substring(65, text.length - 2));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst font = scope.parse(json);\r\n\t\t\t\tif (onLoad) onLoad(font);\r\n\t\t\t}, onProgress, onError);\r\n\t\t}\r\n\r\n\t\tparse(json) {\r\n\t\t\treturn new Font(json);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tlet _context;\r\n\r\n\tconst AudioContext = {\r\n\t\tgetContext: function () {\r\n\t\t\tif (_context === undefined) {\r\n\t\t\t\t_context = new (window.AudioContext || window.webkitAudioContext)();\r\n\t\t\t}\r\n\r\n\t\t\treturn _context;\r\n\t\t},\r\n\t\tsetContext: function (value) {\r\n\t\t\t_context = value;\r\n\t\t}\r\n\t};\r\n\r\n\tclass AudioLoader extends Loader {\r\n\t\tconstructor(manager) {\r\n\t\t\tsuper(manager);\r\n\t\t}\r\n\r\n\t\tload(url, onLoad, onProgress, onError) {\r\n\t\t\tconst scope = this;\r\n\t\t\tconst loader = new FileLoader(this.manager);\r\n\t\t\tloader.setResponseType('arraybuffer');\r\n\t\t\tloader.setPath(this.path);\r\n\t\t\tloader.setRequestHeader(this.requestHeader);\r\n\t\t\tloader.setWithCredentials(this.withCredentials);\r\n\t\t\tloader.load(url, function (buffer) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\r\n\t\t\t\t\t// detaches the buffer when complete, preventing reuse.\r\n\t\t\t\t\tconst bufferCopy = buffer.slice(0);\r\n\t\t\t\t\tconst context = AudioContext.getContext();\r\n\t\t\t\t\tcontext.decodeAudioData(bufferCopy, function (audioBuffer) {\r\n\t\t\t\t\t\tonLoad(audioBuffer);\r\n\t\t\t\t\t});\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tif (onError) {\r\n\t\t\t\t\t\tonError(e);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tscope.manager.itemError(url);\r\n\t\t\t\t}\r\n\t\t\t}, onProgress, onError);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass HemisphereLightProbe extends LightProbe {\r\n\t\tconstructor(skyColor, groundColor, intensity = 1) {\r\n\t\t\tsuper(undefined, intensity);\r\n\t\t\tconst color1 = new Color().set(skyColor);\r\n\t\t\tconst color2 = new Color().set(groundColor);\r\n\t\t\tconst sky = new Vector3(color1.r, color1.g, color1.b);\r\n\t\t\tconst ground = new Vector3(color2.r, color2.g, color2.b); // without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\r\n\r\n\t\t\tconst c0 = Math.sqrt(Math.PI);\r\n\t\t\tconst c1 = c0 * Math.sqrt(0.75);\r\n\t\t\tthis.sh.coefficients[0].copy(sky).add(ground).multiplyScalar(c0);\r\n\t\t\tthis.sh.coefficients[1].copy(sky).sub(ground).multiplyScalar(c1);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tHemisphereLightProbe.prototype.isHemisphereLightProbe = true;\r\n\r\n\tclass AmbientLightProbe extends LightProbe {\r\n\t\tconstructor(color, intensity = 1) {\r\n\t\t\tsuper(undefined, intensity);\r\n\t\t\tconst color1 = new Color().set(color); // without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\r\n\r\n\t\t\tthis.sh.coefficients[0].set(color1.r, color1.g, color1.b).multiplyScalar(2 * Math.sqrt(Math.PI));\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tAmbientLightProbe.prototype.isAmbientLightProbe = true;\r\n\r\n\tconst _eyeRight = /*@__PURE__*/new Matrix4();\r\n\r\n\tconst _eyeLeft = /*@__PURE__*/new Matrix4();\r\n\r\n\tclass StereoCamera {\r\n\t\tconstructor() {\r\n\t\t\tthis.type = 'StereoCamera';\r\n\t\t\tthis.aspect = 1;\r\n\t\t\tthis.eyeSep = 0.064;\r\n\t\t\tthis.cameraL = new PerspectiveCamera();\r\n\t\t\tthis.cameraL.layers.enable(1);\r\n\t\t\tthis.cameraL.matrixAutoUpdate = false;\r\n\t\t\tthis.cameraR = new PerspectiveCamera();\r\n\t\t\tthis.cameraR.layers.enable(2);\r\n\t\t\tthis.cameraR.matrixAutoUpdate = false;\r\n\t\t\tthis._cache = {\r\n\t\t\t\tfocus: null,\r\n\t\t\t\tfov: null,\r\n\t\t\t\taspect: null,\r\n\t\t\t\tnear: null,\r\n\t\t\t\tfar: null,\r\n\t\t\t\tzoom: null,\r\n\t\t\t\teyeSep: null\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tupdate(camera) {\r\n\t\t\tconst cache = this._cache;\r\n\t\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov || cache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near || cache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\r\n\r\n\t\t\tif (needsUpdate) {\r\n\t\t\t\tcache.focus = camera.focus;\r\n\t\t\t\tcache.fov = camera.fov;\r\n\t\t\t\tcache.aspect = camera.aspect * this.aspect;\r\n\t\t\t\tcache.near = camera.near;\r\n\t\t\t\tcache.far = camera.far;\r\n\t\t\t\tcache.zoom = camera.zoom;\r\n\t\t\t\tcache.eyeSep = this.eyeSep; // Off-axis stereoscopic effect based on\r\n\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\r\n\r\n\t\t\t\tconst projectionMatrix = camera.projectionMatrix.clone();\r\n\t\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\r\n\t\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\r\n\t\t\t\tconst ymax = cache.near * Math.tan(DEG2RAD * cache.fov * 0.5) / cache.zoom;\r\n\t\t\t\tlet xmin, xmax; // translate xOffset\r\n\r\n\t\t\t\t_eyeLeft.elements[12] = -eyeSepHalf;\r\n\t\t\t\t_eyeRight.elements[12] = eyeSepHalf; // for left eye\r\n\r\n\t\t\t\txmin = -ymax * cache.aspect + eyeSepOnProjection;\r\n\t\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\r\n\t\t\t\tprojectionMatrix.elements[0] = 2 * cache.near / (xmax - xmin);\r\n\t\t\t\tprojectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\r\n\t\t\t\tthis.cameraL.projectionMatrix.copy(projectionMatrix); // for right eye\r\n\r\n\t\t\t\txmin = -ymax * cache.aspect - eyeSepOnProjection;\r\n\t\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\r\n\t\t\t\tprojectionMatrix.elements[0] = 2 * cache.near / (xmax - xmin);\r\n\t\t\t\tprojectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\r\n\t\t\t\tthis.cameraR.projectionMatrix.copy(projectionMatrix);\r\n\t\t\t}\r\n\r\n\t\t\tthis.cameraL.matrixWorld.copy(camera.matrixWorld).multiply(_eyeLeft);\r\n\t\t\tthis.cameraR.matrixWorld.copy(camera.matrixWorld).multiply(_eyeRight);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass Clock {\r\n\t\tconstructor(autoStart = true) {\r\n\t\t\tthis.autoStart = autoStart;\r\n\t\t\tthis.startTime = 0;\r\n\t\t\tthis.oldTime = 0;\r\n\t\t\tthis.elapsedTime = 0;\r\n\t\t\tthis.running = false;\r\n\t\t}\r\n\r\n\t\tstart() {\r\n\t\t\tthis.startTime = now();\r\n\t\t\tthis.oldTime = this.startTime;\r\n\t\t\tthis.elapsedTime = 0;\r\n\t\t\tthis.running = true;\r\n\t\t}\r\n\r\n\t\tstop() {\r\n\t\t\tthis.getElapsedTime();\r\n\t\t\tthis.running = false;\r\n\t\t\tthis.autoStart = false;\r\n\t\t}\r\n\r\n\t\tgetElapsedTime() {\r\n\t\t\tthis.getDelta();\r\n\t\t\treturn this.elapsedTime;\r\n\t\t}\r\n\r\n\t\tgetDelta() {\r\n\t\t\tlet diff = 0;\r\n\r\n\t\t\tif (this.autoStart && !this.running) {\r\n\t\t\t\tthis.start();\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.running) {\r\n\t\t\t\tconst newTime = now();\r\n\t\t\t\tdiff = (newTime - this.oldTime) / 1000;\r\n\t\t\t\tthis.oldTime = newTime;\r\n\t\t\t\tthis.elapsedTime += diff;\r\n\t\t\t}\r\n\r\n\t\t\treturn diff;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction now() {\r\n\t\treturn (typeof performance === 'undefined' ? Date : performance).now(); // see #10732\r\n\t}\r\n\r\n\tconst _position$1 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _quaternion$1 = /*@__PURE__*/new Quaternion();\r\n\r\n\tconst _scale$1 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _orientation$1 = /*@__PURE__*/new Vector3();\r\n\r\n\tclass AudioListener extends Object3D {\r\n\t\tconstructor() {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'AudioListener';\r\n\t\t\tthis.context = AudioContext.getContext();\r\n\t\t\tthis.gain = this.context.createGain();\r\n\t\t\tthis.gain.connect(this.context.destination);\r\n\t\t\tthis.filter = null;\r\n\t\t\tthis.timeDelta = 0; // private\r\n\r\n\t\t\tthis._clock = new Clock();\r\n\t\t}\r\n\r\n\t\tgetInput() {\r\n\t\t\treturn this.gain;\r\n\t\t}\r\n\r\n\t\tremoveFilter() {\r\n\t\t\tif (this.filter !== null) {\r\n\t\t\t\tthis.gain.disconnect(this.filter);\r\n\t\t\t\tthis.filter.disconnect(this.context.destination);\r\n\t\t\t\tthis.gain.connect(this.context.destination);\r\n\t\t\t\tthis.filter = null;\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetFilter() {\r\n\t\t\treturn this.filter;\r\n\t\t}\r\n\r\n\t\tsetFilter(value) {\r\n\t\t\tif (this.filter !== null) {\r\n\t\t\t\tthis.gain.disconnect(this.filter);\r\n\t\t\t\tthis.filter.disconnect(this.context.destination);\r\n\t\t\t} else {\r\n\t\t\t\tthis.gain.disconnect(this.context.destination);\r\n\t\t\t}\r\n\r\n\t\t\tthis.filter = value;\r\n\t\t\tthis.gain.connect(this.filter);\r\n\t\t\tthis.filter.connect(this.context.destination);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetMasterVolume() {\r\n\t\t\treturn this.gain.gain.value;\r\n\t\t}\r\n\r\n\t\tsetMasterVolume(value) {\r\n\t\t\tthis.gain.gain.setTargetAtTime(value, this.context.currentTime, 0.01);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tupdateMatrixWorld(force) {\r\n\t\t\tsuper.updateMatrixWorld(force);\r\n\t\t\tconst listener = this.context.listener;\r\n\t\t\tconst up = this.up;\r\n\t\t\tthis.timeDelta = this._clock.getDelta();\r\n\t\t\tthis.matrixWorld.decompose(_position$1, _quaternion$1, _scale$1);\r\n\r\n\t\t\t_orientation$1.set(0, 0, -1).applyQuaternion(_quaternion$1);\r\n\r\n\t\t\tif (listener.positionX) {\r\n\t\t\t\t// code path for Chrome (see #14393)\r\n\t\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\r\n\t\t\t\tlistener.positionX.linearRampToValueAtTime(_position$1.x, endTime);\r\n\t\t\t\tlistener.positionY.linearRampToValueAtTime(_position$1.y, endTime);\r\n\t\t\t\tlistener.positionZ.linearRampToValueAtTime(_position$1.z, endTime);\r\n\t\t\t\tlistener.forwardX.linearRampToValueAtTime(_orientation$1.x, endTime);\r\n\t\t\t\tlistener.forwardY.linearRampToValueAtTime(_orientation$1.y, endTime);\r\n\t\t\t\tlistener.forwardZ.linearRampToValueAtTime(_orientation$1.z, endTime);\r\n\t\t\t\tlistener.upX.linearRampToValueAtTime(up.x, endTime);\r\n\t\t\t\tlistener.upY.linearRampToValueAtTime(up.y, endTime);\r\n\t\t\t\tlistener.upZ.linearRampToValueAtTime(up.z, endTime);\r\n\t\t\t} else {\r\n\t\t\t\tlistener.setPosition(_position$1.x, _position$1.y, _position$1.z);\r\n\t\t\t\tlistener.setOrientation(_orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass Audio extends Object3D {\r\n\t\tconstructor(listener) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'Audio';\r\n\t\t\tthis.listener = listener;\r\n\t\t\tthis.context = listener.context;\r\n\t\t\tthis.gain = this.context.createGain();\r\n\t\t\tthis.gain.connect(listener.getInput());\r\n\t\t\tthis.autoplay = false;\r\n\t\t\tthis.buffer = null;\r\n\t\t\tthis.detune = 0;\r\n\t\t\tthis.loop = false;\r\n\t\t\tthis.loopStart = 0;\r\n\t\t\tthis.loopEnd = 0;\r\n\t\t\tthis.offset = 0;\r\n\t\t\tthis.duration = undefined;\r\n\t\t\tthis.playbackRate = 1;\r\n\t\t\tthis.isPlaying = false;\r\n\t\t\tthis.hasPlaybackControl = true;\r\n\t\t\tthis.source = null;\r\n\t\t\tthis.sourceType = 'empty';\r\n\t\t\tthis._startedAt = 0;\r\n\t\t\tthis._progress = 0;\r\n\t\t\tthis._connected = false;\r\n\t\t\tthis.filters = [];\r\n\t\t}\r\n\r\n\t\tgetOutput() {\r\n\t\t\treturn this.gain;\r\n\t\t}\r\n\r\n\t\tsetNodeSource(audioNode) {\r\n\t\t\tthis.hasPlaybackControl = false;\r\n\t\t\tthis.sourceType = 'audioNode';\r\n\t\t\tthis.source = audioNode;\r\n\t\t\tthis.connect();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetMediaElementSource(mediaElement) {\r\n\t\t\tthis.hasPlaybackControl = false;\r\n\t\t\tthis.sourceType = 'mediaNode';\r\n\t\t\tthis.source = this.context.createMediaElementSource(mediaElement);\r\n\t\t\tthis.connect();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetMediaStreamSource(mediaStream) {\r\n\t\t\tthis.hasPlaybackControl = false;\r\n\t\t\tthis.sourceType = 'mediaStreamNode';\r\n\t\t\tthis.source = this.context.createMediaStreamSource(mediaStream);\r\n\t\t\tthis.connect();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetBuffer(audioBuffer) {\r\n\t\t\tthis.buffer = audioBuffer;\r\n\t\t\tthis.sourceType = 'buffer';\r\n\t\t\tif (this.autoplay) this.play();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tplay(delay = 0) {\r\n\t\t\tif (this.isPlaying === true) {\r\n\t\t\t\tconsole.warn('THREE.Audio: Audio is already playing.');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.hasPlaybackControl === false) {\r\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._startedAt = this.context.currentTime + delay;\r\n\t\t\tconst source = this.context.createBufferSource();\r\n\t\t\tsource.buffer = this.buffer;\r\n\t\t\tsource.loop = this.loop;\r\n\t\t\tsource.loopStart = this.loopStart;\r\n\t\t\tsource.loopEnd = this.loopEnd;\r\n\t\t\tsource.onended = this.onEnded.bind(this);\r\n\t\t\tsource.start(this._startedAt, this._progress + this.offset, this.duration);\r\n\t\t\tthis.isPlaying = true;\r\n\t\t\tthis.source = source;\r\n\t\t\tthis.setDetune(this.detune);\r\n\t\t\tthis.setPlaybackRate(this.playbackRate);\r\n\t\t\treturn this.connect();\r\n\t\t}\r\n\r\n\t\tpause() {\r\n\t\t\tif (this.hasPlaybackControl === false) {\r\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.isPlaying === true) {\r\n\t\t\t\t// update current progress\r\n\t\t\t\tthis._progress += Math.max(this.context.currentTime - this._startedAt, 0) * this.playbackRate;\r\n\r\n\t\t\t\tif (this.loop === true) {\r\n\t\t\t\t\t// ensure _progress does not exceed duration with looped audios\r\n\t\t\t\t\tthis._progress = this._progress % (this.duration || this.buffer.duration);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.source.stop();\r\n\t\t\t\tthis.source.onended = null;\r\n\t\t\t\tthis.isPlaying = false;\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tstop() {\r\n\t\t\tif (this.hasPlaybackControl === false) {\r\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._progress = 0;\r\n\t\t\tthis.source.stop();\r\n\t\t\tthis.source.onended = null;\r\n\t\t\tthis.isPlaying = false;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tconnect() {\r\n\t\t\tif (this.filters.length > 0) {\r\n\t\t\t\tthis.source.connect(this.filters[0]);\r\n\r\n\t\t\t\tfor (let i = 1, l = this.filters.length; i < l; i++) {\r\n\t\t\t\t\tthis.filters[i - 1].connect(this.filters[i]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.filters[this.filters.length - 1].connect(this.getOutput());\r\n\t\t\t} else {\r\n\t\t\t\tthis.source.connect(this.getOutput());\r\n\t\t\t}\r\n\r\n\t\t\tthis._connected = true;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tdisconnect() {\r\n\t\t\tif (this.filters.length > 0) {\r\n\t\t\t\tthis.source.disconnect(this.filters[0]);\r\n\r\n\t\t\t\tfor (let i = 1, l = this.filters.length; i < l; i++) {\r\n\t\t\t\t\tthis.filters[i - 1].disconnect(this.filters[i]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.filters[this.filters.length - 1].disconnect(this.getOutput());\r\n\t\t\t} else {\r\n\t\t\t\tthis.source.disconnect(this.getOutput());\r\n\t\t\t}\r\n\r\n\t\t\tthis._connected = false;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetFilters() {\r\n\t\t\treturn this.filters;\r\n\t\t}\r\n\r\n\t\tsetFilters(value) {\r\n\t\t\tif (!value) value = [];\r\n\r\n\t\t\tif (this._connected === true) {\r\n\t\t\t\tthis.disconnect();\r\n\t\t\t\tthis.filters = value.slice();\r\n\t\t\t\tthis.connect();\r\n\t\t\t} else {\r\n\t\t\t\tthis.filters = value.slice();\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetDetune(value) {\r\n\t\t\tthis.detune = value;\r\n\t\t\tif (this.source.detune === undefined) return; // only set detune when available\r\n\r\n\t\t\tif (this.isPlaying === true) {\r\n\t\t\t\tthis.source.detune.setTargetAtTime(this.detune, this.context.currentTime, 0.01);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetDetune() {\r\n\t\t\treturn this.detune;\r\n\t\t}\r\n\r\n\t\tgetFilter() {\r\n\t\t\treturn this.getFilters()[0];\r\n\t\t}\r\n\r\n\t\tsetFilter(filter) {\r\n\t\t\treturn this.setFilters(filter ? [filter] : []);\r\n\t\t}\r\n\r\n\t\tsetPlaybackRate(value) {\r\n\t\t\tif (this.hasPlaybackControl === false) {\r\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.playbackRate = value;\r\n\r\n\t\t\tif (this.isPlaying === true) {\r\n\t\t\t\tthis.source.playbackRate.setTargetAtTime(this.playbackRate, this.context.currentTime, 0.01);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetPlaybackRate() {\r\n\t\t\treturn this.playbackRate;\r\n\t\t}\r\n\r\n\t\tonEnded() {\r\n\t\t\tthis.isPlaying = false;\r\n\t\t}\r\n\r\n\t\tgetLoop() {\r\n\t\t\tif (this.hasPlaybackControl === false) {\r\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn this.loop;\r\n\t\t}\r\n\r\n\t\tsetLoop(value) {\r\n\t\t\tif (this.hasPlaybackControl === false) {\r\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.loop = value;\r\n\r\n\t\t\tif (this.isPlaying === true) {\r\n\t\t\t\tthis.source.loop = this.loop;\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetLoopStart(value) {\r\n\t\t\tthis.loopStart = value;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetLoopEnd(value) {\r\n\t\t\tthis.loopEnd = value;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetVolume() {\r\n\t\t\treturn this.gain.gain.value;\r\n\t\t}\r\n\r\n\t\tsetVolume(value) {\r\n\t\t\tthis.gain.gain.setTargetAtTime(value, this.context.currentTime, 0.01);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst _position = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _quaternion = /*@__PURE__*/new Quaternion();\r\n\r\n\tconst _scale = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _orientation = /*@__PURE__*/new Vector3();\r\n\r\n\tclass PositionalAudio extends Audio {\r\n\t\tconstructor(listener) {\r\n\t\t\tsuper(listener);\r\n\t\t\tthis.panner = this.context.createPanner();\r\n\t\t\tthis.panner.panningModel = 'HRTF';\r\n\t\t\tthis.panner.connect(this.gain);\r\n\t\t}\r\n\r\n\t\tgetOutput() {\r\n\t\t\treturn this.panner;\r\n\t\t}\r\n\r\n\t\tgetRefDistance() {\r\n\t\t\treturn this.panner.refDistance;\r\n\t\t}\r\n\r\n\t\tsetRefDistance(value) {\r\n\t\t\tthis.panner.refDistance = value;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetRolloffFactor() {\r\n\t\t\treturn this.panner.rolloffFactor;\r\n\t\t}\r\n\r\n\t\tsetRolloffFactor(value) {\r\n\t\t\tthis.panner.rolloffFactor = value;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetDistanceModel() {\r\n\t\t\treturn this.panner.distanceModel;\r\n\t\t}\r\n\r\n\t\tsetDistanceModel(value) {\r\n\t\t\tthis.panner.distanceModel = value;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetMaxDistance() {\r\n\t\t\treturn this.panner.maxDistance;\r\n\t\t}\r\n\r\n\t\tsetMaxDistance(value) {\r\n\t\t\tthis.panner.maxDistance = value;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetDirectionalCone(coneInnerAngle, coneOuterAngle, coneOuterGain) {\r\n\t\t\tthis.panner.coneInnerAngle = coneInnerAngle;\r\n\t\t\tthis.panner.coneOuterAngle = coneOuterAngle;\r\n\t\t\tthis.panner.coneOuterGain = coneOuterGain;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tupdateMatrixWorld(force) {\r\n\t\t\tsuper.updateMatrixWorld(force);\r\n\t\t\tif (this.hasPlaybackControl === true && this.isPlaying === false) return;\r\n\t\t\tthis.matrixWorld.decompose(_position, _quaternion, _scale);\r\n\r\n\t\t\t_orientation.set(0, 0, 1).applyQuaternion(_quaternion);\r\n\r\n\t\t\tconst panner = this.panner;\r\n\r\n\t\t\tif (panner.positionX) {\r\n\t\t\t\t// code path for Chrome and Firefox (see #14393)\r\n\t\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\r\n\t\t\t\tpanner.positionX.linearRampToValueAtTime(_position.x, endTime);\r\n\t\t\t\tpanner.positionY.linearRampToValueAtTime(_position.y, endTime);\r\n\t\t\t\tpanner.positionZ.linearRampToValueAtTime(_position.z, endTime);\r\n\t\t\t\tpanner.orientationX.linearRampToValueAtTime(_orientation.x, endTime);\r\n\t\t\t\tpanner.orientationY.linearRampToValueAtTime(_orientation.y, endTime);\r\n\t\t\t\tpanner.orientationZ.linearRampToValueAtTime(_orientation.z, endTime);\r\n\t\t\t} else {\r\n\t\t\t\tpanner.setPosition(_position.x, _position.y, _position.z);\r\n\t\t\t\tpanner.setOrientation(_orientation.x, _orientation.y, _orientation.z);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass AudioAnalyser {\r\n\t\tconstructor(audio, fftSize = 2048) {\r\n\t\t\tthis.analyser = audio.context.createAnalyser();\r\n\t\t\tthis.analyser.fftSize = fftSize;\r\n\t\t\tthis.data = new Uint8Array(this.analyser.frequencyBinCount);\r\n\t\t\taudio.getOutput().connect(this.analyser);\r\n\t\t}\r\n\r\n\t\tgetFrequencyData() {\r\n\t\t\tthis.analyser.getByteFrequencyData(this.data);\r\n\t\t\treturn this.data;\r\n\t\t}\r\n\r\n\t\tgetAverageFrequency() {\r\n\t\t\tlet value = 0;\r\n\t\t\tconst data = this.getFrequencyData();\r\n\r\n\t\t\tfor (let i = 0; i < data.length; i++) {\r\n\t\t\t\tvalue += data[i];\r\n\t\t\t}\r\n\r\n\t\t\treturn value / data.length;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass PropertyMixer {\r\n\t\tconstructor(binding, typeName, valueSize) {\r\n\t\t\tthis.binding = binding;\r\n\t\t\tthis.valueSize = valueSize;\r\n\t\t\tlet mixFunction, mixFunctionAdditive, setIdentity; // buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\r\n\t\t\t//\r\n\t\t\t// interpolators can use .buffer as their .result\r\n\t\t\t// the data then goes to 'incoming'\r\n\t\t\t//\r\n\t\t\t// 'accu0' and 'accu1' are used frame-interleaved for\r\n\t\t\t// the cumulative result and are compared to detect\r\n\t\t\t// changes\r\n\t\t\t//\r\n\t\t\t// 'orig' stores the original state of the property\r\n\t\t\t//\r\n\t\t\t// 'add' is used for additive cumulative results\r\n\t\t\t//\r\n\t\t\t// 'work' is optional and is only present for quaternion types. It is used\r\n\t\t\t// to store intermediate quaternion multiplication results\r\n\r\n\t\t\tswitch (typeName) {\r\n\t\t\t\tcase 'quaternion':\r\n\t\t\t\t\tmixFunction = this._slerp;\r\n\t\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\r\n\t\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\r\n\t\t\t\t\tthis.buffer = new Float64Array(valueSize * 6);\r\n\t\t\t\t\tthis._workIndex = 5;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'string':\r\n\t\t\t\tcase 'bool':\r\n\t\t\t\t\tmixFunction = this._select; // Use the regular mix function and for additive on these types,\r\n\t\t\t\t\t// additive is not relevant for non-numeric types\r\n\r\n\t\t\t\t\tmixFunctionAdditive = this._select;\r\n\t\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\r\n\t\t\t\t\tthis.buffer = new Array(valueSize * 5);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tmixFunction = this._lerp;\r\n\t\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\r\n\t\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\r\n\t\t\t\t\tthis.buffer = new Float64Array(valueSize * 5);\r\n\t\t\t}\r\n\r\n\t\t\tthis._mixBufferRegion = mixFunction;\r\n\t\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\r\n\t\t\tthis._setIdentity = setIdentity;\r\n\t\t\tthis._origIndex = 3;\r\n\t\t\tthis._addIndex = 4;\r\n\t\t\tthis.cumulativeWeight = 0;\r\n\t\t\tthis.cumulativeWeightAdditive = 0;\r\n\t\t\tthis.useCount = 0;\r\n\t\t\tthis.referenceCount = 0;\r\n\t\t} // accumulate data in the 'incoming' region into 'accu<i>'\r\n\r\n\r\n\t\taccumulate(accuIndex, weight) {\r\n\t\t\t// note: happily accumulating nothing when weight = 0, the caller knows\r\n\t\t\t// the weight and shouldn't have made the call in the first place\r\n\t\t\tconst buffer = this.buffer,\r\n\t\t\t\t\t\tstride = this.valueSize,\r\n\t\t\t\t\t\toffset = accuIndex * stride + stride;\r\n\t\t\tlet currentWeight = this.cumulativeWeight;\r\n\r\n\t\t\tif (currentWeight === 0) {\r\n\t\t\t\t// accuN := incoming * weight\r\n\t\t\t\tfor (let i = 0; i !== stride; ++i) {\r\n\t\t\t\t\tbuffer[offset + i] = buffer[i];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcurrentWeight = weight;\r\n\t\t\t} else {\r\n\t\t\t\t// accuN := accuN + incoming * weight\r\n\t\t\t\tcurrentWeight += weight;\r\n\t\t\t\tconst mix = weight / currentWeight;\r\n\r\n\t\t\t\tthis._mixBufferRegion(buffer, offset, 0, mix, stride);\r\n\t\t\t}\r\n\r\n\t\t\tthis.cumulativeWeight = currentWeight;\r\n\t\t} // accumulate data in the 'incoming' region into 'add'\r\n\r\n\r\n\t\taccumulateAdditive(weight) {\r\n\t\t\tconst buffer = this.buffer,\r\n\t\t\t\t\t\tstride = this.valueSize,\r\n\t\t\t\t\t\toffset = stride * this._addIndex;\r\n\r\n\t\t\tif (this.cumulativeWeightAdditive === 0) {\r\n\t\t\t\t// add = identity\r\n\t\t\t\tthis._setIdentity();\r\n\t\t\t} // add := add + incoming * weight\r\n\r\n\r\n\t\t\tthis._mixBufferRegionAdditive(buffer, offset, 0, weight, stride);\r\n\r\n\t\t\tthis.cumulativeWeightAdditive += weight;\r\n\t\t} // apply the state of 'accu<i>' to the binding when accus differ\r\n\r\n\r\n\t\tapply(accuIndex) {\r\n\t\t\tconst stride = this.valueSize,\r\n\t\t\t\t\t\tbuffer = this.buffer,\r\n\t\t\t\t\t\toffset = accuIndex * stride + stride,\r\n\t\t\t\t\t\tweight = this.cumulativeWeight,\r\n\t\t\t\t\t\tweightAdditive = this.cumulativeWeightAdditive,\r\n\t\t\t\t\t\tbinding = this.binding;\r\n\t\t\tthis.cumulativeWeight = 0;\r\n\t\t\tthis.cumulativeWeightAdditive = 0;\r\n\r\n\t\t\tif (weight < 1) {\r\n\t\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\r\n\t\t\t\tconst originalValueOffset = stride * this._origIndex;\r\n\r\n\t\t\t\tthis._mixBufferRegion(buffer, offset, originalValueOffset, 1 - weight, stride);\r\n\t\t\t}\r\n\r\n\t\t\tif (weightAdditive > 0) {\r\n\t\t\t\t// accuN := accuN + additive accuN\r\n\t\t\t\tthis._mixBufferRegionAdditive(buffer, offset, this._addIndex * stride, 1, stride);\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = stride, e = stride + stride; i !== e; ++i) {\r\n\t\t\t\tif (buffer[i] !== buffer[i + stride]) {\r\n\t\t\t\t\t// value has changed -> update scene graph\r\n\t\t\t\t\tbinding.setValue(buffer, offset);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} // remember the state of the bound property and copy it to both accus\r\n\r\n\r\n\t\tsaveOriginalState() {\r\n\t\t\tconst binding = this.binding;\r\n\t\t\tconst buffer = this.buffer,\r\n\t\t\t\t\t\tstride = this.valueSize,\r\n\t\t\t\t\t\toriginalValueOffset = stride * this._origIndex;\r\n\t\t\tbinding.getValue(buffer, originalValueOffset); // accu[0..1] := orig -- initially detect changes against the original\r\n\r\n\t\t\tfor (let i = stride, e = originalValueOffset; i !== e; ++i) {\r\n\t\t\t\tbuffer[i] = buffer[originalValueOffset + i % stride];\r\n\t\t\t} // Add to identity for additive\r\n\r\n\r\n\t\t\tthis._setIdentity();\r\n\r\n\t\t\tthis.cumulativeWeight = 0;\r\n\t\t\tthis.cumulativeWeightAdditive = 0;\r\n\t\t} // apply the state previously taken via 'saveOriginalState' to the binding\r\n\r\n\r\n\t\trestoreOriginalState() {\r\n\t\t\tconst originalValueOffset = this.valueSize * 3;\r\n\t\t\tthis.binding.setValue(this.buffer, originalValueOffset);\r\n\t\t}\r\n\r\n\t\t_setAdditiveIdentityNumeric() {\r\n\t\t\tconst startIndex = this._addIndex * this.valueSize;\r\n\t\t\tconst endIndex = startIndex + this.valueSize;\r\n\r\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\r\n\t\t\t\tthis.buffer[i] = 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t_setAdditiveIdentityQuaternion() {\r\n\t\t\tthis._setAdditiveIdentityNumeric();\r\n\r\n\t\t\tthis.buffer[this._addIndex * this.valueSize + 3] = 1;\r\n\t\t}\r\n\r\n\t\t_setAdditiveIdentityOther() {\r\n\t\t\tconst startIndex = this._origIndex * this.valueSize;\r\n\t\t\tconst targetIndex = this._addIndex * this.valueSize;\r\n\r\n\t\t\tfor (let i = 0; i < this.valueSize; i++) {\r\n\t\t\t\tthis.buffer[targetIndex + i] = this.buffer[startIndex + i];\r\n\t\t\t}\r\n\t\t} // mix functions\r\n\r\n\r\n\t\t_select(buffer, dstOffset, srcOffset, t, stride) {\r\n\t\t\tif (t >= 0.5) {\r\n\t\t\t\tfor (let i = 0; i !== stride; ++i) {\r\n\t\t\t\t\tbuffer[dstOffset + i] = buffer[srcOffset + i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t_slerp(buffer, dstOffset, srcOffset, t) {\r\n\t\t\tQuaternion.slerpFlat(buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t);\r\n\t\t}\r\n\r\n\t\t_slerpAdditive(buffer, dstOffset, srcOffset, t, stride) {\r\n\t\t\tconst workOffset = this._workIndex * stride; // Store result in intermediate buffer offset\r\n\r\n\t\t\tQuaternion.multiplyQuaternionsFlat(buffer, workOffset, buffer, dstOffset, buffer, srcOffset); // Slerp to the intermediate result\r\n\r\n\t\t\tQuaternion.slerpFlat(buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t);\r\n\t\t}\r\n\r\n\t\t_lerp(buffer, dstOffset, srcOffset, t, stride) {\r\n\t\t\tconst s = 1 - t;\r\n\r\n\t\t\tfor (let i = 0; i !== stride; ++i) {\r\n\t\t\t\tconst j = dstOffset + i;\r\n\t\t\t\tbuffer[j] = buffer[j] * s + buffer[srcOffset + i] * t;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t_lerpAdditive(buffer, dstOffset, srcOffset, t, stride) {\r\n\t\t\tfor (let i = 0; i !== stride; ++i) {\r\n\t\t\t\tconst j = dstOffset + i;\r\n\t\t\t\tbuffer[j] = buffer[j] + buffer[srcOffset + i] * t;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Characters [].:/ are reserved for track binding syntax.\r\n\tconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\r\n\r\n\tconst _reservedRe = new RegExp('[' + _RESERVED_CHARS_RE + ']', 'g'); // Attempts to allow node names from any language. ES5's `\\w` regexp matches\r\n\t// only latin characters, and the unicode \\p{L} is not yet supported. So\r\n\t// instead, we exclude reserved characters and match everything else.\r\n\r\n\r\n\tconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\r\n\r\n\tconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace('\\\\.', '') + ']'; // Parent directories, delimited by '/' or ':'. Currently unused, but must\r\n\t// be matched to parse the rest of the track name.\r\n\r\n\r\n\tconst _directoryRe = /((?:WC+[\\/:])*)/.source.replace('WC', _wordChar); // Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\r\n\r\n\r\n\tconst _nodeRe = /(WCOD+)?/.source.replace('WCOD', _wordCharOrDot); // Object on target node, and accessor. May not contain reserved\r\n\t// characters. Accessor may contain any character except closing bracket.\r\n\r\n\r\n\tconst _objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace('WC', _wordChar); // Property and accessor. May not contain reserved characters. Accessor may\r\n\t// contain any non-bracket characters.\r\n\r\n\r\n\tconst _propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace('WC', _wordChar);\r\n\r\n\tconst _trackRe = new RegExp('' + '^' + _directoryRe + _nodeRe + _objectRe + _propertyRe + '$');\r\n\r\n\tconst _supportedObjectNames = ['material', 'materials', 'bones'];\r\n\r\n\tclass Composite {\r\n\t\tconstructor(targetGroup, path, optionalParsedPath) {\r\n\t\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName(path);\r\n\t\t\tthis._targetGroup = targetGroup;\r\n\t\t\tthis._bindings = targetGroup.subscribe_(path, parsedPath);\r\n\t\t}\r\n\r\n\t\tgetValue(array, offset) {\r\n\t\t\tthis.bind(); // bind all binding\r\n\r\n\t\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\r\n\t\t\t\t\t\tbinding = this._bindings[firstValidIndex]; // and only call .getValue on the first\r\n\r\n\t\t\tif (binding !== undefined) binding.getValue(array, offset);\r\n\t\t}\r\n\r\n\t\tsetValue(array, offset) {\r\n\t\t\tconst bindings = this._bindings;\r\n\r\n\t\t\tfor (let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\r\n\t\t\t\tbindings[i].setValue(array, offset);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tbind() {\r\n\t\t\tconst bindings = this._bindings;\r\n\r\n\t\t\tfor (let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\r\n\t\t\t\tbindings[i].bind();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tunbind() {\r\n\t\t\tconst bindings = this._bindings;\r\n\r\n\t\t\tfor (let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\r\n\t\t\t\tbindings[i].unbind();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} // Note: This class uses a State pattern on a per-method basis:\r\n\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\r\n\t// prototype version of these methods with one that represents\r\n\t// the bound state. When the property is not found, the methods\r\n\t// become no-ops.\r\n\r\n\r\n\tclass PropertyBinding {\r\n\t\tconstructor(rootNode, path, parsedPath) {\r\n\t\t\tthis.path = path;\r\n\t\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName(path);\r\n\t\t\tthis.node = PropertyBinding.findNode(rootNode, this.parsedPath.nodeName) || rootNode;\r\n\t\t\tthis.rootNode = rootNode; // initial state of these methods that calls 'bind'\r\n\r\n\t\t\tthis.getValue = this._getValue_unbound;\r\n\t\t\tthis.setValue = this._setValue_unbound;\r\n\t\t}\r\n\r\n\t\tstatic create(root, path, parsedPath) {\r\n\t\t\tif (!(root && root.isAnimationObjectGroup)) {\r\n\t\t\t\treturn new PropertyBinding(root, path, parsedPath);\r\n\t\t\t} else {\r\n\t\t\t\treturn new PropertyBinding.Composite(root, path, parsedPath);\r\n\t\t\t}\r\n\t\t}\r\n\t\t/**\r\n\t\t * Replaces spaces with underscores and removes unsupported characters from\r\n\t\t * node names, to ensure compatibility with parseTrackName().\r\n\t\t *\r\n\t\t * @param {string} name Node name to be sanitized.\r\n\t\t * @return {string}\r\n\t\t */\r\n\r\n\r\n\t\tstatic sanitizeNodeName(name) {\r\n\t\t\treturn name.replace(/\\s/g, '_').replace(_reservedRe, '');\r\n\t\t}\r\n\r\n\t\tstatic parseTrackName(trackName) {\r\n\t\t\tconst matches = _trackRe.exec(trackName);\r\n\r\n\t\t\tif (!matches) {\r\n\t\t\t\tthrow new Error('PropertyBinding: Cannot parse trackName: ' + trackName);\r\n\t\t\t}\r\n\r\n\t\t\tconst results = {\r\n\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\r\n\t\t\t\tnodeName: matches[2],\r\n\t\t\t\tobjectName: matches[3],\r\n\t\t\t\tobjectIndex: matches[4],\r\n\t\t\t\tpropertyName: matches[5],\r\n\t\t\t\t// required\r\n\t\t\t\tpropertyIndex: matches[6]\r\n\t\t\t};\r\n\t\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf('.');\r\n\r\n\t\t\tif (lastDot !== undefined && lastDot !== -1) {\r\n\t\t\t\tconst objectName = results.nodeName.substring(lastDot + 1); // Object names must be checked against an allowlist. Otherwise, there\r\n\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\r\n\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\r\n\t\t\t\t// include '.' characters).\r\n\r\n\t\t\t\tif (_supportedObjectNames.indexOf(objectName) !== -1) {\r\n\t\t\t\t\tresults.nodeName = results.nodeName.substring(0, lastDot);\r\n\t\t\t\t\tresults.objectName = objectName;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (results.propertyName === null || results.propertyName.length === 0) {\r\n\t\t\t\tthrow new Error('PropertyBinding: can not parse propertyName from trackName: ' + trackName);\r\n\t\t\t}\r\n\r\n\t\t\treturn results;\r\n\t\t}\r\n\r\n\t\tstatic findNode(root, nodeName) {\r\n\t\t\tif (!nodeName || nodeName === '' || nodeName === '.' || nodeName === -1 || nodeName === root.name || nodeName === root.uuid) {\r\n\t\t\t\treturn root;\r\n\t\t\t} // search into skeleton bones.\r\n\r\n\r\n\t\t\tif (root.skeleton) {\r\n\t\t\t\tconst bone = root.skeleton.getBoneByName(nodeName);\r\n\r\n\t\t\t\tif (bone !== undefined) {\r\n\t\t\t\t\treturn bone;\r\n\t\t\t\t}\r\n\t\t\t} // search into node subtree.\r\n\r\n\r\n\t\t\tif (root.children) {\r\n\t\t\t\tconst searchNodeSubtree = function (children) {\r\n\t\t\t\t\tfor (let i = 0; i < children.length; i++) {\r\n\t\t\t\t\t\tconst childNode = children[i];\r\n\r\n\t\t\t\t\t\tif (childNode.name === nodeName || childNode.uuid === nodeName) {\r\n\t\t\t\t\t\t\treturn childNode;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst result = searchNodeSubtree(childNode.children);\r\n\t\t\t\t\t\tif (result) return result;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t};\r\n\r\n\t\t\t\tconst subTreeNode = searchNodeSubtree(root.children);\r\n\r\n\t\t\t\tif (subTreeNode) {\r\n\t\t\t\t\treturn subTreeNode;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t} // these are used to \"bind\" a nonexistent property\r\n\r\n\r\n\t\t_getValue_unavailable() {}\r\n\r\n\t\t_setValue_unavailable() {} // Getters\r\n\r\n\r\n\t\t_getValue_direct(buffer, offset) {\r\n\t\t\tbuffer[offset] = this.node[this.propertyName];\r\n\t\t}\r\n\r\n\t\t_getValue_array(buffer, offset) {\r\n\t\t\tconst source = this.resolvedProperty;\r\n\r\n\t\t\tfor (let i = 0, n = source.length; i !== n; ++i) {\r\n\t\t\t\tbuffer[offset++] = source[i];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t_getValue_arrayElement(buffer, offset) {\r\n\t\t\tbuffer[offset] = this.resolvedProperty[this.propertyIndex];\r\n\t\t}\r\n\r\n\t\t_getValue_toArray(buffer, offset) {\r\n\t\t\tthis.resolvedProperty.toArray(buffer, offset);\r\n\t\t} // Direct\r\n\r\n\r\n\t\t_setValue_direct(buffer, offset) {\r\n\t\t\tthis.targetObject[this.propertyName] = buffer[offset];\r\n\t\t}\r\n\r\n\t\t_setValue_direct_setNeedsUpdate(buffer, offset) {\r\n\t\t\tthis.targetObject[this.propertyName] = buffer[offset];\r\n\t\t\tthis.targetObject.needsUpdate = true;\r\n\t\t}\r\n\r\n\t\t_setValue_direct_setMatrixWorldNeedsUpdate(buffer, offset) {\r\n\t\t\tthis.targetObject[this.propertyName] = buffer[offset];\r\n\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\t\t} // EntireArray\r\n\r\n\r\n\t\t_setValue_array(buffer, offset) {\r\n\t\t\tconst dest = this.resolvedProperty;\r\n\r\n\t\t\tfor (let i = 0, n = dest.length; i !== n; ++i) {\r\n\t\t\t\tdest[i] = buffer[offset++];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t_setValue_array_setNeedsUpdate(buffer, offset) {\r\n\t\t\tconst dest = this.resolvedProperty;\r\n\r\n\t\t\tfor (let i = 0, n = dest.length; i !== n; ++i) {\r\n\t\t\t\tdest[i] = buffer[offset++];\r\n\t\t\t}\r\n\r\n\t\t\tthis.targetObject.needsUpdate = true;\r\n\t\t}\r\n\r\n\t\t_setValue_array_setMatrixWorldNeedsUpdate(buffer, offset) {\r\n\t\t\tconst dest = this.resolvedProperty;\r\n\r\n\t\t\tfor (let i = 0, n = dest.length; i !== n; ++i) {\r\n\t\t\t\tdest[i] = buffer[offset++];\r\n\t\t\t}\r\n\r\n\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\t\t} // ArrayElement\r\n\r\n\r\n\t\t_setValue_arrayElement(buffer, offset) {\r\n\t\t\tthis.resolvedProperty[this.propertyIndex] = buffer[offset];\r\n\t\t}\r\n\r\n\t\t_setValue_arrayElement_setNeedsUpdate(buffer, offset) {\r\n\t\t\tthis.resolvedProperty[this.propertyIndex] = buffer[offset];\r\n\t\t\tthis.targetObject.needsUpdate = true;\r\n\t\t}\r\n\r\n\t\t_setValue_arrayElement_setMatrixWorldNeedsUpdate(buffer, offset) {\r\n\t\t\tthis.resolvedProperty[this.propertyIndex] = buffer[offset];\r\n\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\t\t} // HasToFromArray\r\n\r\n\r\n\t\t_setValue_fromArray(buffer, offset) {\r\n\t\t\tthis.resolvedProperty.fromArray(buffer, offset);\r\n\t\t}\r\n\r\n\t\t_setValue_fromArray_setNeedsUpdate(buffer, offset) {\r\n\t\t\tthis.resolvedProperty.fromArray(buffer, offset);\r\n\t\t\tthis.targetObject.needsUpdate = true;\r\n\t\t}\r\n\r\n\t\t_setValue_fromArray_setMatrixWorldNeedsUpdate(buffer, offset) {\r\n\t\t\tthis.resolvedProperty.fromArray(buffer, offset);\r\n\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\t\t}\r\n\r\n\t\t_getValue_unbound(targetArray, offset) {\r\n\t\t\tthis.bind();\r\n\t\t\tthis.getValue(targetArray, offset);\r\n\t\t}\r\n\r\n\t\t_setValue_unbound(sourceArray, offset) {\r\n\t\t\tthis.bind();\r\n\t\t\tthis.setValue(sourceArray, offset);\r\n\t\t} // create getter / setter pair for a property in the scene graph\r\n\r\n\r\n\t\tbind() {\r\n\t\t\tlet targetObject = this.node;\r\n\t\t\tconst parsedPath = this.parsedPath;\r\n\t\t\tconst objectName = parsedPath.objectName;\r\n\t\t\tconst propertyName = parsedPath.propertyName;\r\n\t\t\tlet propertyIndex = parsedPath.propertyIndex;\r\n\r\n\t\t\tif (!targetObject) {\r\n\t\t\t\ttargetObject = PropertyBinding.findNode(this.rootNode, parsedPath.nodeName) || this.rootNode;\r\n\t\t\t\tthis.node = targetObject;\r\n\t\t\t} // set fail state so we can just 'return' on error\r\n\r\n\r\n\t\t\tthis.getValue = this._getValue_unavailable;\r\n\t\t\tthis.setValue = this._setValue_unavailable; // ensure there is a value node\r\n\r\n\t\t\tif (!targetObject) {\r\n\t\t\t\tconsole.error('THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (objectName) {\r\n\t\t\t\tlet objectIndex = parsedPath.objectIndex; // special cases were we need to reach deeper into the hierarchy to get the face materials....\r\n\r\n\t\t\t\tswitch (objectName) {\r\n\t\t\t\t\tcase 'materials':\r\n\t\t\t\t\t\tif (!targetObject.material) {\r\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to material as node does not have a material.', this);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!targetObject.material.materials) {\r\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttargetObject = targetObject.material.materials;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'bones':\r\n\t\t\t\t\t\tif (!targetObject.skeleton) {\r\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t} // potential future optimization: skip this if propertyIndex is already an integer\r\n\t\t\t\t\t\t// and convert the integer string to a true integer.\r\n\r\n\r\n\t\t\t\t\t\ttargetObject = targetObject.skeleton.bones; // support resolving morphTarget names into indices.\r\n\r\n\t\t\t\t\t\tfor (let i = 0; i < targetObject.length; i++) {\r\n\t\t\t\t\t\t\tif (targetObject[i].name === objectIndex) {\r\n\t\t\t\t\t\t\t\tobjectIndex = i;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tif (targetObject[objectName] === undefined) {\r\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to objectName of node undefined.', this);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttargetObject = targetObject[objectName];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (objectIndex !== undefined) {\r\n\t\t\t\t\tif (targetObject[objectIndex] === undefined) {\r\n\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttargetObject = targetObject[objectIndex];\r\n\t\t\t\t}\r\n\t\t\t} // resolve property\r\n\r\n\r\n\t\t\tconst nodeProperty = targetObject[propertyName];\r\n\r\n\t\t\tif (nodeProperty === undefined) {\r\n\t\t\t\tconst nodeName = parsedPath.nodeName;\r\n\t\t\t\tconsole.error('THREE.PropertyBinding: Trying to update property for track: ' + nodeName + '.' + propertyName + ' but it wasn\\'t found.', targetObject);\r\n\t\t\t\treturn;\r\n\t\t\t} // determine versioning scheme\r\n\r\n\r\n\t\t\tlet versioning = this.Versioning.None;\r\n\t\t\tthis.targetObject = targetObject;\r\n\r\n\t\t\tif (targetObject.needsUpdate !== undefined) {\r\n\t\t\t\t// material\r\n\t\t\t\tversioning = this.Versioning.NeedsUpdate;\r\n\t\t\t} else if (targetObject.matrixWorldNeedsUpdate !== undefined) {\r\n\t\t\t\t// node transform\r\n\t\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\r\n\t\t\t} // determine how the property gets bound\r\n\r\n\r\n\t\t\tlet bindingType = this.BindingType.Direct;\r\n\r\n\t\t\tif (propertyIndex !== undefined) {\r\n\t\t\t\t// access a sub element of the property array (only primitives are supported right now)\r\n\t\t\t\tif (propertyName === 'morphTargetInfluences') {\r\n\t\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\r\n\t\t\t\t\t// support resolving morphTarget names into indices.\r\n\t\t\t\t\tif (!targetObject.geometry) {\r\n\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (targetObject.geometry.isBufferGeometry) {\r\n\t\t\t\t\t\tif (!targetObject.geometry.morphAttributes) {\r\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (targetObject.morphTargetDictionary[propertyIndex] !== undefined) {\r\n\t\t\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[propertyIndex];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.', this);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbindingType = this.BindingType.ArrayElement;\r\n\t\t\t\tthis.resolvedProperty = nodeProperty;\r\n\t\t\t\tthis.propertyIndex = propertyIndex;\r\n\t\t\t} else if (nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined) {\r\n\t\t\t\t// must use copy for Object3D.Euler/Quaternion\r\n\t\t\t\tbindingType = this.BindingType.HasFromToArray;\r\n\t\t\t\tthis.resolvedProperty = nodeProperty;\r\n\t\t\t} else if (Array.isArray(nodeProperty)) {\r\n\t\t\t\tbindingType = this.BindingType.EntireArray;\r\n\t\t\t\tthis.resolvedProperty = nodeProperty;\r\n\t\t\t} else {\r\n\t\t\t\tthis.propertyName = propertyName;\r\n\t\t\t} // select getter / setter\r\n\r\n\r\n\t\t\tthis.getValue = this.GetterByBindingType[bindingType];\r\n\t\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[bindingType][versioning];\r\n\t\t}\r\n\r\n\t\tunbind() {\r\n\t\t\tthis.node = null; // back to the prototype version of getValue / setValue\r\n\t\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\r\n\r\n\t\t\tthis.getValue = this._getValue_unbound;\r\n\t\t\tthis.setValue = this._setValue_unbound;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tPropertyBinding.Composite = Composite;\r\n\tPropertyBinding.prototype.BindingType = {\r\n\t\tDirect: 0,\r\n\t\tEntireArray: 1,\r\n\t\tArrayElement: 2,\r\n\t\tHasFromToArray: 3\r\n\t};\r\n\tPropertyBinding.prototype.Versioning = {\r\n\t\tNone: 0,\r\n\t\tNeedsUpdate: 1,\r\n\t\tMatrixWorldNeedsUpdate: 2\r\n\t};\r\n\tPropertyBinding.prototype.GetterByBindingType = [PropertyBinding.prototype._getValue_direct, PropertyBinding.prototype._getValue_array, PropertyBinding.prototype._getValue_arrayElement, PropertyBinding.prototype._getValue_toArray];\r\n\tPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [[// Direct\r\n\tPropertyBinding.prototype._setValue_direct, PropertyBinding.prototype._setValue_direct_setNeedsUpdate, PropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate], [// EntireArray\r\n\tPropertyBinding.prototype._setValue_array, PropertyBinding.prototype._setValue_array_setNeedsUpdate, PropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate], [// ArrayElement\r\n\tPropertyBinding.prototype._setValue_arrayElement, PropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate, PropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate], [// HasToFromArray\r\n\tPropertyBinding.prototype._setValue_fromArray, PropertyBinding.prototype._setValue_fromArray_setNeedsUpdate, PropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];\r\n\r\n\t/**\r\n\t *\r\n\t * A group of objects that receives a shared animation state.\r\n\t *\r\n\t * Usage:\r\n\t *\r\n\t *\t- Add objects you would otherwise pass as 'root' to the\r\n\t *\t\tconstructor or the .clipAction method of AnimationMixer.\r\n\t *\r\n\t *\t- Instead pass this object as 'root'.\r\n\t *\r\n\t *\t- You can also add and remove objects later when the mixer\r\n\t *\t\tis running.\r\n\t *\r\n\t * Note:\r\n\t *\r\n\t *\t\tObjects of this class appear as one object to the mixer,\r\n\t *\t\tso cache control of the individual objects must be done\r\n\t *\t\ton the group.\r\n\t *\r\n\t * Limitation:\r\n\t *\r\n\t *\t- The animated properties must be compatible among the\r\n\t *\t\tall objects in the group.\r\n\t *\r\n\t *\t- A single property can either be controlled through a\r\n\t *\t\ttarget group or directly, but not both.\r\n\t */\r\n\r\n\tclass AnimationObjectGroup {\r\n\t\tconstructor() {\r\n\t\t\tthis.uuid = generateUUID(); // cached objects followed by the active ones\r\n\r\n\t\t\tthis._objects = Array.prototype.slice.call(arguments);\r\n\t\t\tthis.nCachedObjects_ = 0; // threshold\r\n\t\t\t// note: read by PropertyBinding.Composite\r\n\r\n\t\t\tconst indices = {};\r\n\t\t\tthis._indicesByUUID = indices; // for bookkeeping\r\n\r\n\t\t\tfor (let i = 0, n = arguments.length; i !== n; ++i) {\r\n\t\t\t\tindices[arguments[i].uuid] = i;\r\n\t\t\t}\r\n\r\n\t\t\tthis._paths = []; // inside: string\r\n\r\n\t\t\tthis._parsedPaths = []; // inside: { we don't care, here }\r\n\r\n\t\t\tthis._bindings = []; // inside: Array< PropertyBinding >\r\n\r\n\t\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\r\n\r\n\t\t\tconst scope = this;\r\n\t\t\tthis.stats = {\r\n\t\t\t\tobjects: {\r\n\t\t\t\t\tget total() {\r\n\t\t\t\t\t\treturn scope._objects.length;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\tget inUse() {\r\n\t\t\t\t\t\treturn this.total - scope.nCachedObjects_;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tget bindingsPerObject() {\r\n\t\t\t\t\treturn scope._bindings.length;\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tadd() {\r\n\t\t\tconst objects = this._objects,\r\n\t\t\t\t\t\tindicesByUUID = this._indicesByUUID,\r\n\t\t\t\t\t\tpaths = this._paths,\r\n\t\t\t\t\t\tparsedPaths = this._parsedPaths,\r\n\t\t\t\t\t\tbindings = this._bindings,\r\n\t\t\t\t\t\tnBindings = bindings.length;\r\n\t\t\tlet knownObject = undefined,\r\n\t\t\t\t\tnObjects = objects.length,\r\n\t\t\t\t\tnCachedObjects = this.nCachedObjects_;\r\n\r\n\t\t\tfor (let i = 0, n = arguments.length; i !== n; ++i) {\r\n\t\t\t\tconst object = arguments[i],\r\n\t\t\t\t\t\t\tuuid = object.uuid;\r\n\t\t\t\tlet index = indicesByUUID[uuid];\r\n\r\n\t\t\t\tif (index === undefined) {\r\n\t\t\t\t\t// unknown object -> add it to the ACTIVE region\r\n\t\t\t\t\tindex = nObjects++;\r\n\t\t\t\t\tindicesByUUID[uuid] = index;\r\n\t\t\t\t\tobjects.push(object); // accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\t\tfor (let j = 0, m = nBindings; j !== m; ++j) {\r\n\t\t\t\t\t\tbindings[j].push(new PropertyBinding(object, paths[j], parsedPaths[j]));\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (index < nCachedObjects) {\r\n\t\t\t\t\tknownObject = objects[index]; // move existing object to the ACTIVE region\r\n\r\n\t\t\t\t\tconst firstActiveIndex = --nCachedObjects,\r\n\t\t\t\t\t\t\t\tlastCachedObject = objects[firstActiveIndex];\r\n\t\t\t\t\tindicesByUUID[lastCachedObject.uuid] = index;\r\n\t\t\t\t\tobjects[index] = lastCachedObject;\r\n\t\t\t\t\tindicesByUUID[uuid] = firstActiveIndex;\r\n\t\t\t\t\tobjects[firstActiveIndex] = object; // accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\t\tfor (let j = 0, m = nBindings; j !== m; ++j) {\r\n\t\t\t\t\t\tconst bindingsForPath = bindings[j],\r\n\t\t\t\t\t\t\t\t\tlastCached = bindingsForPath[firstActiveIndex];\r\n\t\t\t\t\t\tlet binding = bindingsForPath[index];\r\n\t\t\t\t\t\tbindingsForPath[index] = lastCached;\r\n\r\n\t\t\t\t\t\tif (binding === undefined) {\r\n\t\t\t\t\t\t\t// since we do not bother to create new bindings\r\n\t\t\t\t\t\t\t// for objects that are cached, the binding may\r\n\t\t\t\t\t\t\t// or may not exist\r\n\t\t\t\t\t\t\tbinding = new PropertyBinding(object, paths[j], parsedPaths[j]);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbindingsForPath[firstActiveIndex] = binding;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (objects[index] !== knownObject) {\r\n\t\t\t\t\tconsole.error('THREE.AnimationObjectGroup: Different objects with the same UUID ' + 'detected. Clean the caches or recreate your infrastructure when reloading scenes.');\r\n\t\t\t\t} // else the object is already where we want it to be\r\n\r\n\t\t\t} // for arguments\r\n\r\n\r\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\r\n\t\t}\r\n\r\n\t\tremove() {\r\n\t\t\tconst objects = this._objects,\r\n\t\t\t\t\t\tindicesByUUID = this._indicesByUUID,\r\n\t\t\t\t\t\tbindings = this._bindings,\r\n\t\t\t\t\t\tnBindings = bindings.length;\r\n\t\t\tlet nCachedObjects = this.nCachedObjects_;\r\n\r\n\t\t\tfor (let i = 0, n = arguments.length; i !== n; ++i) {\r\n\t\t\t\tconst object = arguments[i],\r\n\t\t\t\t\t\t\tuuid = object.uuid,\r\n\t\t\t\t\t\t\tindex = indicesByUUID[uuid];\r\n\r\n\t\t\t\tif (index !== undefined && index >= nCachedObjects) {\r\n\t\t\t\t\t// move existing object into the CACHED region\r\n\t\t\t\t\tconst lastCachedIndex = nCachedObjects++,\r\n\t\t\t\t\t\t\t\tfirstActiveObject = objects[lastCachedIndex];\r\n\t\t\t\t\tindicesByUUID[firstActiveObject.uuid] = index;\r\n\t\t\t\t\tobjects[index] = firstActiveObject;\r\n\t\t\t\t\tindicesByUUID[uuid] = lastCachedIndex;\r\n\t\t\t\t\tobjects[lastCachedIndex] = object; // accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\t\tfor (let j = 0, m = nBindings; j !== m; ++j) {\r\n\t\t\t\t\t\tconst bindingsForPath = bindings[j],\r\n\t\t\t\t\t\t\t\t\tfirstActive = bindingsForPath[lastCachedIndex],\r\n\t\t\t\t\t\t\t\t\tbinding = bindingsForPath[index];\r\n\t\t\t\t\t\tbindingsForPath[index] = firstActive;\r\n\t\t\t\t\t\tbindingsForPath[lastCachedIndex] = binding;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} // for arguments\r\n\r\n\r\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\r\n\t\t} // remove & forget\r\n\r\n\r\n\t\tuncache() {\r\n\t\t\tconst objects = this._objects,\r\n\t\t\t\t\t\tindicesByUUID = this._indicesByUUID,\r\n\t\t\t\t\t\tbindings = this._bindings,\r\n\t\t\t\t\t\tnBindings = bindings.length;\r\n\t\t\tlet nCachedObjects = this.nCachedObjects_,\r\n\t\t\t\t\tnObjects = objects.length;\r\n\r\n\t\t\tfor (let i = 0, n = arguments.length; i !== n; ++i) {\r\n\t\t\t\tconst object = arguments[i],\r\n\t\t\t\t\t\t\tuuid = object.uuid,\r\n\t\t\t\t\t\t\tindex = indicesByUUID[uuid];\r\n\r\n\t\t\t\tif (index !== undefined) {\r\n\t\t\t\t\tdelete indicesByUUID[uuid];\r\n\r\n\t\t\t\t\tif (index < nCachedObjects) {\r\n\t\t\t\t\t\t// object is cached, shrink the CACHED region\r\n\t\t\t\t\t\tconst firstActiveIndex = --nCachedObjects,\r\n\t\t\t\t\t\t\t\t\tlastCachedObject = objects[firstActiveIndex],\r\n\t\t\t\t\t\t\t\t\tlastIndex = --nObjects,\r\n\t\t\t\t\t\t\t\t\tlastObject = objects[lastIndex]; // last cached object takes this object's place\r\n\r\n\t\t\t\t\t\tindicesByUUID[lastCachedObject.uuid] = index;\r\n\t\t\t\t\t\tobjects[index] = lastCachedObject; // last object goes to the activated slot and pop\r\n\r\n\t\t\t\t\t\tindicesByUUID[lastObject.uuid] = firstActiveIndex;\r\n\t\t\t\t\t\tobjects[firstActiveIndex] = lastObject;\r\n\t\t\t\t\t\tobjects.pop(); // accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\t\t\tfor (let j = 0, m = nBindings; j !== m; ++j) {\r\n\t\t\t\t\t\t\tconst bindingsForPath = bindings[j],\r\n\t\t\t\t\t\t\t\t\t\tlastCached = bindingsForPath[firstActiveIndex],\r\n\t\t\t\t\t\t\t\t\t\tlast = bindingsForPath[lastIndex];\r\n\t\t\t\t\t\t\tbindingsForPath[index] = lastCached;\r\n\t\t\t\t\t\t\tbindingsForPath[firstActiveIndex] = last;\r\n\t\t\t\t\t\t\tbindingsForPath.pop();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// object is active, just swap with the last and pop\r\n\t\t\t\t\t\tconst lastIndex = --nObjects,\r\n\t\t\t\t\t\t\t\t\tlastObject = objects[lastIndex];\r\n\r\n\t\t\t\t\t\tif (lastIndex > 0) {\r\n\t\t\t\t\t\t\tindicesByUUID[lastObject.uuid] = index;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tobjects[index] = lastObject;\r\n\t\t\t\t\t\tobjects.pop(); // accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\t\t\tfor (let j = 0, m = nBindings; j !== m; ++j) {\r\n\t\t\t\t\t\t\tconst bindingsForPath = bindings[j];\r\n\t\t\t\t\t\t\tbindingsForPath[index] = bindingsForPath[lastIndex];\r\n\t\t\t\t\t\t\tbindingsForPath.pop();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} // cached or active\r\n\r\n\t\t\t\t} // if object is known\r\n\r\n\t\t\t} // for arguments\r\n\r\n\r\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\r\n\t\t} // Internal interface used by befriended PropertyBinding.Composite:\r\n\r\n\r\n\t\tsubscribe_(path, parsedPath) {\r\n\t\t\t// returns an array of bindings for the given path that is changed\r\n\t\t\t// according to the contained objects in the group\r\n\t\t\tconst indicesByPath = this._bindingsIndicesByPath;\r\n\t\t\tlet index = indicesByPath[path];\r\n\t\t\tconst bindings = this._bindings;\r\n\t\t\tif (index !== undefined) return bindings[index];\r\n\t\t\tconst paths = this._paths,\r\n\t\t\t\t\t\tparsedPaths = this._parsedPaths,\r\n\t\t\t\t\t\tobjects = this._objects,\r\n\t\t\t\t\t\tnObjects = objects.length,\r\n\t\t\t\t\t\tnCachedObjects = this.nCachedObjects_,\r\n\t\t\t\t\t\tbindingsForPath = new Array(nObjects);\r\n\t\t\tindex = bindings.length;\r\n\t\t\tindicesByPath[path] = index;\r\n\t\t\tpaths.push(path);\r\n\t\t\tparsedPaths.push(parsedPath);\r\n\t\t\tbindings.push(bindingsForPath);\r\n\r\n\t\t\tfor (let i = nCachedObjects, n = objects.length; i !== n; ++i) {\r\n\t\t\t\tconst object = objects[i];\r\n\t\t\t\tbindingsForPath[i] = new PropertyBinding(object, path, parsedPath);\r\n\t\t\t}\r\n\r\n\t\t\treturn bindingsForPath;\r\n\t\t}\r\n\r\n\t\tunsubscribe_(path) {\r\n\t\t\t// tells the group to forget about a property path and no longer\r\n\t\t\t// update the array previously obtained with 'subscribe_'\r\n\t\t\tconst indicesByPath = this._bindingsIndicesByPath,\r\n\t\t\t\t\t\tindex = indicesByPath[path];\r\n\r\n\t\t\tif (index !== undefined) {\r\n\t\t\t\tconst paths = this._paths,\r\n\t\t\t\t\t\t\tparsedPaths = this._parsedPaths,\r\n\t\t\t\t\t\t\tbindings = this._bindings,\r\n\t\t\t\t\t\t\tlastBindingsIndex = bindings.length - 1,\r\n\t\t\t\t\t\t\tlastBindings = bindings[lastBindingsIndex],\r\n\t\t\t\t\t\t\tlastBindingsPath = path[lastBindingsIndex];\r\n\t\t\t\tindicesByPath[lastBindingsPath] = index;\r\n\t\t\t\tbindings[index] = lastBindings;\r\n\t\t\t\tbindings.pop();\r\n\t\t\t\tparsedPaths[index] = parsedPaths[lastBindingsIndex];\r\n\t\t\t\tparsedPaths.pop();\r\n\t\t\t\tpaths[index] = paths[lastBindingsIndex];\r\n\t\t\t\tpaths.pop();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tAnimationObjectGroup.prototype.isAnimationObjectGroup = true;\r\n\r\n\tclass AnimationAction {\r\n\t\tconstructor(mixer, clip, localRoot = null, blendMode = clip.blendMode) {\r\n\t\t\tthis._mixer = mixer;\r\n\t\t\tthis._clip = clip;\r\n\t\t\tthis._localRoot = localRoot;\r\n\t\t\tthis.blendMode = blendMode;\r\n\t\t\tconst tracks = clip.tracks,\r\n\t\t\t\t\t\tnTracks = tracks.length,\r\n\t\t\t\t\t\tinterpolants = new Array(nTracks);\r\n\t\t\tconst interpolantSettings = {\r\n\t\t\t\tendingStart: ZeroCurvatureEnding,\r\n\t\t\t\tendingEnd: ZeroCurvatureEnding\r\n\t\t\t};\r\n\r\n\t\t\tfor (let i = 0; i !== nTracks; ++i) {\r\n\t\t\t\tconst interpolant = tracks[i].createInterpolant(null);\r\n\t\t\t\tinterpolants[i] = interpolant;\r\n\t\t\t\tinterpolant.settings = interpolantSettings;\r\n\t\t\t}\r\n\r\n\t\t\tthis._interpolantSettings = interpolantSettings;\r\n\t\t\tthis._interpolants = interpolants; // bound by the mixer\r\n\t\t\t// inside: PropertyMixer (managed by the mixer)\r\n\r\n\t\t\tthis._propertyBindings = new Array(nTracks);\r\n\t\t\tthis._cacheIndex = null; // for the memory manager\r\n\r\n\t\t\tthis._byClipCacheIndex = null; // for the memory manager\r\n\r\n\t\t\tthis._timeScaleInterpolant = null;\r\n\t\t\tthis._weightInterpolant = null;\r\n\t\t\tthis.loop = LoopRepeat;\r\n\t\t\tthis._loopCount = -1; // global mixer time when the action is to be started\r\n\t\t\t// it's set back to 'null' upon start of the action\r\n\r\n\t\t\tthis._startTime = null; // scaled local time of the action\r\n\t\t\t// gets clamped or wrapped to 0..clip.duration according to loop\r\n\r\n\t\t\tthis.time = 0;\r\n\t\t\tthis.timeScale = 1;\r\n\t\t\tthis._effectiveTimeScale = 1;\r\n\t\t\tthis.weight = 1;\r\n\t\t\tthis._effectiveWeight = 1;\r\n\t\t\tthis.repetitions = Infinity; // no. of repetitions when looping\r\n\r\n\t\t\tthis.paused = false; // true -> zero effective time scale\r\n\r\n\t\t\tthis.enabled = true; // false -> zero effective weight\r\n\r\n\t\t\tthis.clampWhenFinished = false; // keep feeding the last frame?\r\n\r\n\t\t\tthis.zeroSlopeAtStart = true; // for smooth interpolation w/o separate\r\n\r\n\t\t\tthis.zeroSlopeAtEnd = true; // clips for start, loop and end\r\n\t\t} // State & Scheduling\r\n\r\n\r\n\t\tplay() {\r\n\t\t\tthis._mixer._activateAction(this);\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tstop() {\r\n\t\t\tthis._mixer._deactivateAction(this);\r\n\r\n\t\t\treturn this.reset();\r\n\t\t}\r\n\r\n\t\treset() {\r\n\t\t\tthis.paused = false;\r\n\t\t\tthis.enabled = true;\r\n\t\t\tthis.time = 0; // restart clip\r\n\r\n\t\t\tthis._loopCount = -1; // forget previous loops\r\n\r\n\t\t\tthis._startTime = null; // forget scheduling\r\n\r\n\t\t\treturn this.stopFading().stopWarping();\r\n\t\t}\r\n\r\n\t\tisRunning() {\r\n\t\t\treturn this.enabled && !this.paused && this.timeScale !== 0 && this._startTime === null && this._mixer._isActiveAction(this);\r\n\t\t} // return true when play has been called\r\n\r\n\r\n\t\tisScheduled() {\r\n\t\t\treturn this._mixer._isActiveAction(this);\r\n\t\t}\r\n\r\n\t\tstartAt(time) {\r\n\t\t\tthis._startTime = time;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetLoop(mode, repetitions) {\r\n\t\t\tthis.loop = mode;\r\n\t\t\tthis.repetitions = repetitions;\r\n\t\t\treturn this;\r\n\t\t} // Weight\r\n\t\t// set the weight stopping any scheduled fading\r\n\t\t// although .enabled = false yields an effective weight of zero, this\r\n\t\t// method does *not* change .enabled, because it would be confusing\r\n\r\n\r\n\t\tsetEffectiveWeight(weight) {\r\n\t\t\tthis.weight = weight; // note: same logic as when updated at runtime\r\n\r\n\t\t\tthis._effectiveWeight = this.enabled ? weight : 0;\r\n\t\t\treturn this.stopFading();\r\n\t\t} // return the weight considering fading and .enabled\r\n\r\n\r\n\t\tgetEffectiveWeight() {\r\n\t\t\treturn this._effectiveWeight;\r\n\t\t}\r\n\r\n\t\tfadeIn(duration) {\r\n\t\t\treturn this._scheduleFading(duration, 0, 1);\r\n\t\t}\r\n\r\n\t\tfadeOut(duration) {\r\n\t\t\treturn this._scheduleFading(duration, 1, 0);\r\n\t\t}\r\n\r\n\t\tcrossFadeFrom(fadeOutAction, duration, warp) {\r\n\t\t\tfadeOutAction.fadeOut(duration);\r\n\t\t\tthis.fadeIn(duration);\r\n\r\n\t\t\tif (warp) {\r\n\t\t\t\tconst fadeInDuration = this._clip.duration,\r\n\t\t\t\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\r\n\t\t\t\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\r\n\t\t\t\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\r\n\t\t\t\tfadeOutAction.warp(1.0, startEndRatio, duration);\r\n\t\t\t\tthis.warp(endStartRatio, 1.0, duration);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcrossFadeTo(fadeInAction, duration, warp) {\r\n\t\t\treturn fadeInAction.crossFadeFrom(this, duration, warp);\r\n\t\t}\r\n\r\n\t\tstopFading() {\r\n\t\t\tconst weightInterpolant = this._weightInterpolant;\r\n\r\n\t\t\tif (weightInterpolant !== null) {\r\n\t\t\t\tthis._weightInterpolant = null;\r\n\r\n\t\t\t\tthis._mixer._takeBackControlInterpolant(weightInterpolant);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t} // Time Scale Control\r\n\t\t// set the time scale stopping any scheduled warping\r\n\t\t// although .paused = true yields an effective time scale of zero, this\r\n\t\t// method does *not* change .paused, because it would be confusing\r\n\r\n\r\n\t\tsetEffectiveTimeScale(timeScale) {\r\n\t\t\tthis.timeScale = timeScale;\r\n\t\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\r\n\t\t\treturn this.stopWarping();\r\n\t\t} // return the time scale considering warping and .paused\r\n\r\n\r\n\t\tgetEffectiveTimeScale() {\r\n\t\t\treturn this._effectiveTimeScale;\r\n\t\t}\r\n\r\n\t\tsetDuration(duration) {\r\n\t\t\tthis.timeScale = this._clip.duration / duration;\r\n\t\t\treturn this.stopWarping();\r\n\t\t}\r\n\r\n\t\tsyncWith(action) {\r\n\t\t\tthis.time = action.time;\r\n\t\t\tthis.timeScale = action.timeScale;\r\n\t\t\treturn this.stopWarping();\r\n\t\t}\r\n\r\n\t\thalt(duration) {\r\n\t\t\treturn this.warp(this._effectiveTimeScale, 0, duration);\r\n\t\t}\r\n\r\n\t\twarp(startTimeScale, endTimeScale, duration) {\r\n\t\t\tconst mixer = this._mixer,\r\n\t\t\t\t\t\tnow = mixer.time,\r\n\t\t\t\t\t\ttimeScale = this.timeScale;\r\n\t\t\tlet interpolant = this._timeScaleInterpolant;\r\n\r\n\t\t\tif (interpolant === null) {\r\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\r\n\t\t\t\tthis._timeScaleInterpolant = interpolant;\r\n\t\t\t}\r\n\r\n\t\t\tconst times = interpolant.parameterPositions,\r\n\t\t\t\t\t\tvalues = interpolant.sampleValues;\r\n\t\t\ttimes[0] = now;\r\n\t\t\ttimes[1] = now + duration;\r\n\t\t\tvalues[0] = startTimeScale / timeScale;\r\n\t\t\tvalues[1] = endTimeScale / timeScale;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tstopWarping() {\r\n\t\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\r\n\r\n\t\t\tif (timeScaleInterpolant !== null) {\r\n\t\t\t\tthis._timeScaleInterpolant = null;\r\n\r\n\t\t\t\tthis._mixer._takeBackControlInterpolant(timeScaleInterpolant);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t} // Object Accessors\r\n\r\n\r\n\t\tgetMixer() {\r\n\t\t\treturn this._mixer;\r\n\t\t}\r\n\r\n\t\tgetClip() {\r\n\t\t\treturn this._clip;\r\n\t\t}\r\n\r\n\t\tgetRoot() {\r\n\t\t\treturn this._localRoot || this._mixer._root;\r\n\t\t} // Interna\r\n\r\n\r\n\t\t_update(time, deltaTime, timeDirection, accuIndex) {\r\n\t\t\t// called by the mixer\r\n\t\t\tif (!this.enabled) {\r\n\t\t\t\t// call ._updateWeight() to update ._effectiveWeight\r\n\t\t\t\tthis._updateWeight(time);\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst startTime = this._startTime;\r\n\r\n\t\t\tif (startTime !== null) {\r\n\t\t\t\t// check for scheduled start of action\r\n\t\t\t\tconst timeRunning = (time - startTime) * timeDirection;\r\n\r\n\t\t\t\tif (timeRunning < 0 || timeDirection === 0) {\r\n\t\t\t\t\treturn; // yet to come / don't decide when delta = 0\r\n\t\t\t\t} // start\r\n\r\n\r\n\t\t\t\tthis._startTime = null; // unschedule\r\n\r\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\r\n\t\t\t} // apply time scale and advance time\r\n\r\n\r\n\t\t\tdeltaTime *= this._updateTimeScale(time);\r\n\r\n\t\t\tconst clipTime = this._updateTime(deltaTime); // note: _updateTime may disable the action resulting in\r\n\t\t\t// an effective weight of 0\r\n\r\n\r\n\t\t\tconst weight = this._updateWeight(time);\r\n\r\n\t\t\tif (weight > 0) {\r\n\t\t\t\tconst interpolants = this._interpolants;\r\n\t\t\t\tconst propertyMixers = this._propertyBindings;\r\n\r\n\t\t\t\tswitch (this.blendMode) {\r\n\t\t\t\t\tcase AdditiveAnimationBlendMode:\r\n\t\t\t\t\t\tfor (let j = 0, m = interpolants.length; j !== m; ++j) {\r\n\t\t\t\t\t\t\tinterpolants[j].evaluate(clipTime);\r\n\t\t\t\t\t\t\tpropertyMixers[j].accumulateAdditive(weight);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase NormalAnimationBlendMode:\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tfor (let j = 0, m = interpolants.length; j !== m; ++j) {\r\n\t\t\t\t\t\t\tinterpolants[j].evaluate(clipTime);\r\n\t\t\t\t\t\t\tpropertyMixers[j].accumulate(accuIndex, weight);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t_updateWeight(time) {\r\n\t\t\tlet weight = 0;\r\n\r\n\t\t\tif (this.enabled) {\r\n\t\t\t\tweight = this.weight;\r\n\t\t\t\tconst interpolant = this._weightInterpolant;\r\n\r\n\t\t\t\tif (interpolant !== null) {\r\n\t\t\t\t\tconst interpolantValue = interpolant.evaluate(time)[0];\r\n\t\t\t\t\tweight *= interpolantValue;\r\n\r\n\t\t\t\t\tif (time > interpolant.parameterPositions[1]) {\r\n\t\t\t\t\t\tthis.stopFading();\r\n\r\n\t\t\t\t\t\tif (interpolantValue === 0) {\r\n\t\t\t\t\t\t\t// faded out, disable\r\n\t\t\t\t\t\t\tthis.enabled = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._effectiveWeight = weight;\r\n\t\t\treturn weight;\r\n\t\t}\r\n\r\n\t\t_updateTimeScale(time) {\r\n\t\t\tlet timeScale = 0;\r\n\r\n\t\t\tif (!this.paused) {\r\n\t\t\t\ttimeScale = this.timeScale;\r\n\t\t\t\tconst interpolant = this._timeScaleInterpolant;\r\n\r\n\t\t\t\tif (interpolant !== null) {\r\n\t\t\t\t\tconst interpolantValue = interpolant.evaluate(time)[0];\r\n\t\t\t\t\ttimeScale *= interpolantValue;\r\n\r\n\t\t\t\t\tif (time > interpolant.parameterPositions[1]) {\r\n\t\t\t\t\t\tthis.stopWarping();\r\n\r\n\t\t\t\t\t\tif (timeScale === 0) {\r\n\t\t\t\t\t\t\t// motion has halted, pause\r\n\t\t\t\t\t\t\tthis.paused = true;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// warp done - apply final time scale\r\n\t\t\t\t\t\t\tthis.timeScale = timeScale;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._effectiveTimeScale = timeScale;\r\n\t\t\treturn timeScale;\r\n\t\t}\r\n\r\n\t\t_updateTime(deltaTime) {\r\n\t\t\tconst duration = this._clip.duration;\r\n\t\t\tconst loop = this.loop;\r\n\t\t\tlet time = this.time + deltaTime;\r\n\t\t\tlet loopCount = this._loopCount;\r\n\t\t\tconst pingPong = loop === LoopPingPong;\r\n\r\n\t\t\tif (deltaTime === 0) {\r\n\t\t\t\tif (loopCount === -1) return time;\r\n\t\t\t\treturn pingPong && (loopCount & 1) === 1 ? duration - time : time;\r\n\t\t\t}\r\n\r\n\t\t\tif (loop === LoopOnce) {\r\n\t\t\t\tif (loopCount === -1) {\r\n\t\t\t\t\t// just started\r\n\t\t\t\t\tthis._loopCount = 0;\r\n\r\n\t\t\t\t\tthis._setEndings(true, true, false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\thandle_stop: {\r\n\t\t\t\t\tif (time >= duration) {\r\n\t\t\t\t\t\ttime = duration;\r\n\t\t\t\t\t} else if (time < 0) {\r\n\t\t\t\t\t\ttime = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.time = time;\r\n\t\t\t\t\t\tbreak handle_stop;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (this.clampWhenFinished) this.paused = true;else this.enabled = false;\r\n\t\t\t\t\tthis.time = time;\r\n\r\n\t\t\t\t\tthis._mixer.dispatchEvent({\r\n\t\t\t\t\t\ttype: 'finished',\r\n\t\t\t\t\t\taction: this,\r\n\t\t\t\t\t\tdirection: deltaTime < 0 ? -1 : 1\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// repetitive Repeat or PingPong\r\n\t\t\t\tif (loopCount === -1) {\r\n\t\t\t\t\t// just started\r\n\t\t\t\t\tif (deltaTime >= 0) {\r\n\t\t\t\t\t\tloopCount = 0;\r\n\r\n\t\t\t\t\t\tthis._setEndings(true, this.repetitions === 0, pingPong);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// when looping in reverse direction, the initial\r\n\t\t\t\t\t\t// transition through zero counts as a repetition,\r\n\t\t\t\t\t\t// so leave loopCount at -1\r\n\t\t\t\t\t\tthis._setEndings(this.repetitions === 0, true, pingPong);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (time >= duration || time < 0) {\r\n\t\t\t\t\t// wrap around\r\n\t\t\t\t\tconst loopDelta = Math.floor(time / duration); // signed\r\n\r\n\t\t\t\t\ttime -= duration * loopDelta;\r\n\t\t\t\t\tloopCount += Math.abs(loopDelta);\r\n\t\t\t\t\tconst pending = this.repetitions - loopCount;\r\n\r\n\t\t\t\t\tif (pending <= 0) {\r\n\t\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\r\n\t\t\t\t\t\tif (this.clampWhenFinished) this.paused = true;else this.enabled = false;\r\n\t\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\r\n\t\t\t\t\t\tthis.time = time;\r\n\r\n\t\t\t\t\t\tthis._mixer.dispatchEvent({\r\n\t\t\t\t\t\t\ttype: 'finished',\r\n\t\t\t\t\t\t\taction: this,\r\n\t\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : -1\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// keep running\r\n\t\t\t\t\t\tif (pending === 1) {\r\n\t\t\t\t\t\t\t// entering the last round\r\n\t\t\t\t\t\t\tconst atStart = deltaTime < 0;\r\n\r\n\t\t\t\t\t\t\tthis._setEndings(atStart, !atStart, pingPong);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis._setEndings(false, false, pingPong);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis._loopCount = loopCount;\r\n\t\t\t\t\t\tthis.time = time;\r\n\r\n\t\t\t\t\t\tthis._mixer.dispatchEvent({\r\n\t\t\t\t\t\t\ttype: 'loop',\r\n\t\t\t\t\t\t\taction: this,\r\n\t\t\t\t\t\t\tloopDelta: loopDelta\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.time = time;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (pingPong && (loopCount & 1) === 1) {\r\n\t\t\t\t\t// invert time for the \"pong round\"\r\n\t\t\t\t\treturn duration - time;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn time;\r\n\t\t}\r\n\r\n\t\t_setEndings(atStart, atEnd, pingPong) {\r\n\t\t\tconst settings = this._interpolantSettings;\r\n\r\n\t\t\tif (pingPong) {\r\n\t\t\t\tsettings.endingStart = ZeroSlopeEnding;\r\n\t\t\t\tsettings.endingEnd = ZeroSlopeEnding;\r\n\t\t\t} else {\r\n\t\t\t\t// assuming for LoopOnce atStart == atEnd == true\r\n\t\t\t\tif (atStart) {\r\n\t\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsettings.endingStart = WrapAroundEnding;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (atEnd) {\r\n\t\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsettings.endingEnd = WrapAroundEnding;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t_scheduleFading(duration, weightNow, weightThen) {\r\n\t\t\tconst mixer = this._mixer,\r\n\t\t\t\t\t\tnow = mixer.time;\r\n\t\t\tlet interpolant = this._weightInterpolant;\r\n\r\n\t\t\tif (interpolant === null) {\r\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\r\n\t\t\t\tthis._weightInterpolant = interpolant;\r\n\t\t\t}\r\n\r\n\t\t\tconst times = interpolant.parameterPositions,\r\n\t\t\t\t\t\tvalues = interpolant.sampleValues;\r\n\t\t\ttimes[0] = now;\r\n\t\t\tvalues[0] = weightNow;\r\n\t\t\ttimes[1] = now + duration;\r\n\t\t\tvalues[1] = weightThen;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass AnimationMixer extends EventDispatcher {\r\n\t\tconstructor(root) {\r\n\t\t\tsuper();\r\n\t\t\tthis._root = root;\r\n\r\n\t\t\tthis._initMemoryManager();\r\n\r\n\t\t\tthis._accuIndex = 0;\r\n\t\t\tthis.time = 0;\r\n\t\t\tthis.timeScale = 1.0;\r\n\t\t}\r\n\r\n\t\t_bindAction(action, prototypeAction) {\r\n\t\t\tconst root = action._localRoot || this._root,\r\n\t\t\t\t\t\ttracks = action._clip.tracks,\r\n\t\t\t\t\t\tnTracks = tracks.length,\r\n\t\t\t\t\t\tbindings = action._propertyBindings,\r\n\t\t\t\t\t\tinterpolants = action._interpolants,\r\n\t\t\t\t\t\trootUuid = root.uuid,\r\n\t\t\t\t\t\tbindingsByRoot = this._bindingsByRootAndName;\r\n\t\t\tlet bindingsByName = bindingsByRoot[rootUuid];\r\n\r\n\t\t\tif (bindingsByName === undefined) {\r\n\t\t\t\tbindingsByName = {};\r\n\t\t\t\tbindingsByRoot[rootUuid] = bindingsByName;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = 0; i !== nTracks; ++i) {\r\n\t\t\t\tconst track = tracks[i],\r\n\t\t\t\t\t\t\ttrackName = track.name;\r\n\t\t\t\tlet binding = bindingsByName[trackName];\r\n\r\n\t\t\t\tif (binding !== undefined) {\r\n\t\t\t\t\tbindings[i] = binding;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbinding = bindings[i];\r\n\r\n\t\t\t\t\tif (binding !== undefined) {\r\n\t\t\t\t\t\t// existing binding, make sure the cache knows\r\n\t\t\t\t\t\tif (binding._cacheIndex === null) {\r\n\t\t\t\t\t\t\t++binding.referenceCount;\r\n\r\n\t\t\t\t\t\t\tthis._addInactiveBinding(binding, rootUuid, trackName);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst path = prototypeAction && prototypeAction._propertyBindings[i].binding.parsedPath;\r\n\t\t\t\t\tbinding = new PropertyMixer(PropertyBinding.create(root, trackName, path), track.ValueTypeName, track.getValueSize());\r\n\t\t\t\t\t++binding.referenceCount;\r\n\r\n\t\t\t\t\tthis._addInactiveBinding(binding, rootUuid, trackName);\r\n\r\n\t\t\t\t\tbindings[i] = binding;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinterpolants[i].resultBuffer = binding.buffer;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t_activateAction(action) {\r\n\t\t\tif (!this._isActiveAction(action)) {\r\n\t\t\t\tif (action._cacheIndex === null) {\r\n\t\t\t\t\t// this action has been forgotten by the cache, but the user\r\n\t\t\t\t\t// appears to be still using it -> rebind\r\n\t\t\t\t\tconst rootUuid = (action._localRoot || this._root).uuid,\r\n\t\t\t\t\t\t\t\tclipUuid = action._clip.uuid,\r\n\t\t\t\t\t\t\t\tactionsForClip = this._actionsByClip[clipUuid];\r\n\r\n\t\t\t\t\tthis._bindAction(action, actionsForClip && actionsForClip.knownActions[0]);\r\n\r\n\t\t\t\t\tthis._addInactiveAction(action, clipUuid, rootUuid);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst bindings = action._propertyBindings; // increment reference counts / sort out state\r\n\r\n\t\t\t\tfor (let i = 0, n = bindings.length; i !== n; ++i) {\r\n\t\t\t\t\tconst binding = bindings[i];\r\n\r\n\t\t\t\t\tif (binding.useCount++ === 0) {\r\n\t\t\t\t\t\tthis._lendBinding(binding);\r\n\r\n\t\t\t\t\t\tbinding.saveOriginalState();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._lendAction(action);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t_deactivateAction(action) {\r\n\t\t\tif (this._isActiveAction(action)) {\r\n\t\t\t\tconst bindings = action._propertyBindings; // decrement reference counts / sort out state\r\n\r\n\t\t\t\tfor (let i = 0, n = bindings.length; i !== n; ++i) {\r\n\t\t\t\t\tconst binding = bindings[i];\r\n\r\n\t\t\t\t\tif (--binding.useCount === 0) {\r\n\t\t\t\t\t\tbinding.restoreOriginalState();\r\n\r\n\t\t\t\t\t\tthis._takeBackBinding(binding);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._takeBackAction(action);\r\n\t\t\t}\r\n\t\t} // Memory manager\r\n\r\n\r\n\t\t_initMemoryManager() {\r\n\t\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\r\n\r\n\t\t\tthis._nActiveActions = 0;\r\n\t\t\tthis._actionsByClip = {}; // inside:\r\n\t\t\t// {\r\n\t\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\r\n\t\t\t// \tactionByRoot: AnimationAction - lookup\r\n\t\t\t// }\r\n\r\n\t\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\r\n\r\n\t\t\tthis._nActiveBindings = 0;\r\n\t\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\r\n\r\n\t\t\tthis._controlInterpolants = []; // same game as above\r\n\r\n\t\t\tthis._nActiveControlInterpolants = 0;\r\n\t\t\tconst scope = this;\r\n\t\t\tthis.stats = {\r\n\t\t\t\tactions: {\r\n\t\t\t\t\tget total() {\r\n\t\t\t\t\t\treturn scope._actions.length;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\tget inUse() {\r\n\t\t\t\t\t\treturn scope._nActiveActions;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\t\t\t\tbindings: {\r\n\t\t\t\t\tget total() {\r\n\t\t\t\t\t\treturn scope._bindings.length;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\tget inUse() {\r\n\t\t\t\t\t\treturn scope._nActiveBindings;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\t\t\t\tcontrolInterpolants: {\r\n\t\t\t\t\tget total() {\r\n\t\t\t\t\t\treturn scope._controlInterpolants.length;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\tget inUse() {\r\n\t\t\t\t\t\treturn scope._nActiveControlInterpolants;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t} // Memory management for AnimationAction objects\r\n\r\n\r\n\t\t_isActiveAction(action) {\r\n\t\t\tconst index = action._cacheIndex;\r\n\t\t\treturn index !== null && index < this._nActiveActions;\r\n\t\t}\r\n\r\n\t\t_addInactiveAction(action, clipUuid, rootUuid) {\r\n\t\t\tconst actions = this._actions,\r\n\t\t\t\t\t\tactionsByClip = this._actionsByClip;\r\n\t\t\tlet actionsForClip = actionsByClip[clipUuid];\r\n\r\n\t\t\tif (actionsForClip === undefined) {\r\n\t\t\t\tactionsForClip = {\r\n\t\t\t\t\tknownActions: [action],\r\n\t\t\t\t\tactionByRoot: {}\r\n\t\t\t\t};\r\n\t\t\t\taction._byClipCacheIndex = 0;\r\n\t\t\t\tactionsByClip[clipUuid] = actionsForClip;\r\n\t\t\t} else {\r\n\t\t\t\tconst knownActions = actionsForClip.knownActions;\r\n\t\t\t\taction._byClipCacheIndex = knownActions.length;\r\n\t\t\t\tknownActions.push(action);\r\n\t\t\t}\r\n\r\n\t\t\taction._cacheIndex = actions.length;\r\n\t\t\tactions.push(action);\r\n\t\t\tactionsForClip.actionByRoot[rootUuid] = action;\r\n\t\t}\r\n\r\n\t\t_removeInactiveAction(action) {\r\n\t\t\tconst actions = this._actions,\r\n\t\t\t\t\t\tlastInactiveAction = actions[actions.length - 1],\r\n\t\t\t\t\t\tcacheIndex = action._cacheIndex;\r\n\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\r\n\t\t\tactions[cacheIndex] = lastInactiveAction;\r\n\t\t\tactions.pop();\r\n\t\t\taction._cacheIndex = null;\r\n\t\t\tconst clipUuid = action._clip.uuid,\r\n\t\t\t\t\t\tactionsByClip = this._actionsByClip,\r\n\t\t\t\t\t\tactionsForClip = actionsByClip[clipUuid],\r\n\t\t\t\t\t\tknownActionsForClip = actionsForClip.knownActions,\r\n\t\t\t\t\t\tlastKnownAction = knownActionsForClip[knownActionsForClip.length - 1],\r\n\t\t\t\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\r\n\t\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\r\n\t\t\tknownActionsForClip[byClipCacheIndex] = lastKnownAction;\r\n\t\t\tknownActionsForClip.pop();\r\n\t\t\taction._byClipCacheIndex = null;\r\n\t\t\tconst actionByRoot = actionsForClip.actionByRoot,\r\n\t\t\t\t\t\trootUuid = (action._localRoot || this._root).uuid;\r\n\t\t\tdelete actionByRoot[rootUuid];\r\n\r\n\t\t\tif (knownActionsForClip.length === 0) {\r\n\t\t\t\tdelete actionsByClip[clipUuid];\r\n\t\t\t}\r\n\r\n\t\t\tthis._removeInactiveBindingsForAction(action);\r\n\t\t}\r\n\r\n\t\t_removeInactiveBindingsForAction(action) {\r\n\t\t\tconst bindings = action._propertyBindings;\r\n\r\n\t\t\tfor (let i = 0, n = bindings.length; i !== n; ++i) {\r\n\t\t\t\tconst binding = bindings[i];\r\n\r\n\t\t\t\tif (--binding.referenceCount === 0) {\r\n\t\t\t\t\tthis._removeInactiveBinding(binding);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t_lendAction(action) {\r\n\t\t\t// [ active actions |\tinactive actions\t]\r\n\t\t\t// [\tactive actions >| inactive actions ]\r\n\t\t\t//\t\t\t\t\t\t\t\t s\t\t\t\ta\r\n\t\t\t//\t\t\t\t\t\t\t\t\t<-swap->\r\n\t\t\t//\t\t\t\t\t\t\t\t a\t\t\t\ts\r\n\t\t\tconst actions = this._actions,\r\n\t\t\t\t\t\tprevIndex = action._cacheIndex,\r\n\t\t\t\t\t\tlastActiveIndex = this._nActiveActions++,\r\n\t\t\t\t\t\tfirstInactiveAction = actions[lastActiveIndex];\r\n\t\t\taction._cacheIndex = lastActiveIndex;\r\n\t\t\tactions[lastActiveIndex] = action;\r\n\t\t\tfirstInactiveAction._cacheIndex = prevIndex;\r\n\t\t\tactions[prevIndex] = firstInactiveAction;\r\n\t\t}\r\n\r\n\t\t_takeBackAction(action) {\r\n\t\t\t// [\tactive actions\t| inactive actions ]\r\n\t\t\t// [ active actions |< inactive actions\t]\r\n\t\t\t//\t\t\t\ta\t\t\t\ts\r\n\t\t\t//\t\t\t\t <-swap->\r\n\t\t\t//\t\t\t\ts\t\t\t\ta\r\n\t\t\tconst actions = this._actions,\r\n\t\t\t\t\t\tprevIndex = action._cacheIndex,\r\n\t\t\t\t\t\tfirstInactiveIndex = --this._nActiveActions,\r\n\t\t\t\t\t\tlastActiveAction = actions[firstInactiveIndex];\r\n\t\t\taction._cacheIndex = firstInactiveIndex;\r\n\t\t\tactions[firstInactiveIndex] = action;\r\n\t\t\tlastActiveAction._cacheIndex = prevIndex;\r\n\t\t\tactions[prevIndex] = lastActiveAction;\r\n\t\t} // Memory management for PropertyMixer objects\r\n\r\n\r\n\t\t_addInactiveBinding(binding, rootUuid, trackName) {\r\n\t\t\tconst bindingsByRoot = this._bindingsByRootAndName,\r\n\t\t\t\t\t\tbindings = this._bindings;\r\n\t\t\tlet bindingByName = bindingsByRoot[rootUuid];\r\n\r\n\t\t\tif (bindingByName === undefined) {\r\n\t\t\t\tbindingByName = {};\r\n\t\t\t\tbindingsByRoot[rootUuid] = bindingByName;\r\n\t\t\t}\r\n\r\n\t\t\tbindingByName[trackName] = binding;\r\n\t\t\tbinding._cacheIndex = bindings.length;\r\n\t\t\tbindings.push(binding);\r\n\t\t}\r\n\r\n\t\t_removeInactiveBinding(binding) {\r\n\t\t\tconst bindings = this._bindings,\r\n\t\t\t\t\t\tpropBinding = binding.binding,\r\n\t\t\t\t\t\trootUuid = propBinding.rootNode.uuid,\r\n\t\t\t\t\t\ttrackName = propBinding.path,\r\n\t\t\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\r\n\t\t\t\t\t\tbindingByName = bindingsByRoot[rootUuid],\r\n\t\t\t\t\t\tlastInactiveBinding = bindings[bindings.length - 1],\r\n\t\t\t\t\t\tcacheIndex = binding._cacheIndex;\r\n\t\t\tlastInactiveBinding._cacheIndex = cacheIndex;\r\n\t\t\tbindings[cacheIndex] = lastInactiveBinding;\r\n\t\t\tbindings.pop();\r\n\t\t\tdelete bindingByName[trackName];\r\n\r\n\t\t\tif (Object.keys(bindingByName).length === 0) {\r\n\t\t\t\tdelete bindingsByRoot[rootUuid];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t_lendBinding(binding) {\r\n\t\t\tconst bindings = this._bindings,\r\n\t\t\t\t\t\tprevIndex = binding._cacheIndex,\r\n\t\t\t\t\t\tlastActiveIndex = this._nActiveBindings++,\r\n\t\t\t\t\t\tfirstInactiveBinding = bindings[lastActiveIndex];\r\n\t\t\tbinding._cacheIndex = lastActiveIndex;\r\n\t\t\tbindings[lastActiveIndex] = binding;\r\n\t\t\tfirstInactiveBinding._cacheIndex = prevIndex;\r\n\t\t\tbindings[prevIndex] = firstInactiveBinding;\r\n\t\t}\r\n\r\n\t\t_takeBackBinding(binding) {\r\n\t\t\tconst bindings = this._bindings,\r\n\t\t\t\t\t\tprevIndex = binding._cacheIndex,\r\n\t\t\t\t\t\tfirstInactiveIndex = --this._nActiveBindings,\r\n\t\t\t\t\t\tlastActiveBinding = bindings[firstInactiveIndex];\r\n\t\t\tbinding._cacheIndex = firstInactiveIndex;\r\n\t\t\tbindings[firstInactiveIndex] = binding;\r\n\t\t\tlastActiveBinding._cacheIndex = prevIndex;\r\n\t\t\tbindings[prevIndex] = lastActiveBinding;\r\n\t\t} // Memory management of Interpolants for weight and time scale\r\n\r\n\r\n\t\t_lendControlInterpolant() {\r\n\t\t\tconst interpolants = this._controlInterpolants,\r\n\t\t\t\t\t\tlastActiveIndex = this._nActiveControlInterpolants++;\r\n\t\t\tlet interpolant = interpolants[lastActiveIndex];\r\n\r\n\t\t\tif (interpolant === undefined) {\r\n\t\t\t\tinterpolant = new LinearInterpolant(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer);\r\n\t\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\r\n\t\t\t\tinterpolants[lastActiveIndex] = interpolant;\r\n\t\t\t}\r\n\r\n\t\t\treturn interpolant;\r\n\t\t}\r\n\r\n\t\t_takeBackControlInterpolant(interpolant) {\r\n\t\t\tconst interpolants = this._controlInterpolants,\r\n\t\t\t\t\t\tprevIndex = interpolant.__cacheIndex,\r\n\t\t\t\t\t\tfirstInactiveIndex = --this._nActiveControlInterpolants,\r\n\t\t\t\t\t\tlastActiveInterpolant = interpolants[firstInactiveIndex];\r\n\t\t\tinterpolant.__cacheIndex = firstInactiveIndex;\r\n\t\t\tinterpolants[firstInactiveIndex] = interpolant;\r\n\t\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\r\n\t\t\tinterpolants[prevIndex] = lastActiveInterpolant;\r\n\t\t} // return an action for a clip optionally using a custom root target\r\n\t\t// object (this method allocates a lot of dynamic memory in case a\r\n\t\t// previously unknown clip/root combination is specified)\r\n\r\n\r\n\t\tclipAction(clip, optionalRoot, blendMode) {\r\n\t\t\tconst root = optionalRoot || this._root,\r\n\t\t\t\t\t\trootUuid = root.uuid;\r\n\t\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName(root, clip) : clip;\r\n\t\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\r\n\t\t\tconst actionsForClip = this._actionsByClip[clipUuid];\r\n\t\t\tlet prototypeAction = null;\r\n\r\n\t\t\tif (blendMode === undefined) {\r\n\t\t\t\tif (clipObject !== null) {\r\n\t\t\t\t\tblendMode = clipObject.blendMode;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tblendMode = NormalAnimationBlendMode;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (actionsForClip !== undefined) {\r\n\t\t\t\tconst existingAction = actionsForClip.actionByRoot[rootUuid];\r\n\r\n\t\t\t\tif (existingAction !== undefined && existingAction.blendMode === blendMode) {\r\n\t\t\t\t\treturn existingAction;\r\n\t\t\t\t} // we know the clip, so we don't have to parse all\r\n\t\t\t\t// the bindings again but can just copy\r\n\r\n\r\n\t\t\t\tprototypeAction = actionsForClip.knownActions[0]; // also, take the clip from the prototype action\r\n\r\n\t\t\t\tif (clipObject === null) clipObject = prototypeAction._clip;\r\n\t\t\t} // clip must be known when specified via string\r\n\r\n\r\n\t\t\tif (clipObject === null) return null; // allocate all resources required to run it\r\n\r\n\t\t\tconst newAction = new AnimationAction(this, clipObject, optionalRoot, blendMode);\r\n\r\n\t\t\tthis._bindAction(newAction, prototypeAction); // and make the action known to the memory manager\r\n\r\n\r\n\t\t\tthis._addInactiveAction(newAction, clipUuid, rootUuid);\r\n\r\n\t\t\treturn newAction;\r\n\t\t} // get an existing action\r\n\r\n\r\n\t\texistingAction(clip, optionalRoot) {\r\n\t\t\tconst root = optionalRoot || this._root,\r\n\t\t\t\t\t\trootUuid = root.uuid,\r\n\t\t\t\t\t\tclipObject = typeof clip === 'string' ? AnimationClip.findByName(root, clip) : clip,\r\n\t\t\t\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\r\n\t\t\t\t\t\tactionsForClip = this._actionsByClip[clipUuid];\r\n\r\n\t\t\tif (actionsForClip !== undefined) {\r\n\t\t\t\treturn actionsForClip.actionByRoot[rootUuid] || null;\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t} // deactivates all previously scheduled actions\r\n\r\n\r\n\t\tstopAllAction() {\r\n\t\t\tconst actions = this._actions,\r\n\t\t\t\t\t\tnActions = this._nActiveActions;\r\n\r\n\t\t\tfor (let i = nActions - 1; i >= 0; --i) {\r\n\t\t\t\tactions[i].stop();\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t} // advance the time and update apply the animation\r\n\r\n\r\n\t\tupdate(deltaTime) {\r\n\t\t\tdeltaTime *= this.timeScale;\r\n\t\t\tconst actions = this._actions,\r\n\t\t\t\t\t\tnActions = this._nActiveActions,\r\n\t\t\t\t\t\ttime = this.time += deltaTime,\r\n\t\t\t\t\t\ttimeDirection = Math.sign(deltaTime),\r\n\t\t\t\t\t\taccuIndex = this._accuIndex ^= 1; // run active actions\r\n\r\n\t\t\tfor (let i = 0; i !== nActions; ++i) {\r\n\t\t\t\tconst action = actions[i];\r\n\r\n\t\t\t\taction._update(time, deltaTime, timeDirection, accuIndex);\r\n\t\t\t} // update scene graph\r\n\r\n\r\n\t\t\tconst bindings = this._bindings,\r\n\t\t\t\t\t\tnBindings = this._nActiveBindings;\r\n\r\n\t\t\tfor (let i = 0; i !== nBindings; ++i) {\r\n\t\t\t\tbindings[i].apply(accuIndex);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t} // Allows you to seek to a specific time in an animation.\r\n\r\n\r\n\t\tsetTime(timeInSeconds) {\r\n\t\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\r\n\r\n\t\t\tfor (let i = 0; i < this._actions.length; i++) {\r\n\t\t\t\tthis._actions[i].time = 0; // Zero out time attribute for all associated AnimationAction objects.\r\n\t\t\t}\r\n\r\n\t\t\treturn this.update(timeInSeconds); // Update used to set exact time. Returns \"this\" AnimationMixer object.\r\n\t\t} // return this mixer's root target object\r\n\r\n\r\n\t\tgetRoot() {\r\n\t\t\treturn this._root;\r\n\t\t} // free all resources specific to a particular clip\r\n\r\n\r\n\t\tuncacheClip(clip) {\r\n\t\t\tconst actions = this._actions,\r\n\t\t\t\t\t\tclipUuid = clip.uuid,\r\n\t\t\t\t\t\tactionsByClip = this._actionsByClip,\r\n\t\t\t\t\t\tactionsForClip = actionsByClip[clipUuid];\r\n\r\n\t\t\tif (actionsForClip !== undefined) {\r\n\t\t\t\t// note: just calling _removeInactiveAction would mess up the\r\n\t\t\t\t// iteration state and also require updating the state we can\r\n\t\t\t\t// just throw away\r\n\t\t\t\tconst actionsToRemove = actionsForClip.knownActions;\r\n\r\n\t\t\t\tfor (let i = 0, n = actionsToRemove.length; i !== n; ++i) {\r\n\t\t\t\t\tconst action = actionsToRemove[i];\r\n\r\n\t\t\t\t\tthis._deactivateAction(action);\r\n\r\n\t\t\t\t\tconst cacheIndex = action._cacheIndex,\r\n\t\t\t\t\t\t\t\tlastInactiveAction = actions[actions.length - 1];\r\n\t\t\t\t\taction._cacheIndex = null;\r\n\t\t\t\t\taction._byClipCacheIndex = null;\r\n\t\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\r\n\t\t\t\t\tactions[cacheIndex] = lastInactiveAction;\r\n\t\t\t\t\tactions.pop();\r\n\r\n\t\t\t\t\tthis._removeInactiveBindingsForAction(action);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdelete actionsByClip[clipUuid];\r\n\t\t\t}\r\n\t\t} // free all resources specific to a particular root target object\r\n\r\n\r\n\t\tuncacheRoot(root) {\r\n\t\t\tconst rootUuid = root.uuid,\r\n\t\t\t\t\t\tactionsByClip = this._actionsByClip;\r\n\r\n\t\t\tfor (const clipUuid in actionsByClip) {\r\n\t\t\t\tconst actionByRoot = actionsByClip[clipUuid].actionByRoot,\r\n\t\t\t\t\t\t\taction = actionByRoot[rootUuid];\r\n\r\n\t\t\t\tif (action !== undefined) {\r\n\t\t\t\t\tthis._deactivateAction(action);\r\n\r\n\t\t\t\t\tthis._removeInactiveAction(action);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst bindingsByRoot = this._bindingsByRootAndName,\r\n\t\t\t\t\t\tbindingByName = bindingsByRoot[rootUuid];\r\n\r\n\t\t\tif (bindingByName !== undefined) {\r\n\t\t\t\tfor (const trackName in bindingByName) {\r\n\t\t\t\t\tconst binding = bindingByName[trackName];\r\n\t\t\t\t\tbinding.restoreOriginalState();\r\n\r\n\t\t\t\t\tthis._removeInactiveBinding(binding);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} // remove a targeted clip from the cache\r\n\r\n\r\n\t\tuncacheAction(clip, optionalRoot) {\r\n\t\t\tconst action = this.existingAction(clip, optionalRoot);\r\n\r\n\t\t\tif (action !== null) {\r\n\t\t\t\tthis._deactivateAction(action);\r\n\r\n\t\t\t\tthis._removeInactiveAction(action);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tAnimationMixer.prototype._controlInterpolantsResultBuffer = new Float32Array(1);\r\n\r\n\tclass Uniform {\r\n\t\tconstructor(value) {\r\n\t\t\tif (typeof value === 'string') {\r\n\t\t\t\tconsole.warn('THREE.Uniform: Type parameter is no longer needed.');\r\n\t\t\t\tvalue = arguments[1];\r\n\t\t\t}\r\n\r\n\t\t\tthis.value = value;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new Uniform(this.value.clone === undefined ? this.value : this.value.clone());\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass InstancedInterleavedBuffer extends InterleavedBuffer {\r\n\t\tconstructor(array, stride, meshPerAttribute = 1) {\r\n\t\t\tsuper(array, stride);\r\n\t\t\tthis.meshPerAttribute = meshPerAttribute;\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source);\r\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclone(data) {\r\n\t\t\tconst ib = super.clone(data);\r\n\t\t\tib.meshPerAttribute = this.meshPerAttribute;\r\n\t\t\treturn ib;\r\n\t\t}\r\n\r\n\t\ttoJSON(data) {\r\n\t\t\tconst json = super.toJSON(data);\r\n\t\t\tjson.isInstancedInterleavedBuffer = true;\r\n\t\t\tjson.meshPerAttribute = this.meshPerAttribute;\r\n\t\t\treturn json;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tInstancedInterleavedBuffer.prototype.isInstancedInterleavedBuffer = true;\r\n\r\n\tclass GLBufferAttribute {\r\n\t\tconstructor(buffer, type, itemSize, elementSize, count) {\r\n\t\t\tthis.buffer = buffer;\r\n\t\t\tthis.type = type;\r\n\t\t\tthis.itemSize = itemSize;\r\n\t\t\tthis.elementSize = elementSize;\r\n\t\t\tthis.count = count;\r\n\t\t\tthis.version = 0;\r\n\t\t}\r\n\r\n\t\tset needsUpdate(value) {\r\n\t\t\tif (value === true) this.version++;\r\n\t\t}\r\n\r\n\t\tsetBuffer(buffer) {\r\n\t\t\tthis.buffer = buffer;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetType(type, elementSize) {\r\n\t\t\tthis.type = type;\r\n\t\t\tthis.elementSize = elementSize;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetItemSize(itemSize) {\r\n\t\t\tthis.itemSize = itemSize;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetCount(count) {\r\n\t\t\tthis.count = count;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tGLBufferAttribute.prototype.isGLBufferAttribute = true;\r\n\r\n\tclass Raycaster {\r\n\t\tconstructor(origin, direction, near = 0, far = Infinity) {\r\n\t\t\tthis.ray = new Ray(origin, direction); // direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t\t\tthis.near = near;\r\n\t\t\tthis.far = far;\r\n\t\t\tthis.camera = null;\r\n\t\t\tthis.layers = new Layers();\r\n\t\t\tthis.params = {\r\n\t\t\t\tMesh: {},\r\n\t\t\t\tLine: {\r\n\t\t\t\t\tthreshold: 1\r\n\t\t\t\t},\r\n\t\t\t\tLOD: {},\r\n\t\t\t\tPoints: {\r\n\t\t\t\t\tthreshold: 1\r\n\t\t\t\t},\r\n\t\t\t\tSprite: {}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tset(origin, direction) {\r\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\t\t\tthis.ray.set(origin, direction);\r\n\t\t}\r\n\r\n\t\tsetFromCamera(coords, camera) {\r\n\t\t\tif (camera && camera.isPerspectiveCamera) {\r\n\t\t\t\tthis.ray.origin.setFromMatrixPosition(camera.matrixWorld);\r\n\t\t\t\tthis.ray.direction.set(coords.x, coords.y, 0.5).unproject(camera).sub(this.ray.origin).normalize();\r\n\t\t\t\tthis.camera = camera;\r\n\t\t\t} else if (camera && camera.isOrthographicCamera) {\r\n\t\t\t\tthis.ray.origin.set(coords.x, coords.y, (camera.near + camera.far) / (camera.near - camera.far)).unproject(camera); // set origin in plane of camera\r\n\r\n\t\t\t\tthis.ray.direction.set(0, 0, -1).transformDirection(camera.matrixWorld);\r\n\t\t\t\tthis.camera = camera;\r\n\t\t\t} else {\r\n\t\t\t\tconsole.error('THREE.Raycaster: Unsupported camera type: ' + camera.type);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tintersectObject(object, recursive = false, intersects = []) {\r\n\t\t\tintersectObject(object, this, intersects, recursive);\r\n\t\t\tintersects.sort(ascSort);\r\n\t\t\treturn intersects;\r\n\t\t}\r\n\r\n\t\tintersectObjects(objects, recursive = false, intersects = []) {\r\n\t\t\tfor (let i = 0, l = objects.length; i < l; i++) {\r\n\t\t\t\tintersectObject(objects[i], this, intersects, recursive);\r\n\t\t\t}\r\n\r\n\t\t\tintersects.sort(ascSort);\r\n\t\t\treturn intersects;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction ascSort(a, b) {\r\n\t\treturn a.distance - b.distance;\r\n\t}\r\n\r\n\tfunction intersectObject(object, raycaster, intersects, recursive) {\r\n\t\tif (object.layers.test(raycaster.layers)) {\r\n\t\t\tobject.raycast(raycaster, intersects);\r\n\t\t}\r\n\r\n\t\tif (recursive === true) {\r\n\t\t\tconst children = object.children;\r\n\r\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\r\n\t\t\t\tintersectObject(children[i], raycaster, intersects, true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\r\n\t *\r\n\t * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\r\n\t * The azimuthal angle (theta) is measured from the positive z-axis.\r\n\t */\r\n\r\n\tclass Spherical {\r\n\t\tconstructor(radius = 1, phi = 0, theta = 0) {\r\n\t\t\tthis.radius = radius;\r\n\t\t\tthis.phi = phi; // polar angle\r\n\r\n\t\t\tthis.theta = theta; // azimuthal angle\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tset(radius, phi, theta) {\r\n\t\t\tthis.radius = radius;\r\n\t\t\tthis.phi = phi;\r\n\t\t\tthis.theta = theta;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopy(other) {\r\n\t\t\tthis.radius = other.radius;\r\n\t\t\tthis.phi = other.phi;\r\n\t\t\tthis.theta = other.theta;\r\n\t\t\treturn this;\r\n\t\t} // restrict phi to be betwee EPS and PI-EPS\r\n\r\n\r\n\t\tmakeSafe() {\r\n\t\t\tconst EPS = 0.000001;\r\n\t\t\tthis.phi = Math.max(EPS, Math.min(Math.PI - EPS, this.phi));\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromVector3(v) {\r\n\t\t\treturn this.setFromCartesianCoords(v.x, v.y, v.z);\r\n\t\t}\r\n\r\n\t\tsetFromCartesianCoords(x, y, z) {\r\n\t\t\tthis.radius = Math.sqrt(x * x + y * y + z * z);\r\n\r\n\t\t\tif (this.radius === 0) {\r\n\t\t\t\tthis.theta = 0;\r\n\t\t\t\tthis.phi = 0;\r\n\t\t\t} else {\r\n\t\t\t\tthis.theta = Math.atan2(x, z);\r\n\t\t\t\tthis.phi = Math.acos(clamp(y / this.radius, -1, 1));\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor().copy(this);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\r\n\t */\r\n\tclass Cylindrical {\r\n\t\tconstructor(radius = 1, theta = 0, y = 0) {\r\n\t\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\r\n\r\n\t\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\r\n\r\n\t\t\tthis.y = y; // height above the x-z plane\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tset(radius, theta, y) {\r\n\t\t\tthis.radius = radius;\r\n\t\t\tthis.theta = theta;\r\n\t\t\tthis.y = y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopy(other) {\r\n\t\t\tthis.radius = other.radius;\r\n\t\t\tthis.theta = other.theta;\r\n\t\t\tthis.y = other.y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromVector3(v) {\r\n\t\t\treturn this.setFromCartesianCoords(v.x, v.y, v.z);\r\n\t\t}\r\n\r\n\t\tsetFromCartesianCoords(x, y, z) {\r\n\t\t\tthis.radius = Math.sqrt(x * x + z * z);\r\n\t\t\tthis.theta = Math.atan2(x, z);\r\n\t\t\tthis.y = y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor().copy(this);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst _vector$4 = /*@__PURE__*/new Vector2();\r\n\r\n\tclass Box2 {\r\n\t\tconstructor(min = new Vector2(+Infinity, +Infinity), max = new Vector2(-Infinity, -Infinity)) {\r\n\t\t\tthis.min = min;\r\n\t\t\tthis.max = max;\r\n\t\t}\r\n\r\n\t\tset(min, max) {\r\n\t\t\tthis.min.copy(min);\r\n\t\t\tthis.max.copy(max);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromPoints(points) {\r\n\t\t\tthis.makeEmpty();\r\n\r\n\t\t\tfor (let i = 0, il = points.length; i < il; i++) {\r\n\t\t\t\tthis.expandByPoint(points[i]);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetFromCenterAndSize(center, size) {\r\n\t\t\tconst halfSize = _vector$4.copy(size).multiplyScalar(0.5);\r\n\r\n\t\t\tthis.min.copy(center).sub(halfSize);\r\n\t\t\tthis.max.copy(center).add(halfSize);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor().copy(this);\r\n\t\t}\r\n\r\n\t\tcopy(box) {\r\n\t\t\tthis.min.copy(box.min);\r\n\t\t\tthis.max.copy(box.max);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tmakeEmpty() {\r\n\t\t\tthis.min.x = this.min.y = +Infinity;\r\n\t\t\tthis.max.x = this.max.y = -Infinity;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tisEmpty() {\r\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\t\t\treturn this.max.x < this.min.x || this.max.y < this.min.y;\r\n\t\t}\r\n\r\n\t\tgetCenter(target) {\r\n\t\t\treturn this.isEmpty() ? target.set(0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);\r\n\t\t}\r\n\r\n\t\tgetSize(target) {\r\n\t\t\treturn this.isEmpty() ? target.set(0, 0) : target.subVectors(this.max, this.min);\r\n\t\t}\r\n\r\n\t\texpandByPoint(point) {\r\n\t\t\tthis.min.min(point);\r\n\t\t\tthis.max.max(point);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\texpandByVector(vector) {\r\n\t\t\tthis.min.sub(vector);\r\n\t\t\tthis.max.add(vector);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\texpandByScalar(scalar) {\r\n\t\t\tthis.min.addScalar(-scalar);\r\n\t\t\tthis.max.addScalar(scalar);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcontainsPoint(point) {\r\n\t\t\treturn point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y ? false : true;\r\n\t\t}\r\n\r\n\t\tcontainsBox(box) {\r\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y;\r\n\t\t}\r\n\r\n\t\tgetParameter(point, target) {\r\n\t\t\t// This can potentially have a divide by zero if the box\r\n\t\t\t// has a size dimension of 0.\r\n\t\t\treturn target.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y));\r\n\t\t}\r\n\r\n\t\tintersectsBox(box) {\r\n\t\t\t// using 4 splitting planes to rule out intersections\r\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y ? false : true;\r\n\t\t}\r\n\r\n\t\tclampPoint(point, target) {\r\n\t\t\treturn target.copy(point).clamp(this.min, this.max);\r\n\t\t}\r\n\r\n\t\tdistanceToPoint(point) {\r\n\t\t\tconst clampedPoint = _vector$4.copy(point).clamp(this.min, this.max);\r\n\r\n\t\t\treturn clampedPoint.sub(point).length();\r\n\t\t}\r\n\r\n\t\tintersect(box) {\r\n\t\t\tthis.min.max(box.min);\r\n\t\t\tthis.max.min(box.max);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tunion(box) {\r\n\t\t\tthis.min.min(box.min);\r\n\t\t\tthis.max.max(box.max);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttranslate(offset) {\r\n\t\t\tthis.min.add(offset);\r\n\t\t\tthis.max.add(offset);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tequals(box) {\r\n\t\t\treturn box.min.equals(this.min) && box.max.equals(this.max);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tBox2.prototype.isBox2 = true;\r\n\r\n\tconst _startP = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _startEnd = /*@__PURE__*/new Vector3();\r\n\r\n\tclass Line3 {\r\n\t\tconstructor(start = new Vector3(), end = new Vector3()) {\r\n\t\t\tthis.start = start;\r\n\t\t\tthis.end = end;\r\n\t\t}\r\n\r\n\t\tset(start, end) {\r\n\t\t\tthis.start.copy(start);\r\n\t\t\tthis.end.copy(end);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopy(line) {\r\n\t\t\tthis.start.copy(line.start);\r\n\t\t\tthis.end.copy(line.end);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tgetCenter(target) {\r\n\t\t\treturn target.addVectors(this.start, this.end).multiplyScalar(0.5);\r\n\t\t}\r\n\r\n\t\tdelta(target) {\r\n\t\t\treturn target.subVectors(this.end, this.start);\r\n\t\t}\r\n\r\n\t\tdistanceSq() {\r\n\t\t\treturn this.start.distanceToSquared(this.end);\r\n\t\t}\r\n\r\n\t\tdistance() {\r\n\t\t\treturn this.start.distanceTo(this.end);\r\n\t\t}\r\n\r\n\t\tat(t, target) {\r\n\t\t\treturn this.delta(target).multiplyScalar(t).add(this.start);\r\n\t\t}\r\n\r\n\t\tclosestPointToPointParameter(point, clampToLine) {\r\n\t\t\t_startP.subVectors(point, this.start);\r\n\r\n\t\t\t_startEnd.subVectors(this.end, this.start);\r\n\r\n\t\t\tconst startEnd2 = _startEnd.dot(_startEnd);\r\n\r\n\t\t\tconst startEnd_startP = _startEnd.dot(_startP);\r\n\r\n\t\t\tlet t = startEnd_startP / startEnd2;\r\n\r\n\t\t\tif (clampToLine) {\r\n\t\t\t\tt = clamp(t, 0, 1);\r\n\t\t\t}\r\n\r\n\t\t\treturn t;\r\n\t\t}\r\n\r\n\t\tclosestPointToPoint(point, clampToLine, target) {\r\n\t\t\tconst t = this.closestPointToPointParameter(point, clampToLine);\r\n\t\t\treturn this.delta(target).multiplyScalar(t).add(this.start);\r\n\t\t}\r\n\r\n\t\tapplyMatrix4(matrix) {\r\n\t\t\tthis.start.applyMatrix4(matrix);\r\n\t\t\tthis.end.applyMatrix4(matrix);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tequals(line) {\r\n\t\t\treturn line.start.equals(this.start) && line.end.equals(this.end);\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new this.constructor().copy(this);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass ImmediateRenderObject extends Object3D {\r\n\t\tconstructor(material) {\r\n\t\t\tsuper();\r\n\t\t\tthis.material = material;\r\n\r\n\t\t\tthis.render = function ()\r\n\t\t\t/* renderCallback */\r\n\t\t\t{};\r\n\r\n\t\t\tthis.hasPositions = false;\r\n\t\t\tthis.hasNormals = false;\r\n\t\t\tthis.hasColors = false;\r\n\t\t\tthis.hasUvs = false;\r\n\t\t\tthis.positionArray = null;\r\n\t\t\tthis.normalArray = null;\r\n\t\t\tthis.colorArray = null;\r\n\t\t\tthis.uvArray = null;\r\n\t\t\tthis.count = 0;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tImmediateRenderObject.prototype.isImmediateRenderObject = true;\r\n\r\n\tconst _vector$3 = /*@__PURE__*/new Vector3();\r\n\r\n\tclass SpotLightHelper extends Object3D {\r\n\t\tconstructor(light, color) {\r\n\t\t\tsuper();\r\n\t\t\tthis.light = light;\r\n\t\t\tthis.light.updateMatrixWorld();\r\n\t\t\tthis.matrix = light.matrixWorld;\r\n\t\t\tthis.matrixAutoUpdate = false;\r\n\t\t\tthis.color = color;\r\n\t\t\tconst geometry = new BufferGeometry();\r\n\t\t\tconst positions = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1];\r\n\r\n\t\t\tfor (let i = 0, j = 1, l = 32; i < l; i++, j++) {\r\n\t\t\t\tconst p1 = i / l * Math.PI * 2;\r\n\t\t\t\tconst p2 = j / l * Math.PI * 2;\r\n\t\t\t\tpositions.push(Math.cos(p1), Math.sin(p1), 1, Math.cos(p2), Math.sin(p2), 1);\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\r\n\t\t\tconst material = new LineBasicMaterial({\r\n\t\t\t\tfog: false,\r\n\t\t\t\ttoneMapped: false\r\n\t\t\t});\r\n\t\t\tthis.cone = new LineSegments(geometry, material);\r\n\t\t\tthis.add(this.cone);\r\n\t\t\tthis.update();\r\n\t\t}\r\n\r\n\t\tdispose() {\r\n\t\t\tthis.cone.geometry.dispose();\r\n\t\t\tthis.cone.material.dispose();\r\n\t\t}\r\n\r\n\t\tupdate() {\r\n\t\t\tthis.light.updateMatrixWorld();\r\n\t\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\r\n\t\t\tconst coneWidth = coneLength * Math.tan(this.light.angle);\r\n\t\t\tthis.cone.scale.set(coneWidth, coneWidth, coneLength);\r\n\r\n\t\t\t_vector$3.setFromMatrixPosition(this.light.target.matrixWorld);\r\n\r\n\t\t\tthis.cone.lookAt(_vector$3);\r\n\r\n\t\t\tif (this.color !== undefined) {\r\n\t\t\t\tthis.cone.material.color.set(this.color);\r\n\t\t\t} else {\r\n\t\t\t\tthis.cone.material.color.copy(this.light.color);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst _vector$2 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _boneMatrix = /*@__PURE__*/new Matrix4();\r\n\r\n\tconst _matrixWorldInv = /*@__PURE__*/new Matrix4();\r\n\r\n\tclass SkeletonHelper extends LineSegments {\r\n\t\tconstructor(object) {\r\n\t\t\tconst bones = getBoneList(object);\r\n\t\t\tconst geometry = new BufferGeometry();\r\n\t\t\tconst vertices = [];\r\n\t\t\tconst colors = [];\r\n\t\t\tconst color1 = new Color(0, 0, 1);\r\n\t\t\tconst color2 = new Color(0, 1, 0);\r\n\r\n\t\t\tfor (let i = 0; i < bones.length; i++) {\r\n\t\t\t\tconst bone = bones[i];\r\n\r\n\t\t\t\tif (bone.parent && bone.parent.isBone) {\r\n\t\t\t\t\tvertices.push(0, 0, 0);\r\n\t\t\t\t\tvertices.push(0, 0, 0);\r\n\t\t\t\t\tcolors.push(color1.r, color1.g, color1.b);\r\n\t\t\t\t\tcolors.push(color2.r, color2.g, color2.b);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\r\n\t\t\tconst material = new LineBasicMaterial({\r\n\t\t\t\tvertexColors: true,\r\n\t\t\t\tdepthTest: false,\r\n\t\t\t\tdepthWrite: false,\r\n\t\t\t\ttoneMapped: false,\r\n\t\t\t\ttransparent: true\r\n\t\t\t});\r\n\t\t\tsuper(geometry, material);\r\n\t\t\tthis.type = 'SkeletonHelper';\r\n\t\t\tthis.isSkeletonHelper = true;\r\n\t\t\tthis.root = object;\r\n\t\t\tthis.bones = bones;\r\n\t\t\tthis.matrix = object.matrixWorld;\r\n\t\t\tthis.matrixAutoUpdate = false;\r\n\t\t}\r\n\r\n\t\tupdateMatrixWorld(force) {\r\n\t\t\tconst bones = this.bones;\r\n\t\t\tconst geometry = this.geometry;\r\n\t\t\tconst position = geometry.getAttribute('position');\r\n\r\n\t\t\t_matrixWorldInv.copy(this.root.matrixWorld).invert();\r\n\r\n\t\t\tfor (let i = 0, j = 0; i < bones.length; i++) {\r\n\t\t\t\tconst bone = bones[i];\r\n\r\n\t\t\t\tif (bone.parent && bone.parent.isBone) {\r\n\t\t\t\t\t_boneMatrix.multiplyMatrices(_matrixWorldInv, bone.matrixWorld);\r\n\r\n\t\t\t\t\t_vector$2.setFromMatrixPosition(_boneMatrix);\r\n\r\n\t\t\t\t\tposition.setXYZ(j, _vector$2.x, _vector$2.y, _vector$2.z);\r\n\r\n\t\t\t\t\t_boneMatrix.multiplyMatrices(_matrixWorldInv, bone.parent.matrixWorld);\r\n\r\n\t\t\t\t\t_vector$2.setFromMatrixPosition(_boneMatrix);\r\n\r\n\t\t\t\t\tposition.setXYZ(j + 1, _vector$2.x, _vector$2.y, _vector$2.z);\r\n\t\t\t\t\tj += 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.getAttribute('position').needsUpdate = true;\r\n\t\t\tsuper.updateMatrixWorld(force);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction getBoneList(object) {\r\n\t\tconst boneList = [];\r\n\r\n\t\tif (object && object.isBone) {\r\n\t\t\tboneList.push(object);\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < object.children.length; i++) {\r\n\t\t\tboneList.push.apply(boneList, getBoneList(object.children[i]));\r\n\t\t}\r\n\r\n\t\treturn boneList;\r\n\t}\r\n\r\n\tclass PointLightHelper extends Mesh {\r\n\t\tconstructor(light, sphereSize, color) {\r\n\t\t\tconst geometry = new SphereGeometry(sphereSize, 4, 2);\r\n\t\t\tconst material = new MeshBasicMaterial({\r\n\t\t\t\twireframe: true,\r\n\t\t\t\tfog: false,\r\n\t\t\t\ttoneMapped: false\r\n\t\t\t});\r\n\t\t\tsuper(geometry, material);\r\n\t\t\tthis.light = light;\r\n\t\t\tthis.light.updateMatrixWorld();\r\n\t\t\tthis.color = color;\r\n\t\t\tthis.type = 'PointLightHelper';\r\n\t\t\tthis.matrix = this.light.matrixWorld;\r\n\t\t\tthis.matrixAutoUpdate = false;\r\n\t\t\tthis.update();\r\n\t\t\t/*\r\n\t\t\t// TODO: delete this comment?\r\n\t\t\tconst distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );\r\n\t\t\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\r\n\t\t\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\r\n\t\t\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\r\n\t\t\tconst d = light.distance;\r\n\t\t\tif ( d === 0.0 ) {\r\n\t\t\t\tthis.lightDistance.visible = false;\r\n\t\t\t} else {\r\n\t\t\t\tthis.lightDistance.scale.set( d, d, d );\r\n\t\t\t}\r\n\t\t\tthis.add( this.lightDistance );\r\n\t\t\t*/\r\n\t\t}\r\n\r\n\t\tdispose() {\r\n\t\t\tthis.geometry.dispose();\r\n\t\t\tthis.material.dispose();\r\n\t\t}\r\n\r\n\t\tupdate() {\r\n\t\t\tif (this.color !== undefined) {\r\n\t\t\t\tthis.material.color.set(this.color);\r\n\t\t\t} else {\r\n\t\t\t\tthis.material.color.copy(this.light.color);\r\n\t\t\t}\r\n\t\t\t/*\r\n\t\t\tconst d = this.light.distance;\r\n\t\t\t\tif ( d === 0.0 ) {\r\n\t\t\t\t\tthis.lightDistance.visible = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.lightDistance.visible = true;\r\n\t\t\t\tthis.lightDistance.scale.set( d, d, d );\r\n\t\t\t\t}\r\n\t\t\t*/\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst _vector$1 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _color1 = /*@__PURE__*/new Color();\r\n\r\n\tconst _color2 = /*@__PURE__*/new Color();\r\n\r\n\tclass HemisphereLightHelper extends Object3D {\r\n\t\tconstructor(light, size, color) {\r\n\t\t\tsuper();\r\n\t\t\tthis.light = light;\r\n\t\t\tthis.light.updateMatrixWorld();\r\n\t\t\tthis.matrix = light.matrixWorld;\r\n\t\t\tthis.matrixAutoUpdate = false;\r\n\t\t\tthis.color = color;\r\n\t\t\tconst geometry = new OctahedronGeometry(size);\r\n\t\t\tgeometry.rotateY(Math.PI * 0.5);\r\n\t\t\tthis.material = new MeshBasicMaterial({\r\n\t\t\t\twireframe: true,\r\n\t\t\t\tfog: false,\r\n\t\t\t\ttoneMapped: false\r\n\t\t\t});\r\n\t\t\tif (this.color === undefined) this.material.vertexColors = true;\r\n\t\t\tconst position = geometry.getAttribute('position');\r\n\t\t\tconst colors = new Float32Array(position.count * 3);\r\n\t\t\tgeometry.setAttribute('color', new BufferAttribute(colors, 3));\r\n\t\t\tthis.add(new Mesh(geometry, this.material));\r\n\t\t\tthis.update();\r\n\t\t}\r\n\r\n\t\tdispose() {\r\n\t\t\tthis.children[0].geometry.dispose();\r\n\t\t\tthis.children[0].material.dispose();\r\n\t\t}\r\n\r\n\t\tupdate() {\r\n\t\t\tconst mesh = this.children[0];\r\n\r\n\t\t\tif (this.color !== undefined) {\r\n\t\t\t\tthis.material.color.set(this.color);\r\n\t\t\t} else {\r\n\t\t\t\tconst colors = mesh.geometry.getAttribute('color');\r\n\r\n\t\t\t\t_color1.copy(this.light.color);\r\n\r\n\t\t\t\t_color2.copy(this.light.groundColor);\r\n\r\n\t\t\t\tfor (let i = 0, l = colors.count; i < l; i++) {\r\n\t\t\t\t\tconst color = i < l / 2 ? _color1 : _color2;\r\n\t\t\t\t\tcolors.setXYZ(i, color.r, color.g, color.b);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcolors.needsUpdate = true;\r\n\t\t\t}\r\n\r\n\t\t\tmesh.lookAt(_vector$1.setFromMatrixPosition(this.light.matrixWorld).negate());\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass GridHelper extends LineSegments {\r\n\t\tconstructor(size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888) {\r\n\t\t\tcolor1 = new Color(color1);\r\n\t\t\tcolor2 = new Color(color2);\r\n\t\t\tconst center = divisions / 2;\r\n\t\t\tconst step = size / divisions;\r\n\t\t\tconst halfSize = size / 2;\r\n\t\t\tconst vertices = [],\r\n\t\t\t\t\t\tcolors = [];\r\n\r\n\t\t\tfor (let i = 0, j = 0, k = -halfSize; i <= divisions; i++, k += step) {\r\n\t\t\t\tvertices.push(-halfSize, 0, k, halfSize, 0, k);\r\n\t\t\t\tvertices.push(k, 0, -halfSize, k, 0, halfSize);\r\n\t\t\t\tconst color = i === center ? color1 : color2;\r\n\t\t\t\tcolor.toArray(colors, j);\r\n\t\t\t\tj += 3;\r\n\t\t\t\tcolor.toArray(colors, j);\r\n\t\t\t\tj += 3;\r\n\t\t\t\tcolor.toArray(colors, j);\r\n\t\t\t\tj += 3;\r\n\t\t\t\tcolor.toArray(colors, j);\r\n\t\t\t\tj += 3;\r\n\t\t\t}\r\n\r\n\t\t\tconst geometry = new BufferGeometry();\r\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\r\n\t\t\tconst material = new LineBasicMaterial({\r\n\t\t\t\tvertexColors: true,\r\n\t\t\t\ttoneMapped: false\r\n\t\t\t});\r\n\t\t\tsuper(geometry, material);\r\n\t\t\tthis.type = 'GridHelper';\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass PolarGridHelper extends LineSegments {\r\n\t\tconstructor(radius = 10, radials = 16, circles = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888) {\r\n\t\t\tcolor1 = new Color(color1);\r\n\t\t\tcolor2 = new Color(color2);\r\n\t\t\tconst vertices = [];\r\n\t\t\tconst colors = []; // create the radials\r\n\r\n\t\t\tfor (let i = 0; i <= radials; i++) {\r\n\t\t\t\tconst v = i / radials * (Math.PI * 2);\r\n\t\t\t\tconst x = Math.sin(v) * radius;\r\n\t\t\t\tconst z = Math.cos(v) * radius;\r\n\t\t\t\tvertices.push(0, 0, 0);\r\n\t\t\t\tvertices.push(x, 0, z);\r\n\t\t\t\tconst color = i & 1 ? color1 : color2;\r\n\t\t\t\tcolors.push(color.r, color.g, color.b);\r\n\t\t\t\tcolors.push(color.r, color.g, color.b);\r\n\t\t\t} // create the circles\r\n\r\n\r\n\t\t\tfor (let i = 0; i <= circles; i++) {\r\n\t\t\t\tconst color = i & 1 ? color1 : color2;\r\n\t\t\t\tconst r = radius - radius / circles * i;\r\n\r\n\t\t\t\tfor (let j = 0; j < divisions; j++) {\r\n\t\t\t\t\t// first vertex\r\n\t\t\t\t\tlet v = j / divisions * (Math.PI * 2);\r\n\t\t\t\t\tlet x = Math.sin(v) * r;\r\n\t\t\t\t\tlet z = Math.cos(v) * r;\r\n\t\t\t\t\tvertices.push(x, 0, z);\r\n\t\t\t\t\tcolors.push(color.r, color.g, color.b); // second vertex\r\n\r\n\t\t\t\t\tv = (j + 1) / divisions * (Math.PI * 2);\r\n\t\t\t\t\tx = Math.sin(v) * r;\r\n\t\t\t\t\tz = Math.cos(v) * r;\r\n\t\t\t\t\tvertices.push(x, 0, z);\r\n\t\t\t\t\tcolors.push(color.r, color.g, color.b);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst geometry = new BufferGeometry();\r\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\r\n\t\t\tconst material = new LineBasicMaterial({\r\n\t\t\t\tvertexColors: true,\r\n\t\t\t\ttoneMapped: false\r\n\t\t\t});\r\n\t\t\tsuper(geometry, material);\r\n\t\t\tthis.type = 'PolarGridHelper';\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst _v1 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _v2 = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _v3 = /*@__PURE__*/new Vector3();\r\n\r\n\tclass DirectionalLightHelper extends Object3D {\r\n\t\tconstructor(light, size, color) {\r\n\t\t\tsuper();\r\n\t\t\tthis.light = light;\r\n\t\t\tthis.light.updateMatrixWorld();\r\n\t\t\tthis.matrix = light.matrixWorld;\r\n\t\t\tthis.matrixAutoUpdate = false;\r\n\t\t\tthis.color = color;\r\n\t\t\tif (size === undefined) size = 1;\r\n\t\t\tlet geometry = new BufferGeometry();\r\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute([-size, size, 0, size, size, 0, size, -size, 0, -size, -size, 0, -size, size, 0], 3));\r\n\t\t\tconst material = new LineBasicMaterial({\r\n\t\t\t\tfog: false,\r\n\t\t\t\ttoneMapped: false\r\n\t\t\t});\r\n\t\t\tthis.lightPlane = new Line(geometry, material);\r\n\t\t\tthis.add(this.lightPlane);\r\n\t\t\tgeometry = new BufferGeometry();\r\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 0, 0, 1], 3));\r\n\t\t\tthis.targetLine = new Line(geometry, material);\r\n\t\t\tthis.add(this.targetLine);\r\n\t\t\tthis.update();\r\n\t\t}\r\n\r\n\t\tdispose() {\r\n\t\t\tthis.lightPlane.geometry.dispose();\r\n\t\t\tthis.lightPlane.material.dispose();\r\n\t\t\tthis.targetLine.geometry.dispose();\r\n\t\t\tthis.targetLine.material.dispose();\r\n\t\t}\r\n\r\n\t\tupdate() {\r\n\t\t\t_v1.setFromMatrixPosition(this.light.matrixWorld);\r\n\r\n\t\t\t_v2.setFromMatrixPosition(this.light.target.matrixWorld);\r\n\r\n\t\t\t_v3.subVectors(_v2, _v1);\r\n\r\n\t\t\tthis.lightPlane.lookAt(_v2);\r\n\r\n\t\t\tif (this.color !== undefined) {\r\n\t\t\t\tthis.lightPlane.material.color.set(this.color);\r\n\t\t\t\tthis.targetLine.material.color.set(this.color);\r\n\t\t\t} else {\r\n\t\t\t\tthis.lightPlane.material.color.copy(this.light.color);\r\n\t\t\t\tthis.targetLine.material.color.copy(this.light.color);\r\n\t\t\t}\r\n\r\n\t\t\tthis.targetLine.lookAt(_v2);\r\n\t\t\tthis.targetLine.scale.z = _v3.length();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst _vector = /*@__PURE__*/new Vector3();\r\n\r\n\tconst _camera = /*@__PURE__*/new Camera();\r\n\t/**\r\n\t *\t- shows frustum, line of sight and up of the camera\r\n\t *\t- suitable for fast updates\r\n\t * \t- based on frustum visualization in lightgl.js shadowmap example\r\n\t *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\r\n\t */\r\n\r\n\r\n\tclass CameraHelper extends LineSegments {\r\n\t\tconstructor(camera) {\r\n\t\t\tconst geometry = new BufferGeometry();\r\n\t\t\tconst material = new LineBasicMaterial({\r\n\t\t\t\tcolor: 0xffffff,\r\n\t\t\t\tvertexColors: true,\r\n\t\t\t\ttoneMapped: false\r\n\t\t\t});\r\n\t\t\tconst vertices = [];\r\n\t\t\tconst colors = [];\r\n\t\t\tconst pointMap = {}; // colors\r\n\r\n\t\t\tconst colorFrustum = new Color(0xffaa00);\r\n\t\t\tconst colorCone = new Color(0xff0000);\r\n\t\t\tconst colorUp = new Color(0x00aaff);\r\n\t\t\tconst colorTarget = new Color(0xffffff);\r\n\t\t\tconst colorCross = new Color(0x333333); // near\r\n\r\n\t\t\taddLine('n1', 'n2', colorFrustum);\r\n\t\t\taddLine('n2', 'n4', colorFrustum);\r\n\t\t\taddLine('n4', 'n3', colorFrustum);\r\n\t\t\taddLine('n3', 'n1', colorFrustum); // far\r\n\r\n\t\t\taddLine('f1', 'f2', colorFrustum);\r\n\t\t\taddLine('f2', 'f4', colorFrustum);\r\n\t\t\taddLine('f4', 'f3', colorFrustum);\r\n\t\t\taddLine('f3', 'f1', colorFrustum); // sides\r\n\r\n\t\t\taddLine('n1', 'f1', colorFrustum);\r\n\t\t\taddLine('n2', 'f2', colorFrustum);\r\n\t\t\taddLine('n3', 'f3', colorFrustum);\r\n\t\t\taddLine('n4', 'f4', colorFrustum); // cone\r\n\r\n\t\t\taddLine('p', 'n1', colorCone);\r\n\t\t\taddLine('p', 'n2', colorCone);\r\n\t\t\taddLine('p', 'n3', colorCone);\r\n\t\t\taddLine('p', 'n4', colorCone); // up\r\n\r\n\t\t\taddLine('u1', 'u2', colorUp);\r\n\t\t\taddLine('u2', 'u3', colorUp);\r\n\t\t\taddLine('u3', 'u1', colorUp); // target\r\n\r\n\t\t\taddLine('c', 't', colorTarget);\r\n\t\t\taddLine('p', 'c', colorCross); // cross\r\n\r\n\t\t\taddLine('cn1', 'cn2', colorCross);\r\n\t\t\taddLine('cn3', 'cn4', colorCross);\r\n\t\t\taddLine('cf1', 'cf2', colorCross);\r\n\t\t\taddLine('cf3', 'cf4', colorCross);\r\n\r\n\t\t\tfunction addLine(a, b, color) {\r\n\t\t\t\taddPoint(a, color);\r\n\t\t\t\taddPoint(b, color);\r\n\t\t\t}\r\n\r\n\t\t\tfunction addPoint(id, color) {\r\n\t\t\t\tvertices.push(0, 0, 0);\r\n\t\t\t\tcolors.push(color.r, color.g, color.b);\r\n\r\n\t\t\t\tif (pointMap[id] === undefined) {\r\n\t\t\t\t\tpointMap[id] = [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpointMap[id].push(vertices.length / 3 - 1);\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\r\n\t\t\tsuper(geometry, material);\r\n\t\t\tthis.type = 'CameraHelper';\r\n\t\t\tthis.camera = camera;\r\n\t\t\tif (this.camera.updateProjectionMatrix) this.camera.updateProjectionMatrix();\r\n\t\t\tthis.matrix = camera.matrixWorld;\r\n\t\t\tthis.matrixAutoUpdate = false;\r\n\t\t\tthis.pointMap = pointMap;\r\n\t\t\tthis.update();\r\n\t\t}\r\n\r\n\t\tupdate() {\r\n\t\t\tconst geometry = this.geometry;\r\n\t\t\tconst pointMap = this.pointMap;\r\n\t\t\tconst w = 1,\r\n\t\t\t\t\t\th = 1; // we need just camera projection matrix inverse\r\n\t\t\t// world matrix must be identity\r\n\r\n\t\t\t_camera.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse); // center / target\r\n\r\n\r\n\t\t\tsetPoint('c', pointMap, geometry, _camera, 0, 0, -1);\r\n\t\t\tsetPoint('t', pointMap, geometry, _camera, 0, 0, 1); // near\r\n\r\n\t\t\tsetPoint('n1', pointMap, geometry, _camera, -w, -h, -1);\r\n\t\t\tsetPoint('n2', pointMap, geometry, _camera, w, -h, -1);\r\n\t\t\tsetPoint('n3', pointMap, geometry, _camera, -w, h, -1);\r\n\t\t\tsetPoint('n4', pointMap, geometry, _camera, w, h, -1); // far\r\n\r\n\t\t\tsetPoint('f1', pointMap, geometry, _camera, -w, -h, 1);\r\n\t\t\tsetPoint('f2', pointMap, geometry, _camera, w, -h, 1);\r\n\t\t\tsetPoint('f3', pointMap, geometry, _camera, -w, h, 1);\r\n\t\t\tsetPoint('f4', pointMap, geometry, _camera, w, h, 1); // up\r\n\r\n\t\t\tsetPoint('u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, -1);\r\n\t\t\tsetPoint('u2', pointMap, geometry, _camera, -w * 0.7, h * 1.1, -1);\r\n\t\t\tsetPoint('u3', pointMap, geometry, _camera, 0, h * 2, -1); // cross\r\n\r\n\t\t\tsetPoint('cf1', pointMap, geometry, _camera, -w, 0, 1);\r\n\t\t\tsetPoint('cf2', pointMap, geometry, _camera, w, 0, 1);\r\n\t\t\tsetPoint('cf3', pointMap, geometry, _camera, 0, -h, 1);\r\n\t\t\tsetPoint('cf4', pointMap, geometry, _camera, 0, h, 1);\r\n\t\t\tsetPoint('cn1', pointMap, geometry, _camera, -w, 0, -1);\r\n\t\t\tsetPoint('cn2', pointMap, geometry, _camera, w, 0, -1);\r\n\t\t\tsetPoint('cn3', pointMap, geometry, _camera, 0, -h, -1);\r\n\t\t\tsetPoint('cn4', pointMap, geometry, _camera, 0, h, -1);\r\n\t\t\tgeometry.getAttribute('position').needsUpdate = true;\r\n\t\t}\r\n\r\n\t\tdispose() {\r\n\t\t\tthis.geometry.dispose();\r\n\t\t\tthis.material.dispose();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setPoint(point, pointMap, geometry, camera, x, y, z) {\r\n\t\t_vector.set(x, y, z).unproject(camera);\r\n\r\n\t\tconst points = pointMap[point];\r\n\r\n\t\tif (points !== undefined) {\r\n\t\t\tconst position = geometry.getAttribute('position');\r\n\r\n\t\t\tfor (let i = 0, l = points.length; i < l; i++) {\r\n\t\t\t\tposition.setXYZ(points[i], _vector.x, _vector.y, _vector.z);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst _box = /*@__PURE__*/new Box3();\r\n\r\n\tclass BoxHelper extends LineSegments {\r\n\t\tconstructor(object, color = 0xffff00) {\r\n\t\t\tconst indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\r\n\t\t\tconst positions = new Float32Array(8 * 3);\r\n\t\t\tconst geometry = new BufferGeometry();\r\n\t\t\tgeometry.setIndex(new BufferAttribute(indices, 1));\r\n\t\t\tgeometry.setAttribute('position', new BufferAttribute(positions, 3));\r\n\t\t\tsuper(geometry, new LineBasicMaterial({\r\n\t\t\t\tcolor: color,\r\n\t\t\t\ttoneMapped: false\r\n\t\t\t}));\r\n\t\t\tthis.object = object;\r\n\t\t\tthis.type = 'BoxHelper';\r\n\t\t\tthis.matrixAutoUpdate = false;\r\n\t\t\tthis.update();\r\n\t\t}\r\n\r\n\t\tupdate(object) {\r\n\t\t\tif (object !== undefined) {\r\n\t\t\t\tconsole.warn('THREE.BoxHelper: .update() has no longer arguments.');\r\n\t\t\t}\r\n\r\n\t\t\tif (this.object !== undefined) {\r\n\t\t\t\t_box.setFromObject(this.object);\r\n\t\t\t}\r\n\r\n\t\t\tif (_box.isEmpty()) return;\r\n\t\t\tconst min = _box.min;\r\n\t\t\tconst max = _box.max;\r\n\t\t\t/*\r\n\t\t\t\t5____4\r\n\t\t\t1/___0/|\r\n\t\t\t| 6__|_7\r\n\t\t\t2/___3/\r\n\t\t\t\t0: max.x, max.y, max.z\r\n\t\t\t1: min.x, max.y, max.z\r\n\t\t\t2: min.x, min.y, max.z\r\n\t\t\t3: max.x, min.y, max.z\r\n\t\t\t4: max.x, max.y, min.z\r\n\t\t\t5: min.x, max.y, min.z\r\n\t\t\t6: min.x, min.y, min.z\r\n\t\t\t7: max.x, min.y, min.z\r\n\t\t\t*/\r\n\r\n\t\t\tconst position = this.geometry.attributes.position;\r\n\t\t\tconst array = position.array;\r\n\t\t\tarray[0] = max.x;\r\n\t\t\tarray[1] = max.y;\r\n\t\t\tarray[2] = max.z;\r\n\t\t\tarray[3] = min.x;\r\n\t\t\tarray[4] = max.y;\r\n\t\t\tarray[5] = max.z;\r\n\t\t\tarray[6] = min.x;\r\n\t\t\tarray[7] = min.y;\r\n\t\t\tarray[8] = max.z;\r\n\t\t\tarray[9] = max.x;\r\n\t\t\tarray[10] = min.y;\r\n\t\t\tarray[11] = max.z;\r\n\t\t\tarray[12] = max.x;\r\n\t\t\tarray[13] = max.y;\r\n\t\t\tarray[14] = min.z;\r\n\t\t\tarray[15] = min.x;\r\n\t\t\tarray[16] = max.y;\r\n\t\t\tarray[17] = min.z;\r\n\t\t\tarray[18] = min.x;\r\n\t\t\tarray[19] = min.y;\r\n\t\t\tarray[20] = min.z;\r\n\t\t\tarray[21] = max.x;\r\n\t\t\tarray[22] = min.y;\r\n\t\t\tarray[23] = min.z;\r\n\t\t\tposition.needsUpdate = true;\r\n\t\t\tthis.geometry.computeBoundingSphere();\r\n\t\t}\r\n\r\n\t\tsetFromObject(object) {\r\n\t\t\tthis.object = object;\r\n\t\t\tthis.update();\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tLineSegments.prototype.copy.call(this, source);\r\n\t\t\tthis.object = source.object;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass Box3Helper extends LineSegments {\r\n\t\tconstructor(box, color = 0xffff00) {\r\n\t\t\tconst indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\r\n\t\t\tconst positions = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1];\r\n\t\t\tconst geometry = new BufferGeometry();\r\n\t\t\tgeometry.setIndex(new BufferAttribute(indices, 1));\r\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\r\n\t\t\tsuper(geometry, new LineBasicMaterial({\r\n\t\t\t\tcolor: color,\r\n\t\t\t\ttoneMapped: false\r\n\t\t\t}));\r\n\t\t\tthis.box = box;\r\n\t\t\tthis.type = 'Box3Helper';\r\n\t\t\tthis.geometry.computeBoundingSphere();\r\n\t\t}\r\n\r\n\t\tupdateMatrixWorld(force) {\r\n\t\t\tconst box = this.box;\r\n\t\t\tif (box.isEmpty()) return;\r\n\t\t\tbox.getCenter(this.position);\r\n\t\t\tbox.getSize(this.scale);\r\n\t\t\tthis.scale.multiplyScalar(0.5);\r\n\t\t\tsuper.updateMatrixWorld(force);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass PlaneHelper extends Line {\r\n\t\tconstructor(plane, size = 1, hex = 0xffff00) {\r\n\t\t\tconst color = hex;\r\n\t\t\tconst positions = [1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0];\r\n\t\t\tconst geometry = new BufferGeometry();\r\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\r\n\t\t\tgeometry.computeBoundingSphere();\r\n\t\t\tsuper(geometry, new LineBasicMaterial({\r\n\t\t\t\tcolor: color,\r\n\t\t\t\ttoneMapped: false\r\n\t\t\t}));\r\n\t\t\tthis.type = 'PlaneHelper';\r\n\t\t\tthis.plane = plane;\r\n\t\t\tthis.size = size;\r\n\t\t\tconst positions2 = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1];\r\n\t\t\tconst geometry2 = new BufferGeometry();\r\n\t\t\tgeometry2.setAttribute('position', new Float32BufferAttribute(positions2, 3));\r\n\t\t\tgeometry2.computeBoundingSphere();\r\n\t\t\tthis.add(new Mesh(geometry2, new MeshBasicMaterial({\r\n\t\t\t\tcolor: color,\r\n\t\t\t\topacity: 0.2,\r\n\t\t\t\ttransparent: true,\r\n\t\t\t\tdepthWrite: false,\r\n\t\t\t\ttoneMapped: false\r\n\t\t\t})));\r\n\t\t}\r\n\r\n\t\tupdateMatrixWorld(force) {\r\n\t\t\tlet scale = -this.plane.constant;\r\n\t\t\tif (Math.abs(scale) < 1e-8) scale = 1e-8; // sign does not matter\r\n\r\n\t\t\tthis.scale.set(0.5 * this.size, 0.5 * this.size, scale);\r\n\t\t\tthis.children[0].material.side = scale < 0 ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\r\n\r\n\t\t\tthis.lookAt(this.plane.normal);\r\n\t\t\tsuper.updateMatrixWorld(force);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst _axis = /*@__PURE__*/new Vector3();\r\n\r\n\tlet _lineGeometry, _coneGeometry;\r\n\r\n\tclass ArrowHelper extends Object3D {\r\n\t\t// dir is assumed to be normalized\r\n\t\tconstructor(dir = new Vector3(0, 0, 1), origin = new Vector3(0, 0, 0), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2) {\r\n\t\t\tsuper();\r\n\t\t\tthis.type = 'ArrowHelper';\r\n\r\n\t\t\tif (_lineGeometry === undefined) {\r\n\t\t\t\t_lineGeometry = new BufferGeometry();\r\n\r\n\t\t\t\t_lineGeometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 0, 1, 0], 3));\r\n\r\n\t\t\t\t_coneGeometry = new CylinderGeometry(0, 0.5, 1, 5, 1);\r\n\r\n\t\t\t\t_coneGeometry.translate(0, -0.5, 0);\r\n\t\t\t}\r\n\r\n\t\t\tthis.position.copy(origin);\r\n\t\t\tthis.line = new Line(_lineGeometry, new LineBasicMaterial({\r\n\t\t\t\tcolor: color,\r\n\t\t\t\ttoneMapped: false\r\n\t\t\t}));\r\n\t\t\tthis.line.matrixAutoUpdate = false;\r\n\t\t\tthis.add(this.line);\r\n\t\t\tthis.cone = new Mesh(_coneGeometry, new MeshBasicMaterial({\r\n\t\t\t\tcolor: color,\r\n\t\t\t\ttoneMapped: false\r\n\t\t\t}));\r\n\t\t\tthis.cone.matrixAutoUpdate = false;\r\n\t\t\tthis.add(this.cone);\r\n\t\t\tthis.setDirection(dir);\r\n\t\t\tthis.setLength(length, headLength, headWidth);\r\n\t\t}\r\n\r\n\t\tsetDirection(dir) {\r\n\t\t\t// dir is assumed to be normalized\r\n\t\t\tif (dir.y > 0.99999) {\r\n\t\t\t\tthis.quaternion.set(0, 0, 0, 1);\r\n\t\t\t} else if (dir.y < -0.99999) {\r\n\t\t\t\tthis.quaternion.set(1, 0, 0, 0);\r\n\t\t\t} else {\r\n\t\t\t\t_axis.set(dir.z, 0, -dir.x).normalize();\r\n\r\n\t\t\t\tconst radians = Math.acos(dir.y);\r\n\t\t\t\tthis.quaternion.setFromAxisAngle(_axis, radians);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsetLength(length, headLength = length * 0.2, headWidth = headLength * 0.2) {\r\n\t\t\tthis.line.scale.set(1, Math.max(0.0001, length - headLength), 1); // see #17458\r\n\r\n\t\t\tthis.line.updateMatrix();\r\n\t\t\tthis.cone.scale.set(headWidth, headLength, headWidth);\r\n\t\t\tthis.cone.position.y = length;\r\n\t\t\tthis.cone.updateMatrix();\r\n\t\t}\r\n\r\n\t\tsetColor(color) {\r\n\t\t\tthis.line.material.color.set(color);\r\n\t\t\tthis.cone.material.color.set(color);\r\n\t\t}\r\n\r\n\t\tcopy(source) {\r\n\t\t\tsuper.copy(source, false);\r\n\t\t\tthis.line.copy(source.line);\r\n\t\t\tthis.cone.copy(source.cone);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass AxesHelper extends LineSegments {\r\n\t\tconstructor(size = 1) {\r\n\t\t\tconst vertices = [0, 0, 0, size, 0, 0, 0, 0, 0, 0, size, 0, 0, 0, 0, 0, 0, size];\r\n\t\t\tconst colors = [1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1];\r\n\t\t\tconst geometry = new BufferGeometry();\r\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\r\n\t\t\tconst material = new LineBasicMaterial({\r\n\t\t\t\tvertexColors: true,\r\n\t\t\t\ttoneMapped: false\r\n\t\t\t});\r\n\t\t\tsuper(geometry, material);\r\n\t\t\tthis.type = 'AxesHelper';\r\n\t\t}\r\n\r\n\t\tsetColors(xAxisColor, yAxisColor, zAxisColor) {\r\n\t\t\tconst color = new Color();\r\n\t\t\tconst array = this.geometry.attributes.color.array;\r\n\t\t\tcolor.set(xAxisColor);\r\n\t\t\tcolor.toArray(array, 0);\r\n\t\t\tcolor.toArray(array, 3);\r\n\t\t\tcolor.set(yAxisColor);\r\n\t\t\tcolor.toArray(array, 6);\r\n\t\t\tcolor.toArray(array, 9);\r\n\t\t\tcolor.set(zAxisColor);\r\n\t\t\tcolor.toArray(array, 12);\r\n\t\t\tcolor.toArray(array, 15);\r\n\t\t\tthis.geometry.attributes.color.needsUpdate = true;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tdispose() {\r\n\t\t\tthis.geometry.dispose();\r\n\t\t\tthis.material.dispose();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst _floatView = new Float32Array(1);\r\n\r\n\tconst _int32View = new Int32Array(_floatView.buffer);\r\n\r\n\tclass DataUtils {\r\n\t\t// Converts float32 to float16 (stored as uint16 value).\r\n\t\tstatic toHalfFloat(val) {\r\n\t\t\t// Source: http://gamedev.stackexchange.com/questions/17326/conversion-of-a-number-from-single-precision-floating-point-representation-to-a/17410#17410\r\n\r\n\t\t\t/* This method is faster than the OpenEXR implementation (very often\r\n\t\t\t* used, eg. in Ogre), with the additional benefit of rounding, inspired\r\n\t\t\t* by James Tursa?s half-precision code. */\r\n\t\t\t_floatView[0] = val;\r\n\t\t\tconst x = _int32View[0];\r\n\t\t\tlet bits = x >> 16 & 0x8000;\r\n\t\t\t/* Get the sign */\r\n\r\n\t\t\tlet m = x >> 12 & 0x07ff;\r\n\t\t\t/* Keep one extra bit for rounding */\r\n\r\n\t\t\tconst e = x >> 23 & 0xff;\r\n\t\t\t/* Using int is faster here */\r\n\r\n\t\t\t/* If zero, or denormal, or exponent underflows too much for a denormal\r\n\t\t\t\t* half, return signed zero. */\r\n\r\n\t\t\tif (e < 103) return bits;\r\n\t\t\t/* If NaN, return NaN. If Inf or exponent overflow, return Inf. */\r\n\r\n\t\t\tif (e > 142) {\r\n\t\t\t\tbits |= 0x7c00;\r\n\t\t\t\t/* If exponent was 0xff and one mantissa bit was set, it means NaN,\r\n\t\t\t\t\t\t\t* not Inf, so make sure we set one mantissa bit too. */\r\n\r\n\t\t\t\tbits |= (e == 255 ? 0 : 1) && x & 0x007fffff;\r\n\t\t\t\treturn bits;\r\n\t\t\t}\r\n\t\t\t/* If exponent underflows but not too much, return a denormal */\r\n\r\n\r\n\t\t\tif (e < 113) {\r\n\t\t\t\tm |= 0x0800;\r\n\t\t\t\t/* Extra rounding may overflow and set mantissa to 0 and exponent\r\n\t\t\t\t\t* to 1, which is OK. */\r\n\r\n\t\t\t\tbits |= (m >> 114 - e) + (m >> 113 - e & 1);\r\n\t\t\t\treturn bits;\r\n\t\t\t}\r\n\r\n\t\t\tbits |= e - 112 << 10 | m >> 1;\r\n\t\t\t/* Extra rounding. An overflow will set mantissa to 0 and increment\r\n\t\t\t\t* the exponent, which is OK. */\r\n\r\n\t\t\tbits += m & 1;\r\n\t\t\treturn bits;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst LineStrip = 0;\r\n\tconst LinePieces = 1;\r\n\tconst NoColors = 0;\r\n\tconst FaceColors = 1;\r\n\tconst VertexColors = 2;\r\n\tfunction MeshFaceMaterial(materials) {\r\n\t\tconsole.warn('THREE.MeshFaceMaterial has been removed. Use an Array instead.');\r\n\t\treturn materials;\r\n\t}\r\n\tfunction MultiMaterial(materials = []) {\r\n\t\tconsole.warn('THREE.MultiMaterial has been removed. Use an Array instead.');\r\n\t\tmaterials.isMultiMaterial = true;\r\n\t\tmaterials.materials = materials;\r\n\r\n\t\tmaterials.clone = function () {\r\n\t\t\treturn materials.slice();\r\n\t\t};\r\n\r\n\t\treturn materials;\r\n\t}\r\n\tfunction PointCloud(geometry, material) {\r\n\t\tconsole.warn('THREE.PointCloud has been renamed to THREE.Points.');\r\n\t\treturn new Points(geometry, material);\r\n\t}\r\n\tfunction Particle(material) {\r\n\t\tconsole.warn('THREE.Particle has been renamed to THREE.Sprite.');\r\n\t\treturn new Sprite(material);\r\n\t}\r\n\tfunction ParticleSystem(geometry, material) {\r\n\t\tconsole.warn('THREE.ParticleSystem has been renamed to THREE.Points.');\r\n\t\treturn new Points(geometry, material);\r\n\t}\r\n\tfunction PointCloudMaterial(parameters) {\r\n\t\tconsole.warn('THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.');\r\n\t\treturn new PointsMaterial(parameters);\r\n\t}\r\n\tfunction ParticleBasicMaterial(parameters) {\r\n\t\tconsole.warn('THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.');\r\n\t\treturn new PointsMaterial(parameters);\r\n\t}\r\n\tfunction ParticleSystemMaterial(parameters) {\r\n\t\tconsole.warn('THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.');\r\n\t\treturn new PointsMaterial(parameters);\r\n\t}\r\n\tfunction Vertex(x, y, z) {\r\n\t\tconsole.warn('THREE.Vertex has been removed. Use THREE.Vector3 instead.');\r\n\t\treturn new Vector3(x, y, z);\r\n\t} //\r\n\r\n\tfunction DynamicBufferAttribute(array, itemSize) {\r\n\t\tconsole.warn('THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead.');\r\n\t\treturn new BufferAttribute(array, itemSize).setUsage(DynamicDrawUsage);\r\n\t}\r\n\tfunction Int8Attribute(array, itemSize) {\r\n\t\tconsole.warn('THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.');\r\n\t\treturn new Int8BufferAttribute(array, itemSize);\r\n\t}\r\n\tfunction Uint8Attribute(array, itemSize) {\r\n\t\tconsole.warn('THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.');\r\n\t\treturn new Uint8BufferAttribute(array, itemSize);\r\n\t}\r\n\tfunction Uint8ClampedAttribute(array, itemSize) {\r\n\t\tconsole.warn('THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.');\r\n\t\treturn new Uint8ClampedBufferAttribute(array, itemSize);\r\n\t}\r\n\tfunction Int16Attribute(array, itemSize) {\r\n\t\tconsole.warn('THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.');\r\n\t\treturn new Int16BufferAttribute(array, itemSize);\r\n\t}\r\n\tfunction Uint16Attribute(array, itemSize) {\r\n\t\tconsole.warn('THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.');\r\n\t\treturn new Uint16BufferAttribute(array, itemSize);\r\n\t}\r\n\tfunction Int32Attribute(array, itemSize) {\r\n\t\tconsole.warn('THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.');\r\n\t\treturn new Int32BufferAttribute(array, itemSize);\r\n\t}\r\n\tfunction Uint32Attribute(array, itemSize) {\r\n\t\tconsole.warn('THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.');\r\n\t\treturn new Uint32BufferAttribute(array, itemSize);\r\n\t}\r\n\tfunction Float32Attribute(array, itemSize) {\r\n\t\tconsole.warn('THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.');\r\n\t\treturn new Float32BufferAttribute(array, itemSize);\r\n\t}\r\n\tfunction Float64Attribute(array, itemSize) {\r\n\t\tconsole.warn('THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.');\r\n\t\treturn new Float64BufferAttribute(array, itemSize);\r\n\t} //\r\n\r\n\tCurve.create = function (construct, getPoint) {\r\n\t\tconsole.log('THREE.Curve.create() has been deprecated');\r\n\t\tconstruct.prototype = Object.create(Curve.prototype);\r\n\t\tconstruct.prototype.constructor = construct;\r\n\t\tconstruct.prototype.getPoint = getPoint;\r\n\t\treturn construct;\r\n\t}; //\r\n\r\n\r\n\tPath.prototype.fromPoints = function (points) {\r\n\t\tconsole.warn('THREE.Path: .fromPoints() has been renamed to .setFromPoints().');\r\n\t\treturn this.setFromPoints(points);\r\n\t}; //\r\n\r\n\r\n\tfunction AxisHelper(size) {\r\n\t\tconsole.warn('THREE.AxisHelper has been renamed to THREE.AxesHelper.');\r\n\t\treturn new AxesHelper(size);\r\n\t}\r\n\tfunction BoundingBoxHelper(object, color) {\r\n\t\tconsole.warn('THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.');\r\n\t\treturn new BoxHelper(object, color);\r\n\t}\r\n\tfunction EdgesHelper(object, hex) {\r\n\t\tconsole.warn('THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.');\r\n\t\treturn new LineSegments(new EdgesGeometry(object.geometry), new LineBasicMaterial({\r\n\t\t\tcolor: hex !== undefined ? hex : 0xffffff\r\n\t\t}));\r\n\t}\r\n\r\n\tGridHelper.prototype.setColors = function () {\r\n\t\tconsole.error('THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.');\r\n\t};\r\n\r\n\tSkeletonHelper.prototype.update = function () {\r\n\t\tconsole.error('THREE.SkeletonHelper: update() no longer needs to be called.');\r\n\t};\r\n\r\n\tfunction WireframeHelper(object, hex) {\r\n\t\tconsole.warn('THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.');\r\n\t\treturn new LineSegments(new WireframeGeometry(object.geometry), new LineBasicMaterial({\r\n\t\t\tcolor: hex !== undefined ? hex : 0xffffff\r\n\t\t}));\r\n\t} //\r\n\r\n\tLoader.prototype.extractUrlBase = function (url) {\r\n\t\tconsole.warn('THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.');\r\n\t\treturn LoaderUtils.extractUrlBase(url);\r\n\t};\r\n\r\n\tLoader.Handlers = {\r\n\t\tadd: function ()\r\n\t\t/* regex, loader */\r\n\t\t{\r\n\t\t\tconsole.error('THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.');\r\n\t\t},\r\n\t\tget: function ()\r\n\t\t/* file */\r\n\t\t{\r\n\t\t\tconsole.error('THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.');\r\n\t\t}\r\n\t};\r\n\tfunction XHRLoader(manager) {\r\n\t\tconsole.warn('THREE.XHRLoader has been renamed to THREE.FileLoader.');\r\n\t\treturn new FileLoader(manager);\r\n\t}\r\n\tfunction BinaryTextureLoader(manager) {\r\n\t\tconsole.warn('THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.');\r\n\t\treturn new DataTextureLoader(manager);\r\n\t} //\r\n\r\n\tBox2.prototype.center = function (optionalTarget) {\r\n\t\tconsole.warn('THREE.Box2: .center() has been renamed to .getCenter().');\r\n\t\treturn this.getCenter(optionalTarget);\r\n\t};\r\n\r\n\tBox2.prototype.empty = function () {\r\n\t\tconsole.warn('THREE.Box2: .empty() has been renamed to .isEmpty().');\r\n\t\treturn this.isEmpty();\r\n\t};\r\n\r\n\tBox2.prototype.isIntersectionBox = function (box) {\r\n\t\tconsole.warn('THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().');\r\n\t\treturn this.intersectsBox(box);\r\n\t};\r\n\r\n\tBox2.prototype.size = function (optionalTarget) {\r\n\t\tconsole.warn('THREE.Box2: .size() has been renamed to .getSize().');\r\n\t\treturn this.getSize(optionalTarget);\r\n\t}; //\r\n\r\n\r\n\tBox3.prototype.center = function (optionalTarget) {\r\n\t\tconsole.warn('THREE.Box3: .center() has been renamed to .getCenter().');\r\n\t\treturn this.getCenter(optionalTarget);\r\n\t};\r\n\r\n\tBox3.prototype.empty = function () {\r\n\t\tconsole.warn('THREE.Box3: .empty() has been renamed to .isEmpty().');\r\n\t\treturn this.isEmpty();\r\n\t};\r\n\r\n\tBox3.prototype.isIntersectionBox = function (box) {\r\n\t\tconsole.warn('THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().');\r\n\t\treturn this.intersectsBox(box);\r\n\t};\r\n\r\n\tBox3.prototype.isIntersectionSphere = function (sphere) {\r\n\t\tconsole.warn('THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().');\r\n\t\treturn this.intersectsSphere(sphere);\r\n\t};\r\n\r\n\tBox3.prototype.size = function (optionalTarget) {\r\n\t\tconsole.warn('THREE.Box3: .size() has been renamed to .getSize().');\r\n\t\treturn this.getSize(optionalTarget);\r\n\t}; //\r\n\r\n\r\n\tSphere.prototype.empty = function () {\r\n\t\tconsole.warn('THREE.Sphere: .empty() has been renamed to .isEmpty().');\r\n\t\treturn this.isEmpty();\r\n\t}; //\r\n\r\n\r\n\tFrustum.prototype.setFromMatrix = function (m) {\r\n\t\tconsole.warn('THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().');\r\n\t\treturn this.setFromProjectionMatrix(m);\r\n\t}; //\r\n\r\n\r\n\tLine3.prototype.center = function (optionalTarget) {\r\n\t\tconsole.warn('THREE.Line3: .center() has been renamed to .getCenter().');\r\n\t\treturn this.getCenter(optionalTarget);\r\n\t}; //\r\n\r\n\r\n\tMatrix3.prototype.flattenToArrayOffset = function (array, offset) {\r\n\t\tconsole.warn('THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.');\r\n\t\treturn this.toArray(array, offset);\r\n\t};\r\n\r\n\tMatrix3.prototype.multiplyVector3 = function (vector) {\r\n\t\tconsole.warn('THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.');\r\n\t\treturn vector.applyMatrix3(this);\r\n\t};\r\n\r\n\tMatrix3.prototype.multiplyVector3Array = function ()\r\n\t/* a */\r\n\t{\r\n\t\tconsole.error('THREE.Matrix3: .multiplyVector3Array() has been removed.');\r\n\t};\r\n\r\n\tMatrix3.prototype.applyToBufferAttribute = function (attribute) {\r\n\t\tconsole.warn('THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.');\r\n\t\treturn attribute.applyMatrix3(this);\r\n\t};\r\n\r\n\tMatrix3.prototype.applyToVector3Array = function ()\r\n\t/* array, offset, length */\r\n\t{\r\n\t\tconsole.error('THREE.Matrix3: .applyToVector3Array() has been removed.');\r\n\t};\r\n\r\n\tMatrix3.prototype.getInverse = function (matrix) {\r\n\t\tconsole.warn('THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.');\r\n\t\treturn this.copy(matrix).invert();\r\n\t}; //\r\n\r\n\r\n\tMatrix4.prototype.extractPosition = function (m) {\r\n\t\tconsole.warn('THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().');\r\n\t\treturn this.copyPosition(m);\r\n\t};\r\n\r\n\tMatrix4.prototype.flattenToArrayOffset = function (array, offset) {\r\n\t\tconsole.warn('THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.');\r\n\t\treturn this.toArray(array, offset);\r\n\t};\r\n\r\n\tMatrix4.prototype.getPosition = function () {\r\n\t\tconsole.warn('THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.');\r\n\t\treturn new Vector3().setFromMatrixColumn(this, 3);\r\n\t};\r\n\r\n\tMatrix4.prototype.setRotationFromQuaternion = function (q) {\r\n\t\tconsole.warn('THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().');\r\n\t\treturn this.makeRotationFromQuaternion(q);\r\n\t};\r\n\r\n\tMatrix4.prototype.multiplyToArray = function () {\r\n\t\tconsole.warn('THREE.Matrix4: .multiplyToArray() has been removed.');\r\n\t};\r\n\r\n\tMatrix4.prototype.multiplyVector3 = function (vector) {\r\n\t\tconsole.warn('THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.');\r\n\t\treturn vector.applyMatrix4(this);\r\n\t};\r\n\r\n\tMatrix4.prototype.multiplyVector4 = function (vector) {\r\n\t\tconsole.warn('THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.');\r\n\t\treturn vector.applyMatrix4(this);\r\n\t};\r\n\r\n\tMatrix4.prototype.multiplyVector3Array = function ()\r\n\t/* a */\r\n\t{\r\n\t\tconsole.error('THREE.Matrix4: .multiplyVector3Array() has been removed.');\r\n\t};\r\n\r\n\tMatrix4.prototype.rotateAxis = function (v) {\r\n\t\tconsole.warn('THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.');\r\n\t\tv.transformDirection(this);\r\n\t};\r\n\r\n\tMatrix4.prototype.crossVector = function (vector) {\r\n\t\tconsole.warn('THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.');\r\n\t\treturn vector.applyMatrix4(this);\r\n\t};\r\n\r\n\tMatrix4.prototype.translate = function () {\r\n\t\tconsole.error('THREE.Matrix4: .translate() has been removed.');\r\n\t};\r\n\r\n\tMatrix4.prototype.rotateX = function () {\r\n\t\tconsole.error('THREE.Matrix4: .rotateX() has been removed.');\r\n\t};\r\n\r\n\tMatrix4.prototype.rotateY = function () {\r\n\t\tconsole.error('THREE.Matrix4: .rotateY() has been removed.');\r\n\t};\r\n\r\n\tMatrix4.prototype.rotateZ = function () {\r\n\t\tconsole.error('THREE.Matrix4: .rotateZ() has been removed.');\r\n\t};\r\n\r\n\tMatrix4.prototype.rotateByAxis = function () {\r\n\t\tconsole.error('THREE.Matrix4: .rotateByAxis() has been removed.');\r\n\t};\r\n\r\n\tMatrix4.prototype.applyToBufferAttribute = function (attribute) {\r\n\t\tconsole.warn('THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.');\r\n\t\treturn attribute.applyMatrix4(this);\r\n\t};\r\n\r\n\tMatrix4.prototype.applyToVector3Array = function ()\r\n\t/* array, offset, length */\r\n\t{\r\n\t\tconsole.error('THREE.Matrix4: .applyToVector3Array() has been removed.');\r\n\t};\r\n\r\n\tMatrix4.prototype.makeFrustum = function (left, right, bottom, top, near, far) {\r\n\t\tconsole.warn('THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.');\r\n\t\treturn this.makePerspective(left, right, top, bottom, near, far);\r\n\t};\r\n\r\n\tMatrix4.prototype.getInverse = function (matrix) {\r\n\t\tconsole.warn('THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.');\r\n\t\treturn this.copy(matrix).invert();\r\n\t}; //\r\n\r\n\r\n\tPlane.prototype.isIntersectionLine = function (line) {\r\n\t\tconsole.warn('THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().');\r\n\t\treturn this.intersectsLine(line);\r\n\t}; //\r\n\r\n\r\n\tQuaternion.prototype.multiplyVector3 = function (vector) {\r\n\t\tconsole.warn('THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.');\r\n\t\treturn vector.applyQuaternion(this);\r\n\t};\r\n\r\n\tQuaternion.prototype.inverse = function () {\r\n\t\tconsole.warn('THREE.Quaternion: .inverse() has been renamed to invert().');\r\n\t\treturn this.invert();\r\n\t}; //\r\n\r\n\r\n\tRay.prototype.isIntersectionBox = function (box) {\r\n\t\tconsole.warn('THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().');\r\n\t\treturn this.intersectsBox(box);\r\n\t};\r\n\r\n\tRay.prototype.isIntersectionPlane = function (plane) {\r\n\t\tconsole.warn('THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().');\r\n\t\treturn this.intersectsPlane(plane);\r\n\t};\r\n\r\n\tRay.prototype.isIntersectionSphere = function (sphere) {\r\n\t\tconsole.warn('THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().');\r\n\t\treturn this.intersectsSphere(sphere);\r\n\t}; //\r\n\r\n\r\n\tTriangle.prototype.area = function () {\r\n\t\tconsole.warn('THREE.Triangle: .area() has been renamed to .getArea().');\r\n\t\treturn this.getArea();\r\n\t};\r\n\r\n\tTriangle.prototype.barycoordFromPoint = function (point, target) {\r\n\t\tconsole.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');\r\n\t\treturn this.getBarycoord(point, target);\r\n\t};\r\n\r\n\tTriangle.prototype.midpoint = function (target) {\r\n\t\tconsole.warn('THREE.Triangle: .midpoint() has been renamed to .getMidpoint().');\r\n\t\treturn this.getMidpoint(target);\r\n\t};\r\n\r\n\tTriangle.prototypenormal = function (target) {\r\n\t\tconsole.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');\r\n\t\treturn this.getNormal(target);\r\n\t};\r\n\r\n\tTriangle.prototype.plane = function (target) {\r\n\t\tconsole.warn('THREE.Triangle: .plane() has been renamed to .getPlane().');\r\n\t\treturn this.getPlane(target);\r\n\t};\r\n\r\n\tTriangle.barycoordFromPoint = function (point, a, b, c, target) {\r\n\t\tconsole.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');\r\n\t\treturn Triangle.getBarycoord(point, a, b, c, target);\r\n\t};\r\n\r\n\tTriangle.normal = function (a, b, c, target) {\r\n\t\tconsole.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');\r\n\t\treturn Triangle.getNormal(a, b, c, target);\r\n\t}; //\r\n\r\n\r\n\tShape.prototype.extractAllPoints = function (divisions) {\r\n\t\tconsole.warn('THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.');\r\n\t\treturn this.extractPoints(divisions);\r\n\t};\r\n\r\n\tShape.prototype.extrude = function (options) {\r\n\t\tconsole.warn('THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.');\r\n\t\treturn new ExtrudeGeometry(this, options);\r\n\t};\r\n\r\n\tShape.prototype.makeGeometry = function (options) {\r\n\t\tconsole.warn('THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.');\r\n\t\treturn new ShapeGeometry(this, options);\r\n\t}; //\r\n\r\n\r\n\tVector2.prototype.fromAttribute = function (attribute, index, offset) {\r\n\t\tconsole.warn('THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().');\r\n\t\treturn this.fromBufferAttribute(attribute, index, offset);\r\n\t};\r\n\r\n\tVector2.prototype.distanceToManhattan = function (v) {\r\n\t\tconsole.warn('THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');\r\n\t\treturn this.manhattanDistanceTo(v);\r\n\t};\r\n\r\n\tVector2.prototype.lengthManhattan = function () {\r\n\t\tconsole.warn('THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().');\r\n\t\treturn this.manhattanLength();\r\n\t}; //\r\n\r\n\r\n\tVector3.prototype.setEulerFromRotationMatrix = function () {\r\n\t\tconsole.error('THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.');\r\n\t};\r\n\r\n\tVector3.prototype.setEulerFromQuaternion = function () {\r\n\t\tconsole.error('THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.');\r\n\t};\r\n\r\n\tVector3.prototype.getPositionFromMatrix = function (m) {\r\n\t\tconsole.warn('THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().');\r\n\t\treturn this.setFromMatrixPosition(m);\r\n\t};\r\n\r\n\tVector3.prototype.getScaleFromMatrix = function (m) {\r\n\t\tconsole.warn('THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().');\r\n\t\treturn this.setFromMatrixScale(m);\r\n\t};\r\n\r\n\tVector3.prototype.getColumnFromMatrix = function (index, matrix) {\r\n\t\tconsole.warn('THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().');\r\n\t\treturn this.setFromMatrixColumn(matrix, index);\r\n\t};\r\n\r\n\tVector3.prototype.applyProjection = function (m) {\r\n\t\tconsole.warn('THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.');\r\n\t\treturn this.applyMatrix4(m);\r\n\t};\r\n\r\n\tVector3.prototype.fromAttribute = function (attribute, index, offset) {\r\n\t\tconsole.warn('THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().');\r\n\t\treturn this.fromBufferAttribute(attribute, index, offset);\r\n\t};\r\n\r\n\tVector3.prototype.distanceToManhattan = function (v) {\r\n\t\tconsole.warn('THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');\r\n\t\treturn this.manhattanDistanceTo(v);\r\n\t};\r\n\r\n\tVector3.prototype.lengthManhattan = function () {\r\n\t\tconsole.warn('THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().');\r\n\t\treturn this.manhattanLength();\r\n\t}; //\r\n\r\n\r\n\tVector4.prototype.fromAttribute = function (attribute, index, offset) {\r\n\t\tconsole.warn('THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().');\r\n\t\treturn this.fromBufferAttribute(attribute, index, offset);\r\n\t};\r\n\r\n\tVector4.prototype.lengthManhattan = function () {\r\n\t\tconsole.warn('THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().');\r\n\t\treturn this.manhattanLength();\r\n\t}; //\r\n\r\n\r\n\tObject3D.prototype.getChildByName = function (name) {\r\n\t\tconsole.warn('THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().');\r\n\t\treturn this.getObjectByName(name);\r\n\t};\r\n\r\n\tObject3D.prototype.renderDepth = function () {\r\n\t\tconsole.warn('THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.');\r\n\t};\r\n\r\n\tObject3D.prototype.translate = function (distance, axis) {\r\n\t\tconsole.warn('THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.');\r\n\t\treturn this.translateOnAxis(axis, distance);\r\n\t};\r\n\r\n\tObject3D.prototype.getWorldRotation = function () {\r\n\t\tconsole.error('THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.');\r\n\t};\r\n\r\n\tObject3D.prototype.applyMatrix = function (matrix) {\r\n\t\tconsole.warn('THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().');\r\n\t\treturn this.applyMatrix4(matrix);\r\n\t};\r\n\r\n\tObject.defineProperties(Object3D.prototype, {\r\n\t\teulerOrder: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');\r\n\t\t\t\treturn this.rotation.order;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');\r\n\t\t\t\tthis.rotation.order = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tuseQuaternion: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\r\n\t\t\t},\r\n\t\t\tset: function () {\r\n\t\t\t\tconsole.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tMesh.prototype.setDrawMode = function () {\r\n\t\tconsole.error('THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.');\r\n\t};\r\n\r\n\tObject.defineProperties(Mesh.prototype, {\r\n\t\tdrawMode: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.error('THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.');\r\n\t\t\t\treturn TrianglesDrawMode;\r\n\t\t\t},\r\n\t\t\tset: function () {\r\n\t\t\t\tconsole.error('THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.');\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tSkinnedMesh.prototype.initBones = function () {\r\n\t\tconsole.error('THREE.SkinnedMesh: initBones() has been removed.');\r\n\t}; //\r\n\r\n\r\n\tPerspectiveCamera.prototype.setLens = function (focalLength, filmGauge) {\r\n\t\tconsole.warn('THREE.PerspectiveCamera.setLens is deprecated. ' + 'Use .setFocalLength and .filmGauge for a photographic setup.');\r\n\t\tif (filmGauge !== undefined) this.filmGauge = filmGauge;\r\n\t\tthis.setFocalLength(focalLength);\r\n\t}; //\r\n\r\n\r\n\tObject.defineProperties(Light.prototype, {\r\n\t\tonlyShadow: {\r\n\t\t\tset: function () {\r\n\t\t\t\tconsole.warn('THREE.Light: .onlyShadow has been removed.');\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraFov: {\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraFov is now .shadow.camera.fov.');\r\n\t\t\t\tthis.shadow.camera.fov = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraLeft: {\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraLeft is now .shadow.camera.left.');\r\n\t\t\t\tthis.shadow.camera.left = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraRight: {\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraRight is now .shadow.camera.right.');\r\n\t\t\t\tthis.shadow.camera.right = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraTop: {\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraTop is now .shadow.camera.top.');\r\n\t\t\t\tthis.shadow.camera.top = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraBottom: {\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.');\r\n\t\t\t\tthis.shadow.camera.bottom = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraNear: {\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraNear is now .shadow.camera.near.');\r\n\t\t\t\tthis.shadow.camera.near = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraFar: {\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraFar is now .shadow.camera.far.');\r\n\t\t\t\tthis.shadow.camera.far = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraVisible: {\r\n\t\t\tset: function () {\r\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.');\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowBias: {\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.Light: .shadowBias is now .shadow.bias.');\r\n\t\t\t\tthis.shadow.bias = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowDarkness: {\r\n\t\t\tset: function () {\r\n\t\t\t\tconsole.warn('THREE.Light: .shadowDarkness has been removed.');\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapWidth: {\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.');\r\n\t\t\t\tthis.shadow.mapSize.width = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapHeight: {\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.');\r\n\t\t\t\tthis.shadow.mapSize.height = value;\r\n\t\t\t}\r\n\t\t}\r\n\t}); //\r\n\r\n\tObject.defineProperties(BufferAttribute.prototype, {\r\n\t\tlength: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.BufferAttribute: .length has been deprecated. Use .count instead.');\r\n\t\t\t\treturn this.array.length;\r\n\t\t\t}\r\n\t\t},\r\n\t\tdynamic: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.');\r\n\t\t\t\treturn this.usage === DynamicDrawUsage;\r\n\t\t\t},\r\n\t\t\tset: function ()\r\n\t\t\t/* value */\r\n\t\t\t{\r\n\t\t\t\tconsole.warn('THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.');\r\n\t\t\t\tthis.setUsage(DynamicDrawUsage);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tBufferAttribute.prototype.setDynamic = function (value) {\r\n\t\tconsole.warn('THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.');\r\n\t\tthis.setUsage(value === true ? DynamicDrawUsage : StaticDrawUsage);\r\n\t\treturn this;\r\n\t};\r\n\r\n\tBufferAttribute.prototype.copyIndicesArray = function ()\r\n\t/* indices */\r\n\t{\r\n\t\tconsole.error('THREE.BufferAttribute: .copyIndicesArray() has been removed.');\r\n\t}, BufferAttribute.prototype.setArray = function ()\r\n\t/* array */\r\n\t{\r\n\t\tconsole.error('THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers');\r\n\t}; //\r\n\r\n\tBufferGeometry.prototype.addIndex = function (index) {\r\n\t\tconsole.warn('THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().');\r\n\t\tthis.setIndex(index);\r\n\t};\r\n\r\n\tBufferGeometry.prototype.addAttribute = function (name, attribute) {\r\n\t\tconsole.warn('THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().');\r\n\r\n\t\tif (!(attribute && attribute.isBufferAttribute) && !(attribute && attribute.isInterleavedBufferAttribute)) {\r\n\t\t\tconsole.warn('THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).');\r\n\t\t\treturn this.setAttribute(name, new BufferAttribute(arguments[1], arguments[2]));\r\n\t\t}\r\n\r\n\t\tif (name === 'index') {\r\n\t\t\tconsole.warn('THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.');\r\n\t\t\tthis.setIndex(attribute);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn this.setAttribute(name, attribute);\r\n\t};\r\n\r\n\tBufferGeometry.prototype.addDrawCall = function (start, count, indexOffset) {\r\n\t\tif (indexOffset !== undefined) {\r\n\t\t\tconsole.warn('THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.');\r\n\t\t}\r\n\r\n\t\tconsole.warn('THREE.BufferGeometry: .addDrawCall() is now .addGroup().');\r\n\t\tthis.addGroup(start, count);\r\n\t};\r\n\r\n\tBufferGeometry.prototype.clearDrawCalls = function () {\r\n\t\tconsole.warn('THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().');\r\n\t\tthis.clearGroups();\r\n\t};\r\n\r\n\tBufferGeometry.prototype.computeOffsets = function () {\r\n\t\tconsole.warn('THREE.BufferGeometry: .computeOffsets() has been removed.');\r\n\t};\r\n\r\n\tBufferGeometry.prototype.removeAttribute = function (name) {\r\n\t\tconsole.warn('THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().');\r\n\t\treturn this.deleteAttribute(name);\r\n\t};\r\n\r\n\tBufferGeometry.prototype.applyMatrix = function (matrix) {\r\n\t\tconsole.warn('THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().');\r\n\t\treturn this.applyMatrix4(matrix);\r\n\t};\r\n\r\n\tObject.defineProperties(BufferGeometry.prototype, {\r\n\t\tdrawcalls: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.error('THREE.BufferGeometry: .drawcalls has been renamed to .groups.');\r\n\t\t\t\treturn this.groups;\r\n\t\t\t}\r\n\t\t},\r\n\t\toffsets: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.BufferGeometry: .offsets has been renamed to .groups.');\r\n\t\t\t\treturn this.groups;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tInterleavedBuffer.prototype.setDynamic = function (value) {\r\n\t\tconsole.warn('THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.');\r\n\t\tthis.setUsage(value === true ? DynamicDrawUsage : StaticDrawUsage);\r\n\t\treturn this;\r\n\t};\r\n\r\n\tInterleavedBuffer.prototype.setArray = function ()\r\n\t/* array */\r\n\t{\r\n\t\tconsole.error('THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers');\r\n\t}; //\r\n\r\n\r\n\tExtrudeGeometry.prototype.getArrays = function () {\r\n\t\tconsole.error('THREE.ExtrudeGeometry: .getArrays() has been removed.');\r\n\t};\r\n\r\n\tExtrudeGeometry.prototype.addShapeList = function () {\r\n\t\tconsole.error('THREE.ExtrudeGeometry: .addShapeList() has been removed.');\r\n\t};\r\n\r\n\tExtrudeGeometry.prototype.addShape = function () {\r\n\t\tconsole.error('THREE.ExtrudeGeometry: .addShape() has been removed.');\r\n\t}; //\r\n\r\n\r\n\tScene.prototype.dispose = function () {\r\n\t\tconsole.error('THREE.Scene: .dispose() has been removed.');\r\n\t}; //\r\n\r\n\r\n\tUniform.prototype.onUpdate = function () {\r\n\t\tconsole.warn('THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.');\r\n\t\treturn this;\r\n\t}; //\r\n\r\n\r\n\tObject.defineProperties(Material.prototype, {\r\n\t\twrapAround: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.Material: .wrapAround has been removed.');\r\n\t\t\t},\r\n\t\t\tset: function () {\r\n\t\t\t\tconsole.warn('THREE.Material: .wrapAround has been removed.');\r\n\t\t\t}\r\n\t\t},\r\n\t\toverdraw: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.Material: .overdraw has been removed.');\r\n\t\t\t},\r\n\t\t\tset: function () {\r\n\t\t\t\tconsole.warn('THREE.Material: .overdraw has been removed.');\r\n\t\t\t}\r\n\t\t},\r\n\t\twrapRGB: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.Material: .wrapRGB has been removed.');\r\n\t\t\t\treturn new Color();\r\n\t\t\t}\r\n\t\t},\r\n\t\tshading: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.error('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\r\n\t\t\t\tthis.flatShading = value === FlatShading;\r\n\t\t\t}\r\n\t\t},\r\n\t\tstencilMask: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.');\r\n\t\t\t\treturn this.stencilFuncMask;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.');\r\n\t\t\t\tthis.stencilFuncMask = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tvertexTangents: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.' + this.type + ': .vertexTangents has been removed.');\r\n\t\t\t},\r\n\t\t\tset: function () {\r\n\t\t\t\tconsole.warn('THREE.' + this.type + ': .vertexTangents has been removed.');\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\tObject.defineProperties(ShaderMaterial.prototype, {\r\n\t\tderivatives: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');\r\n\t\t\t\treturn this.extensions.derivatives;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');\r\n\t\t\t\tthis.extensions.derivatives = value;\r\n\t\t\t}\r\n\t\t}\r\n\t}); //\r\n\r\n\tWebGLRenderer.prototype.clearTarget = function (renderTarget, color, depth, stencil) {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.');\r\n\t\tthis.setRenderTarget(renderTarget);\r\n\t\tthis.clear(color, depth, stencil);\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.animate = function (callback) {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .animate() is now .setAnimationLoop().');\r\n\t\tthis.setAnimationLoop(callback);\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.getCurrentRenderTarget = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().');\r\n\t\treturn this.getRenderTarget();\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.getMaxAnisotropy = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().');\r\n\t\treturn this.capabilities.getMaxAnisotropy();\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.getPrecision = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.');\r\n\t\treturn this.capabilities.precision;\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.resetGLState = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .resetGLState() is now .state.reset().');\r\n\t\treturn this.state.reset();\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.supportsFloatTextures = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).');\r\n\t\treturn this.extensions.get('OES_texture_float');\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.supportsHalfFloatTextures = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).');\r\n\t\treturn this.extensions.get('OES_texture_half_float');\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.supportsStandardDerivatives = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).');\r\n\t\treturn this.extensions.get('OES_standard_derivatives');\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.supportsCompressedTextureS3TC = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).');\r\n\t\treturn this.extensions.get('WEBGL_compressed_texture_s3tc');\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.supportsCompressedTexturePVRTC = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).');\r\n\t\treturn this.extensions.get('WEBGL_compressed_texture_pvrtc');\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.supportsBlendMinMax = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).');\r\n\t\treturn this.extensions.get('EXT_blend_minmax');\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.supportsVertexTextures = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.');\r\n\t\treturn this.capabilities.vertexTextures;\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.supportsInstancedArrays = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).');\r\n\t\treturn this.extensions.get('ANGLE_instanced_arrays');\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.enableScissorTest = function (boolean) {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().');\r\n\t\tthis.setScissorTest(boolean);\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.initMaterial = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .initMaterial() has been removed.');\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.addPrePlugin = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .addPrePlugin() has been removed.');\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.addPostPlugin = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .addPostPlugin() has been removed.');\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.updateShadowMap = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .updateShadowMap() has been removed.');\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.setFaceCulling = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .setFaceCulling() has been removed.');\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.allocTextureUnit = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .allocTextureUnit() has been removed.');\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.setTexture = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .setTexture() has been removed.');\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.setTexture2D = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .setTexture2D() has been removed.');\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.setTextureCube = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .setTextureCube() has been removed.');\r\n\t};\r\n\r\n\tWebGLRenderer.prototype.getActiveMipMapLevel = function () {\r\n\t\tconsole.warn('THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().');\r\n\t\treturn this.getActiveMipmapLevel();\r\n\t};\r\n\r\n\tObject.defineProperties(WebGLRenderer.prototype, {\r\n\t\tshadowMapEnabled: {\r\n\t\t\tget: function () {\r\n\t\t\t\treturn this.shadowMap.enabled;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.');\r\n\t\t\t\tthis.shadowMap.enabled = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapType: {\r\n\t\t\tget: function () {\r\n\t\t\t\treturn this.shadowMap.type;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.');\r\n\t\t\t\tthis.shadowMap.type = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapCullFace: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');\r\n\t\t\t\treturn undefined;\r\n\t\t\t},\r\n\t\t\tset: function ()\r\n\t\t\t/* value */\r\n\t\t\t{\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');\r\n\t\t\t}\r\n\t\t},\r\n\t\tcontext: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.');\r\n\t\t\t\treturn this.getContext();\r\n\t\t\t}\r\n\t\t},\r\n\t\tvr: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .vr has been renamed to .xr');\r\n\t\t\t\treturn this.xr;\r\n\t\t\t}\r\n\t\t},\r\n\t\tgammaInput: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.');\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\tset: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.');\r\n\t\t\t}\r\n\t\t},\r\n\t\tgammaOutput: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.');\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.');\r\n\t\t\t\tthis.outputEncoding = value === true ? sRGBEncoding : LinearEncoding;\r\n\t\t\t}\r\n\t\t},\r\n\t\ttoneMappingWhitePoint: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.');\r\n\t\t\t\treturn 1.0;\r\n\t\t\t},\r\n\t\t\tset: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.');\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\tObject.defineProperties(WebGLShadowMap.prototype, {\r\n\t\tcullFace: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');\r\n\t\t\t\treturn undefined;\r\n\t\t\t},\r\n\t\t\tset: function ()\r\n\t\t\t/* cullFace */\r\n\t\t\t{\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');\r\n\t\t\t}\r\n\t\t},\r\n\t\trenderReverseSided: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');\r\n\t\t\t\treturn undefined;\r\n\t\t\t},\r\n\t\t\tset: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');\r\n\t\t\t}\r\n\t\t},\r\n\t\trenderSingleSided: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');\r\n\t\t\t\treturn undefined;\r\n\t\t\t},\r\n\t\t\tset: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\tfunction WebGLRenderTargetCube(width, height, options) {\r\n\t\tconsole.warn('THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options ).');\r\n\t\treturn new WebGLCubeRenderTarget(width, options);\r\n\t} //\r\n\r\n\tObject.defineProperties(WebGLRenderTarget.prototype, {\r\n\t\twrapS: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');\r\n\t\t\t\treturn this.texture.wrapS;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');\r\n\t\t\t\tthis.texture.wrapS = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\twrapT: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');\r\n\t\t\t\treturn this.texture.wrapT;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');\r\n\t\t\t\tthis.texture.wrapT = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tmagFilter: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');\r\n\t\t\t\treturn this.texture.magFilter;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');\r\n\t\t\t\tthis.texture.magFilter = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tminFilter: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');\r\n\t\t\t\treturn this.texture.minFilter;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');\r\n\t\t\t\tthis.texture.minFilter = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tanisotropy: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');\r\n\t\t\t\treturn this.texture.anisotropy;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');\r\n\t\t\t\tthis.texture.anisotropy = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\toffset: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');\r\n\t\t\t\treturn this.texture.offset;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');\r\n\t\t\t\tthis.texture.offset = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\trepeat: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');\r\n\t\t\t\treturn this.texture.repeat;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');\r\n\t\t\t\tthis.texture.repeat = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tformat: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');\r\n\t\t\t\treturn this.texture.format;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');\r\n\t\t\t\tthis.texture.format = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\ttype: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');\r\n\t\t\t\treturn this.texture.type;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');\r\n\t\t\t\tthis.texture.type = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tgenerateMipmaps: {\r\n\t\t\tget: function () {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');\r\n\t\t\t\treturn this.texture.generateMipmaps;\r\n\t\t\t},\r\n\t\t\tset: function (value) {\r\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');\r\n\t\t\t\tthis.texture.generateMipmaps = value;\r\n\t\t\t}\r\n\t\t}\r\n\t}); //\r\n\r\n\tAudio.prototype.load = function (file) {\r\n\t\tconsole.warn('THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.');\r\n\t\tconst scope = this;\r\n\t\tconst audioLoader = new AudioLoader();\r\n\t\taudioLoader.load(file, function (buffer) {\r\n\t\t\tscope.setBuffer(buffer);\r\n\t\t});\r\n\t\treturn this;\r\n\t};\r\n\r\n\tAudioAnalyser.prototype.getData = function () {\r\n\t\tconsole.warn('THREE.AudioAnalyser: .getData() is now .getFrequencyData().');\r\n\t\treturn this.getFrequencyData();\r\n\t}; //\r\n\r\n\r\n\tCubeCamera.prototype.updateCubeMap = function (renderer, scene) {\r\n\t\tconsole.warn('THREE.CubeCamera: .updateCubeMap() is now .update().');\r\n\t\treturn this.update(renderer, scene);\r\n\t};\r\n\r\n\tCubeCamera.prototype.clear = function (renderer, color, depth, stencil) {\r\n\t\tconsole.warn('THREE.CubeCamera: .clear() is now .renderTarget.clear().');\r\n\t\treturn this.renderTarget.clear(renderer, color, depth, stencil);\r\n\t};\r\n\r\n\tImageUtils.crossOrigin = undefined;\r\n\r\n\tImageUtils.loadTexture = function (url, mapping, onLoad, onError) {\r\n\t\tconsole.warn('THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.');\r\n\t\tconst loader = new TextureLoader();\r\n\t\tloader.setCrossOrigin(this.crossOrigin);\r\n\t\tconst texture = loader.load(url, onLoad, undefined, onError);\r\n\t\tif (mapping) texture.mapping = mapping;\r\n\t\treturn texture;\r\n\t};\r\n\r\n\tImageUtils.loadTextureCube = function (urls, mapping, onLoad, onError) {\r\n\t\tconsole.warn('THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.');\r\n\t\tconst loader = new CubeTextureLoader();\r\n\t\tloader.setCrossOrigin(this.crossOrigin);\r\n\t\tconst texture = loader.load(urls, onLoad, undefined, onError);\r\n\t\tif (mapping) texture.mapping = mapping;\r\n\t\treturn texture;\r\n\t};\r\n\r\n\tImageUtils.loadCompressedTexture = function () {\r\n\t\tconsole.error('THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.');\r\n\t};\r\n\r\n\tImageUtils.loadCompressedTextureCube = function () {\r\n\t\tconsole.error('THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.');\r\n\t}; //\r\n\r\n\r\n\tfunction CanvasRenderer() {\r\n\t\tconsole.error('THREE.CanvasRenderer has been removed');\r\n\t} //\r\n\r\n\tfunction JSONLoader() {\r\n\t\tconsole.error('THREE.JSONLoader has been removed.');\r\n\t} //\r\n\r\n\tconst SceneUtils = {\r\n\t\tcreateMultiMaterialObject: function ()\r\n\t\t/* geometry, materials */\r\n\t\t{\r\n\t\t\tconsole.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');\r\n\t\t},\r\n\t\tdetach: function ()\r\n\t\t/* child, parent, scene */\r\n\t\t{\r\n\t\t\tconsole.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');\r\n\t\t},\r\n\t\tattach: function ()\r\n\t\t/* child, scene, parent */\r\n\t\t{\r\n\t\t\tconsole.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');\r\n\t\t}\r\n\t}; //\r\n\r\n\tfunction LensFlare() {\r\n\t\tconsole.error('THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js');\r\n\t}\r\n\r\n\tif (typeof __THREE_DEVTOOLS__ !== 'undefined') {\r\n\t\t/* eslint-disable no-undef */\r\n\t\t__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('register', {\r\n\t\t\tdetail: {\r\n\t\t\t\trevision: REVISION\r\n\t\t\t}\r\n\t\t}));\r\n\t\t/* eslint-enable no-undef */\r\n\r\n\t}\r\n\r\n\tif (typeof window !== 'undefined') {\r\n\t\tif (window.__THREE__) {\r\n\t\t\tconsole.warn('WARNING: Multiple instances of Three.js being imported.');\r\n\t\t} else {\r\n\t\t\twindow.__THREE__ = REVISION;\r\n\t\t}\r\n\t}\r\n\r\n\texports.ACESFilmicToneMapping = ACESFilmicToneMapping;\r\n\texports.AddEquation = AddEquation;\r\n\texports.AddOperation = AddOperation;\r\n\texports.AdditiveAnimationBlendMode = AdditiveAnimationBlendMode;\r\n\texports.AdditiveBlending = AdditiveBlending;\r\n\texports.AlphaFormat = AlphaFormat;\r\n\texports.AlwaysDepth = AlwaysDepth;\r\n\texports.AlwaysStencilFunc = AlwaysStencilFunc;\r\n\texports.AmbientLight = AmbientLight;\r\n\texports.AmbientLightProbe = AmbientLightProbe;\r\n\texports.AnimationClip = AnimationClip;\r\n\texports.AnimationLoader = AnimationLoader;\r\n\texports.AnimationMixer = AnimationMixer;\r\n\texports.AnimationObjectGroup = AnimationObjectGroup;\r\n\texports.AnimationUtils = AnimationUtils;\r\n\texports.ArcCurve = ArcCurve;\r\n\texports.ArrayCamera = ArrayCamera;\r\n\texports.ArrowHelper = ArrowHelper;\r\n\texports.Audio = Audio;\r\n\texports.AudioAnalyser = AudioAnalyser;\r\n\texports.AudioContext = AudioContext;\r\n\texports.AudioListener = AudioListener;\r\n\texports.AudioLoader = AudioLoader;\r\n\texports.AxesHelper = AxesHelper;\r\n\texports.AxisHelper = AxisHelper;\r\n\texports.BackSide = BackSide;\r\n\texports.BasicDepthPacking = BasicDepthPacking;\r\n\texports.BasicShadowMap = BasicShadowMap;\r\n\texports.BinaryTextureLoader = BinaryTextureLoader;\r\n\texports.Bone = Bone;\r\n\texports.BooleanKeyframeTrack = BooleanKeyframeTrack;\r\n\texports.BoundingBoxHelper = BoundingBoxHelper;\r\n\texports.Box2 = Box2;\r\n\texports.Box3 = Box3;\r\n\texports.Box3Helper = Box3Helper;\r\n\texports.BoxBufferGeometry = BoxGeometry;\r\n\texports.BoxGeometry = BoxGeometry;\r\n\texports.BoxHelper = BoxHelper;\r\n\texports.BufferAttribute = BufferAttribute;\r\n\texports.BufferGeometry = BufferGeometry;\r\n\texports.BufferGeometryLoader = BufferGeometryLoader;\r\n\texports.ByteType = ByteType;\r\n\texports.Cache = Cache;\r\n\texports.Camera = Camera;\r\n\texports.CameraHelper = CameraHelper;\r\n\texports.CanvasRenderer = CanvasRenderer;\r\n\texports.CanvasTexture = CanvasTexture;\r\n\texports.CatmullRomCurve3 = CatmullRomCurve3;\r\n\texports.CineonToneMapping = CineonToneMapping;\r\n\texports.CircleBufferGeometry = CircleGeometry;\r\n\texports.CircleGeometry = CircleGeometry;\r\n\texports.ClampToEdgeWrapping = ClampToEdgeWrapping;\r\n\texports.Clock = Clock;\r\n\texports.Color = Color;\r\n\texports.ColorKeyframeTrack = ColorKeyframeTrack;\r\n\texports.CompressedTexture = CompressedTexture;\r\n\texports.CompressedTextureLoader = CompressedTextureLoader;\r\n\texports.ConeBufferGeometry = ConeGeometry;\r\n\texports.ConeGeometry = ConeGeometry;\r\n\texports.CubeCamera = CubeCamera;\r\n\texports.CubeReflectionMapping = CubeReflectionMapping;\r\n\texports.CubeRefractionMapping = CubeRefractionMapping;\r\n\texports.CubeTexture = CubeTexture;\r\n\texports.CubeTextureLoader = CubeTextureLoader;\r\n\texports.CubeUVReflectionMapping = CubeUVReflectionMapping;\r\n\texports.CubeUVRefractionMapping = CubeUVRefractionMapping;\r\n\texports.CubicBezierCurve = CubicBezierCurve;\r\n\texports.CubicBezierCurve3 = CubicBezierCurve3;\r\n\texports.CubicInterpolant = CubicInterpolant;\r\n\texports.CullFaceBack = CullFaceBack;\r\n\texports.CullFaceFront = CullFaceFront;\r\n\texports.CullFaceFrontBack = CullFaceFrontBack;\r\n\texports.CullFaceNone = CullFaceNone;\r\n\texports.Curve = Curve;\r\n\texports.CurvePath = CurvePath;\r\n\texports.CustomBlending = CustomBlending;\r\n\texports.CustomToneMapping = CustomToneMapping;\r\n\texports.CylinderBufferGeometry = CylinderGeometry;\r\n\texports.CylinderGeometry = CylinderGeometry;\r\n\texports.Cylindrical = Cylindrical;\r\n\texports.DataTexture = DataTexture;\r\n\texports.DataTexture2DArray = DataTexture2DArray;\r\n\texports.DataTexture3D = DataTexture3D;\r\n\texports.DataTextureLoader = DataTextureLoader;\r\n\texports.DataUtils = DataUtils;\r\n\texports.DecrementStencilOp = DecrementStencilOp;\r\n\texports.DecrementWrapStencilOp = DecrementWrapStencilOp;\r\n\texports.DefaultLoadingManager = DefaultLoadingManager;\r\n\texports.DepthFormat = DepthFormat;\r\n\texports.DepthStencilFormat = DepthStencilFormat;\r\n\texports.DepthTexture = DepthTexture;\r\n\texports.DirectionalLight = DirectionalLight;\r\n\texports.DirectionalLightHelper = DirectionalLightHelper;\r\n\texports.DiscreteInterpolant = DiscreteInterpolant;\r\n\texports.DodecahedronBufferGeometry = DodecahedronGeometry;\r\n\texports.DodecahedronGeometry = DodecahedronGeometry;\r\n\texports.DoubleSide = DoubleSide;\r\n\texports.DstAlphaFactor = DstAlphaFactor;\r\n\texports.DstColorFactor = DstColorFactor;\r\n\texports.DynamicBufferAttribute = DynamicBufferAttribute;\r\n\texports.DynamicCopyUsage = DynamicCopyUsage;\r\n\texports.DynamicDrawUsage = DynamicDrawUsage;\r\n\texports.DynamicReadUsage = DynamicReadUsage;\r\n\texports.EdgesGeometry = EdgesGeometry;\r\n\texports.EdgesHelper = EdgesHelper;\r\n\texports.EllipseCurve = EllipseCurve;\r\n\texports.EqualDepth = EqualDepth;\r\n\texports.EqualStencilFunc = EqualStencilFunc;\r\n\texports.EquirectangularReflectionMapping = EquirectangularReflectionMapping;\r\n\texports.EquirectangularRefractionMapping = EquirectangularRefractionMapping;\r\n\texports.Euler = Euler;\r\n\texports.EventDispatcher = EventDispatcher;\r\n\texports.ExtrudeBufferGeometry = ExtrudeGeometry;\r\n\texports.ExtrudeGeometry = ExtrudeGeometry;\r\n\texports.FaceColors = FaceColors;\r\n\texports.FileLoader = FileLoader;\r\n\texports.FlatShading = FlatShading;\r\n\texports.Float16BufferAttribute = Float16BufferAttribute;\r\n\texports.Float32Attribute = Float32Attribute;\r\n\texports.Float32BufferAttribute = Float32BufferAttribute;\r\n\texports.Float64Attribute = Float64Attribute;\r\n\texports.Float64BufferAttribute = Float64BufferAttribute;\r\n\texports.FloatType = FloatType;\r\n\texports.Fog = Fog;\r\n\texports.FogExp2 = FogExp2;\r\n\texports.Font = Font;\r\n\texports.FontLoader = FontLoader;\r\n\texports.FrontSide = FrontSide;\r\n\texports.Frustum = Frustum;\r\n\texports.GLBufferAttribute = GLBufferAttribute;\r\n\texports.GLSL1 = GLSL1;\r\n\texports.GLSL3 = GLSL3;\r\n\texports.GammaEncoding = GammaEncoding;\r\n\texports.GreaterDepth = GreaterDepth;\r\n\texports.GreaterEqualDepth = GreaterEqualDepth;\r\n\texports.GreaterEqualStencilFunc = GreaterEqualStencilFunc;\r\n\texports.GreaterStencilFunc = GreaterStencilFunc;\r\n\texports.GridHelper = GridHelper;\r\n\texports.Group = Group;\r\n\texports.HalfFloatType = HalfFloatType;\r\n\texports.HemisphereLight = HemisphereLight;\r\n\texports.HemisphereLightHelper = HemisphereLightHelper;\r\n\texports.HemisphereLightProbe = HemisphereLightProbe;\r\n\texports.IcosahedronBufferGeometry = IcosahedronGeometry;\r\n\texports.IcosahedronGeometry = IcosahedronGeometry;\r\n\texports.ImageBitmapLoader = ImageBitmapLoader;\r\n\texports.ImageLoader = ImageLoader;\r\n\texports.ImageUtils = ImageUtils;\r\n\texports.ImmediateRenderObject = ImmediateRenderObject;\r\n\texports.IncrementStencilOp = IncrementStencilOp;\r\n\texports.IncrementWrapStencilOp = IncrementWrapStencilOp;\r\n\texports.InstancedBufferAttribute = InstancedBufferAttribute;\r\n\texports.InstancedBufferGeometry = InstancedBufferGeometry;\r\n\texports.InstancedInterleavedBuffer = InstancedInterleavedBuffer;\r\n\texports.InstancedMesh = InstancedMesh;\r\n\texports.Int16Attribute = Int16Attribute;\r\n\texports.Int16BufferAttribute = Int16BufferAttribute;\r\n\texports.Int32Attribute = Int32Attribute;\r\n\texports.Int32BufferAttribute = Int32BufferAttribute;\r\n\texports.Int8Attribute = Int8Attribute;\r\n\texports.Int8BufferAttribute = Int8BufferAttribute;\r\n\texports.IntType = IntType;\r\n\texports.InterleavedBuffer = InterleavedBuffer;\r\n\texports.InterleavedBufferAttribute = InterleavedBufferAttribute;\r\n\texports.Interpolant = Interpolant;\r\n\texports.InterpolateDiscrete = InterpolateDiscrete;\r\n\texports.InterpolateLinear = InterpolateLinear;\r\n\texports.InterpolateSmooth = InterpolateSmooth;\r\n\texports.InvertStencilOp = InvertStencilOp;\r\n\texports.JSONLoader = JSONLoader;\r\n\texports.KeepStencilOp = KeepStencilOp;\r\n\texports.KeyframeTrack = KeyframeTrack;\r\n\texports.LOD = LOD;\r\n\texports.LatheBufferGeometry = LatheGeometry;\r\n\texports.LatheGeometry = LatheGeometry;\r\n\texports.Layers = Layers;\r\n\texports.LensFlare = LensFlare;\r\n\texports.LessDepth = LessDepth;\r\n\texports.LessEqualDepth = LessEqualDepth;\r\n\texports.LessEqualStencilFunc = LessEqualStencilFunc;\r\n\texports.LessStencilFunc = LessStencilFunc;\r\n\texports.Light = Light;\r\n\texports.LightProbe = LightProbe;\r\n\texports.Line = Line;\r\n\texports.Line3 = Line3;\r\n\texports.LineBasicMaterial = LineBasicMaterial;\r\n\texports.LineCurve = LineCurve;\r\n\texports.LineCurve3 = LineCurve3;\r\n\texports.LineDashedMaterial = LineDashedMaterial;\r\n\texports.LineLoop = LineLoop;\r\n\texports.LinePieces = LinePieces;\r\n\texports.LineSegments = LineSegments;\r\n\texports.LineStrip = LineStrip;\r\n\texports.LinearEncoding = LinearEncoding;\r\n\texports.LinearFilter = LinearFilter;\r\n\texports.LinearInterpolant = LinearInterpolant;\r\n\texports.LinearMipMapLinearFilter = LinearMipMapLinearFilter;\r\n\texports.LinearMipMapNearestFilter = LinearMipMapNearestFilter;\r\n\texports.LinearMipmapLinearFilter = LinearMipmapLinearFilter;\r\n\texports.LinearMipmapNearestFilter = LinearMipmapNearestFilter;\r\n\texports.LinearToneMapping = LinearToneMapping;\r\n\texports.Loader = Loader;\r\n\texports.LoaderUtils = LoaderUtils;\r\n\texports.LoadingManager = LoadingManager;\r\n\texports.LogLuvEncoding = LogLuvEncoding;\r\n\texports.LoopOnce = LoopOnce;\r\n\texports.LoopPingPong = LoopPingPong;\r\n\texports.LoopRepeat = LoopRepeat;\r\n\texports.LuminanceAlphaFormat = LuminanceAlphaFormat;\r\n\texports.LuminanceFormat = LuminanceFormat;\r\n\texports.MOUSE = MOUSE;\r\n\texports.Material = Material;\r\n\texports.MaterialLoader = MaterialLoader;\r\n\texports.Math = MathUtils;\r\n\texports.MathUtils = MathUtils;\r\n\texports.Matrix3 = Matrix3;\r\n\texports.Matrix4 = Matrix4;\r\n\texports.MaxEquation = MaxEquation;\r\n\texports.Mesh = Mesh;\r\n\texports.MeshBasicMaterial = MeshBasicMaterial;\r\n\texports.MeshDepthMaterial = MeshDepthMaterial;\r\n\texports.MeshDistanceMaterial = MeshDistanceMaterial;\r\n\texports.MeshFaceMaterial = MeshFaceMaterial;\r\n\texports.MeshLambertMaterial = MeshLambertMaterial;\r\n\texports.MeshMatcapMaterial = MeshMatcapMaterial;\r\n\texports.MeshNormalMaterial = MeshNormalMaterial;\r\n\texports.MeshPhongMaterial = MeshPhongMaterial;\r\n\texports.MeshPhysicalMaterial = MeshPhysicalMaterial;\r\n\texports.MeshStandardMaterial = MeshStandardMaterial;\r\n\texports.MeshToonMaterial = MeshToonMaterial;\r\n\texports.MinEquation = MinEquation;\r\n\texports.MirroredRepeatWrapping = MirroredRepeatWrapping;\r\n\texports.MixOperation = MixOperation;\r\n\texports.MultiMaterial = MultiMaterial;\r\n\texports.MultiplyBlending = MultiplyBlending;\r\n\texports.MultiplyOperation = MultiplyOperation;\r\n\texports.NearestFilter = NearestFilter;\r\n\texports.NearestMipMapLinearFilter = NearestMipMapLinearFilter;\r\n\texports.NearestMipMapNearestFilter = NearestMipMapNearestFilter;\r\n\texports.NearestMipmapLinearFilter = NearestMipmapLinearFilter;\r\n\texports.NearestMipmapNearestFilter = NearestMipmapNearestFilter;\r\n\texports.NeverDepth = NeverDepth;\r\n\texports.NeverStencilFunc = NeverStencilFunc;\r\n\texports.NoBlending = NoBlending;\r\n\texports.NoColors = NoColors;\r\n\texports.NoToneMapping = NoToneMapping;\r\n\texports.NormalAnimationBlendMode = NormalAnimationBlendMode;\r\n\texports.NormalBlending = NormalBlending;\r\n\texports.NotEqualDepth = NotEqualDepth;\r\n\texports.NotEqualStencilFunc = NotEqualStencilFunc;\r\n\texports.NumberKeyframeTrack = NumberKeyframeTrack;\r\n\texports.Object3D = Object3D;\r\n\texports.ObjectLoader = ObjectLoader;\r\n\texports.ObjectSpaceNormalMap = ObjectSpaceNormalMap;\r\n\texports.OctahedronBufferGeometry = OctahedronGeometry;\r\n\texports.OctahedronGeometry = OctahedronGeometry;\r\n\texports.OneFactor = OneFactor;\r\n\texports.OneMinusDstAlphaFactor = OneMinusDstAlphaFactor;\r\n\texports.OneMinusDstColorFactor = OneMinusDstColorFactor;\r\n\texports.OneMinusSrcAlphaFactor = OneMinusSrcAlphaFactor;\r\n\texports.OneMinusSrcColorFactor = OneMinusSrcColorFactor;\r\n\texports.OrthographicCamera = OrthographicCamera;\r\n\texports.PCFShadowMap = PCFShadowMap;\r\n\texports.PCFSoftShadowMap = PCFSoftShadowMap;\r\n\texports.PMREMGenerator = PMREMGenerator;\r\n\texports.ParametricBufferGeometry = ParametricGeometry;\r\n\texports.ParametricGeometry = ParametricGeometry;\r\n\texports.Particle = Particle;\r\n\texports.ParticleBasicMaterial = ParticleBasicMaterial;\r\n\texports.ParticleSystem = ParticleSystem;\r\n\texports.ParticleSystemMaterial = ParticleSystemMaterial;\r\n\texports.Path = Path;\r\n\texports.PerspectiveCamera = PerspectiveCamera;\r\n\texports.Plane = Plane;\r\n\texports.PlaneBufferGeometry = PlaneGeometry;\r\n\texports.PlaneGeometry = PlaneGeometry;\r\n\texports.PlaneHelper = PlaneHelper;\r\n\texports.PointCloud = PointCloud;\r\n\texports.PointCloudMaterial = PointCloudMaterial;\r\n\texports.PointLight = PointLight;\r\n\texports.PointLightHelper = PointLightHelper;\r\n\texports.Points = Points;\r\n\texports.PointsMaterial = PointsMaterial;\r\n\texports.PolarGridHelper = PolarGridHelper;\r\n\texports.PolyhedronBufferGeometry = PolyhedronGeometry;\r\n\texports.PolyhedronGeometry = PolyhedronGeometry;\r\n\texports.PositionalAudio = PositionalAudio;\r\n\texports.PropertyBinding = PropertyBinding;\r\n\texports.PropertyMixer = PropertyMixer;\r\n\texports.QuadraticBezierCurve = QuadraticBezierCurve;\r\n\texports.QuadraticBezierCurve3 = QuadraticBezierCurve3;\r\n\texports.Quaternion = Quaternion;\r\n\texports.QuaternionKeyframeTrack = QuaternionKeyframeTrack;\r\n\texports.QuaternionLinearInterpolant = QuaternionLinearInterpolant;\r\n\texports.REVISION = REVISION;\r\n\texports.RGBADepthPacking = RGBADepthPacking;\r\n\texports.RGBAFormat = RGBAFormat;\r\n\texports.RGBAIntegerFormat = RGBAIntegerFormat;\r\n\texports.RGBA_ASTC_10x10_Format = RGBA_ASTC_10x10_Format;\r\n\texports.RGBA_ASTC_10x5_Format = RGBA_ASTC_10x5_Format;\r\n\texports.RGBA_ASTC_10x6_Format = RGBA_ASTC_10x6_Format;\r\n\texports.RGBA_ASTC_10x8_Format = RGBA_ASTC_10x8_Format;\r\n\texports.RGBA_ASTC_12x10_Format = RGBA_ASTC_12x10_Format;\r\n\texports.RGBA_ASTC_12x12_Format = RGBA_ASTC_12x12_Format;\r\n\texports.RGBA_ASTC_4x4_Format = RGBA_ASTC_4x4_Format;\r\n\texports.RGBA_ASTC_5x4_Format = RGBA_ASTC_5x4_Format;\r\n\texports.RGBA_ASTC_5x5_Format = RGBA_ASTC_5x5_Format;\r\n\texports.RGBA_ASTC_6x5_Format = RGBA_ASTC_6x5_Format;\r\n\texports.RGBA_ASTC_6x6_Format = RGBA_ASTC_6x6_Format;\r\n\texports.RGBA_ASTC_8x5_Format = RGBA_ASTC_8x5_Format;\r\n\texports.RGBA_ASTC_8x6_Format = RGBA_ASTC_8x6_Format;\r\n\texports.RGBA_ASTC_8x8_Format = RGBA_ASTC_8x8_Format;\r\n\texports.RGBA_BPTC_Format = RGBA_BPTC_Format;\r\n\texports.RGBA_ETC2_EAC_Format = RGBA_ETC2_EAC_Format;\r\n\texports.RGBA_PVRTC_2BPPV1_Format = RGBA_PVRTC_2BPPV1_Format;\r\n\texports.RGBA_PVRTC_4BPPV1_Format = RGBA_PVRTC_4BPPV1_Format;\r\n\texports.RGBA_S3TC_DXT1_Format = RGBA_S3TC_DXT1_Format;\r\n\texports.RGBA_S3TC_DXT3_Format = RGBA_S3TC_DXT3_Format;\r\n\texports.RGBA_S3TC_DXT5_Format = RGBA_S3TC_DXT5_Format;\r\n\texports.RGBDEncoding = RGBDEncoding;\r\n\texports.RGBEEncoding = RGBEEncoding;\r\n\texports.RGBEFormat = RGBEFormat;\r\n\texports.RGBFormat = RGBFormat;\r\n\texports.RGBIntegerFormat = RGBIntegerFormat;\r\n\texports.RGBM16Encoding = RGBM16Encoding;\r\n\texports.RGBM7Encoding = RGBM7Encoding;\r\n\texports.RGB_ETC1_Format = RGB_ETC1_Format;\r\n\texports.RGB_ETC2_Format = RGB_ETC2_Format;\r\n\texports.RGB_PVRTC_2BPPV1_Format = RGB_PVRTC_2BPPV1_Format;\r\n\texports.RGB_PVRTC_4BPPV1_Format = RGB_PVRTC_4BPPV1_Format;\r\n\texports.RGB_S3TC_DXT1_Format = RGB_S3TC_DXT1_Format;\r\n\texports.RGFormat = RGFormat;\r\n\texports.RGIntegerFormat = RGIntegerFormat;\r\n\texports.RawShaderMaterial = RawShaderMaterial;\r\n\texports.Ray = Ray;\r\n\texports.Raycaster = Raycaster;\r\n\texports.RectAreaLight = RectAreaLight;\r\n\texports.RedFormat = RedFormat;\r\n\texports.RedIntegerFormat = RedIntegerFormat;\r\n\texports.ReinhardToneMapping = ReinhardToneMapping;\r\n\texports.RepeatWrapping = RepeatWrapping;\r\n\texports.ReplaceStencilOp = ReplaceStencilOp;\r\n\texports.ReverseSubtractEquation = ReverseSubtractEquation;\r\n\texports.RingBufferGeometry = RingGeometry;\r\n\texports.RingGeometry = RingGeometry;\r\n\texports.SRGB8_ALPHA8_ASTC_10x10_Format = SRGB8_ALPHA8_ASTC_10x10_Format;\r\n\texports.SRGB8_ALPHA8_ASTC_10x5_Format = SRGB8_ALPHA8_ASTC_10x5_Format;\r\n\texports.SRGB8_ALPHA8_ASTC_10x6_Format = SRGB8_ALPHA8_ASTC_10x6_Format;\r\n\texports.SRGB8_ALPHA8_ASTC_10x8_Format = SRGB8_ALPHA8_ASTC_10x8_Format;\r\n\texports.SRGB8_ALPHA8_ASTC_12x10_Format = SRGB8_ALPHA8_ASTC_12x10_Format;\r\n\texports.SRGB8_ALPHA8_ASTC_12x12_Format = SRGB8_ALPHA8_ASTC_12x12_Format;\r\n\texports.SRGB8_ALPHA8_ASTC_4x4_Format = SRGB8_ALPHA8_ASTC_4x4_Format;\r\n\texports.SRGB8_ALPHA8_ASTC_5x4_Format = SRGB8_ALPHA8_ASTC_5x4_Format;\r\n\texports.SRGB8_ALPHA8_ASTC_5x5_Format = SRGB8_ALPHA8_ASTC_5x5_Format;\r\n\texports.SRGB8_ALPHA8_ASTC_6x5_Format = SRGB8_ALPHA8_ASTC_6x5_Format;\r\n\texports.SRGB8_ALPHA8_ASTC_6x6_Format = SRGB8_ALPHA8_ASTC_6x6_Format;\r\n\texports.SRGB8_ALPHA8_ASTC_8x5_Format = SRGB8_ALPHA8_ASTC_8x5_Format;\r\n\texports.SRGB8_ALPHA8_ASTC_8x6_Format = SRGB8_ALPHA8_ASTC_8x6_Format;\r\n\texports.SRGB8_ALPHA8_ASTC_8x8_Format = SRGB8_ALPHA8_ASTC_8x8_Format;\r\n\texports.Scene = Scene;\r\n\texports.SceneUtils = SceneUtils;\r\n\texports.ShaderChunk = ShaderChunk;\r\n\texports.ShaderLib = ShaderLib;\r\n\texports.ShaderMaterial = ShaderMaterial;\r\n\texports.ShadowMaterial = ShadowMaterial;\r\n\texports.Shape = Shape;\r\n\texports.ShapeBufferGeometry = ShapeGeometry;\r\n\texports.ShapeGeometry = ShapeGeometry;\r\n\texports.ShapePath = ShapePath;\r\n\texports.ShapeUtils = ShapeUtils;\r\n\texports.ShortType = ShortType;\r\n\texports.Skeleton = Skeleton;\r\n\texports.SkeletonHelper = SkeletonHelper;\r\n\texports.SkinnedMesh = SkinnedMesh;\r\n\texports.SmoothShading = SmoothShading;\r\n\texports.Sphere = Sphere;\r\n\texports.SphereBufferGeometry = SphereGeometry;\r\n\texports.SphereGeometry = SphereGeometry;\r\n\texports.Spherical = Spherical;\r\n\texports.SphericalHarmonics3 = SphericalHarmonics3;\r\n\texports.SplineCurve = SplineCurve;\r\n\texports.SpotLight = SpotLight;\r\n\texports.SpotLightHelper = SpotLightHelper;\r\n\texports.Sprite = Sprite;\r\n\texports.SpriteMaterial = SpriteMaterial;\r\n\texports.SrcAlphaFactor = SrcAlphaFactor;\r\n\texports.SrcAlphaSaturateFactor = SrcAlphaSaturateFactor;\r\n\texports.SrcColorFactor = SrcColorFactor;\r\n\texports.StaticCopyUsage = StaticCopyUsage;\r\n\texports.StaticDrawUsage = StaticDrawUsage;\r\n\texports.StaticReadUsage = StaticReadUsage;\r\n\texports.StereoCamera = StereoCamera;\r\n\texports.StreamCopyUsage = StreamCopyUsage;\r\n\texports.StreamDrawUsage = StreamDrawUsage;\r\n\texports.StreamReadUsage = StreamReadUsage;\r\n\texports.StringKeyframeTrack = StringKeyframeTrack;\r\n\texports.SubtractEquation = SubtractEquation;\r\n\texports.SubtractiveBlending = SubtractiveBlending;\r\n\texports.TOUCH = TOUCH;\r\n\texports.TangentSpaceNormalMap = TangentSpaceNormalMap;\r\n\texports.TetrahedronBufferGeometry = TetrahedronGeometry;\r\n\texports.TetrahedronGeometry = TetrahedronGeometry;\r\n\texports.TextBufferGeometry = TextGeometry;\r\n\texports.TextGeometry = TextGeometry;\r\n\texports.Texture = Texture;\r\n\texports.TextureLoader = TextureLoader;\r\n\texports.TorusBufferGeometry = TorusGeometry;\r\n\texports.TorusGeometry = TorusGeometry;\r\n\texports.TorusKnotBufferGeometry = TorusKnotGeometry;\r\n\texports.TorusKnotGeometry = TorusKnotGeometry;\r\n\texports.Triangle = Triangle;\r\n\texports.TriangleFanDrawMode = TriangleFanDrawMode;\r\n\texports.TriangleStripDrawMode = TriangleStripDrawMode;\r\n\texports.TrianglesDrawMode = TrianglesDrawMode;\r\n\texports.TubeBufferGeometry = TubeGeometry;\r\n\texports.TubeGeometry = TubeGeometry;\r\n\texports.UVMapping = UVMapping;\r\n\texports.Uint16Attribute = Uint16Attribute;\r\n\texports.Uint16BufferAttribute = Uint16BufferAttribute;\r\n\texports.Uint32Attribute = Uint32Attribute;\r\n\texports.Uint32BufferAttribute = Uint32BufferAttribute;\r\n\texports.Uint8Attribute = Uint8Attribute;\r\n\texports.Uint8BufferAttribute = Uint8BufferAttribute;\r\n\texports.Uint8ClampedAttribute = Uint8ClampedAttribute;\r\n\texports.Uint8ClampedBufferAttribute = Uint8ClampedBufferAttribute;\r\n\texports.Uniform = Uniform;\r\n\texports.UniformsLib = UniformsLib;\r\n\texports.UniformsUtils = UniformsUtils;\r\n\texports.UnsignedByteType = UnsignedByteType;\r\n\texports.UnsignedInt248Type = UnsignedInt248Type;\r\n\texports.UnsignedIntType = UnsignedIntType;\r\n\texports.UnsignedShort4444Type = UnsignedShort4444Type;\r\n\texports.UnsignedShort5551Type = UnsignedShort5551Type;\r\n\texports.UnsignedShort565Type = UnsignedShort565Type;\r\n\texports.UnsignedShortType = UnsignedShortType;\r\n\texports.VSMShadowMap = VSMShadowMap;\r\n\texports.Vector2 = Vector2;\r\n\texports.Vector3 = Vector3;\r\n\texports.Vector4 = Vector4;\r\n\texports.VectorKeyframeTrack = VectorKeyframeTrack;\r\n\texports.Vertex = Vertex;\r\n\texports.VertexColors = VertexColors;\r\n\texports.VideoTexture = VideoTexture;\r\n\texports.WebGL1Renderer = WebGL1Renderer;\r\n\texports.WebGLCubeRenderTarget = WebGLCubeRenderTarget;\r\n\texports.WebGLMultipleRenderTargets = WebGLMultipleRenderTargets;\r\n\texports.WebGLMultisampleRenderTarget = WebGLMultisampleRenderTarget;\r\n\texports.WebGLRenderTarget = WebGLRenderTarget;\r\n\texports.WebGLRenderTargetCube = WebGLRenderTargetCube;\r\n\texports.WebGLRenderer = WebGLRenderer;\r\n\texports.WebGLUtils = WebGLUtils;\r\n\texports.WireframeGeometry = WireframeGeometry;\r\n\texports.WireframeHelper = WireframeHelper;\r\n\texports.WrapAroundEnding = WrapAroundEnding;\r\n\texports.XHRLoader = XHRLoader;\r\n\texports.ZeroCurvatureEnding = ZeroCurvatureEnding;\r\n\texports.ZeroFactor = ZeroFactor;\r\n\texports.ZeroSlopeEnding = ZeroSlopeEnding;\r\n\texports.ZeroStencilOp = ZeroStencilOp;\r\n\texports.sRGBEncoding = sRGBEncoding;\r\n\r\n\tObject.defineProperty(exports, '__esModule', { value: true });\r\n\r\n})));\r\n1"]}